{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/blueimp-canvas-to-blob/js/canvas-to-blob.js","silver-decisions.js","node_modules/d3-array/build/d3-array.js","node_modules/d3-brush/build/d3-brush.js","node_modules/d3-collection/build/d3-collection.js","node_modules/d3-color/build/d3-color.js","node_modules/d3-dispatch/build/d3-dispatch.js","node_modules/d3-drag/build/d3-drag.js","node_modules/d3-ease/build/d3-ease.js","node_modules/d3-format/build/d3-format.js","node_modules/d3-interpolate/build/d3-interpolate.js","node_modules/d3-path/build/d3-path.js","node_modules/d3-scale/build/d3-scale.js","node_modules/d3-selection/build/d3-selection.js","node_modules/d3-shape/build/d3-shape.js","node_modules/d3-time-format/build/d3-time-format.js","node_modules/d3-time/build/d3-time.js","node_modules/d3-timer/build/d3-timer.js","node_modules/d3-transition/build/d3-transition.js","node_modules/file-saver/FileSaver.js","node_modules/lodash/lodash.js","src/app.js","src/context-menu.js","src/d3-extensions.js","src/d3.js","src/data-model.js","src/exporter.js","src/index.js","src/model/edge.js","src/model/index.js","src/model/node/chance-node.js","src/model/node/decision-node.js","src/model/node/node.js","src/model/node/terminal-node.js","src/model/point.js","src/templates.js","src/tree-designer.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","slice","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","toDataURL","2","factory","d3","ascending","b","NaN","bisector","compare","ascendingComparator","left","x","lo","hi","mid","right","d","descending","number","variance","array","m","j","isNaN","deviation","v","Math","sqrt","extent","c","constant","identity","range","start","stop","step","arguments","max","ceil","Array","ticks","count","tickStep","floor","step0","abs","step1","pow","log","LN10","error","e10","e5","e2","sturges","values","LN2","histogram","data","value","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","bisectRight","push","_","thresholds","quantile","p","h","freedmanDiaconis","min","map","sort","scott","mean","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","random","sum","transpose","matrix","row","zip","ascendingBisect","bisectLeft","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","Object","defineProperty","3","d3Dispatch","d3Drag","d3Interpolate","d3Selection","d3Transition","nopropagation","event","stopImmediatePropagation","defaultFilter","button","defaultExtent","svg","ownerSVGElement","width","baseVal","height","local","node","__brush","parentNode","empty","brushSelection","state","dim","output","selection","brushX","brush$1","X","brushY","Y","brush","group","overlay","property","initialize","selectAll","enter","attr","cursors","each","select","handle","handles","exit","remove","redraw","style","on","started","handleSize","emitter","that","args","Emitter","active","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent","move","dx","point0","dy","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","E","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","clearTimeout","setTimeout","dragEnable","view","end","keydowned","keyCode","keyupped","altKey","changedTouches","filter","apply","target","__data__","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","dispatch","tween","selection1","selection0","input","interpolate","starting","customEvent","BrushEvent","preventDefault","name","xy","y","XY","w","nw","ne","se","sw","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition","4","Map","object","key","set","nest","depth","createResult","setResult","keys","rollup","sortValues","keyValue","valuesByKey","result","get","entries","sortKey","sortKeys","k","createObject","setObject","createMap","setMap","order","Set","add","prefix","constructor","has","clear","proto","5","extend","parent","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","C","D","cubehelix","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","toString","round","PI","Kn","A","B","cosh","sinh","6","Dispatch","parseTypenames","typenames","types","split","indexOf","noop","concat","typename","T","copy","7","nodrag","root","document","documentElement","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","subject","id","identifier","defaultContainer","defaultSubject","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touch","sublisteners","p0","8","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","exponent","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","asin","elasticOut","elasticInOut","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","9","formatDecimal","toExponential","coefficient","formatGroup","grouping","thousands","substring","reverse","join","formatDefault","toPrecision","out","formatPrefixAuto","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","re","fill","align","sign","symbol","zero","comma","precision","formatTypes","formatLocale","locale","newFormat","valuePrefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","decimal","Infinity","padding","currency","test","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","","%","toFixed","toUpperCase","formatDefaultLocale","10","d3Color","basis","v0","v1","v2","v3","basis$1","basisClosed","exponential","hue","gamma","nogamma","rgbSpline","spline","colors","nb","na","date","Date","setTime","one","string","am","bm","bs","bi","reA","lastIndex","reB","q","index","rgb$1","decompose","scaleX","scaleY","skewX","translateX","translateY","rotate","degrees","atan","parseCss","cssNode","createElement","cssRoot","cssView","defaultView","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","parseSvg","svgNode","createElementNS","setAttribute","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","scale","exp","tanh","zoom","p1","ux0","uy0","ux1","uy1","d2","epsilon2","rho","d1","rho4","rho2","r0","r1","coshr0","duration","hsl$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","quantize","interpolator","samples","rgbGamma","rgbBasis","rgbBasisClosed","RegExp","source","interpolateTransformCss","interpolateTransformSvg","SQRT2","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","d3-color","11","Path","_x0","_y0","_x1","_y1","path","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","rect","12","d3Array","d3Collection","d3Format","d3Time","d3TimeFormat","ordinal","unknown","implicit","band","rescale","paddingInner","paddingOuter","bandwidth","ordinalRange","undefined","rangeRound","pointish","deinterpolate","deinterpolateClamp","reinterpolateClamp","reinterpolate","bimap","d0","polymap","clamp","continuous","deinterpolate$$","piecewise","unit","invert","map$1","tickFormat","linearish","nice","interval","deinterpolate$1","pow10","isFinite","powp","base","logp","log10","log2","reflect","logs","pows","raise","quantile$1","invertExtent","quantiles","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","tickIntervals","durationYear","every","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","time","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","utcTime","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","rainbow$1","ts","rainbow","ramp","sequential","category10","category20b","category20c","category20","warm","cool","viridis","magma","inferno","plasma","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","d3-array","d3-collection","d3-format","d3-time","d3-time-format","13","namespace","namespaces","space","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","creator","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","selection_on","sourceEvent","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","top","clientTop","none","selector","querySelector","selection_select","groups","_groups","subgroups","subnode","subgroup","Selection","_parents","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","matcher$1","sparse","update","selection_enter","_enter","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","selection_data","bind","enterGroup","updateGroup","exitGroup","previous","next","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","nextSibling","insertBefore","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","selection_attr","getAttributeNS","getAttribute","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","contains","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","selection_html","selection_raise","lower","previousSibling","firstChild","selection_lower","selection_append","constantNull","selection_insert","before","selection_remove","selection_datum","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","points","xlink","xml","xmlns","matcher","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","element$1","mouseenter","mouseleave","child","splice","classed","text","html","insert","14","d3Path","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x3","y3","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","x00","y00","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","buffer","context","a01","a11","a00","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","ax","ay","bx","by","kc","lc","centroid","Linear","_context","curveLinear","line","defined0","curve","defined","lineStart","lineEnd","x$$","y$$","area","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","pie","arcs","pa","Radial","_curve","curveRadial","radial","radialLine","angle","radius","radialLine$1","curveRadialLinear","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","circle","Basis","BasisClosed","BasisOpen","basisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","slope3","h0","h1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","series","none$1","stackValue","stack","oz","kz","sz","sij","ki","si","offset","expand","silhouette","wiggle","s2","sij0","sij1","s3","sk","skj0","skj1","sums","descending$1","insideOut","bottom","tops","bottoms","_line","_point","cross","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","_x","_y","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","_t0","px","py","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","d3-path","15","localDate","H","M","L","setFullYear","utcDate","setUTCFullYear","newYear","formats","pad","pads","charAt","newParse","newDate","parseSpecifier","getUTCDay","getDay","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","replace","requoteRe","numberRe","percentRe","getDate","getMilliseconds","getMinutes","getSeconds","timeSunday","timeMonday","getFullYear","getTimezoneOffset","getUTCDate","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","timeParse","formatIsoNative","toISOString","parseIsoNative","-","0","isoSpecifier","formatIso","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","16","newInterval","floori","offseti","field","weekday","setDate","setHours","utcWeekday","setUTCDate","setUTCHours","milliseconds","seconds","minutes","hours","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","17","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","taskTail","sleep","clearInterval","setInterval","timeout$1","elapsed","interval$1","total","tick","performance","requestAnimationFrame","TypeError","18","d3Timer","d3Ease","schedule","timing","schedules","__transition","emptyOn","emptyTween","ease","CREATED","init","STARTING","SCHEDULED","STARTED","RUNNING","ENDED","ENDING","selection_interrupt","tweenRemove","tween0","tween1","tweenFunction","transition_tween","_id","tweenValue","transition","value1","value00","interpolate0","value0","value10","transition_attr","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","children","inherit","transition_selection","styleRemoveEnd","transition_style","styleTween","transition_styleTween","transition_text","transition_transition","id0","id1","newId","defaultTiming","selection_transition","selection_prototype","d3-ease","d3-timer","19","saveAs","navigator","userAgent","doc","get_URL","URL","webkitURL","save_link","can_use_save_link","click","MouseEvent","is_safari","HTMLElement","is_chrome_ios","throw_outside","ex","setImmediate","force_saveable_type","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","filesaver","event_types","auto_bom","blob","String","fromCharCode","FileSaver","no_auto_bom","object_url","force","dispatch_all","fs_error","FileReader","reader","onloadend","url","popup","open","location","href","readyState","DONE","readAsDataURL","INIT","createObjectURL","opened","download","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","content","20","addMapEntry","pair","addSetEntry","func","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","done","mapToArray","forEach","overArg","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","BIND_FLAG","BIND_KEY_FLAG","CURRY_BOUND_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","ARY_FLAG","REARG_FLAG","FLIP_FLAG","UNORDERED_COMPARE_FLAG","PARTIAL_COMPARE_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","freeGlobal","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entry","hashClear","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","arrayLikeKeys","inherited","isArguments","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","arrayShuffle","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","baseAssignValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","configurable","enumerable","writable","baseAt","paths","isNil","baseClamp","upper","baseClone","isDeep","isFull","customizer","isObject","initCloneArray","tag","getTag","isFunc","isBuffer","cloneBuffer","initCloneObject","copySymbols","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","othLength","othIndex","caches","maxLength","seen","baseInverter","baseInvoke","last","baseIsArrayBuffer","baseIsDate","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","baseIsNative","isMasked","pattern","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","basePropertyDeep","basePullAll","basePullAt","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","baseSet","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","byteLength","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","Ctor","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","message","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","getAllKeysIn","keysIn","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","transforms","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","mergeDefaults","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","some","after","curry","curryRight","debounce","options","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","resolver","memoized","Cache","once","rest","spread","throttle","unary","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","propertyIsEnumerable","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNumber","isNative","isMaskable","isNull","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","iteratorSymbol","remainder","valueOf","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","unset","updateWith","valuesIn","inRange","floating","temp","capitalize","upperFirst","endsWith","position","escape","escapeRegExp","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","unescape","cond","conforms","defaultTo","matchesProperty","mixin","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","idCounter","maxBy","meanBy","minBy","sumBy","defaults","pick","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","isConcatSpreadable","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","WeakMap","nativeDefineProperty","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","resolve","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","defer","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invertBy","invoke","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extendWith","eachRight","first","filtered","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","21","_interopRequireWildcard","obj","__esModule","newObj","_classCallCheck","instance","Constructor","App","AppConfig","_createClass","defineProperties","descriptor","protoProps","staticProps","_d","_utils","_index","_exporter","_treeDesigner","_dataModel","_templates","Utils","deepExtend","containerId","config","setConfig","initContainer","initDataModel","initTreeDesigner","initExportToPngButton","initExportSvgButton","Templates","main","dataModel","DataModel","treeDesigner","TreeDesigner","save","dataBlob","filesize","Exporter","svgString","getSVGString","svgString2Image","./d3","./data-model","./exporter","./model/index","./templates","./tree-designer","./utils","22","ContextMenu","menu","opts","openCallback","onOpen","closeCallback","onClose","elm","stopPropagation","ret","divider","disabled","title","pageX","pageY","23","D3Extensions","insertSelector","appendSelector","selectOrAppend","selectOrInsert","24","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","d3-brush","d3-scale","d3-shape","25","_toConsumableArray","arr","arr2","from","model","_lodash","edges","addNode","DecisionNode","Point","n2","ChanceNode","TerminalNode","_addChild","edge","Edge","childEdges","_removeNode","parentEdge","childNode","_removeEdge","removeNode","roots","findSubtreeRoots","nodeToCopy","cloneNode","childClone","cloneSubtree","nodeToAttach","getAllChildEdges","$id","guid","nodesToRemove","edgesToRemove","26","_blueimpCanvasToBlob","_fileSaver","getCSSStyles","parentElement","str","getSelectors","parentSelectors","selectorTextArr","tagName","allClasses","className","childNodes","extractedCSSText","styleSheets","cssRules","selectorText","cssText","appendCSS","styleElement","refNode","hasChildNodes","cssStyleText","serializer","XMLSerializer","serializeToString","imgsrc","btoa","encodeURIComponent","canvas","getContext","image","Image","onload","clearRect","drawImage","src","blueimp-canvas-to-blob","file-saver","27","_app","_d3Extensions","./app","./d3-extensions","28","probability","payoff","../utils","29","_decisionNode","_chanceNode","_terminalNode","_edge","./edge","./node/chance-node","./node/decision-node","./node/node","./node/terminal-node","./point","30","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_Node","Node","../../d3","./node","31","32","$symbol","withChildren","../../utils","../point","33","34","35","toolbar","36","TreeDesignerConfig","_contextMenu","cssClassPrefix","margin","symbolSize","initSvg","initMainContextMenu","initBrush","initEdgeMarker","redrawEdges","initNodeContextMenu","redrawNodes","mainGroup","nodesContainer","nodesEnter","nodesMerge","box","getBBox","getTranslation","dragStarted","dragEnded","nodeContextMenu","selectSubTree","clearSelection","dX","slantStartXOffset","slantWidth","point2","point3","point4","_this","edgesContainer","edgesEnter","edgesMerge","edgeLineD","defs","brushstart","hide","brushmove","brushend","brushContainer","copyMenuItem","copyNode","pasteMenuItem","pasteToNode","copiedNode","deleteMenuItem","selectNode","removeSelectedNodes","newNode","selectAllNodes","mainContextMenu","selectedNodes","getSelectedNodes","removeNodes","toAttach","attached","attachSubtree","clearSelectionBeforeSelect","_this2","./context-menu","37","_defineProperty","_typeof","utils","srcObj","isObjectNotArray","mergeDeep","item","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","s4","textD3Obj","textString","textObj","ellipsisLength","getComputedTextLength","getSubStringLength","tooltip","ellipsisPlaced","placeTextWithEllipsis","SQRT_2","sanitizeHeight","sanitizeWidth","availableHeight","availableWidth"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/*global window, atob, Blob, ArrayBuffer, Uint8Array, define, module */\n\n;(function (window) {\n  'use strict'\n\n  var CanvasPrototype = window.HTMLCanvasElement &&\n                          window.HTMLCanvasElement.prototype\n  var hasBlobConstructor = window.Blob && (function () {\n    try {\n      return Boolean(new Blob())\n    } catch (e) {\n      return false\n    }\n  }())\n  var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    }())\n  var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||\n                      window.MozBlobBuilder || window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob &&\n    window.ArrayBuffer && window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob(\n          [hasArrayBufferViewSupport ? intArray : arrayBuffer],\n          {type: mediaType}\n        )\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n          callback(dataURLtoBlob(this.toDataURL(type, quality)))\n        } else {\n          callback(this.mozGetAsFile('blob', type))\n        }\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        callback(dataURLtoBlob(this.toDataURL(type, quality)))\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n}(window))\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SilverDecisions = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/*global window, atob, Blob, ArrayBuffer, Uint8Array, define, module */\n\n;(function (window) {\n  'use strict'\n\n  var CanvasPrototype = window.HTMLCanvasElement &&\n                          window.HTMLCanvasElement.prototype\n  var hasBlobConstructor = window.Blob && (function () {\n    try {\n      return Boolean(new Blob())\n    } catch (e) {\n      return false\n    }\n  }())\n  var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    }())\n  var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||\n                      window.MozBlobBuilder || window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob &&\n    window.ArrayBuffer && window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob(\n          [hasArrayBufferViewSupport ? intArray : arrayBuffer],\n          {type: mediaType}\n        )\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n          callback(dataURLtoBlob(this.toDataURL(type, quality)))\n        } else {\n          callback(this.mozGetAsFile('blob', type))\n        }\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        callback(dataURLtoBlob(this.toDataURL(type, quality)))\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n}(window))\n\n},{}],2:[function(require,module,exports){\n// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],3:[function(require,module,exports){\n// https://d3js.org/d3-brush/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n},{\"d3-dispatch\":6,\"d3-drag\":7,\"d3-interpolate\":10,\"d3-selection\":13,\"d3-transition\":18}],4:[function(require,module,exports){\n// https://d3js.org/d3-collection/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  exports.nest = nest;\n  exports.set = set;\n  exports.map = map;\n  exports.keys = keys;\n  exports.values = values;\n  exports.entries = entries;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],5:[function(require,module,exports){\n// https://d3js.org/d3-color/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, rgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function hsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, hsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function hcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, hcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],6:[function(require,module,exports){\n// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],7:[function(require,module,exports){\n// https://d3js.org/d3-drag/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, function (exports,d3Dispatch,d3Selection) { 'use strict';\n\n  function nopropagation() {\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    d3Selection.event.preventDefault();\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function nodrag(view) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function yesdrag(view, noclick) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !d3Selection.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n      if (!gesture) return;\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      nodrag(d3Selection.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      yesdrag(d3Selection.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = d3Selection.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  exports.drag = drag;\n  exports.dragDisable = nodrag;\n  exports.dragEnable = yesdrag;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-dispatch\":6,\"d3-selection\":13}],8:[function(require,module,exports){\n// https://d3js.org/d3-ease/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function cubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = cubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = cubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],9:[function(require,module,exports){\n// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],10:[function(require,module,exports){\n// https://d3js.org/d3-interpolate/ Version 1.1.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Color) { 'use strict';\n\n  function basis(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$1(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n  }\n\n  var rgb$1 = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = d3Color.rgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$1);\n  var rgbBasisClosed = rgbSpline(basisClosed);\n\n  function array(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function number(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = value(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function string(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: number(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function value(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant(b)\n        : (t === \"number\" ? number\n        : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n        : b instanceof d3Color.color ? rgb$1\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array\n        : isNaN(b) ? object\n        : number)(a, b);\n  }\n\n  function round(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$2 = hsl$1(hue);\n  var hslLong = hsl$1(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$2 = hcl$1(hue);\n  var hclLong = hcl$1(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix(start, end) {\n        var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix.gamma = cubehelixGamma;\n\n      return cubehelix;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var cubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  exports.interpolate = value;\n  exports.interpolateArray = array;\n  exports.interpolateBasis = basis$1;\n  exports.interpolateBasisClosed = basisClosed;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = number;\n  exports.interpolateObject = object;\n  exports.interpolateRound = round;\n  exports.interpolateString = string;\n  exports.interpolateTransformCss = interpolateTransformCss;\n  exports.interpolateTransformSvg = interpolateTransformSvg;\n  exports.interpolateZoom = zoom;\n  exports.interpolateRgb = rgb$1;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$2;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$2;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = cubehelixLong;\n  exports.quantize = quantize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-color\":5}],11:[function(require,module,exports){\n// https://d3js.org/d3-path/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau + tau;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{}],12:[function(require,module,exports){\n// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-array\":2,\"d3-collection\":4,\"d3-color\":5,\"d3-format\":9,\"d3-interpolate\":10,\"d3-time\":16,\"d3-time-format\":15}],13:[function(require,module,exports){\n// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],14:[function(require,module,exports){\n// https://d3js.org/d3-shape/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$ = x,\n      y$$ = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant(+_), line) : x$$;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant(+_), line) : y$$;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction radialLine$1() {\n  return radialLine(line().curve(curveRadialLinear));\n}\n\nfunction radialArea() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice = Array.prototype.slice;\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{\"d3-path\":11}],15:[function(require,module,exports){\n// https://d3js.org/d3-time-format/ Version 2.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Time) { 'use strict';\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale;\n  defaultLocale({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.timeFormat = locale.format;\n    exports.timeParse = locale.parse;\n    exports.utcFormat = locale.utcFormat;\n    exports.utcParse = locale.utcParse;\n    return locale;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  exports.timeFormatDefaultLocale = defaultLocale;\n  exports.timeFormatLocale = formatLocale;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-time\":16}],16:[function(require,module,exports){\n// https://d3js.org/d3-time/ Version 1.0.4. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n},{}],17:[function(require,module,exports){\n// https://d3js.org/d3-timer/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{}],18:[function(require,module,exports){\n// https://d3js.org/d3-transition/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state === STARTED;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{\"d3-color\":5,\"d3-dispatch\":6,\"d3-ease\":8,\"d3-interpolate\":10,\"d3-selection\":13,\"d3-timer\":17}],19:[function(require,module,exports){\n/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement)\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n\n},{}],20:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.16.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://github.com/es-shims.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 500,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        defineProperty = Object.defineProperty,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create'),\n        nativeDefineProperty = getNative(Object, 'defineProperty');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = prototype;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      // Safari 9 makes `arguments.length` enumerable in strict mode.\n      var result = (isArray(value) || isArguments(value))\n        ? baseTimes(value.length, String)\n        : [];\n\n      var length = result.length,\n          skipIndexes = !!length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), n);\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = baseKeysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          baseAssignValue(result, key, value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      return shuffleSelf(values(collection), n);\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !nativeDefineProperty ? identity : function(func, string) {\n      return nativeDefineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : baseClamp(size, 0, length);\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return value != null && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' ||\n            typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !nativeKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8-9 which returns 'object' for typed array and other constructors.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || objectToString.call(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(props, toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(props, toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.App = exports.AppConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _utils = require('./utils');\n\nvar _index = require('./model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _exporter = require('./exporter');\n\nvar _treeDesigner = require('./tree-designer');\n\nvar _dataModel = require('./data-model');\n\nvar _templates = require('./templates');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AppConfig = exports.AppConfig = function AppConfig(custom) {\n    _classCallCheck(this, AppConfig);\n\n    this.width = undefined;\n    this.height = undefined;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar App = exports.App = function () {\n    function App(containerId, config) {\n        _classCallCheck(this, App);\n\n        this.setConfig(config);\n        this.initContainer(containerId);\n        this.initDataModel();\n        this.initTreeDesigner();\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n    } //Data model manager\n\n\n    _createClass(App, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new AppConfig();\n            } else {\n                this.config = config;\n            }\n            return this;\n        }\n    }, {\n        key: 'initContainer',\n        value: function initContainer(containerId) {\n            this.container = d3.select('#' + containerId);\n            this.container.html(_templates.Templates.main);\n        }\n    }, {\n        key: 'initDataModel',\n        value: function initDataModel() {\n            this.dataModel = new _dataModel.DataModel();\n        }\n    }, {\n        key: 'initTreeDesigner',\n        value: function initTreeDesigner() {\n            this.treeDesigner = new _treeDesigner.TreeDesigner(this.container.select('#tree-designer-container'), this.dataModel);\n        }\n    }, {\n        key: 'initExportToPngButton',\n        value: function initExportToPngButton() {\n            var svg = this.treeDesigner.svg;\n            d3.select('#saveButton').on('click', function () {\n                var svgString = _exporter.Exporter.getSVGString(svg.node());\n                _exporter.Exporter.svgString2Image(svgString, 2 * 800, 2 * 800, 'png', save); // passes Blob and filesize String to the callback\n\n                function save(dataBlob, filesize) {\n                    _exporter.Exporter.saveAs(dataBlob, 'export.png');\n                }\n            });\n        }\n    }, {\n        key: 'initExportSvgButton',\n        value: function initExportSvgButton() {\n            var svg = this.treeDesigner.svg;\n            d3.select('#saveButtonSvg').on('click', function () {\n                var svgString = _exporter.Exporter.getSVGString(svg.node());\n                var blob = new Blob([svgString], { type: \"image/svg+xml\" });\n                _exporter.Exporter.saveAs(blob, 'export.svg');\n            });\n        }\n    }]);\n\n    return App;\n}();\n\n},{\"./d3\":24,\"./data-model\":25,\"./exporter\":26,\"./model/index\":29,\"./templates\":35,\"./tree-designer\":36,\"./utils\":37}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ContextMenu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*based on:\r\n* github.com/patorjk/d3-context-menu */\n\nvar ContextMenu = exports.ContextMenu = function () {\n    function ContextMenu(menu, opts) {\n        _classCallCheck(this, ContextMenu);\n\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1]).enter().append('div').attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu').on('contextmenu', function (d) {\n                d3.select('.d3-context-menu').style('display', 'none');\n                d3.event.preventDefault();\n                d3.event.stopPropagation();\n            }).append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter().append('li').attr('class', function (d) {\n                var ret = '';\n                if (d.divider) {\n                    ret += ' is-divider';\n                }\n                if (d.disabled) {\n                    ret += ' is-disabled';\n                }\n                if (!d.action) {\n                    ret += ' is-header';\n                }\n                return ret;\n            }).html(function (d) {\n                if (d.divider) {\n                    return '<hr>';\n                }\n                if (!d.title) {\n                    void 0;\n                }\n                return typeof d.title === 'string' ? d.title : d.title(data);\n            }).on('click', function (d, i) {\n                if (d.disabled) return; // do nothing if disabled\n                if (!d.action) return; // headers have no \"action\"\n                d.action(elm, data, index);\n                d3.select('.d3-context-menu').style('display', 'none');\n\n                if (self.closeCallback) {\n                    self.closeCallback();\n                }\n            });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu').style('left', d3.event.pageX - 2 + 'px').style('top', d3.event.pageY - 2 + 'px').style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    }\n\n    _createClass(ContextMenu, null, [{\n        key: 'hide',\n        value: function hide() {\n            d3.select('.d3-context-menu').style('display', 'none');\n        }\n    }]);\n\n    return ContextMenu;\n}();\n\n},{\"./d3\":24}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.D3Extensions = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar D3Extensions = exports.D3Extensions = function () {\n    function D3Extensions() {\n        _classCallCheck(this, D3Extensions);\n    }\n\n    _createClass(D3Extensions, null, [{\n        key: 'extend',\n        value: function extend() {\n\n            d3.selection.prototype.enter.prototype.insertSelector = d3.selection.prototype.insertSelector = function (selector, before) {\n                return _utils.Utils.insertSelector(this, selector, before);\n            };\n\n            d3.selection.prototype.enter.prototype.appendSelector = d3.selection.prototype.appendSelector = function (selector) {\n                return _utils.Utils.appendSelector(this, selector);\n            };\n\n            d3.selection.prototype.enter.prototype.selectOrAppend = d3.selection.prototype.selectOrAppend = function (selector) {\n                return _utils.Utils.selectOrAppend(this, selector);\n            };\n\n            d3.selection.prototype.enter.prototype.selectOrInsert = d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return _utils.Utils.selectOrInsert(this, selector, before);\n            };\n        }\n    }]);\n\n    return D3Extensions;\n}();\n\n},{\"./d3\":24,\"./utils\":37}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d3Dispatch = require('d3-dispatch');\n\nObject.keys(_d3Dispatch).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Dispatch[key];\n    }\n  });\n});\n\nvar _d3Scale = require('d3-scale');\n\nObject.keys(_d3Scale).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Scale[key];\n    }\n  });\n});\n\nvar _d3Selection = require('d3-selection');\n\nObject.keys(_d3Selection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Selection[key];\n    }\n  });\n});\n\nvar _d3Shape = require('d3-shape');\n\nObject.keys(_d3Shape).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Shape[key];\n    }\n  });\n});\n\nvar _d3Drag = require('d3-drag');\n\nObject.keys(_d3Drag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Drag[key];\n    }\n  });\n});\n\nvar _d3Brush = require('d3-brush');\n\nObject.keys(_d3Brush).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Brush[key];\n    }\n  });\n});\n\n},{\"d3-brush\":3,\"d3-dispatch\":6,\"d3-drag\":7,\"d3-scale\":12,\"d3-selection\":13,\"d3-shape\":14}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DataModel = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nvar _index = require('./model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _lodash = require('lodash');\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\r\n* Data model manager\r\n* */\nvar DataModel = exports.DataModel = function () {\n    function DataModel() {\n        _classCallCheck(this, DataModel);\n\n        this.nodes = [];\n        this.edges = [];\n\n        var n1 = this.addNode(new model.DecisionNode(new model.Point(100, 150)));\n        var n2 = this.addNode(new model.ChanceNode(new model.Point(250, 100)), n1);\n        var n3 = this.addNode(new model.TerminalNode(new model.Point(250, 200)), n1);\n        var n4 = this.addNode(new model.DecisionNode(new model.Point(400, 50)), n2);\n        var n5 = this.addNode(new model.TerminalNode(new model.Point(400, 150)), n2);\n    }\n\n    _createClass(DataModel, [{\n        key: 'addNode',\n        value: function addNode(node, parent) {\n            var self = this;\n            self.nodes.push(node);\n            if (parent) {\n                self._addChild(parent, node);\n            }\n            return node;\n        }\n    }, {\n        key: '_addChild',\n        value: function _addChild(parent, child) {\n            var self = this;\n            var edge = new model.Edge(parent, child);\n            self.edges.push(edge);\n            parent.childEdges.push(edge);\n            child.parent = parent;\n        }\n\n        /*removes given node and its subtree*/\n\n    }, {\n        key: 'removeNode',\n        value: function removeNode(node) {\n            var self = this;\n            self._removeNode(node);\n            var parent = node.parent;\n            if (parent) {\n                var parentEdge = parent.childEdges.find(function (e, i) {\n                    return e.childNode === node;\n                });\n                self._removeEdge(parentEdge);\n            }\n\n            node.parent = null;\n            node.childEdges.forEach(function (e) {\n                return self.removeNode(e.childNode);\n            });\n        }\n\n        /*removes given nodes and their subtrees*/\n\n    }, {\n        key: 'removeNodes',\n        value: function removeNodes(nodes) {\n            var roots = this.findSubtreeRoots(nodes);\n            roots.forEach(this.removeNode, this);\n        }\n    }, {\n        key: 'findSubtreeRoots',\n        value: function findSubtreeRoots(nodes) {\n            return nodes.filter(function (n) {\n                return !n.parent || nodes.indexOf(n.parent) === -1;\n            });\n        }\n\n        /*creates detached clone of given node*/\n\n    }, {\n        key: 'cloneSubtree',\n        value: function cloneSubtree(nodeToCopy) {\n            var self = this;\n            var clone = this.cloneNode(nodeToCopy);\n\n            nodeToCopy.childEdges.forEach(function (e) {\n                var childClone = self.cloneSubtree(e.childNode);\n                childClone.parent = clone;\n                var edge = new model.Edge(clone, childClone);\n                clone.childEdges.push(edge);\n            });\n            return clone;\n        }\n\n        /*attaches detached subtree to given parent*/\n\n    }, {\n        key: 'attachSubtree',\n        value: function attachSubtree(nodeToAttach, parent) {\n            var self = this;\n            self.addNode(nodeToAttach, parent);\n\n            var childEdges = self.getAllChildEdges(nodeToAttach);\n            childEdges.forEach(function (e) {\n                self.edges.push(e);\n                self.nodes.push(e.childNode);\n            });\n\n            return nodeToAttach;\n        }\n    }, {\n        key: 'cloneNodes',\n        value: function cloneNodes(nodes) {\n            var roots = [];\n            //TODO\n        }\n\n        /*shallow clone without parent and children*/\n\n    }, {\n        key: 'cloneNode',\n        value: function cloneNode(node) {\n            var clone = _.clone(node);\n            clone.$id = _utils.Utils.guid();\n            clone.location = _.clone(node.location);\n            clone.computed = _.clone(node.computed);\n            clone.parent = null;\n            clone.childEdges = [];\n            return clone;\n        }\n    }, {\n        key: '_removeNode',\n        value: function _removeNode(node) {\n            // simply removes node from node list\n            var index = this.nodes.indexOf(node);\n            if (index > -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    }, {\n        key: '_removeEdge',\n        value: function _removeEdge(edge) {\n            //removes edge from edge list without removing connected nodes\n            var index = this.edges.indexOf(edge);\n            if (index > -1) {\n                this.edges.splice(index, 1);\n            }\n        }\n    }, {\n        key: '_removeNodes',\n        value: function _removeNodes(nodesToRemove) {\n            this.nodes = this.nodes.filter(function (n) {\n                return nodesToRemove.indexOf(n) === -1;\n            });\n        }\n    }, {\n        key: '_removeEdges',\n        value: function _removeEdges(edgesToRemove) {\n            this.edges = this.edges.filter(function (e) {\n                return edgesToRemove.indexOf(e) === -1;\n            });\n        }\n    }, {\n        key: 'getAllChildEdges',\n        value: function getAllChildEdges(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                result.push(e);\n                if (e.childNode) {\n                    result.push.apply(result, _toConsumableArray(self.getAllChildEdges(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }]);\n\n    return DataModel;\n}();\n\n},{\"./model/index\":29,\"./utils\":37,\"lodash\":20}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Exporter = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _blueimpCanvasToBlob = require('blueimp-canvas-to-blob');\n\nvar _fileSaver = require('file-saver');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Exporter = exports.Exporter = function () {\n    function Exporter() {\n        _classCallCheck(this, Exporter);\n    }\n\n    _createClass(Exporter, null, [{\n        key: 'getSVGString',\n\n        // Below are the function that handle actual exporting:\n        // getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n        value: function getSVGString(svgNode) {\n            svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n            var cssStyleText = getCSSStyles(svgNode);\n            appendCSS(cssStyleText, svgNode);\n\n            var serializer = new XMLSerializer();\n            var svgString = serializer.serializeToString(svgNode);\n            svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n            svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\n\n            return svgString;\n\n            function getCSSStyles(parentElement) {\n                var selectorTextArr = getSelectors(parentElement, [], []);\n\n                // Extract CSS Rules\n                var extractedCSSText = \"\";\n                for (var i = 0; i < document.styleSheets.length; i++) {\n                    var cssRules = document.styleSheets[i].cssRules;\n                    for (var r = 0; r < cssRules.length; r++) {\n                        if (contains(cssRules[r].selectorText, selectorTextArr)) extractedCSSText += cssRules[r].cssText;\n                    }\n                }\n                void 0;\n                return extractedCSSText;\n\n                function contains(str, arr) {\n                    return arr.indexOf(str) !== -1;\n                }\n\n                function getSelectors(element, parentSelectors, selectorTextArr) {\n                    // Add Parent element Id and Classes to the list\n\n\n                    if (!contains(element.tagName, selectorTextArr)) selectorTextArr.push(element.tagName);\n\n                    if (element.id && !contains('#' + element.id, selectorTextArr)) selectorTextArr.push('#' + element.id);\n                    if (element.id && !contains(element.tagName + '#' + element.id, selectorTextArr)) selectorTextArr.push(element.tagName + '#' + element.id);\n\n                    var allClasses = '';\n                    for (var c = 0; c < element.classList.length; c++) {\n                        var className = element.classList[c];\n                        allClasses += '.' + className;\n                        if (!contains('.' + className, selectorTextArr)) selectorTextArr.push('.' + className);\n                        if (!contains(element.tagName + '.' + className, selectorTextArr)) selectorTextArr.push(element.tagName + '.' + className);\n                    }\n                    if (allClasses) {\n                        if (!contains(allClasses, selectorTextArr)) selectorTextArr.push(allClasses);\n                        if (!contains(element.tagName + allClasses, selectorTextArr)) selectorTextArr.push(element.tagName + allClasses);\n                    }\n\n                    // Add Children element Ids and Classes to the list\n                    var nodes = element.childNodes;\n\n                    for (var i = 0; i < nodes.length; i++) {\n                        var node = nodes[i];\n                        getSelectors(node, [], selectorTextArr);\n                    }\n\n                    return selectorTextArr;\n                }\n            }\n\n            function appendCSS(cssText, element) {\n                var styleElement = document.createElement(\"style\");\n                styleElement.setAttribute(\"type\", \"text/css\");\n                styleElement.innerHTML = cssText;\n                var refNode = element.hasChildNodes() ? element.children[0] : null;\n                element.insertBefore(styleElement, refNode);\n            }\n        }\n    }, {\n        key: 'svgString2Image',\n        value: function svgString2Image(svgString, width, height, format, callback) {\n            var format = format ? format : 'png';\n\n            var imgsrc = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString))); // Convert SVG string to dataurl\n\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n\n            canvas.width = width;\n            canvas.height = height;\n\n            var image = new Image();\n            image.onload = function () {\n                context.clearRect(0, 0, width, height);\n                context.drawImage(image, 0, 0, width, height);\n\n                canvas.toBlob(function (blob) {\n                    var filesize = Math.round(blob.length / 1024) + ' KB';\n                    if (callback) callback(blob, filesize);\n                });\n            };\n\n            image.src = imgsrc;\n        }\n    }]);\n\n    return Exporter;\n}();\n\nExporter.saveAs = _fileSaver.saveAs;\nExporter.dataURLtoBlob = _blueimpCanvasToBlob.dataURLtoBlob;\n\n},{\"blueimp-canvas-to-blob\":1,\"file-saver\":19}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.App = undefined;\n\nvar _app = require('./app');\n\nObject.defineProperty(exports, 'App', {\n  enumerable: true,\n  get: function get() {\n    return _app.App;\n  }\n});\n\nvar _d3Extensions = require('./d3-extensions');\n\n_d3Extensions.D3Extensions.extend();\n\n},{\"./app\":21,\"./d3-extensions\":23}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Edge = undefined;\n\nvar _utils = require('../utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Edge = exports.Edge = function Edge(parentNode, childNode) {\n    _classCallCheck(this, Edge);\n\n    this.name = '';\n    this.probability = 0;\n    this.payoff = 0;\n    this.$id = _utils.Utils.guid();\n\n    this.parentNode = parentNode;\n    this.childNode = childNode;\n};\n\n},{\"../utils\":37}],29:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _node = require('./node/node');\n\nObject.keys(_node).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _node[key];\n    }\n  });\n});\n\nvar _decisionNode = require('./node/decision-node');\n\nObject.keys(_decisionNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _decisionNode[key];\n    }\n  });\n});\n\nvar _chanceNode = require('./node/chance-node');\n\nObject.keys(_chanceNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _chanceNode[key];\n    }\n  });\n});\n\nvar _terminalNode = require('./node/terminal-node');\n\nObject.keys(_terminalNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _terminalNode[key];\n    }\n  });\n});\n\nvar _edge = require('./edge');\n\nObject.keys(_edge).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _edge[key];\n    }\n  });\n});\n\nvar _point = require('./point');\n\nObject.keys(_point).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _point[key];\n    }\n  });\n});\n\n},{\"./edge\":28,\"./node/chance-node\":30,\"./node/decision-node\":31,\"./node/node\":32,\"./node/terminal-node\":33,\"./point\":34}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChanceNode = undefined;\n\nvar _node = require('./node');\n\nvar _d = require('../../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ChanceNode = exports.ChanceNode = function (_Node) {\n    _inherits(ChanceNode, _Node);\n\n    function ChanceNode(location) {\n        _classCallCheck(this, ChanceNode);\n\n        return _possibleConstructorReturn(this, (ChanceNode.__proto__ || Object.getPrototypeOf(ChanceNode)).call(this, 'chance', d3.symbolCircle, location));\n    }\n\n    return ChanceNode;\n}(_node.Node);\n\n},{\"../../d3\":24,\"./node\":32}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DecisionNode = undefined;\n\nvar _node = require('./node');\n\nvar _d = require('../../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DecisionNode = exports.DecisionNode = function (_Node) {\n    _inherits(DecisionNode, _Node);\n\n    function DecisionNode(location) {\n        _classCallCheck(this, DecisionNode);\n\n        return _possibleConstructorReturn(this, (DecisionNode.__proto__ || Object.getPrototypeOf(DecisionNode)).call(this, 'decision', d3.symbolSquare, location));\n    }\n\n    return DecisionNode;\n}(_node.Node);\n\n},{\"../../d3\":24,\"./node\":32}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Node = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('../../utils');\n\nvar _point = require('../point');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Node = exports.Node = function () {\n    //Point\n\n    function Node(type, symbol, location) {\n        _classCallCheck(this, Node);\n\n        this.childEdges = [];\n        this.name = '';\n        this.computed = {\n            payoff: null\n        };\n        this.$id = _utils.Utils.guid();\n\n        this.location = location;\n        if (!location) {\n            this.location = new _point.Point(0, 0);\n        }\n        this.type = type;\n        this.$symbol = symbol;\n    }\n\n    _createClass(Node, [{\n        key: 'moveTo',\n        value: function moveTo(x, y, withChildren) {\n            //move to location\n            if (withChildren) {\n                var dx = x - this.location.x;\n                var dy = y - this.location.y;\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n\n            this.location.x = x;\n            this.location.y = y;\n        }\n    }, {\n        key: 'move',\n        value: function move(dx, dy, withChildren) {\n            //move by vector\n            if (withChildren) {\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n\n            this.location.x += dx;\n            this.location.y += dy;\n        }\n    }]);\n\n    return Node;\n}();\n\n},{\"../../utils\":37,\"../point\":34}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TerminalNode = undefined;\n\nvar _node = require('./node');\n\nvar _d = require('../../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TerminalNode = exports.TerminalNode = function (_Node) {\n    _inherits(TerminalNode, _Node);\n\n    function TerminalNode(location) {\n        _classCallCheck(this, TerminalNode);\n\n        return _possibleConstructorReturn(this, (TerminalNode.__proto__ || Object.getPrototypeOf(TerminalNode)).call(this, 'terminal', d3.symbolTriangle, location));\n    }\n\n    return TerminalNode;\n}(_node.Node);\n\n},{\"../../d3\":24,\"./node\":32}],34:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point = exports.Point = function () {\n    function Point(x, y) {\n        _classCallCheck(this, Point);\n\n        this.x = x;\n        this.y = y;\n    }\n\n    _createClass(Point, [{\n        key: \"move\",\n        value: function move(x, y) {\n            this.x += x;\n            this.y += y;\n        }\n    }]);\n\n    return Point;\n}();\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//TODO maybe use some templating engine instead\nvar Templates = exports.Templates = function Templates() {\n    _classCallCheck(this, Templates);\n};\n\nTemplates.toolbar = '<div id=\"toolbar\">' + '<button id=\"saveButton\">Export to PNG</button>' + '<button id=\"saveButtonSvg\">Export to SVG</button>' + '</div>';\nTemplates.main = '<div id=\"silver-decisions\">' + Templates.toolbar + '<div id=\"tree-designer-container\"></div>' + '</div>';\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeDesigner = exports.TreeDesignerConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _utils = require('./utils');\n\nvar _index = require('./model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _contextMenu = require('./context-menu');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TreeDesignerConfig = exports.TreeDesignerConfig = function TreeDesignerConfig(custom) {\n    _classCallCheck(this, TreeDesignerConfig);\n\n    this.cssClassPrefix = \"sd-\";\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    this.symbolSize = 40;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar TreeDesigner = exports.TreeDesigner = function () {\n    function TreeDesigner(container, dataModel, config) {\n        _classCallCheck(this, TreeDesigner);\n\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    } //data model manager\n\n\n    _createClass(TreeDesigner, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new TreeDesignerConfig();\n            } else {\n                this.config = config;\n            }\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.initSvg();\n            this.initMainContextMenu();\n            this.initBrush();\n            this.initEdgeMarker();\n            this.redrawEdges();\n            this.initNodeContextMenu();\n            this.redrawNodes();\n        }\n    }, {\n        key: 'initContainer',\n        value: function initContainer(container) {\n            this.container = container;\n        }\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            this.svg = this.container.selectOrAppend('svg.tree-designer');\n            this.svg.attr('width', 800).attr('height', 800);\n\n            this.mainGroup = this.svg.selectOrAppend('g.main-group');\n        }\n    }, {\n        key: 'redrawNodes',\n        value: function redrawNodes() {\n            var symbolSize = this.config.symbolSize;\n            var symbol = d3.symbol().type(function (d) {\n                return d.$symbol;\n            }).size(function (d) {\n                return 64;\n            });\n\n            var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n            var nodes = nodesContainer.selectAll('.node').data(this.data.nodes, function (d, i) {\n                return d.$id;\n            });\n            nodes.exit().remove();\n            var nodesEnter = nodes.enter().append('g').attr('id', function (d) {\n                return 'node-' + d.$id;\n            }).attr('class', function (d) {\n                return d.type + '-node node';\n            });\n            nodesEnter.append('path');\n            nodesEnter.append('text');\n\n            var nodesMerge = nodesEnter.merge(nodes);\n\n            nodesMerge.attr('transform', function (d) {\n                return 'translate(' + d.location.x + '  ' + d.location.y + ') rotate(-90)';\n            });\n            nodesMerge.select('path').attr('d', symbol).each(function (d) {\n                var path = d3.select(this);\n                var box = path.node().getBBox();\n                var error = Math.min(symbolSize / box.width, symbolSize / box.height);\n                path.attr(\"d\", symbol.size(error * error * 64));\n            });\n\n            var self = this;\n\n            var drag = d3.drag().subject(function (d) {\n                if (d == null) {\n                    return { x: event.x, y: event.y };\n                }\n                var t = d3.select(this);\n                return { x: t.attr(\"x\") + _utils.Utils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + _utils.Utils.getTranslation(t.attr(\"transform\"))[1] };\n            }).on(\"start\", function (d) {\n                self.dragStarted.call(this, d, self);\n            }).on(\"drag\", function (d) {\n                self.drag.call(this, d, self);\n            }).on(\"end\", this.dragEnded);\n\n            nodesMerge.call(drag);\n            nodesMerge.on('contextmenu', this.nodeContextMenu);\n            nodesMerge.on('dblclick', function (d) {\n                return self.selectSubTree(d, true);\n            });\n        }\n    }, {\n        key: 'dragStarted',\n        value: function dragStarted(d, self) {\n            var node = d3.select(this);\n            if (!node.classed(\"selected\")) {\n                self.clearSelection();\n            }\n\n            node.classed(\"selected dragging\", true);\n        }\n    }, {\n        key: 'drag',\n        value: function drag(d, self) {\n            var dx = d3.event.x - d.location.x;\n            var dy = d3.event.y - d.location.y;\n\n            self.mainGroup.selectAll('.node.selected, .node.dragging').each(function (d) {\n                d.location.x += dx;\n                d.location.y += dy;\n                d3.select(this).raise().attr('transform', 'translate(' + d.location.x + ' ' + d.location.y + ')  rotate(-90)');\n            });\n            self.redrawEdges();\n        }\n    }, {\n        key: 'dragEnded',\n        value: function dragEnded() {\n            var node = d3.select(this).classed(\"dragging\", false);\n        }\n    }, {\n        key: 'edgeLineD',\n        value: function edgeLineD(edge) {\n            var line = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n            // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n            var parentNode = edge.parentNode;\n            var childNode = edge.childNode;\n\n            var dX = childNode.location.x - parentNode.location.x;\n            var dY = childNode.location.y - parentNode.location.y;\n\n            var sign = dX >= 0 ? 1 : -1;\n\n            var slantStartXOffset = Math.min(dX / 2, 30);\n            var slantWidth = Math.min(20, Math.max(dX / 2 - slantStartXOffset, 0));\n\n            var point2 = [parentNode.location.x + slantStartXOffset, parentNode.location.y];\n            var point3 = [parentNode.location.x + slantStartXOffset + slantWidth, childNode.location.y];\n            var point4 = [childNode.location.x - sign * Math.max(0, Math.min(this.config.symbolSize / 2 + 8, dX / 2 - slantStartXOffset)), childNode.location.y];\n            // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n            // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n            return line([[parentNode.location.x, parentNode.location.y], point2, point3, point4]);\n        }\n    }, {\n        key: 'redrawEdges',\n        value: function redrawEdges() {\n            var _this = this;\n\n            var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n            var edges = edgesContainer.selectAll('.edge').data(this.data.edges, function (d, i) {\n                return d.$id;\n            });\n            edges.exit().remove();\n            var edgesEnter = edges.enter().append('g').attr('class', 'edge');\n\n            edgesEnter.append('path');\n            var edgesMerge = edgesEnter.merge(edges);\n\n            edgesMerge.select('path').attr('d', function (d) {\n                return _this.edgeLineD(d);\n            }).attr(\"stroke\", \"black\").attr(\"stroke-width\", 2).attr(\"fill\", \"none\").attr(\"marker-end\", \"url(#arrow)\").attr(\"shape-rendering\", \"optimizeQuality\");\n        }\n    }, {\n        key: 'initEdgeMarker',\n        value: function initEdgeMarker() {\n            void 0;\n            var defs = this.svg.append(\"svg:defs\");\n\n            defs.append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 5).attr(\"refY\", 0).attr(\"markerWidth\", 4).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"class\", \"arrowHead\");\n        }\n    }, {\n        key: 'initBrush',\n        value: function initBrush() {\n            var self = this;\n            var brushContainer = this.mainGroup.append(\"g\").attr(\"class\", \"brush\");\n\n            var brush = d3.brush().on(\"start\", brushstart).on(\"brush\", brushmove).on(\"end\", brushend);\n\n            // brush.extent([[0, 0], [self.plot.size, self.plot.size]]);\n            brushContainer.call(brush);\n\n            function brushstart() {\n                if (!d3.event.selection) return;\n                self.clearSelection();\n                _contextMenu.ContextMenu.hide();\n            }\n\n            // Highlight the selected nodes.\n            function brushmove() {\n                var s = d3.event.selection;\n                if (!s) return;\n\n                self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n\n                    return s[0][0] <= d.location.x && d.location.x <= s[1][0] && s[0][1] <= d.location.y && d.location.y <= s[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (!d3.event.selection) return;\n                brush.move(brushContainer, null);\n\n                // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n            }\n        }\n    }, {\n        key: 'initNodeContextMenu',\n        value: function initNodeContextMenu() {\n            var self = this;\n            var menu = function menu(d) {\n\n                var copyMenuItem = {\n                    title: 'Copy',\n                    action: function action(elm, d, i) {\n                        self.copyNode(d);\n                    }\n                };\n                var pasteMenuItem = {\n                    title: 'Paste',\n                    action: function action(elm, d, i) {\n                        self.pasteToNode(d);\n                    },\n                    disabled: !self.copiedNode\n\n                };\n                var deleteMenuItem = {\n                    title: 'Delete',\n                    action: function action(elm, d, i) {\n                        self.selectNode(d);\n                        self.removeSelectedNodes();\n                    }\n                };\n                var menu = [];\n                if (d.type == 'terminal') {\n                    return [copyMenuItem, deleteMenuItem];\n                }\n                menu.push({\n                    title: 'Add Decision Node',\n                    action: function action(elm, d, i) {\n                        var newNode = new model.DecisionNode(new model.Point(d.location.x + 120, d.location.y));\n                        self.addNode(newNode, d);\n                    }\n                });\n                menu.push({\n                    title: 'Add Chance Node',\n                    action: function action(elm, d, i) {\n                        var newNode = new model.ChanceNode(new model.Point(d.location.x + 120, d.location.y));\n                        self.addNode(newNode, d);\n                    }\n                });\n                menu.push({\n                    title: 'Add Terminal Node',\n                    action: function action(elm, d, i) {\n                        var newNode = new model.TerminalNode(new model.Point(d.location.x + 120, d.location.y));\n                        self.addNode(newNode, d);\n                    }\n                });\n                menu.push({ divider: true });\n                menu.push(copyMenuItem);\n                menu.push(pasteMenuItem);\n                menu.push(deleteMenuItem);\n                menu.push({ divider: true });\n                menu.push({\n                    title: 'Select subtree',\n                    action: function action(elm, d, i) {\n                        self.selectSubTree(d, true);\n                    }\n                });\n\n                return menu;\n            };\n\n            this.nodeContextMenu = new _contextMenu.ContextMenu(menu);\n        }\n    }, {\n        key: 'initMainContextMenu',\n        value: function initMainContextMenu() {\n            var self = this;\n            var menu = function menu(d) {\n\n                var menu = [];\n                menu.push({\n                    title: 'Add Decision Node',\n                    action: function action(elm, d, i) {\n                        var newNode = new model.DecisionNode(new model.Point(d3.event.x, d3.event.y));\n                        self.addNode(newNode);\n                    }\n                });\n                menu.push({\n                    title: 'Add Chance Node',\n                    action: function action(elm, d, i) {\n\n                        var newNode = new model.ChanceNode(new model.Point(d3.event.x, d3.event.y));\n                        self.addNode(newNode);\n                    }\n                });\n\n                menu.push({ divider: true });\n\n                menu.push({\n                    title: 'Select all nodes',\n                    action: function action(elm, d, i) {\n                        self.selectAllNodes();\n                    }\n                });\n                return menu;\n            };\n\n            this.mainContextMenu = new _contextMenu.ContextMenu(menu);\n            self.mainGroup.on('contextmenu', this.mainContextMenu);\n        }\n    }, {\n        key: 'addNode',\n        value: function addNode(node, parent) {\n            this.data.addNode(node, parent);\n            this.redrawEdges();\n            this.redrawNodes();\n            return node;\n        }\n    }, {\n        key: 'removeNode',\n        value: function removeNode(node) {\n            this.data.removeNode(node);\n            this.redrawEdges();\n            this.redrawNodes();\n        }\n    }, {\n        key: 'removeSelectedNodes',\n        value: function removeSelectedNodes() {\n            var selectedNodes = this.getSelectedNodes();\n            this.data.removeNodes(selectedNodes);\n            this.clearSelection();\n            this.redrawEdges();\n            this.redrawNodes();\n        }\n    }, {\n        key: 'copyNode',\n        value: function copyNode(d) {\n            this.copiedNode = this.data.cloneSubtree(d);\n        }\n    }, {\n        key: 'copySelectedNodes',\n        value: function copySelectedNodes() {\n            var self;\n            var selectedNodes = this.getSelectedNodes();\n            //TODO\n        }\n    }, {\n        key: 'pasteToNode',\n        value: function pasteToNode(node) {\n            var self = this;\n            var toAttach = this.copiedNode;\n            self.copyNode(toAttach);\n            var attached = this.data.attachSubtree(this.copiedNode, node);\n\n            attached.moveTo(node.location.x + 120, node.location.y, true);\n            this.redrawEdges();\n            this.redrawNodes();\n\n            self.selectSubTree(attached, true);\n        }\n    }, {\n        key: 'moveNodeTo',\n        value: function moveNodeTo(x, y) {}\n    }, {\n        key: 'getSelectedNodes',\n        value: function getSelectedNodes() {\n            return this.mainGroup.selectAll(\".node.selected\").data();\n        }\n    }, {\n        key: 'clearSelection',\n        value: function clearSelection() {\n            this.mainGroup.selectAll(\".selected\").classed('selected', false);\n        }\n    }, {\n        key: 'selectNode',\n        value: function selectNode(node, clearSelectionBeforeSelect) {\n            if (clearSelectionBeforeSelect) {\n                this.clearSelection();\n            }\n            this.mainGroup.select('#node-' + node.$id).classed('selected', true);\n        }\n    }, {\n        key: 'selectSubTree',\n        value: function selectSubTree(node, clearSelectionBeforeSelect) {\n            var _this2 = this;\n\n            if (clearSelectionBeforeSelect) {\n                this.clearSelection();\n            }\n            this.selectNode(node);\n            node.childEdges.forEach(function (e) {\n                return _this2.selectSubTree(e.childNode);\n            });\n        }\n    }, {\n        key: 'selectAllNodes',\n        value: function selectAllNodes() {\n            this.mainGroup.selectAll(\".node\").classed('selected', true);\n        }\n    }]);\n\n    return TreeDesigner;\n}();\n\n},{\"./context-menu\":22,\"./d3\":24,\"./model/index\":29,\"./utils\":37}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isArray',\n        value: function isArray(item) {\n            return Array.isArray(item);\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'isDate',\n        value: function isDate(a) {\n            return Object.prototype.toString.call(a) === '[object Date]';\n        }\n    }, {\n        key: 'isString',\n        value: function isString(a) {\n            return typeof a === 'string' || a instanceof String;\n        }\n    }, {\n        key: 'insertOrAppendSelector',\n        value: function insertOrAppendSelector(parent, selector, operation, before) {\n\n            var selectorParts = selector.split(/([\\.\\#])/);\n            var element = parent[operation](selectorParts.shift(), before); //\":first-child\"\n\n            while (selectorParts.length > 1) {\n                var selectorModifier = selectorParts.shift();\n                var selectorItem = selectorParts.shift();\n                if (selectorModifier === \".\") {\n                    element = element.classed(selectorItem, true);\n                } else if (selectorModifier === \"#\") {\n                    element = element.attr('id', selectorItem);\n                }\n            }\n            return element;\n        }\n    }, {\n        key: 'insertSelector',\n        value: function insertSelector(parent, selector, before) {\n            return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n        }\n    }, {\n        key: 'appendSelector',\n        value: function appendSelector(parent, selector) {\n            return Utils.insertOrAppendSelector(parent, selector, \"append\");\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                if (element) {\n                    return parent.append(element);\n                }\n                return Utils.appendSelector(parent, selector);\n            }\n            return selection;\n        }\n    }, {\n        key: 'selectOrInsert',\n        value: function selectOrInsert(parent, selector, before) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                return Utils.insertSelector(parent, selector, before);\n            }\n            return selection;\n        }\n    }, {\n        key: 'guid',\n        value: function guid() {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n            }\n\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n        }\n\n        //places textString in textObj, adds an ellipsis if text can't fit in width\n\n    }, {\n        key: 'placeTextWithEllipsis',\n        value: function placeTextWithEllipsis(textD3Obj, textString, width) {\n            var textObj = textD3Obj.node();\n            textObj.textContent = textString;\n\n            var margin = 0;\n            var ellipsisLength = 9;\n            //ellipsis is needed\n            if (textObj.getComputedTextLength() > width + margin) {\n                for (var x = textString.length - 3; x > 0; x -= 1) {\n                    if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                        textObj.textContent = textString.substring(0, x) + \"...\";\n                        return true;\n                    }\n                }\n                textObj.textContent = \"...\"; //can't place at all\n                return true;\n            }\n            return false;\n        }\n    }, {\n        key: 'placeTextWithEllipsisAndTooltip',\n        value: function placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n            var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n            if (ellipsisPlaced && tooltip) {\n                textD3Obj.on(\"mouseover\", function (d) {\n                    tooltip.transition().duration(200).style(\"opacity\", .9);\n                    tooltip.html(textString).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                textD3Obj.on(\"mouseout\", function (d) {\n                    tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n        }\n    }, {\n        key: 'getFontSize',\n        value: function getFontSize(element) {\n            return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n        }\n    }, {\n        key: 'capitalizeFirstLetter',\n        value: function capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    }, {\n        key: 'getTranslation',\n        value: function getTranslation(transform) {\n            // Create a dummy g for calculation purposes only. This will never\n            // be appended to the DOM and will be discarded once this function \n            // returns.\n            var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n            // Set the transform attribute to the provided string value.\n            g.setAttributeNS(null, \"transform\", transform);\n\n            // consolidate the SVGTransformList containing all transformations\n            // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n            // its SVGMatrix. \n            var matrix = g.transform.baseVal.consolidate().matrix;\n\n            // As per definition values e and f are the ones for the translation.\n            return [matrix.e, matrix.f];\n        }\n    }]);\n\n    return Utils;\n}();\n\nUtils.SQRT_2 = 1.41421356237;\n\nUtils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n};\n\nUtils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n};\n\nUtils.availableHeight = function (height, container, margin) {\n    return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\nUtils.availableWidth = function (width, container, margin) {\n    return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n},{}]},{},[27])(27)\n});\n\n","// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-brush/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-collection/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  exports.nest = nest;\n  exports.set = set;\n  exports.map = map;\n  exports.keys = keys;\n  exports.values = values;\n  exports.entries = entries;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-color/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, rgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function hsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, hsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function hcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, hcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-drag/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, function (exports,d3Dispatch,d3Selection) { 'use strict';\n\n  function nopropagation() {\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    d3Selection.event.preventDefault();\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function nodrag(view) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function yesdrag(view, noclick) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !d3Selection.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n      if (!gesture) return;\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      nodrag(d3Selection.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      yesdrag(d3Selection.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = d3Selection.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  exports.drag = drag;\n  exports.dragDisable = nodrag;\n  exports.dragEnable = yesdrag;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-ease/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function cubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = cubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = cubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-interpolate/ Version 1.1.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Color) { 'use strict';\n\n  function basis(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$1(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n  }\n\n  var rgb$1 = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = d3Color.rgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$1);\n  var rgbBasisClosed = rgbSpline(basisClosed);\n\n  function array(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function number(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = value(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function string(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: number(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function value(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant(b)\n        : (t === \"number\" ? number\n        : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n        : b instanceof d3Color.color ? rgb$1\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array\n        : isNaN(b) ? object\n        : number)(a, b);\n  }\n\n  function round(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$2 = hsl$1(hue);\n  var hslLong = hsl$1(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$2 = hcl$1(hue);\n  var hclLong = hcl$1(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix(start, end) {\n        var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix.gamma = cubehelixGamma;\n\n      return cubehelix;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var cubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  exports.interpolate = value;\n  exports.interpolateArray = array;\n  exports.interpolateBasis = basis$1;\n  exports.interpolateBasisClosed = basisClosed;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = number;\n  exports.interpolateObject = object;\n  exports.interpolateRound = round;\n  exports.interpolateString = string;\n  exports.interpolateTransformCss = interpolateTransformCss;\n  exports.interpolateTransformSvg = interpolateTransformSvg;\n  exports.interpolateZoom = zoom;\n  exports.interpolateRgb = rgb$1;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$2;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$2;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = cubehelixLong;\n  exports.quantize = quantize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-path/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau + tau;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-shape/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$ = x,\n      y$$ = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant(+_), line) : x$$;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant(+_), line) : y$$;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction radialLine$1() {\n  return radialLine(line().curve(curveRadialLinear));\n}\n\nfunction radialArea() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice = Array.prototype.slice;\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","// https://d3js.org/d3-time-format/ Version 2.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Time) { 'use strict';\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale;\n  defaultLocale({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.timeFormat = locale.format;\n    exports.timeParse = locale.parse;\n    exports.utcFormat = locale.utcFormat;\n    exports.utcParse = locale.utcParse;\n    return locale;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  exports.timeFormatDefaultLocale = defaultLocale;\n  exports.timeFormatLocale = formatLocale;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-time/ Version 1.0.4. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-timer/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","// https://d3js.org/d3-transition/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state === STARTED;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement)\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.16.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://github.com/es-shims.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 500,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        defineProperty = Object.defineProperty,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create'),\n        nativeDefineProperty = getNative(Object, 'defineProperty');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = prototype;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      // Safari 9 makes `arguments.length` enumerable in strict mode.\n      var result = (isArray(value) || isArguments(value))\n        ? baseTimes(value.length, String)\n        : [];\n\n      var length = result.length,\n          skipIndexes = !!length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), n);\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = baseKeysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          baseAssignValue(result, key, value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      return shuffleSelf(values(collection), n);\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !nativeDefineProperty ? identity : function(func, string) {\n      return nativeDefineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : baseClamp(size, 0, length);\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return value != null && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' ||\n            typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !nativeKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8-9 which returns 'object' for typed array and other constructors.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || objectToString.call(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(props, toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(props, toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import * as d3 from './d3'\r\n\r\nimport {Utils} from './utils'\r\nimport * as model from './model/index'\r\nimport {Exporter} from './exporter'\r\nimport {TreeDesigner, TreeDesignerConfig} from './tree-designer'\r\nimport {DataModel} from './data-model'\r\nimport {Templates} from './templates'\r\n\r\nexport class AppConfig {\r\n    width = undefined;\r\n    height = undefined;\r\n    constructor(custom) {\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class App {\r\n    config;\r\n    container;\r\n    dataModel; //Data model manager\r\n    treeDesigner; \r\n\r\n    constructor(containerId, config){\r\n        this.setConfig(config);\r\n        this.initContainer(containerId);\r\n        this.initDataModel();\r\n        this.initTreeDesigner();\r\n        this.initExportToPngButton();\r\n        this.initExportSvgButton();\r\n    }\r\n\r\n    setConfig(config) {\r\n        if (!config) {\r\n            this.config = new AppConfig();\r\n        } else {\r\n            this.config = config;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    initContainer(containerId) {\r\n        this.container = d3.select('#'+containerId);\r\n        this.container.html(Templates.main);\r\n    }\r\n\r\n    initDataModel() {\r\n        this.dataModel = new DataModel();\r\n    }\r\n\r\n    initTreeDesigner(){\r\n        this.treeDesigner = new TreeDesigner(this.container.select('#tree-designer-container'), this.dataModel);\r\n    }\r\n    \r\n\r\n    initExportToPngButton() {\r\n        var svg = this.treeDesigner.svg;\r\n        d3.select('#saveButton').on('click', function(){\r\n            var svgString = Exporter.getSVGString(svg.node());\r\n            Exporter.svgString2Image(svgString, 2*800, 2*800, 'png', save ); // passes Blob and filesize String to the callback\r\n\r\n            function save(dataBlob,filesize){\r\n                Exporter.saveAs(dataBlob,'export.png'); \r\n            }\r\n        });\r\n    }\r\n\r\n    initExportSvgButton() {\r\n        var svg = this.treeDesigner.svg;\r\n        d3.select('#saveButtonSvg').on('click', function(){\r\n            var svgString = Exporter.getSVGString(svg.node());\r\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\r\n            Exporter.saveAs(blob,'export.svg');\r\n        });\r\n    }\r\n}\r\n","import * as d3 from './d3'\r\n\r\n/*based on:\r\n* github.com/patorjk/d3-context-menu */\r\n\r\nexport class ContextMenu{\r\n    openCallback;\r\n    closeCallback;\r\n\r\n    constructor(menu, opts) {\r\n        var self = this;\r\n\r\n        if (typeof opts === 'function') {\r\n            self.openCallback = opts;\r\n        } else {\r\n            opts = opts || {};\r\n            self.openCallback = opts.onOpen;\r\n            self.closeCallback = opts.onClose;\r\n        }\r\n\r\n        // create the div element that will hold the context menu\r\n        d3.selectAll('.d3-context-menu').data([1])\r\n            .enter()\r\n            .append('div')\r\n            .attr('class', 'd3-context-menu');\r\n\r\n        // close menu\r\n        d3.select('body').on('click.d3-context-menu', function() {\r\n            d3.select('.d3-context-menu').style('display', 'none');\r\n            if (self.closeCallback) {\r\n                self.closeCallback();\r\n            }\r\n        });\r\n\r\n        // this gets executed when a contextmenu event occurs\r\n        return function(data, index) {\r\n            var elm = this;\r\n\r\n            d3.selectAll('.d3-context-menu').html('');\r\n            var list = d3.selectAll('.d3-context-menu')\r\n                .on('contextmenu', function(d) {\r\n                    d3.select('.d3-context-menu').style('display', 'none');\r\n                    d3.event.preventDefault();\r\n                    d3.event.stopPropagation();\r\n                })\r\n                .append('ul');\r\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\r\n                .append('li')\r\n                .attr('class', function(d) {\r\n                    var ret = '';\r\n                    if (d.divider) {\r\n                        ret += ' is-divider';\r\n                    }\r\n                    if (d.disabled) {\r\n                        ret += ' is-disabled';\r\n                    }\r\n                    if (!d.action) {\r\n                        ret += ' is-header';\r\n                    }\r\n                    return ret;\r\n                })\r\n                .html(function(d) {\r\n                    if (d.divider) {\r\n                        return '<hr>';\r\n                    }\r\n                    if (!d.title) {\r\n                        console.error('No title attribute set. Check the spelling of your options.');\r\n                    }\r\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\r\n                })\r\n                .on('click', function(d, i) {\r\n                    if (d.disabled) return; // do nothing if disabled\r\n                    if (!d.action) return; // headers have no \"action\"\r\n                    d.action(elm, data, index);\r\n                    d3.select('.d3-context-menu').style('display', 'none');\r\n\r\n                    if (self.closeCallback) {\r\n                        self.closeCallback();\r\n                    }\r\n                });\r\n\r\n            // the openCallback allows an action to fire before the menu is displayed\r\n            // an example usage would be closing a tooltip\r\n            if (self.openCallback) {\r\n                if (self.openCallback(data, index) === false) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // display context menu\r\n            d3.select('.d3-context-menu')\r\n                .style('left', (d3.event.pageX - 2) + 'px')\r\n                .style('top', (d3.event.pageY - 2) + 'px')\r\n                .style('display', 'block');\r\n\r\n            d3.event.preventDefault();\r\n            d3.event.stopPropagation();\r\n        };\r\n    };\r\n\r\n    static hide(){\r\n        d3.select('.d3-context-menu').style('display', 'none');\r\n    }\r\n    \r\n}","import {Utils} from './utils'\r\nimport * as d3 from './d3'\r\n\r\nexport class D3Extensions{\r\n\r\n    static extend(){\r\n\r\n        d3.selection.prototype.enter.prototype.insertSelector =\r\n            d3.selection.prototype.insertSelector = function(selector, before) {\r\n                return Utils.insertSelector(this, selector, before);\r\n            };\r\n\r\n\r\n        d3.selection.prototype.enter.prototype.appendSelector =\r\n            d3.selection.prototype.appendSelector = function(selector) {\r\n                return Utils.appendSelector(this, selector);\r\n            };\r\n\r\n        d3.selection.prototype.enter.prototype.selectOrAppend =\r\n            d3.selection.prototype.selectOrAppend = function(selector) {\r\n                return Utils.selectOrAppend(this, selector);\r\n            };\r\n\r\n        d3.selection.prototype.enter.prototype.selectOrInsert =\r\n            d3.selection.prototype.selectOrInsert = function(selector, before) {\r\n                return Utils.selectOrInsert(this, selector, before);\r\n            };\r\n\r\n\r\n\r\n    }\r\n}\r\n","export * from 'd3-dispatch';\r\nexport * from 'd3-scale';\r\nexport * from 'd3-selection';\r\nexport * from 'd3-shape'\r\nexport * from 'd3-drag';\r\nexport * from 'd3-brush'\r\n\r\n","import {Utils} from './utils'\r\nimport * as model from './model/index'\r\nimport *  as _ from 'lodash'\r\n\r\n/*\r\n* Data model manager\r\n* */\r\nexport class DataModel {\r\n\r\n    nodes = [];\r\n    edges = [];\r\n\r\n    constructor() {\r\n        var n1 = this.addNode(new model.DecisionNode(new model.Point(100,150)));\r\n        var n2 = this.addNode(new model.ChanceNode(new model.Point(250,100)), n1);\r\n        var n3 = this.addNode(new model.TerminalNode(new model.Point(250,200)), n1);\r\n        var n4 = this.addNode(new model.DecisionNode(new model.Point(400,50)), n2);\r\n        var n5 = this.addNode(new model.TerminalNode(new model.Point(400,150)), n2);\r\n    }\r\n\r\n    addNode(node, parent){\r\n        var self = this;\r\n        self.nodes.push(node);\r\n        if(parent){\r\n            self._addChild(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    _addChild(parent, child) {\r\n        var self = this;\r\n        var edge = new model.Edge(parent, child);\r\n        self.edges.push(edge);\r\n        parent.childEdges.push(edge);\r\n        child.parent = parent;\r\n    }\r\n\r\n    /*removes given node and its subtree*/\r\n    removeNode(node) {\r\n        var self = this;\r\n        self._removeNode(node);\r\n        var parent = node.parent;\r\n        if(parent){\r\n            var parentEdge = parent.childEdges.find((e,i)=> e.childNode===node);\r\n            self._removeEdge(parentEdge);\r\n        }\r\n\r\n        node.parent=null;\r\n        node.childEdges.forEach(e=>self.removeNode(e.childNode));\r\n    }\r\n\r\n    /*removes given nodes and their subtrees*/\r\n    removeNodes(nodes){\r\n        var roots = this.findSubtreeRoots(nodes);\r\n        roots.forEach(this.removeNode, this);\r\n    }\r\n\r\n    findSubtreeRoots(nodes) {\r\n        return nodes.filter(n=>!n.parent || nodes.indexOf(n.parent)===-1);\r\n    }\r\n\r\n    /*creates detached clone of given node*/\r\n    cloneSubtree(nodeToCopy){\r\n        var self = this;\r\n        var clone = this.cloneNode(nodeToCopy);\r\n\r\n        nodeToCopy.childEdges.forEach(e=>{\r\n            var childClone = self.cloneSubtree(e.childNode);\r\n            childClone.parent = clone;\r\n            var edge = new model.Edge(clone, childClone);\r\n            clone.childEdges.push(edge);\r\n        });\r\n        return clone;\r\n    }\r\n\r\n    /*attaches detached subtree to given parent*/\r\n    attachSubtree(nodeToAttach, parent){\r\n        var self = this;\r\n        self.addNode(nodeToAttach, parent);\r\n\r\n        var childEdges = self.getAllChildEdges(nodeToAttach);\r\n        childEdges.forEach(e=>{\r\n            self.edges.push(e);\r\n            self.nodes.push(e.childNode);\r\n        });\r\n\r\n        return nodeToAttach;\r\n    }\r\n\r\n    cloneNodes(nodes){\r\n        var roots = []\r\n        //TODO\r\n    }\r\n\r\n    /*shallow clone without parent and children*/\r\n    cloneNode(node){\r\n        var clone = _.clone(node)\r\n        clone.$id = Utils.guid();\r\n        clone.location = _.clone(node.location);\r\n        clone.computed = _.clone(node.computed);\r\n        clone.parent=null;\r\n        clone.childEdges = [];\r\n        return clone;\r\n    }\r\n\r\n    _removeNode(node){// simply removes node from node list\r\n        var index  = this.nodes.indexOf(node);\r\n        if (index > -1) {\r\n            this.nodes.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    _removeEdge(edge){ //removes edge from edge list without removing connected nodes\r\n        var index  = this.edges.indexOf(edge);\r\n        if (index > -1) {\r\n            this.edges.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    _removeNodes(nodesToRemove) {\r\n        this.nodes = this.nodes.filter(n=>nodesToRemove.indexOf(n)===-1);\r\n    }\r\n    _removeEdges(edgesToRemove) {\r\n        this.edges = this.edges.filter(e=>edgesToRemove.indexOf(e)===-1);\r\n    }\r\n\r\n    getAllChildEdges(node) {\r\n        var self = this;\r\n        var result = [];\r\n\r\n        node.childEdges.forEach(e=>{\r\n            result.push(e);\r\n            if(e.childNode){\r\n                result.push(...self.getAllChildEdges(e.childNode));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n}","import {dataURLtoBlob} from 'blueimp-canvas-to-blob'\r\nimport {saveAs} from 'file-saver'\r\n\r\nexport class Exporter {\r\n    static saveAs = saveAs;\r\n    static dataURLtoBlob = dataURLtoBlob;\r\n// Below are the function that handle actual exporting:\r\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\r\n    static getSVGString(svgNode) {\r\n        svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\r\n        var cssStyleText = getCSSStyles(svgNode);\r\n        appendCSS(cssStyleText, svgNode)\r\n\r\n        var serializer = new XMLSerializer();\r\n        var svgString = serializer.serializeToString(svgNode);\r\n        svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\r\n        svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\r\n\r\n        return svgString;\r\n\r\n        function getCSSStyles(parentElement) {\r\n            var selectorTextArr = getSelectors(parentElement, [], []);\r\n\r\n\r\n            // Extract CSS Rules\r\n            var extractedCSSText = \"\";\r\n            for (var i = 0; i < document.styleSheets.length; i++) {\r\n                var cssRules = document.styleSheets[i].cssRules;\r\n                for (var r = 0; r < cssRules.length; r++) {\r\n                    if (contains(cssRules[r].selectorText, selectorTextArr))\r\n                        extractedCSSText += cssRules[r].cssText;\r\n                }\r\n            }\r\n            console.log(selectorTextArr);\r\n            return extractedCSSText;\r\n\r\n            function contains(str, arr) {\r\n                return arr.indexOf(str) !== -1;\r\n            }\r\n\r\n            function getSelectors(element, parentSelectors, selectorTextArr){\r\n                // Add Parent element Id and Classes to the list\r\n\r\n\r\n                if (!contains(element.tagName, selectorTextArr))\r\n                    selectorTextArr.push(element.tagName);\r\n\r\n                if (element.id && !contains('#' + element.id, selectorTextArr))\r\n                    selectorTextArr.push('#' + element.id);\r\n                if (element.id && !contains(element.tagName+'#' + element.id, selectorTextArr))\r\n                    selectorTextArr.push(element.tagName+'#' + element.id);\r\n\r\n\r\n                var allClasses ='';\r\n                for (var c = 0; c < element.classList.length; c++){\r\n                    var className = element.classList[c];\r\n                    allClasses+='.'+className;\r\n                    if (!contains('.' + className, selectorTextArr))\r\n                        selectorTextArr.push('.' + className);\r\n                    if (!contains(element.tagName+'.' + className, selectorTextArr))\r\n                        selectorTextArr.push(element.tagName+'.' + className);\r\n                }\r\n                if(allClasses){\r\n                    if (!contains(allClasses, selectorTextArr))\r\n                        selectorTextArr.push(allClasses);\r\n                    if (!contains(element.tagName+allClasses, selectorTextArr))\r\n                        selectorTextArr.push(element.tagName+allClasses);\r\n                }\r\n\r\n\r\n                // Add Children element Ids and Classes to the list\r\n                var nodes = element.childNodes;\r\n\r\n                for (var i = 0; i < nodes.length; i++) {\r\n                    var node = nodes[i];\r\n                    getSelectors(node, [], selectorTextArr)\r\n                }\r\n\r\n                return selectorTextArr;\r\n            }\r\n        }\r\n\r\n        function appendCSS(cssText, element) {\r\n            var styleElement = document.createElement(\"style\");\r\n            styleElement.setAttribute(\"type\", \"text/css\");\r\n            styleElement.innerHTML = cssText;\r\n            var refNode = element.hasChildNodes() ? element.children[0] : null;\r\n            element.insertBefore(styleElement, refNode);\r\n        }\r\n    }\r\n\r\n\r\n    static svgString2Image(svgString, width, height, format, callback) {\r\n        var format = format ? format : 'png';\r\n\r\n        var imgsrc = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString))); // Convert SVG string to dataurl\r\n\r\n        var canvas = document.createElement(\"canvas\");\r\n        var context = canvas.getContext(\"2d\");\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        var image = new Image;\r\n        image.onload = function () {\r\n            context.clearRect(0, 0, width, height);\r\n            context.drawImage(image, 0, 0, width, height);\r\n\r\n            canvas.toBlob(function (blob) {\r\n                var filesize = Math.round(blob.length / 1024) + ' KB';\r\n                if (callback) callback(blob, filesize);\r\n            });\r\n\r\n\r\n        };\r\n\r\n        image.src = imgsrc;\r\n    }\r\n\r\n}","import {D3Extensions} from './d3-extensions'\r\nD3Extensions.extend();\r\n\r\nexport {App} from './app'\r\n\r\n\r\n\r\n\r\n\r\n","import {Utils} from '../utils'\r\n\r\nexport class Edge {\r\n    parentNode;\r\n    childNode;\r\n\r\n    name='';\r\n    probability=0;\r\n    payoff=0;\r\n\r\n    $id = Utils.guid();\r\n\r\n    constructor(parentNode, childNode){\r\n        this.parentNode = parentNode;\r\n        this.childNode = childNode;\r\n    }\r\n}","export * from './node/node'\r\nexport * from './node/decision-node'\r\nexport * from './node/chance-node'\r\nexport * from './node/terminal-node'\r\nexport * from './edge'\r\nexport * from './point'","import {Node} from './node'\r\nimport * as d3 from '../../d3'\r\n\r\nexport class ChanceNode extends Node{\r\n\r\n    constructor(location){\r\n        super('chance', d3.symbolCircle, location);\r\n    }\r\n}","import {Node} from './node'\r\nimport * as d3 from '../../d3'\r\n\r\nexport class DecisionNode extends Node{\r\n\r\n    constructor(location){\r\n        super('decision', d3.symbolSquare, location);\r\n    }\r\n}","import {Utils} from '../../utils'\r\nimport {Point} from '../point'\r\n\r\nexport class Node {\r\n    \r\n    type;\r\n    childEdges=[];\r\n    name='';\r\n\r\n    computed={\r\n        payoff: null\r\n    };\r\n    location; //Point\r\n\r\n    $id = Utils.guid();\r\n    $symbol;\r\n    \r\n    constructor(type, symbol, location){\r\n        this.location=location;\r\n        if(!location){\r\n            this.location = new Point(0,0);\r\n        }\r\n        this.type=type;\r\n        this.$symbol=symbol;\r\n    }\r\n\r\n    moveTo(x,y, withChildren){ //move to location\r\n        if(withChildren){\r\n            var dx = x-this.location.x;\r\n            var dy = y-this.location.y;\r\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\r\n        }\r\n\r\n        this.location.x=x;\r\n        this.location.y=y;\r\n    }\r\n\r\n    move(dx, dy, withChildren){ //move by vector\r\n        if(withChildren){\r\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\r\n        }\r\n\r\n        this.location.x+=dx;\r\n        this.location.y+=dy;\r\n    }\r\n}","import {Node} from './node'\r\nimport * as d3 from '../../d3'\r\n\r\nexport class TerminalNode extends Node{\r\n\r\n    constructor(location){\r\n        super('terminal', d3.symbolTriangle, location);\r\n    }\r\n}","export class Point {\r\n    x;\r\n    y;\r\n    constructor(x,y){\r\n        this.x=x;\r\n        this.y=y;\r\n    }\r\n    \r\n    move(x,y){\r\n        this.x+=x;\r\n        this.y+=y;\r\n    }\r\n}","\r\n//TODO maybe use some templating engine instead\r\nexport class Templates{\r\n\r\n    static toolbar =\r\n        '<div id=\"toolbar\">' +\r\n            '<button id=\"saveButton\">Export to PNG</button>'+\r\n            '<button id=\"saveButtonSvg\">Export to SVG</button>'+\r\n        '</div>';\r\n\r\n    static main =\r\n        '<div id=\"silver-decisions\">'+\r\n            Templates.toolbar+\r\n            '<div id=\"tree-designer-container\"></div>'+\r\n        '</div>';\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import * as d3 from './d3'\r\n\r\nimport {Utils} from './utils'\r\nimport * as model from './model/index'\r\nimport {ContextMenu} from './context-menu'\r\n\r\n\r\n\r\nexport class TreeDesignerConfig {\r\n    cssClassPrefix = \"sd-\";\r\n    width = undefined;\r\n    height = undefined;\r\n    margin = {\r\n        left: 25,\r\n        right: 25,\r\n        top: 25,\r\n        bottom: 25\r\n    };\r\n    symbolSize= 40;\r\n    constructor(custom) {\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TreeDesigner {\r\n\r\n    config;\r\n    container;\r\n    data; //data model manager\r\n    svg;\r\n\r\n    constructor(container, dataModel, config){\r\n        this.setConfig(config);\r\n        this.data = dataModel;\r\n        this.initContainer(container);\r\n        this.init();\r\n    }\r\n\r\n    setConfig(config) {\r\n        if (!config) {\r\n            this.config = new TreeDesignerConfig();\r\n        } else {\r\n            this.config = config;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    init(){\r\n        this.initSvg();\r\n        this.initMainContextMenu();\r\n        this.initBrush();\r\n        this.initEdgeMarker();\r\n        this.redrawEdges();\r\n        this.initNodeContextMenu();\r\n        this.redrawNodes();\r\n    }\r\n    initContainer(container) {\r\n        this.container = container;\r\n    }\r\n\r\n    initSvg() {\r\n        this.svg = this.container.selectOrAppend('svg.tree-designer');\r\n        this.svg.attr('width', 800).attr('height', 800);\r\n\r\n        this.mainGroup = this.svg.selectOrAppend('g.main-group');\r\n    }\r\n\r\n    redrawNodes() {\r\n        var symbolSize = this.config.symbolSize;\r\n        var symbol = d3.symbol().type(d=> d.$symbol)\r\n            .size(d=>64);\r\n\r\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\r\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes, (d,i)=> d.$id);\r\n        nodes.exit().remove();\r\n        var nodesEnter = nodes.enter().append('g')\r\n            .attr('id', d=>'node-'+d.$id)\r\n            .attr('class', d=>d.type+'-node node');\r\n        nodesEnter.append('path');\r\n        nodesEnter.append('text');\r\n\r\n        var nodesMerge = nodesEnter.merge(nodes);\r\n\r\n\r\n        nodesMerge.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ') rotate(-90)');\r\n        nodesMerge.select('path')\r\n            .attr('d', symbol)\r\n            .each(function (d) {\r\n                var path = d3.select(this);\r\n                var box = path.node().getBBox();\r\n                var error = Math.min(symbolSize / box.width, symbolSize / box.height);\r\n                path.attr(\"d\", symbol.size(error * error * 64));\r\n            });\r\n\r\n\r\n\r\n        var self = this;\r\n\r\n        var drag = d3.drag()\r\n            .subject(function(d) {\r\n                if(d==null){\r\n                    return  {x: event.x, y: event.y};\r\n                }\r\n                var t = d3.select(this);\r\n                return {x: t.attr(\"x\") + Utils.getTranslation(t.attr(\"transform\"))[0],\r\n                    y: t.attr(\"y\") + Utils.getTranslation(t.attr(\"transform\"))[1]};\r\n            })\r\n            .on(\"start\", function(d){\r\n                self.dragStarted.call(this,d, self)\r\n            })\r\n            .on(\"drag\", function (d) {\r\n                self.drag.call(this, d, self);\r\n            })\r\n            .on(\"end\", this.dragEnded);\r\n\r\n        nodesMerge.call(drag);\r\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\r\n        nodesMerge.on('dblclick', d=>self.selectSubTree(d, true))\r\n    }\r\n\r\n    dragStarted(d,self) {\r\n        var node = d3.select(this);\r\n        if(!node.classed(\"selected\")){\r\n            self.clearSelection();\r\n        }\r\n\r\n        node.classed(\"selected dragging\", true);\r\n    }\r\n\r\n    drag(d, self){\r\n        var dx=  d3.event.x-d.location.x;\r\n        var dy = d3.event.y-d.location.y;\r\n\r\n        self.mainGroup.selectAll('.node.selected, .node.dragging').each(function(d){\r\n            d.location.x += dx;\r\n            d.location.y += dy;\r\n            d3.select(this).raise().attr('transform', 'translate('+d.location.x+' '+d.location.y+')  rotate(-90)');\r\n        });\r\n        self.redrawEdges();\r\n    }\r\n    dragEnded(){\r\n        var node = d3.select(this).classed(\"dragging\", false);\r\n    }\r\n\r\n    edgeLineD(edge){\r\n        var line = d3.line()\r\n            .x(d=> d[0])\r\n            .y(d=> d[1])\r\n            // .curve(d3.curveCatmullRom.alpha(0.5));\r\n\r\n\r\n        var parentNode = edge.parentNode;\r\n        var childNode = edge.childNode;\r\n\r\n        var dX = childNode.location.x - parentNode.location.x;\r\n        var dY = childNode.location.y - parentNode.location.y;\r\n\r\n        var sign = dX>=0 ? 1 : -1;\r\n\r\n        var slantStartXOffset = Math.min(dX/2, 30);\r\n        var slantWidth = Math.min(20, Math.max(dX/2 - slantStartXOffset, 0));\r\n\r\n\r\n        var point2 = [parentNode.location.x+slantStartXOffset, parentNode.location.y];\r\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\r\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.symbolSize/2+8, dX/2 - slantStartXOffset)))), childNode.location.y];\r\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\r\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\r\n\r\n        return line([[parentNode.location.x, parentNode.location.y], point2, point3, point4]);\r\n    }\r\n\r\n\r\n    redrawEdges() {\r\n\r\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\r\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges, (d,i)=> d.$id);\r\n        edges.exit().remove();\r\n        var edgesEnter = edges.enter().append('g').attr('class', 'edge');\r\n\r\n        edgesEnter.append('path');\r\n        var edgesMerge = edgesEnter.merge(edges);\r\n\r\n        edgesMerge.select('path')\r\n            .attr('d', d=> this.edgeLineD(d))\r\n            .attr(\"stroke\", \"black\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"marker-end\", \"url(#arrow)\")\r\n            .attr(\"shape-rendering\", \"optimizeQuality\")\r\n    }\r\n\r\n    initEdgeMarker() {\r\n        console.log(this.svg);\r\n        var defs = this.svg.append(\"svg:defs\");\r\n\r\n        defs.append(\"marker\")\r\n            .attr(\"id\",\"arrow\")\r\n            .attr(\"viewBox\",\"0 -5 10 10\")\r\n            .attr(\"refX\",5)\r\n            .attr(\"refY\",0)\r\n            .attr(\"markerWidth\",4)\r\n            .attr(\"markerHeight\",4)\r\n            .attr(\"orient\",\"auto\")\r\n            .append(\"path\")\r\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\r\n            .attr(\"class\",\"arrowHead\");\r\n\r\n    }\r\n\r\n    initBrush() {\r\n        var self = this;\r\n        var brushContainer = this.mainGroup.append(\"g\")\r\n            .attr(\"class\", \"brush\");\r\n\r\n        var brush = d3.brush()\r\n            .on(\"start\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"end\", brushend);\r\n\r\n        // brush.extent([[0, 0], [self.plot.size, self.plot.size]]);\r\n        brushContainer.call(brush);\r\n        \r\n        function brushstart() {\r\n            if (!d3.event.selection) return;\r\n            self.clearSelection();\r\n            ContextMenu.hide();\r\n        }\r\n\r\n        // Highlight the selected nodes.\r\n        function brushmove() {\r\n            var s = d3.event.selection;\r\n            if(!s)return;\r\n\r\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\r\n\r\n                return s[0][0] <= d.location.x && d.location.x <= s[1][0]\r\n                    && s[0][1] <= d.location.y && d.location.y <= s[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend() {\r\n            if (!d3.event.selection) return;\r\n            brush.move(brushContainer, null);\r\n\r\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\r\n        }\r\n    }\r\n\r\n    initNodeContextMenu() {\r\n        var self = this;\r\n        var menu = function(d){\r\n\r\n            var copyMenuItem = {\r\n                title: 'Copy',\r\n                action: function(elm, d, i) {\r\n                    self.copyNode(d);\r\n                }\r\n            };\r\n            var pasteMenuItem = {\r\n                title: 'Paste',\r\n                action: function(elm, d, i) {\r\n                    self.pasteToNode(d);\r\n                },\r\n                disabled: !self.copiedNode\r\n\r\n            };\r\n            var deleteMenuItem = {\r\n                title: 'Delete',\r\n                action: function(elm, d, i) {\r\n                    self.selectNode(d);\r\n                    self.removeSelectedNodes();\r\n\r\n                }\r\n            };\r\n            var menu = [];\r\n            if(d.type=='terminal'){\r\n                return [copyMenuItem,deleteMenuItem];\r\n            }\r\n            menu.push({\r\n                title: 'Add Decision Node',\r\n                action: function(elm, d, i) {\r\n                    var newNode = new model.DecisionNode(new model.Point(d.location.x+120, d.location.y));\r\n                    self.addNode(newNode,d)\r\n                }\r\n            });\r\n            menu.push({\r\n                title: 'Add Chance Node',\r\n                action: function(elm, d, i) {\r\n                    var newNode = new model.ChanceNode(new model.Point(d.location.x+120, d.location.y));\r\n                    self.addNode(newNode,d)\r\n                }\r\n            });\r\n            menu.push({\r\n                title: 'Add Terminal Node',\r\n                action: function(elm, d, i) {\r\n                    var newNode = new model.TerminalNode(new model.Point(d.location.x+120, d.location.y));\r\n                    self.addNode(newNode,d)\r\n                }\r\n            });\r\n            menu.push({divider:true});\r\n            menu.push(copyMenuItem);\r\n            menu.push(pasteMenuItem);\r\n            menu.push(deleteMenuItem);\r\n            menu.push({divider:true});\r\n            menu.push({\r\n                title: 'Select subtree',\r\n                action: function(elm, d, i) {\r\n                    self.selectSubTree(d, true);\r\n                }\r\n            });\r\n\r\n            return menu;\r\n        };\r\n\r\n\r\n        this.nodeContextMenu = new ContextMenu(menu);\r\n    }\r\n\r\n    initMainContextMenu() {\r\n        var self = this;\r\n        var menu = function(d){\r\n\r\n            var menu = [];\r\n            menu.push({\r\n                title: 'Add Decision Node',\r\n                action: function(elm, d, i) {\r\n                    var newNode = new model.DecisionNode(new model.Point(d3.event.x, d3.event.y));\r\n                    self.addNode(newNode)\r\n                }\r\n            });\r\n            menu.push({\r\n                title: 'Add Chance Node',\r\n                action: function(elm, d, i) {\r\n\r\n                    var newNode = new model.ChanceNode(new model.Point(d3.event.x, d3.event.y));\r\n                    self.addNode(newNode)\r\n                }\r\n            });\r\n\r\n            menu.push({divider:true});\r\n\r\n            menu.push({\r\n                title: 'Select all nodes',\r\n                action: function(elm, d, i) {\r\n                    self.selectAllNodes();\r\n                }\r\n            });\r\n            return menu;\r\n        };\r\n\r\n        this.mainContextMenu = new ContextMenu(menu);\r\n        self.mainGroup.on('contextmenu',this.mainContextMenu);\r\n    }\r\n\r\n    addNode(node, parent){\r\n        this.data.addNode(node, parent);\r\n        this.redrawEdges();\r\n        this.redrawNodes();\r\n        return node;\r\n    }\r\n    \r\n    removeNode(node) {\r\n        this.data.removeNode(node);\r\n        this.redrawEdges();\r\n        this.redrawNodes();\r\n    }\r\n\r\n    removeSelectedNodes() {\r\n        var selectedNodes = this.getSelectedNodes();\r\n        this.data.removeNodes(selectedNodes);\r\n        this.clearSelection();\r\n        this.redrawEdges();\r\n        this.redrawNodes();\r\n    }\r\n\r\n    copyNode(d) {\r\n        this.copiedNode = this.data.cloneSubtree(d);\r\n    }\r\n\r\n    copySelectedNodes() {\r\n        var self;\r\n        var selectedNodes = this.getSelectedNodes();\r\n        //TODO\r\n\r\n    }\r\n\r\n    pasteToNode(node) {\r\n        var self = this;\r\n        var toAttach = this.copiedNode;\r\n        self.copyNode(toAttach);\r\n        var attached = this.data.attachSubtree(this.copiedNode, node);\r\n\r\n        attached.moveTo(node.location.x+120, node.location.y, true);\r\n        this.redrawEdges();\r\n        this.redrawNodes();\r\n\r\n        self.selectSubTree(attached, true);\r\n    }\r\n\r\n    moveNodeTo(x,y){\r\n\r\n    }\r\n\r\n    getSelectedNodes() {\r\n        return this.mainGroup.selectAll(\".node.selected\").data();\r\n    }\r\n\r\n    clearSelection(){\r\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\r\n    }\r\n\r\n    selectNode(node, clearSelectionBeforeSelect){\r\n        if(clearSelectionBeforeSelect){\r\n            this.clearSelection();\r\n        }\r\n        this.mainGroup.select('#node-'+node.$id).classed('selected', true);\r\n    }\r\n\r\n    selectSubTree(node, clearSelectionBeforeSelect) {\r\n        if(clearSelectionBeforeSelect){\r\n            this.clearSelection();\r\n        }\r\n        this.selectNode(node);\r\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode));\r\n    }\r\n\r\n    selectAllNodes() {\r\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\r\n    }\r\n}\r\n","export class Utils {\r\n    static SQRT_2 = 1.41421356237;\r\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\r\n    static deepExtend(out) {\r\n\r\n        var utils = this;\r\n        var emptyOut = {};\r\n\r\n\r\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\r\n            out = [];\r\n        }\r\n        out = out || {};\r\n\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            if (!source)\r\n                continue;\r\n\r\n            for (var key in source) {\r\n                if (!source.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                var isArray = Array.isArray(out[key]);\r\n                var isObject = utils.isObject(out[key]);\r\n                var srcObj = utils.isObject(source[key]);\r\n\r\n                if (isObject && !isArray && srcObj) {\r\n                    utils.deepExtend(out[key], source[key]);\r\n                } else {\r\n                    out[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    static mergeDeep(target, source) {\r\n        let output = Object.assign({}, target);\r\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\r\n            Object.keys(source).forEach(key => {\r\n                if (Utils.isObjectNotArray(source[key])) {\r\n                    if (!(key in target))\r\n                        Object.assign(output, {[key]: source[key]});\r\n                    else\r\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(output, {[key]: source[key]});\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    static cross(a, b) {\r\n        var c = [], n = a.length, m = b.length, i, j;\r\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\r\n        return c;\r\n    };\r\n\r\n    static isObjectNotArray(item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n\r\n    static isArray(item) {\r\n        return Array.isArray(item);\r\n    };\r\n\r\n    static isObject(a) {\r\n        return a !== null && typeof a === 'object';\r\n    };\r\n\r\n    static isNumber(a) {\r\n        return !isNaN(a) && typeof a === 'number';\r\n    };\r\n\r\n    static isFunction(a) {\r\n        return typeof a === 'function';\r\n    };\r\n\r\n    static isDate(a){\r\n        return Object.prototype.toString.call(a) === '[object Date]'\r\n    }\r\n\r\n    static isString(a){\r\n        return typeof a === 'string' || a instanceof String\r\n    }\r\n\r\n    static insertOrAppendSelector(parent, selector, operation, before) {\r\n\r\n        var selectorParts = selector.split(/([\\.\\#])/);\r\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\r\n        \r\n        while (selectorParts.length > 1) {\r\n            var selectorModifier = selectorParts.shift();\r\n            var selectorItem = selectorParts.shift();\r\n            if (selectorModifier === \".\") {\r\n                element = element.classed(selectorItem, true);\r\n            } else if (selectorModifier === \"#\") {\r\n                element = element.attr('id', selectorItem);\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n\r\n    static insertSelector(parent, selector, before) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\r\n    }\r\n\r\n    static appendSelector(parent, selector) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\r\n    }\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            if (element) {\r\n                return parent.append(element);\r\n            }\r\n            return Utils.appendSelector(parent, selector);\r\n\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static selectOrInsert(parent, selector, before) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            return Utils.insertSelector(parent, selector, before);\r\n        }\r\n        return selection;\r\n    };\r\n    \r\n    static sanitizeHeight = function (height, container) {\r\n        return (height || parseInt(container.style('height'), 10) || 400);\r\n    };\r\n\r\n    static sanitizeWidth = function (width, container) {\r\n        return (width || parseInt(container.style('width'), 10) || 960);\r\n    };\r\n\r\n    static availableHeight = function (height, container, margin) {\r\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\r\n    };\r\n\r\n    static availableWidth = function (width, container, margin) {\r\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\r\n    };\r\n\r\n    static guid() {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        }\r\n\r\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n            s4() + '-' + s4() + s4() + s4();\r\n    }\r\n\r\n    //places textString in textObj, adds an ellipsis if text can't fit in width\r\n    static placeTextWithEllipsis(textD3Obj, textString, width){\r\n        var textObj = textD3Obj.node();\r\n        textObj.textContent=textString;\r\n\r\n        var margin = 0;\r\n        var ellipsisLength = 9;\r\n        //ellipsis is needed\r\n        if (textObj.getComputedTextLength()>width+margin){\r\n            for (var x=textString.length-3;x>0;x-=1){\r\n                if (textObj.getSubStringLength(0,x)+ellipsisLength<=width+margin){\r\n                    textObj.textContent=textString.substring(0,x)+\"...\";\r\n                    return true;\r\n                }\r\n            }\r\n            textObj.textContent=\"...\"; //can't place at all\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip){\r\n        var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\r\n        if(ellipsisPlaced && tooltip){\r\n            textD3Obj.on(\"mouseover\", function (d) {\r\n                tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                tooltip.html(textString)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            textD3Obj.on(\"mouseout\", function (d) {\r\n                tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    static getFontSize(element){\r\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\r\n    }\r\n\r\n    static capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    static getTranslation(transform) {\r\n    // Create a dummy g for calculation purposes only. This will never\r\n    // be appended to the DOM and will be discarded once this function \r\n    // returns.\r\n    var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n\r\n    // Set the transform attribute to the provided string value.\r\n    g.setAttributeNS(null, \"transform\", transform);\r\n\r\n    // consolidate the SVGTransformList containing all transformations\r\n    // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\r\n    // its SVGMatrix. \r\n    var matrix = g.transform.baseVal.consolidate().matrix;\r\n\r\n    // As per definition values e and f are the ones for the translation.\r\n    return [matrix.e, matrix.f];\r\n}\r\n}\r\n"],"sourceRoot":"/source/"}