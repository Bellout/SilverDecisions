{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d/auto-bind.js","node_modules/d/index.js","node_modules/es5-ext/array/#/clear.js","node_modules/es5-ext/array/#/e-index-of.js","node_modules/es5-ext/array/from/index.js","node_modules/es5-ext/array/from/is-implemented.js","node_modules/es5-ext/array/from/shim.js","node_modules/es5-ext/function/is-arguments.js","node_modules/es5-ext/function/is-function.js","node_modules/es5-ext/function/noop.js","node_modules/es5-ext/global.js","node_modules/es5-ext/math/sign/index.js","node_modules/es5-ext/math/sign/is-implemented.js","node_modules/es5-ext/math/sign/shim.js","node_modules/es5-ext/number/is-nan/index.js","node_modules/es5-ext/number/is-nan/is-implemented.js","node_modules/es5-ext/number/is-nan/shim.js","node_modules/es5-ext/number/to-integer.js","node_modules/es5-ext/number/to-pos-integer.js","node_modules/es5-ext/object/_iterate.js","node_modules/es5-ext/object/assign/index.js","node_modules/es5-ext/object/assign/is-implemented.js","node_modules/es5-ext/object/assign/shim.js","node_modules/es5-ext/object/copy.js","node_modules/es5-ext/object/create.js","node_modules/es5-ext/object/for-each.js","node_modules/es5-ext/object/is-callable.js","node_modules/es5-ext/object/is-object.js","node_modules/es5-ext/object/is-value.js","node_modules/es5-ext/object/keys/index.js","node_modules/es5-ext/object/keys/is-implemented.js","node_modules/es5-ext/object/keys/shim.js","node_modules/es5-ext/object/map.js","node_modules/es5-ext/object/normalize-options.js","node_modules/es5-ext/object/set-prototype-of/index.js","node_modules/es5-ext/object/set-prototype-of/is-implemented.js","node_modules/es5-ext/object/set-prototype-of/shim.js","node_modules/es5-ext/object/valid-callable.js","node_modules/es5-ext/object/valid-value.js","node_modules/es5-ext/string/#/contains/index.js","node_modules/es5-ext/string/#/contains/is-implemented.js","node_modules/es5-ext/string/#/contains/shim.js","node_modules/es5-ext/string/is-string.js","node_modules/es6-iterator/array.js","node_modules/es6-iterator/for-of.js","node_modules/es6-iterator/get.js","node_modules/es6-iterator/index.js","node_modules/es6-iterator/is-iterable.js","node_modules/es6-iterator/string.js","node_modules/es6-iterator/valid-iterable.js","node_modules/es6-set/implement.js","node_modules/es6-set/is-implemented.js","node_modules/es6-set/is-native-implemented.js","node_modules/es6-set/lib/iterator.js","node_modules/es6-set/polyfill.js","node_modules/es6-symbol/index.js","node_modules/es6-symbol/is-implemented.js","node_modules/es6-symbol/is-symbol.js","node_modules/es6-symbol/polyfill.js","node_modules/es6-symbol/validate-symbol.js","node_modules/event-emitter/index.js","node_modules/jquery-ui/ui/data.js","node_modules/sd-tree-designer/index.js","node_modules/sd-tree-designer/src/app-utils.js","node_modules/sd-tree-designer/src/context-menu/context-menu.js","node_modules/sd-tree-designer/src/context-menu/edge-context-menu.js","node_modules/sd-tree-designer/src/context-menu/main-context-menu.js","node_modules/sd-tree-designer/src/context-menu/node-context-menu.js","node_modules/sd-tree-designer/src/context-menu/text-context-menu.js","node_modules/sd-tree-designer/src/d3-extensions.js","node_modules/sd-tree-designer/src/d3.js","node_modules/sd-tree-designer/src/i18n/de.json","node_modules/sd-tree-designer/src/i18n/en.json","node_modules/sd-tree-designer/src/i18n/fr.json","node_modules/sd-tree-designer/src/i18n/i18n.js","node_modules/sd-tree-designer/src/i18n/it.json","node_modules/sd-tree-designer/src/i18n/pl.json","node_modules/sd-tree-designer/src/index.js","node_modules/sd-tree-designer/src/layout.js","node_modules/sd-tree-designer/src/node-drag-handler.js","node_modules/sd-tree-designer/src/symbols/circle.js","node_modules/sd-tree-designer/src/symbols/triangle.js","node_modules/sd-tree-designer/src/templates.js","node_modules/sd-tree-designer/src/templates/growl_message.html","node_modules/sd-tree-designer/src/text-drag-handler.js","node_modules/sd-tree-designer/src/tooltip.js","node_modules/sd-tree-designer/src/tree-designer.js","package.json","src/app-utils.js","src/app.js","src/autocomplete.js","src/d3.js","src/dialogs/about-dialog.js","src/dialogs/definitions-dialog.js","src/dialogs/dialog.js","src/dialogs/sensitivity-analysis-dialog.js","src/dialogs/settings-dialog.js","src/exporter.js","src/file-loader.js","src/form/input-field.js","src/form/path-value-accessor.js","src/i18n/de.json","src/i18n/en.json","src/i18n/fr.json","src/i18n/i18n.js","src/i18n/it.json","src/i18n/pl.json","src/index.js","src/jobs/job-parameters-builder.js","src/jobs/job-result-table.js","src/jobs/probabilistic-sensitivity-analysis-result-table.js","src/jobs/sensitivity-analysis-result-table.js","src/jobs/spider-plot.js","src/jobs/tornado-diagram-plot.js","src/league-table/league-table-dialog.js","src/league-table/league-table-plot.js","src/league-table/league-table.js","src/loading-indicator.js","src/pivot-table.js","src/sidebar.js","src/templates.js","src/templates/about/de.html","src/templates/about/en.html","src/templates/about/fr.html","src/templates/about/it.html","src/templates/about/pl.html","src/templates/about_dialog.html","src/templates/definitions_dialog.html","src/templates/evaluated_variables.html","src/templates/fullscreen_popup.html","src/templates/help.html","src/templates/input_group.html","src/templates/jobs/job_parameter.html","src/templates/jobs/job_parameters_builder.html","src/templates/league_table_dialog.html","src/templates/loading_indicator.html","src/templates/main.html","src/templates/select_input_group.html","src/templates/sensitivity_analysis_dialog.html","src/templates/settings_dialog.html","src/templates/settings_dialog_form_group.html","src/templates/sidebar/definitions.html","src/templates/sidebar/diagram_details_box.html","src/templates/sidebar/layout_options.html","src/templates/sidebar/multiple_criteria.html","src/templates/sidebar/object_properties.html","src/templates/sidebar/sidebar.html","src/templates/toolbar.html","src/templates/warning_message.html","src/toolbar.js","src/validation/number-input-validator.js","src/validation/payoff-input-validator.js","src/validation/probability-input-validator.js","src/validation/required-input-validator.js","tmp/build-config.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","copy","normalizeOptions","ensureCallable","map","callable","validValue","bind","Function","prototype","defineProperty","Object","hasOwnProperty","name","desc","options","dgs","value","writable","get","overwriteDefinition","resolveContext","props","arguments","assign","normalizeOpts","isCallable","contains","dscr","c","w","configurable","enumerable","gs","set","undefined","numberIsNaN","toPosInt","indexOf","Array","objHasOwnProperty","abs","Math","floor","searchElement","fromIndex","val","apply","isNaN","from","arr","result","Boolean","iteratorSymbol","iterator","isArguments","isFunction","isValue","isString","isArray","arrayLike","Context","j","getIterator","mapFn","thisArg","next","done","charCodeAt","objToString","toString","id","sign","Number","NaN","isFinite","toInteger","max","keys","objPropertyIsEnumerable","propertyIsEnumerable","method","defVal","obj","cb","list","compareFn","sort","key","index","foo","bar","trzy","dest","src","error","forEach","aFrom","propertyNames","propertyName","ensure","shim","create","nullObject","polyProps","level","getOwnPropertyNames","defineProperties","function","object","_undefined","targetObj","process","opts1","setPrototypeOf","getPrototypeOf","plainObject","customCreate","validate","isObject","objIsPrototypOf","isPrototypeOf","nullDesc","TypeError","status","fn","__proto__","isNullBase","nullPolyfill","tmpObj1","tmpObj2","getOwnPropertyDescriptor","ignore","String","str","searchString","ArrayIterator","d","Symbol","Iterator","kind","constructor","_resolve","__kind__","__list__","toStringTag","some","iterable","mode","doBreak","broken","char","StringIterator","clear","autoBind","context","__context__","__nextIndex__","on","_onAdd","_onDelete","_onClear","_next","__redo__","shift","_unBind","_createResult","off","redo","push","splice","__length__","isIterable","Set","size","add","delete","entries","has","values","SetIterator","toStringTagSymbol","__setData__","SetPoly","getValues","NativeSet","eIndexOf","ee","forOf","isNative","emit","validTypes","symbol","toPrimitive","x","NativeSymbol","SymbolPolyfill","HiddenSymbol","isNativeSafe","validateSymbol","objPrototype","globalSymbols","generateName","created","ie11BugWorkaround","postfix","description","__description__","__name__","for","keyFor","hasInstance","isConcatSpreadable","match","replace","search","species","split","unscopables","valueOf","isSymbol","once","methods","descriptors","base","descriptor","type","listener","data","__ee__","__eeOnceListener__","listeners","candidate","args","slice","factory","jQuery","$","extend","expr","createPseudo","dataName","elem","_index","d3","_templates","_i18n","_sdUtils","AppUtils","textD3Obj","textString","width","textObj","node","textContent","getComputedTextLength","getSubStringLength","substring","tooltip","placeTextWithEllipsis","transition","duration","style","html","event","pageX","pageY","element","getComputedStyle","getPropertyValue","transform","document","createElementNS","setAttributeNS","matrix","baseVal","consolidate","pathNode","point","distance2","p","dx","dy","y","best","bestLength","scan","scanDistance","pathLength","getTotalLength","precision","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","sqrt","message","position","time","Templates","select","selectOrAppend","append","setTimeout","remove","tag","attribs","parent","el","createElement","deepExtend","appendChild","parentNode","removeChild","text","createTextNode","div","innerHTML","evt","createEvent","initEvent","dispatchEvent","fireEvent","CustomEvent","detail","initCustomEvent","Utils","i18n","selection","classed","_show","exact","display","offsetParent","url","callback","xhr","XMLHttpRequest","open","responseType","onload","response","send","sanitizeHeight","height","container","parseInt","sanitizeWidth","availableHeight","margin","top","bottom","availableWidth","left","right","ContextMenu","menu","opts","_classCallCheck","openCallback","onOpen","closeCallback","onClose","selectAll","enter","attr","elm","preventDefault","stopPropagation","ret","divider","disabled","action","title","console","_contextMenu","EdgeContextMenu","treeDesigner","_this","_possibleConstructorReturn","injectDecisionNode","injectChanceNode","_sdModel","MainContextMenu","mousePosition","newNode","domain","DecisionNode","addNode","ChanceNode","newText","Text","addText","pasteToNewLocation","copiedNodes","selectAllNodes","clearSelection","Point","mouse","svg","move","getMainGroupTranslation","NodeContextMenu","operationsForObject","copyMenuItem","selectNode","isNodeSelected","copySelectedNodes","cutMenuItem","cutSelectedNodes","pasteMenuItem","pasteToNode","folded","deleteMenuItem","removeSelectedNodes","TerminalNode","$TYPE","addNodeConversionOptions","addDecisionNode","addChanceNode","addTerminalNode","selectSubTree","foldSubtree","operations","op","performOperation","canPerform","conversionOptions","getNodeConversionOptions","allAllowedTypes","childEdges","$parent","filter","getNodeConversionOption","typeToConvertTo","convertNode","TextContextMenu","selectText","removeSelectedTexts","D3Extensions","insertSelector","selector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","empty","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","contextMenu","main","paste","cut","convert","decision","chance","terminal","selectSubtree","fold","unfold","flipSubtree","edge","validation","incompletePath","probabilityDoNotSumUpTo1","invalidProbability","invalidPayoff","growl","brushDisabled","brushEnabled","payoff","default","named","aggregatedPayoff","probabilityToEnter","probability","en","pl","it","de","fr","lng","language","resources","translation","$instance","_i18next2","createInstance","fallbackLng","err","opt","_treeDesigner","_appUtils","_tooltip","_d3Extensions","Layout","config","nodeTypeToSymbol","symbolSquare","_circle2","_triangle2","onAutoLayoutChanged","nodeTypeOrder","treeMargin","targetSymbolSize","nodeSeparation","b","nodeSymbolSize","childNode","location","isManualLayout","autoLayout","moveNodeToEmptyPlace","redraw","MANUAL_LAYOUT_NAME","getNodeMinX","getNodeMinY","gridWidth","$linePoints","redrawIfChanged","nodesSortedByX","nodes","colidingNode","stepX","nodeSize","stepY","changed","newLocation","find","findCollidingNode","moveTo","_fireOnAutoLayoutChangedCallbacks","path","nodeSymbol","$id","each","box","getBBox","min","setHangingPosition","fontSize","getFontSize","items","displayValue","aggregatedPayoffs","line","dX","slantStartXOffset","slantWidth","edgeSlantWidthMax","point1","point2","point3","point4","datum","len","previousSibling","childNodes","getMinMarginBetweenNodes","$hidden","withoutStateSaving","saveState","onUndo","setGridWidth","onRedo","update","gridHeight","setGridHeight","setNodeSize","fitNodesInPlottingRegion","getRoots","setEdgeSlantWidthMax","newLayout","currentLayout","prevTreeMaxY","root","hierarchy","layout","cluster","tree","separation","minY","maxY","pivot","limit","limitNodePositioning","backupNodeLocation","minX","maxX","getNodeMaxX","revertX","$location","updateNodePosition","isHidden","NodeDragHandler","drag","subject","getTranslation","dragStarted","onDrag","dragEnded","ignoreDrag","ignoredDrag","hide","selectedNodes","getSelectedNodes","prevDragEvent","dragEventCount","draggedNode","moveNodes","redrawEdges","updatePlottingRegionSize","pi","PI","draw","dist","bezierCurveTo","lineTo","closePath","templateName","variables","compiled","template","imports","include","v","styleProp","styleName","variableName","clazz","treeDesignerSelector","treeDesignerStyles","styleRule","nodeSelector","edgeSelector","TextDragHandler","draggedText","updateTextPosition","Tooltip","xOffset","yOffset","getContainer","updatePosition","target","htmlOrFn","show","_mainContextMenu","_nodeContextMenu","_layout","_nodeDragHandler","_textDragHandler","_textContextMenu","_edgeContextMenu","Hammer","TreeDesignerConfig","custom","fontFamily","fontWeight","fontStyle","strokeWidth","optimal","stroke","label","color","negativeColor","fill","selected","readOnly","disableAnimations","forceFullEdgeRedraw","hideLabels","hidePayoffs","hideProbabilities","raw","payoffNumberFormatter","probabilityNumberFormatter","onNodeSelected","onEdgeSelected","onTextSelected","onSelectionCleared","payoffNames","maxPayoffsToDisplay","TreeDesigner","dataModel","setConfig","initContainer","init","updateCustomStyles","initSvg","initLayout","initI18n","initBrush","initEdgeMarkers","initMainContextMenu","initNodeContextMenu","initEdgeContextMenu","initNodeDragHandler","initTextDragHandler","initTextContextMenu","nodeDragHandler","textDragHandler","withTransitions","redrawDiagramTitle","redrawDiagramDescription","updateMargin","transitionPrev","redrawNodes","redrawFloatingTexts","updateValidationMessages","computeAvailableSpace","mainGroup","mc","Manager","touchAction","Press","pointerType","Pinch","cancel","disableBrush","waitForFinalEvent","enableBrush","group","topMargin","diagramTitle","diagramDescription","getTitleGroupHeight","clone","setMargin","containerIdOrElem","trim","startsWith","_parents","svgWidth","svgHeight","mainGroupBox","newSvgWidth","newSvgHeight","updateBrushExtent","exit","nodesEnter","labelEnter","payoffEnter","indicatorEnter","aggregatedPayoffEnter","probabilityToEnterEnter","nodesMerge","merge","isOptimal","nodesMergeT","drawNodeSymbol","nodeLabelPosition","labelMergeT","updateTextLines","payoffTspans","item","payoffTspansM","attachPayoffTooltip","payoffT","nodePayoffPosition","aggregatedPayoffTspans","aggregatedPayoffTspansM","aggregatedPayoffT","nodeAggregatedPayoffPosition","attach","probabilityToEnterT","nodeProbabilityToEnterPosition","indicator","nodeIndicatorPosition","nodeContextMenu","nodeElem","cancelDrag","button","nodeUnfoldButtonPosition","payoffFiledName","number","lines","reverse","tspans","edgesContainer","edges","edgesEnter","probabilityEnter","edgesMerge","edgesMergeT","edgeLineD","selectEdge","edgeLabelPosition","_","displayPayoff","payoffTextT","edgePayoffPosition","displayProbability","probabilityMerge","probabilityMergeT","edgeProbabilityPosition","raise","edgeContextMenu","POINTER_TOUCH","texts","textsEnter","textsMerge","textsMergeT","replaceUrls","escapeHtml","bb","textContextMenu","_this2","validationResults","validationResult","isValid","objectIdToError","errors","nodeSelection","getNodeD3SelectionById","tooltipHtml","getValidationMessage","initArrowMarker","brush","extent","brushContainer","hoveredEdge","mainGroupTranslation","offset","m","mgt","closest","cp","closestPoint","invert","mainContextMenu","getNewChildLocation","injectNode","getInjectedNodeLocation","removeNode","removeNodes","selectedTexts","getSelectedTexts","removeTexts","notClearPrevSelection","cloneSubtree","copyNode","selectedRoots","findSubtreeRoots","copyNodes","_this3","_this4","nodesToAttach","toAttach","attached","attachSubtree","getAllDescendantNodes","_this5","perform","getAllDescendantEdges","_this6","updateVisibility","getNodeD3Selection","getTextD3Selection","getTextD3SelectionById","_this7","visibleOnly","selectedVisible","allSelected","_toConsumableArray","descendants","_this8","clearSelectionBeforeSelect","skipCallback","_this9","titleValue","titleContainer","marginTop","descriptionValue","withMargins","h","version","scripts","test","repository","author","license","bugs","homepage","browserify","presets","plugins","spec","globals","devDependencies","babel-plugin-transform-builtin-extend","babel-plugin-transform-class-properties","babel-plugin-transform-es2015-spread","babel-plugin-transform-object-assign","babel-plugin-transform-object-rest-spread","babel-preset-es2015","babelify","browser-sync","browserify-resolutions","browserify-shim","chalk","del","es6-set","gulp","gulp-concat","gulp-filelist","gulp-html2js","gulp-load-plugins","gulp-minify-css","gulp-plumber","gulp-rename","gulp-replace","gulp-sass","gulp-sourcemaps","gulp-strip-debug","gulp-template","gulp-uglify","gulp-util","jasmine","jasmine-jquery","karma","karma-browserify","karma-chrome-launcher","karma-intl-shim","karma-jasmine","merge-stream","odc-d3","run-sequence","stringify","svg2pdf.js","vinyl-buffer","vinyl-source-stream","yargs","dependencies","autosize","blueimp-canvas-to-blob","d3-array","d3-dispatch","d3-drag","d3-scale","d3-selection","d3-time-format","file-saver","hammerjs","i18next","jquery","jquery-ui","pivottable","sd-computations","sd-model","sd-utils","sd-tree-designer","_interopRequireWildcard","_sdTreeDesigner","_TdUtils","getBoundingClientRect","form","mergeDeep","body","submit","removeElement","popup","model","_sidebar","_toolbar","_settingsDialog","_aboutDialog","_exporter","_definitionsDialog","_sdComputations","_sensitivityAnalysisDialog","_loadingIndicator","_leagueTableDialog","buildConfig","AppConfig","logLevel","workerUrl","jobRepositoryType","clearRepository","buttons","showDetails","showDefinitions","jsonFileDownload","rule","format","leagueTable","diagramData","viewModes","payoffsMaximization","Promise","resolve","initViewModes","initDataModel","initComputationsManager","initProbabilityNumberFormat","initPayoffNumberFormat","initTreeDesigner","initSidebar","initSettingsDialog","initAboutDialog","initDefinitionsDialog","initSensitivityAnalysisDialog","initLeagueTableDialog","initOnBeforeUnload","initKeyCodes","then","initToolbar","openDiagram","updateView","catch","setLogLevel","setLevel","buildTimestamp","DataModel","nodeAddedCallback","nodeRemovedCallback","onNodeAddedOrRemoved","textAddedCallback","onTextAdded","textRemovedCallback","onTextRemoved","computationsManager","ComputationsManager","ruleName","expressionEngine","checkValidityAndRecomputeObjective","sidebar","Sidebar","settingsDialog","SettingsDialog","aboutDialog","AboutDialog","definitionsDialog","DefinitionsDialog","onClosed","recompute","leagueTableDialog","LeagueTableDialog","isMultipleCriteria","validateParams","sensitivityAnalysisDialog","SensitivityAnalysisDialog","getGlobalVariableNames","toolbar","Toolbar","payoffNumberFormat","Intl","NumberFormat","locales","payoff1","payoff2","probabilityNumberFormat","getTreeDesignerInitialConfig","container2","onObjectSelected","prefix","currentViewMode","multiCriteria","charAt","payoffIndex","selectedObject","updateObjectPropertiesView","updateVariableDefinitions","hideObjectProperties","Node","Edge","definitionsSourceObject","getCurrentVariableDefinitionsSourceObject","updateDefinitions","updateLayoutOptions","updateDiagramDetails","updateMultipleCriteria","undo","findById","fieldName","evalCode","evalNumeric","getCurrentRule","setCurrentRuleByName","currentRule","payoffCoeffs","maximization","tmp","flipCriteria","getObjectiveRules","setViewMode","objectiveRulesManager","setPayoffIndex","rules","newRule","_this10","every","setObjectiveRule","isSensitivityAnalysisAvailable","dataDTO","originalDataModelSnapshot","createStateSnapshot","loadFromDTO","getJsonReviver","updateDisplayValues","svgString","Exporter","getSVGString","showFullScreenPopup","_setNewState","policy","displayPolicy","debounce","forceWhenAutoIsDisabled","debouncedRecompute","_this11","isAutoRecalculationEnabled","allRules","_this13","setDiagramTitle","setDiagramDescription","JSON","parse","dataModelObject","isValidVersionString","compareVersionNumbers","expressionScope","trees","isRuleName","viewMode","setViewModeByName","setDefaultViewModeForRule","getObjectiveRuleByName","load","sensitivityAnalysis","loadSavedParamValues","updateNumberFormats","filterLocation","filterComputed","filterPrivate","isoFormat","Date","serialize","_this15","jobNameToParamValues","getJsonReplacer","json","_this16","blob","Blob","saveAs","getExportFileName","addEventListener","isUndoAvailable","isRedoAvailable","dialogText","returnValue","prevValue","setConfigParam","_this17","updateDiagramTitle","_this18","updateDiagramDescription","srcElement","nodeName","toUpperCase","keyCode","ctrlKey","altKey","_this19","selectedNode","_selectedNode","utils","appUtils","getGlobalObject","widget","wrapper","addClass","insertAfter","_createAutocomplete","_createShowAllButton","children","input","appendTo","autocomplete","proxy","_on","ui","option","_trigger","inputD3","dispatchHtmlEvent","wasOpen","is","trigger","request","matcher","RegExp","escapeRegex","term","Autocomplete","combobox","_dialog","_Dialog","app","definitionsScopeLabel","definitionsCode","updateInputClass","changeCallback","recalculateButton","variableValuesContainer","elasticTextarea","isVisible","scopeType","labelSuffix","autoResizeTextarea","$codeError","printError","printVariables","scope","scopeVariables","getVariablesAsList","Dialog","close","shrink","fullScreen","onResized","setFullScreen","_jobParametersBuilder","_sensitivityAnalysisResultTable","_probabilisticSensitivityAnalysisResultTable","_policy","_tornadoDiagramPlot","_spiderPlot","jobConfigurations","jobConfigurationContainer","parameterBuilderContainer","jobParametersBuilder","JobParametersBuilder","onJobParametersChanged","progressBarContainer","progressBar","jobResultsContainer","jobResultPlotContainer","debouncedCheckWarnings","checkWarnings","initButtons","initJobConfigurations","jobSelect","initJobSelect","payoffConf","cloneDeep","useGrouping","jobInstanceManager","terminate","jobConfig","clearWarnings","selectedJobConfig","jobName","job","getJobByName","jobParamsValues","setJobParamsValues","deleteId","refreshSelectedJobConfig","jobParameters","createJobParameters","setJobParameters","customParamsConfig","ExpressionEngine","customVariablesValidator","isValidArray","names","isVariableInGlobalScope","valid","largeScenariosNumberWarning","reduce","variable","toFloat","divide","subtract","isValidNameArray","randomMenuList","warnings","warnConf","check","addWarning","msg","msgHTML","guid","onJobSelected","rows","indexes","onResultRowSelected","resultTable","setClassName","SensitivityAnalysisJobResultTable","setData","ProbabilisticSensitivityAnalysisJobResultTable","disable","runJobButton","disableActionButtonsAndShowLoadingIndicator","runJobWithInstanceManager","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","resumeJobButton","resume","stopJobButton","stop","terminateJobButton","terminateJob","backButton","downloadCsvButtons","downloadCSV","clearButton","clearParams","clearAllParams","clearResults","setProgress","markAsError","forOwn","globalVariableNames","paramValues","resultPlots","destroy","progress","displayResult","debug","initResultTable","initResultPlots","initTornadoResultPlots","initSpiderResultPlots","policies","plot","maxWidth","resultPlot","TornadoDiagramPlot","SpiderPlot","errorMessage","msgKey","percents","current","total","policyIndexes","policyIndex","Policy","toPolicyString","row","variableNames","showPolicyPreview","saveAsCSV","getRows","params","extendedPolicyDescription","jobResultToCsvRows","_inputField","_pathValueAccessor","formGroups","FormGroup","addField","addSelectField","fontWeightOptions","fontStyleOptions","payoffGroup","updatePayoffNumberFormat","currency","minimumFractionDigits","maximumFractionDigits","payoff2Group","updateProbabilityNumberFormat","nodeGroup","addGroup","edgeGroup","titleGroup","leagueTableGroup","otherGroup","onRawOptionChanged","initView","temp","formGroupsEnter","formGroupsMerge","inputGroups","fields","checked","validator","valueAccessor","valueUpdateCallback","pristineVal","initFormGroups","groups","fieldConfig","_addField","fieldId","configInputField","ConfigInputField","_InputField","sourceObject","PathValueAccessor","_blueimpCanvasToBlob","_fileSaver","svgNode","appendInlineStyles","source","parentCs","targetChildren","tagName","cssStyleText","cs","propertyValue","exportedStyles","svgProperties","setAttribute","removeAttribute","toRemove","_i","svgClone","cloneNode","removeIds","getSvgCloneWithInlineStyles","serializeSvgNode","sanitizeSVG","XMLSerializer","serializeToString","DOMParser","parseFromString","documentElement","imgsrc","encodeURIComponent","canvas","getContext","image","Image","drawImage","toBlob","filesize","round","ext","timeFormat","clientSide","png","fallback","serverSide","detectIE","pngWidth","pngHeight","svgString2Image","dataBlob","warn","info","exportPngServerSide","serverUrl","doc","jsPDF","dummy","firstChild","save","filename","successCallback","failCallback","setRequestHeader","getResponseHeader","onreadystatechange","oEvent","readyState","noDownload","postAndSave","LoadingIndicator","clientSidePdfExportAvailable","isClientSidePdfExportAvailable","pdf","svgElement","exportPdfClientSide","exportPdfServerSide","svg2pdf","sanitized","csvRows","escapeCsvField","join","csvString","field","dataURLtoBlob","FileLoader","getElementById","onchange","file","FileReader","files","readAsText","click","InputField","parser","styleClass","newDiagram","saveDiagram","export","manual","criterion1","criterion2","twoCriteria","objectiveRule","expected-value-maximization","expected-value-minimization","maxi-min","maxi-max","mini-min","mini-max","min-max","max-min","min-min","max-max","settings","about","downloadCsv","headers","policyNo","comment","dominatedBy","extendedDominatedBy","incratio","highlighted","highlighted-default","extended-dominated","dominated","gradientArrow1","gradientArrow2","dominatedRegion","legend","gradientArrows","runJob","stopJob","resumeJob","back","removeParameterValue","addParameterValue","jobResultTable","multiplePoliciesInCell","aggregators","maximum","minimum","renderers","heatmap","policyPreview","sensitivity-analysis","param","step","computations","largeScenariosNumber","largeParametersNumber","tornado-diagram","defaultValue","low","high","xAxisTitle","probabilistic-sensitivity-analysis","numberOfRuns","formula","help","param-computation","spider-plot","percentageChangeRange","yAxisTitle","league-table","generic","general","numberFormatLocale","currencyDisplay","highlightedColor","highlightedDefaultColor","extendedDominatedColor","dominatedColor","defaultColor","other","header","2","3","keyboard","4","5","6","docs","recalculate","evaluatedVariables","sidebarDefinitions","openDialog","multipleCriteria","defaultMaximizedCriterionName","defaultMinimizedCriterionName","nameOfCriterion1","nameOfCriterion2","defaultCriterion1Weight","weightLowerBound","weightUpperBound","showLeagueTable","flip","layoutOptions","marginHorizontal","marginVertical","diagramDetails","objectProperties","childrenProperties","child","confirm","beforeunload","jsonParse","fileApiNotSupported","inputFilesProperty","notSilverDecisionsFile","incorrectVersionFormat","fileVersionNewerThanApplicationVersion","objectiveComputationFailure","diagramDrawingFailure","malformedData","pngExportNotSupported","pngExportNotSupportedIE","svgExportNotSupported","pdfExportNotSupported","incorrectPayoffNumberFormatOptions","incorrectProbabilityNumberFormatOptions","incorrectNumberFormatOptions","jsPDFisNotIncluded","serverSideExportRequestFailure","_app","_package","_jobParameterDefinition","_autocomplete","i18nPrefix","onChange","paramTypeToInputType","paramTypeToInputAttrs","PARAMETER_TYPE","BOOLEAN","DATE","INTEGER","NUMBER","STRING","clean","build","definitions","pristine","customValidators","strictValidation","checkCustomValidators","enabled","jobParameterDefinitions","parentValueObject","parentPath","onInput","paramsEnter","paramSelection","repeating","maxOccurs","vi","minOccurs","getEmptyValue","getParamNameI18n","valuesContainer","addButton","callbacks","onValueRemoved","buildParameterValues","buildParameterSingleValue","paramDefinition","checkCustomValidator","allValid","customValidator","indexToSelection","validateSingleValue","paramValuesEnter","paramValuesMerge","updateDerivedValues","updater","derivedValueUpdaters","COMPOSITE","nestedParameters","derivedValuesConfigs","derivedValueConfig","buildDerivedValue","removeButton","inputId","paramValue","getParamHelpI18n","helpContainer","inputType","additionalInputAttrs","concat","getInput","parseInput","_value","parameterType","parseFloat","_pivotTable","JobResultTableConfig","onRowSelected","className","JobResultTable","pivotTable","PivotTable","filters","pivotData","selectedIndexes","selectedRows","forEachMatchingRecord","record","pivotOptions","pivotUtilities","derivers","vals","cols","getAggregatorName","clickCallback","scaleLinear","range","getRendererName","aggregatorName","_jobResultTable","_JobResultTable","jobResult","expectedValues","medians","standardDeviations","policyIsBestProbabilities","trace","attributeArray","rowKey","colKey","roundVariables","csvDAta","totalInColNum","_totalInColNum","_lineChart","SpiderPlotConfig","_LineChartConfig","showLegend","guides","series","dotRadius","_LineChart","placeholderSelector","percentageRangeValues","rangeVal","payoffs","baseContainer","_divergingStackedBarChart","TornadoDiagramPlotConfig","_DivergingStackedBarC","forceLegend","categoryNames","colorRange","middleValue","showBarValues","_DivergingStackedBarC2","defaultPayoff","varExtent","variableExtents","extents","extentVariableValues","_leagueTable","_leagueTablePlot","emphasize","LeagueTable","defaultWeight","groupConf","optimalForDefaultWeight","groupKey","LeagueTablePlot","initJobParams","initResultPlot","_scatterplot","LeagueTablePlotConfig","_ScatterPlotConfig","gradientArrowLength","gradientArrowOffset","emphasizedDotRadius","dotId","_ScatterPlot","checkOrdering","groupOrdering","getOrdering","newData","updateIcerLines","updateDominatedRegion","updateGradientArrows","updateDotLabels","linesContainerSelector","linesContainerClass","prefixClass","linesContainer","svgG","dotsContainerClass","clipPathId","highlightedPoints","groupValue","highlightedDefaultPoints","dominatedRegionPoints","minPoint","maxPoint","lowPoint","highPoint","xAxisExtent","scale","infLowY","infLowPoint","infHighPoint","_x","defaultPoint","defLowPoint","defHighPoint","_x2","unshift","dominatedRegionContainerSelector","dominatedRegionContainer","worstPoint","prev","curr","area","y0","labelsContainerSelector","labels","coeff","x1","x2","y2","y1","arrowsContainerSelector","arrowsContainer","arrowClass","arrows","arrowsEnter","arrowsMerge","_emphasize","emphasizeDot","dotClass","legendCells","getTextData","word","words","lineNumber","tspan","pop","LeagueTableConfig","onRowHover","onRowHoverOut","resultTableHead","resultTableBody","resultTableFoot","drawHeaders","drawRows","headerData","headersMerge","rowsData","getRowComment","rowsMerge","cells","cellsMerge","rowspan","policy1","policy2","revertAggregators","origAggregator","origAggregators","numberFormat","showZero","args1","res1","res","format_","origX","pivotUI","toLowerCase","_payoffInputValidator","_probabilityInputValidator","_requiredInputValidator","_mcdmWeightValueValidator","dispatch","initLayoutOptions","initDiagramDetails","initDefinitions","initMultipleCriteria","onObjectUpdated","onMultiCriteriaUpdated","layoutOptionsContainer","autoLayoutOptionsGroup","diagramDetailsContainer","definitionsContainer","onDefinitionsCodeChanged","definitionsEvaluatedValuesContainer","openDefinitionsDialog","multipleCriteriaContainer","showLeagueTableButton","flipCriteriaButton","weightParser","multipleCriteriaFields","RequiredInputValidator","lowerBoundValueAccessor","upperBoundValueAccessor","weightValueValidator","McdmWeightValueValidator","upper","compare","lower","updateInputs","leagueTableAvailable","isLeagueTableAvailable","getValue","saveStateFromSnapshot","pristineStateSnapshot","setValue","objectProps","headerText","getHeaderTextForObject","fieldList","getFieldListForObject","updateObjectFields","updateObjectChildrenProperties","childObjects","getChildObjectList","objectType","getObjectType","childPropsSelector","ObjectInputField","PayoffInputValidator","ProbabilityInputValidator","fieldsMerge","fieldSelection","setSyntaxValidity","isFieldValid","customOnInput","checkFieldStatus","_TdTemplates","about_de","about_en","about_fr","about_it","about_pl","diagramDetailsBox","settingsDialogFormGroup","inputGroup","selectInputGroup","jobParameter","loadingIndicator","fullscreenPopup","warningMessage","_fileLoader","hiddenClass","initDiagramButtons","initExportToolbarGroup","initLayoutButtons","initUndoRedoButtons","initSettingsButton","initAboutButton","initSensitivityAnalysisButton","initRecomputeButton","initViewModeToolbarGroup","initObjectiveRuleToolbarGroup","newDiagramButton","new","openDiagramButton","openFile","saveDiagramButton","saveToFile","onLayoutChanged","layoutButtons","disableAutoLayout","updateLayoutButtons","settingsButton","aboutButton","recomputeButton","sensitivityAnalysisButton","openSensitivityAnalysis","undoRedoStateChangedCallback","onUndoRedoChanged","undoButton","redoButton","updateUndoRedoButtons","updateSensitivityAnalysisButton","updateViewModeValue","updateObjectiveRuleOptions","updateObjectiveRuleValue","initExportToPngButton","initExportSvgButton","initExportPdfButton","saveAsPng","exportToPng","saveAsSvg","exportToSvg","saveAsPdf","exportToPdf","objectiveRuleSelect","getCurrentObjectiveRule","viewModeSelect","getViewModes","getCurrentViewMode","NumberInputValidator","isNumber","hasAssignmentExpression","isHash"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar copy             = require('es5-ext/object/copy')\n  , normalizeOptions = require('es5-ext/object/normalize-options')\n  , ensureCallable   = require('es5-ext/object/valid-callable')\n  , map              = require('es5-ext/object/map')\n  , callable         = require('es5-ext/object/valid-callable')\n  , validValue       = require('es5-ext/object/valid-value')\n\n  , bind = Function.prototype.bind, defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = validValue(desc) && callable(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (options.resolveContext != null) ensureCallable(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement /*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Array.from\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === \"dwa\"));\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity\nmodule.exports = function (arrayLike /*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(length = arrayLike.length);\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call(\n\t(function () {\n\t\treturn arguments;\n\t})()\n);\n\nmodule.exports = function (value) {\n\treturn objToString.call(value) === id;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(require(\"./noop\"));\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && objToString.call(value) === id;\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","/* eslint strict: \"off\" */\n\nmodule.exports = (function () {\n\treturn this;\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Math.sign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn (sign(10) === 1) && (sign(-20) === -1);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Number.isNaN\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar numberIsNaN = Number.isNaN;\n\tif (typeof numberIsNaN !== \"function\") return false;\n\treturn !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\t// eslint-disable-next-line no-self-compare\n\treturn value !== value;\n};\n","\"use strict\";\n\nvar sign = require(\"../math/sign\")\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n\n  , max = Math.max;\n\nmodule.exports = function (value) {\n return max(0, toInteger(value));\n};\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb /*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.assign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn (obj.foo + obj.bar + obj.trzy) === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src /*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: true,\n\t\tvalue: undefined\n\t};\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","// Deprecated\n\n\"use strict\";\n\nmodule.exports = function (obj) {\n return typeof obj === \"function\";\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) {\n\treturn (isValue(value) && map[typeof value]) || false;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) {\n return (val !== _undefined) && (val !== null);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.keys\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n return false;\n}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(isValue(object) ? Object(object) : object);\n};\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb /*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1 /*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.setPrototypeOf\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject        = require(\"../is-object\")\n  , value           = require(\"../valid-value\")\n  , objIsPrototypOf = Object.prototype.isPrototypeOf\n  , defineProperty  = Object.defineProperty\n  , nullDesc        = {\n\tconfigurable: true,\n\tenumerable: false,\n\twritable: true,\n\tvalue: undefined\n}\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n}(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n));\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? String.prototype.contains\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn (str.contains(\"dwa\") === true) && (str.contains(\"foo\") === false);\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","'use strict';\n\nif (!require('./is-implemented')()) {\n\tObject.defineProperty(require('es5-ext/global'), 'Set',\n\t\t{ value: require('./polyfill'), configurable: true, enumerable: false,\n\t\t\twritable: true });\n}\n","'use strict';\n\nmodule.exports = function () {\n\tvar set, iterator, result;\n\tif (typeof Set !== 'function') return false;\n\tset = new Set(['raz', 'dwa', 'trzy']);\n\tif (String(set) !== '[object Set]') return false;\n\tif (set.size !== 3) return false;\n\tif (typeof set.add !== 'function') return false;\n\tif (typeof set.clear !== 'function') return false;\n\tif (typeof set.delete !== 'function') return false;\n\tif (typeof set.entries !== 'function') return false;\n\tif (typeof set.forEach !== 'function') return false;\n\tif (typeof set.has !== 'function') return false;\n\tif (typeof set.keys !== 'function') return false;\n\tif (typeof set.values !== 'function') return false;\n\n\titerator = set.values();\n\tresult = iterator.next();\n\tif (result.done !== false) return false;\n\tif (result.value !== 'raz') return false;\n\n\treturn true;\n};\n","// Exports true if environment provides native `Set` implementation,\n// whatever that is.\n\n'use strict';\n\nmodule.exports = (function () {\n\tif (typeof Set === 'undefined') return false;\n\treturn (Object.prototype.toString.call(Set.prototype) === '[object Set]');\n}());\n","'use strict';\n\nvar setPrototypeOf    = require('es5-ext/object/set-prototype-of')\n  , contains          = require('es5-ext/string/#/contains')\n  , d                 = require('d')\n  , Iterator          = require('es6-iterator')\n  , toStringTagSymbol = require('es6-symbol').toStringTag\n\n  , defineProperty = Object.defineProperty\n  , SetIterator;\n\nSetIterator = module.exports = function (set, kind) {\n\tif (!(this instanceof SetIterator)) return new SetIterator(set, kind);\n\tIterator.call(this, set.__setData__, set);\n\tif (!kind) kind = 'value';\n\telse if (contains.call(kind, 'key+value')) kind = 'key+value';\n\telse kind = 'value';\n\tdefineProperty(this, '__kind__', d('', kind));\n};\nif (setPrototypeOf) setPrototypeOf(SetIterator, Iterator);\n\nSetIterator.prototype = Object.create(Iterator.prototype, {\n\tconstructor: d(SetIterator),\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === 'value') return this.__list__[i];\n\t\treturn [this.__list__[i], this.__list__[i]];\n\t}),\n\ttoString: d(function () { return '[object Set Iterator]'; })\n});\ndefineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));\n","'use strict';\n\nvar clear          = require('es5-ext/array/#/clear')\n  , eIndexOf       = require('es5-ext/array/#/e-index-of')\n  , setPrototypeOf = require('es5-ext/object/set-prototype-of')\n  , callable       = require('es5-ext/object/valid-callable')\n  , d              = require('d')\n  , ee             = require('event-emitter')\n  , Symbol         = require('es6-symbol')\n  , iterator       = require('es6-iterator/valid-iterable')\n  , forOf          = require('es6-iterator/for-of')\n  , Iterator       = require('./lib/iterator')\n  , isNative       = require('./is-native-implemented')\n\n  , call = Function.prototype.call\n  , defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf\n  , SetPoly, getValues, NativeSet;\n\nif (isNative) NativeSet = Set;\n\nmodule.exports = SetPoly = function Set(/*iterable*/) {\n\tvar iterable = arguments[0], self;\n\tif (!(this instanceof SetPoly)) throw new TypeError('Constructor requires \\'new\\'');\n\tif (isNative && setPrototypeOf) self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));\n\telse self = this;\n\tif (iterable != null) iterator(iterable);\n\tdefineProperty(self, '__setData__', d('c', []));\n\tif (!iterable) return self;\n\tforOf(iterable, function (value) {\n\t\tif (eIndexOf.call(this, value) !== -1) return;\n\t\tthis.push(value);\n\t}, self.__setData__);\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(SetPoly, NativeSet);\n\tSetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });\n}\n\nee(Object.defineProperties(SetPoly.prototype, {\n\tadd: d(function (value) {\n\t\tif (this.has(value)) return this;\n\t\tthis.emit('_add', this.__setData__.push(value) - 1, value);\n\t\treturn this;\n\t}),\n\tclear: d(function () {\n\t\tif (!this.__setData__.length) return;\n\t\tclear.call(this.__setData__);\n\t\tthis.emit('_clear');\n\t}),\n\tdelete: d(function (value) {\n\t\tvar index = eIndexOf.call(this.__setData__, value);\n\t\tif (index === -1) return false;\n\t\tthis.__setData__.splice(index, 1);\n\t\tthis.emit('_delete', index, value);\n\t\treturn true;\n\t}),\n\tentries: d(function () { return new Iterator(this, 'key+value'); }),\n\tforEach: d(function (cb/*, thisArg*/) {\n\t\tvar thisArg = arguments[1], iterator, result, value;\n\t\tcallable(cb);\n\t\titerator = this.values();\n\t\tresult = iterator._next();\n\t\twhile (result !== undefined) {\n\t\t\tvalue = iterator._resolve(result);\n\t\t\tcall.call(cb, thisArg, value, value, this);\n\t\t\tresult = iterator._next();\n\t\t}\n\t}),\n\thas: d(function (value) {\n\t\treturn (eIndexOf.call(this.__setData__, value) !== -1);\n\t}),\n\tkeys: d(getValues = function () { return this.values(); }),\n\tsize: d.gs(function () { return this.__setData__.length; }),\n\tvalues: d(function () { return new Iterator(this); }),\n\ttoString: d(function () { return '[object Set]'; })\n}));\ndefineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));\ndefineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));\n","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","/*!\n * jQuery UI :data 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.extend( $.expr[ \":\" ], {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} ) );\n","export * from './src/index'\n","import * as d3 from \"./d3\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\n\nexport class AppUtils {\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, AppUtils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, AppUtils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width) {\n        var textObj = textD3Obj.node();\n        textObj.textContent = textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength() > width + margin) {\n            for (var x = textString.length - 3; x > 0; x -= 1) {\n                if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                    textObj.textContent = textString.substring(0, x) + \"...\";\n                    return true;\n                }\n            }\n            textObj.textContent = \"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n        var ellipsisPlaced = AppUtils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if (ellipsisPlaced && tooltip) {\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element) {\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static getTranslation(transform) {\n        // Create a dummy g for calculation purposes only. This will never\n        // be appended to the DOM and will be discarded once this function\n        // returns.\n        var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        // Set the transform attribute to the provided string value.\n        g.setAttributeNS(null, \"transform\", transform);\n\n        // consolidate the SVGTransformList containing all transformations\n        // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n        // its SVGMatrix.\n        var matrix = g.transform.baseVal.consolidate().matrix;\n\n        // As per definition values e and f are the ones for the translation.\n        return [matrix.e, matrix.f];\n    }\n\n\n    static closestPoint(pathNode, point) {\n        var pathLength = pathNode.getTotalLength(),\n            precision = 8,\n            best,\n            bestLength,\n            bestDistance = Infinity;\n\n        // linear scan for coarse approximation\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n                best = scan, bestLength = scanLength, bestDistance = scanDistance;\n            }\n        }\n\n        // binary search for precise estimate\n        precision /= 2;\n        while (precision > 0.5) {\n            var before,\n                after,\n                beforeLength,\n                afterLength,\n                beforeDistance,\n                afterDistance;\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n                best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n                best = after, bestLength = afterLength, bestDistance = afterDistance;\n            } else {\n                precision /= 2;\n            }\n        }\n\n        best = [best.x, best.y];\n        best.distance = Math.sqrt(bestDistance);\n        return best;\n\n        function distance2(p) {\n            var dx = p.x - point[0],\n                dy = p.y - point[1];\n            return dx * dx + dy * dy;\n        }\n    }\n\n    static growl(message, type='info', position='right', time = 2000){\n        var html = Templates.get('growl', {message:message, type:type})\n\n        var g = d3.select('body').selectOrAppend('div.sd-growl-list.'+position).append('div').html(html);\n        setTimeout(function(){\n            g.remove();\n        }, time)\n    }\n\n\n    static createElement(tag, attribs, parent) {\n        var el = document.createElement(tag);\n\n        if (attribs) {\n            AppUtils.deepExtend(el, attribs);\n        }\n        if (parent) {\n            parent.appendChild(el);\n        }\n        return el;\n    };\n\n    static removeElement(element) {\n        element.parentNode.removeChild(element);\n    }\n\n    static replaceUrls(text){\n        if(!text){\n            return text;\n        }\n        var urlRegexp = /((ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/\n\n        return text.replace(urlRegexp, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n\n    static escapeHtml(html)\n    {\n        var text = document.createTextNode(html);\n        var div = document.createElement('div');\n        div.appendChild(text);\n        return div.innerHTML;\n    }\n\n    static dispatchHtmlEvent(element, name){\n        if (\"createEvent\" in document) {\n            var evt = document.createEvent(\"HTMLEvents\");\n            evt.initEvent(name, false, true);\n            element.dispatchEvent(evt);\n        }\n        else\n            element.fireEvent(\"on\"+name);\n    }\n\n    static dispatchEvent(name, data){\n        var event;\n        try{\n            event = new  CustomEvent(name,{ 'detail': data });\n        }catch (e){ //IE\n            event = document.createEvent('CustomEvent');\n            event.initCustomEvent(name, false, false, data);\n        }\n        document.dispatchEvent(event);\n    }\n\n    static getValidationMessage(error){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var key = 'validation.' + error.name;\n        return i18n.t(key, error.data);\n    }\n\n    static hide(selection){\n        selection.classed('sd-hidden', true);\n    }\n\n    static show(selection, show=true){\n        selection.classed('sd-hidden', !show);\n    }\n\n\n\n    static isHidden(el, exact = true) {\n        if(!el){\n            return true;\n        }\n        if(exact){\n            var style = window.getComputedStyle(el);\n            return (style.display === 'none')\n        }\n        return (el.offsetParent === null)\n    }\n\n    static getJSON(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('get', url, true);\n        xhr.responseType = 'json';\n        xhr.onload = function () {\n            var status = xhr.status;\n            if (status == 200) {\n                callback(xhr.response, null);\n            } else {\n                callback(null, status);\n            }\n        };\n        xhr.send();\n    }\n}\n","import * as d3 from '../d3'\n\n/*based on:\n * github.com/patorjk/d3-context-menu */\n\nexport class ContextMenu {\n    openCallback;\n    closeCallback;\n\n    constructor(menu, opts) {\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1])\n            .enter()\n            .append('div')\n            .attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu')\n                .on('contextmenu', function (d) {\n                    d3.select('.d3-context-menu').style('display', 'none');\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                })\n                .append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n                .append('li')\n                .attr('class', function (d) {\n                    var ret = '';\n                    if (d.divider) {\n                        ret += ' is-divider';\n                    }\n                    if (d.disabled) {\n                        ret += ' is-disabled';\n                    }\n                    if (!d.action) {\n                        ret += ' is-header';\n                    }\n                    return ret;\n                })\n                .html(function (d) {\n                    if (d.divider) {\n                        return '<hr>';\n                    }\n                    if (!d.title) {\n                        console.error('No title attribute set. Check the spelling of your options.');\n                    }\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\n                })\n                .on('click', function (d, i) {\n                    if (d.disabled) return; // do nothing if disabled\n                    if (!d.action) return; // headers have no \"action\"\n                    d.action(elm, data, index);\n                    d3.select('.d3-context-menu').style('display', 'none');\n\n                    if (self.closeCallback) {\n                        self.closeCallback();\n                    }\n                });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu')\n                .style('left', (d3.event.pageX - 2) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n                .style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    };\n\n    static hide() {\n        d3.select('.d3-context-menu').style('display', 'none');\n    }\n\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class EdgeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n            var menu = [];\n\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectDecisionNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectDecisionNode(d)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectChanceNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectChanceNode(d)\n                }\n            });\n\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport * as d3 from '../d3'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class MainContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var mousePosition = null;\n        var menu = function (d) {\n\n            var menu = [];\n            menu.push({\n                title: i18n.t('contextMenu.main.addDecisionNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.DecisionNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.main.addChanceNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.ChanceNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.addText'),\n                action: function (elm, d, i) {\n                    var newText = new model.Text(mousePosition);\n                    treeDesigner.addText(newText);\n                },\n\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNewLocation(mousePosition);\n                },\n                disabled: !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            });\n            menu.push({divider: true});\n\n            menu.push({\n                title: i18n.t('contextMenu.main.selectAllNodes'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectAllNodes();\n                }\n            });\n            return menu;\n        };\n\n        super(menu, {onOpen: () => {\n            treeDesigner.clearSelection();\n            mousePosition = new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true));\n\n        }});\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class NodeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner, operationsForObject) {\n        var menu = function (d) {\n\n            var copyMenuItem = {\n                title: i18n.t('contextMenu.node.copy'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.copySelectedNodes();\n                }\n            };\n            var cutMenuItem = {\n                title: i18n.t('contextMenu.node.cut'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.cutSelectedNodes();\n                }\n            };\n            var pasteMenuItem = {\n                title: i18n.t('contextMenu.node.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNode(d);\n                },\n                disabled: d.folded || !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            };\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.node.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.removeSelectedNodes();\n\n                }\n            };\n\n            var menu = [];\n            if (d.type == model.TerminalNode.$TYPE) {\n                menu = [copyMenuItem, cutMenuItem, deleteMenuItem];\n                NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n                return menu;\n            }\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.addDecisionNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addDecisionNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addChanceNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addChanceNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addTerminalNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addTerminalNode(d)\n                    }\n                });\n                menu.push({divider: true});\n            }\n\n            menu.push(copyMenuItem);\n            menu.push(cutMenuItem);\n            menu.push(pasteMenuItem);\n            menu.push(deleteMenuItem);\n\n            NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.node.selectSubtree'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectSubTree(d, true);\n                }\n            });\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.fold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d);\n                    }\n                });\n            }else{\n                menu.push({\n                    title: i18n.t('contextMenu.node.unfold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d, false);\n                    }\n                });\n            }\n\n            if(operationsForObject){\n                var operations = operationsForObject(d);\n                if(operations.length) {\n                    menu.push({divider: true});\n                    operations.forEach(op=>{\n                        menu.push({\n                            title: i18n.t('contextMenu.node.'+op.name),\n                            action: function (elm, d, i) {\n                                treeDesigner.performOperation(d, op);\n                            },\n                            disabled: !op.canPerform(d)\n                        });\n                    })\n                }\n            }\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n\n    static addNodeConversionOptions(d, menu, treeDesigner){\n        var conversionOptions = NodeContextMenu.getNodeConversionOptions(d, treeDesigner);\n        if(conversionOptions.length){\n            menu.push({divider: true});\n            conversionOptions.forEach(o=>menu.push(o));\n\n        }\n    }\n\n    static getNodeConversionOptions(d, treeDesigner){\n        var options = [];\n        var allAllowedTypes = [model.DecisionNode.$TYPE, model.ChanceNode.$TYPE, model.TerminalNode.$TYPE];\n\n        if(!d.childEdges.length && d.$parent){\n            allAllowedTypes.filter(t=>t!==d.type).forEach(type=>{\n                options.push(NodeContextMenu.getNodeConversionOption(type, treeDesigner))\n            })\n        }else{\n            if(d instanceof model.DecisionNode){\n                options.push(NodeContextMenu.getNodeConversionOption(model.ChanceNode.$TYPE, treeDesigner))\n            }else{\n                options.push(NodeContextMenu.getNodeConversionOption(model.DecisionNode.$TYPE, treeDesigner))\n            }\n        }\n        return options;\n    }\n\n    static getNodeConversionOption(typeToConvertTo, treeDesigner){\n        return {\n            title: i18n.t('contextMenu.node.convert.'+typeToConvertTo),\n            action: function (elm, d, i) {\n                treeDesigner.convertNode(d, typeToConvertTo);\n            },\n        }\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class TextContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.text.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectText(d, true, true);\n                    treeDesigner.removeSelectedTexts()\n\n                }\n            };\n            var menu = [];\n            menu.push(deleteMenuItem);\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addText\": \"Text hinzufügen \",\n            \"paste\": \"Einfügen\",\n            \"selectAllNodes\": \"Alle Knoten auswählen\"\n        },\n        \"node\":{\n            \"copy\": \"Kopieren\",\n            \"cut\": \"Ausschneiden\",\n            \"paste\": \"Einfügen\",\n            \"delete\": \"Löschen\",\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addTerminalNode\": \"Endknotten hinzufügen\",\n            \"convert\":{\n                \"decision\": \"Als Entscheidungsknoten\",\n                \"chance\": \"Als Zufall Knoten\",\n                \"terminal\": \"Als Endknoten\"\n            },\n            \"selectSubtree\": \"Teilbaum wählen\",\n            \"fold\": \"Teilbaum falten\",\n            \"unfold\": \"Teilbaum entfalten\",\n\t\t\t\n            \"flipSubtree\": \"Teilbaum umdrehen\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Entscheidungsknoten Injizieren\",\n            \"injectChanceNode\": \"Zufall Knoten Injizieren\"\n        },\n        \"text\":{\n            \"delete\": \"Löschen\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Pfad, der nicht mit dem Endknoten endet\",\n        \"probabilityDoNotSumUpTo1\": \"Die Summe der Wahrscheinlichkeiten ist nicht gleich 1\",\n        \"invalidProbability\": \"Ungültige Wahrscheinlichkeit im Zweig #{{number}}\",\n        \"invalidPayoff\": \"Ungültige Auszahlung in Zweig #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Auswahlbürste deaktiviert\",\n        \"brushEnabled\": \"Auswahlbürste aktiviert\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregierte Auszahlung {{number}}\",\n                \"named\": \"Aggregierte {{name}}\"\n            },\n            \"probabilityToEnter\": \"Wahrscheinlichkeit\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Wahrscheinlichkeit: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addText\": \"Add Text\",\n            \"paste\": \"Paste\",\n            \"selectAllNodes\": \"Select all nodes\"\n        },\n        \"node\":{\n            \"copy\": \"Copy\",\n            \"cut\": \"Cut\",\n            \"paste\": \"Paste\",\n            \"delete\": \"Delete\",\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addTerminalNode\": \"Add Terminal Node\",\n            \"convert\":{\n                \"decision\": \"As Decision Node\",\n                \"chance\": \"As Chance Node\",\n                \"terminal\": \"As Terminal Node\"\n            },\n            \"selectSubtree\": \"Select subtree\",\n            \"fold\": \"Fold subtree\",\n            \"unfold\": \"Unfold subtree\",\n            \"flipSubtree\": \"Flip subtree\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inject Decision Node\",\n            \"injectChanceNode\": \"Inject Chance Node\"\n        },\n        \"text\":{\n            \"delete\": \"Delete\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Path not ending with terminal node\",\n        \"probabilityDoNotSumUpTo1\": \"Probabilities do not sum up to 1\",\n        \"invalidProbability\": \"Invalid probability in edge #{{number}}\",\n        \"invalidPayoff\": \"Invalid payoff in edge #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selection brush disabled\",\n        \"brushEnabled\": \"Selection brush enabled\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregated Payoff {{number}}\",\n                \"named\": \"Aggregated {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probability to enter\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probability: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addText\": \"Ajouter du texte\",\n            \"paste\": \"Coller\",\n            \"selectAllNodes\": \"Sélectionner tous les nouds\"\n        },\n        \"node\":{\n            \"copy\": \"Copie\",\n            \"cut\": \"Couper\",\n            \"paste\": \"Coller\",\n            \"delete\": \"Effacer\",\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addTerminalNode\": \"Ajouter un noeud terminal\",\n            \"convert\":{\n                \"decision\": \"Comme noud de décision\",\n                \"chance\": \"Comme noud aléatoire\",\n                \"terminal\": \"Comme un noeud terminal\"\n            },\n            \"selectSubtree\": \"Sélectionner une sous-arborescence\",\n            \"fold\": \"Plier sous-arbre\",\n            \"unfold\": \"Déplier arbre sous-arbre\",\n            \"flipSubtree\": \"Basculer sous-arbre\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Injecter un noeud de décision\",\n            \"injectChanceNode\": \"Injecter un noeud de chance\"\n        },\n        \"text\":{\n            \"delete\": \"Effacer\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Parcours non terminé par noeud terminal\",\n        \"probabilityDoNotSumUpTo1\": \"La somme des probabilités n'est pas 1 ou plus\",\n        \"invalidProbability\": \"Probabilité invalide - le bord #{{number}}\",\n        \"invalidPayoff\": \"Avantage invalide - le bord #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Brosse de sélection désactivée\",\n        \"brushEnabled\": \"Brosse de sélection activée\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Avantage agrégé {{number}}\",\n                \"named\": \"Agrégé  {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilité d'entrée\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilité: {{value}}\"\n        }\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        let resources = {\n            en: {\n                translation: en\n            },\n            pl: {\n                translation: pl\n            },\n            it: {\n                translation: it\n            },\n            de: {\n                translation: de\n            },\n            fr: {\n                translation: fr\n            }\n        };\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: resources\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addText\": \"Aggiungi testo\",\n            \"paste\": \"Incolla\",\n            \"selectAllNodes\": \"Seleziona tutti i nodi\"\n        },\n        \"node\":{\n            \"copy\": \"Copia\",\n            \"cut\": \"Taglia\",\n            \"paste\": \"Incolla\",\n            \"delete\": \"Cancella\",\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addTerminalNode\": \"Aggiungi un nodo terminale\",\n            \"convert\":{\n                \"decision\": \"Come Decision Node\",\n                \"chance\": \"Come Chance Node\",\n                \"terminal\": \"Come Terminal Node\"\n            },\n            \"selectSubtree\": \"Seleziona Sotto-albero\",\n            \"fold\": \"Piega sotto-albero\",\n            \"unfold\": \"Dispiegarsi sotto-albero\",\t\t\t\n            \"flipSubtree\": \"Ribalta sotto-albero\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inietta nodo di decisione\",\n            \"injectChanceNode\": \"Inietta nodo opportunità\"\n        },\n        \"text\":{\n            \"delete\": \"Cancella\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Percorso senza nodo terminale\",\n        \"probabilityDoNotSumUpTo1\": \"La somma delle probabilità è diversa da 1\",\n        \"invalidProbability\": \"Probabilità non valida - bordo #{{number}}\",\n        \"invalidPayoff\": \"Saldo non valido - bordo #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selezione pennello disabilitata\",\n        \"brushEnabled\": \"Selezione pennello abilitata\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Saldo aggregato {{number}}\",\n                \"named\": \"Aggregato {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilità da inserire\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilità: {{value}}\"\n        }\n    }\n}\n","module.exports={\n\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addText\": \"Dodaj Tekst\",\n            \"paste\": \"Wklej\",\n            \"selectAllNodes\": \"Zaznacz wszystkie węzły\"\n        },\n        \"node\":{\n            \"copy\": \"Kopiuj\",\n            \"cut\": \"Wytnij\",\n            \"paste\": \"Wklej\",\n            \"delete\": \"Usuń\",\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addTerminalNode\": \"Dodaj Węzeł Końcowy\",\n            \"convert\":{\n                \"decision\": \"Jako Węzeł Decyzyjny\",\n                \"chance\": \"Jako Węzeł Losowy\",\n                \"terminal\": \"Jako Węzeł Końcowy\"\n            },\n            \"selectSubtree\": \"Zaznacz poddrzewo\",\n            \"fold\": \"Zwiń poddrzewo\",\n            \"unfold\": \"Rozwiń poddrzewo\",\n            \"flipSubtree\": \"Przewróć poddrzewo\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Wstrzyknij Węzeł Decyzyjny\",\n            \"injectChanceNode\": \"Wstrzyknij Węzeł Losowy\"\n        },\n        \"text\":{\n            \"delete\": \"Usuń\"\n        }\n    },\n\n    \"validation\":{\n        \"incompletePath\": \"Ostatnim węzłem w ścieżce powinien być Węzeł Końcowy\",\n        \"probabilityDoNotSumUpTo1\": \"Prawdopodobieństwa nie sumują sie do 1\",\n        \"invalidProbability\": \"Niepoprawne prawdopodobieństwo na krawędzi #{{number}}\",\n        \"invalidPayoff\": \"Niepoprawna wypłata na krawędzi #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Zaznaczanie wyłączone\",\n        \"brushEnabled\": \"Zaznaczanie włączone\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Zagregowana wypłata {{number}}\",\n                \"named\": \"Zagregowana {{name}}\"\n            },\n            \"probabilityToEnter\": \"Prawdopodobieństwo wejścia\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Prawdopodobieństwo: {{value}}\"\n        }\n    }\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport * from './tree-designer'\nexport * from './app-utils'\nexport * from './templates'\nexport * from './tooltip'\nexport * from './d3-extensions'\nexport {default as d3} from './d3'\n\n\n","import {Utils} from 'sd-utils'\nimport {domain as model} from 'sd-model'\nimport * as d3 from './d3'\nimport circleSymbol from './symbols/circle'\nimport triangleSymbol from './symbols/triangle'\nimport {AppUtils} from \"./app-utils\";\n\n/*Tree layout manager*/\nexport class Layout{\n\n    treeDesigner;\n    data;\n    config;\n\n    nodeTypeToSymbol = {\n        'decision': d3.symbolSquare,\n        'chance': circleSymbol,\n        \"terminal\": triangleSymbol\n    };\n\n    static MANUAL_LAYOUT_NAME = 'manual';\n\n\n    onAutoLayoutChanged=[];\n\n    nodeTypeOrder = {\n        'decision' : 0,\n        'chance': 0,\n        'terminal': 1\n    };\n\n    treeMargin = 50;\n    targetSymbolSize={};\n    nodeSeparation = (a, b) => a.parent === b.parent ? 1 : 1.2\n\n    constructor(treeDesigner, data, config){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n        this.config = config;\n\n    }\n\n    update(node){\n        if(node && node.$parent){\n            node.$parent.childEdges.sort((a,b)=>a.childNode.location.y - b.childNode.location.y)\n        }\n        if(!this.isManualLayout()){\n            return this.autoLayout(this.config.type, true);\n        }\n        if(node){\n            this.moveNodeToEmptyPlace(node);\n        }else{\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    isManualLayout(){\n        return this.config.type === Layout.MANUAL_LAYOUT_NAME;\n    }\n\n    getNewChildLocation(parent){\n        if(!parent){\n            return new model.Point(this.getNodeMinX(), this.getNodeMinY())\n        }\n        var x = parent.location.x + this.config.gridWidth;\n        var y = parent.location.y;\n        if(parent.childEdges.length){\n            y = parent.childEdges[parent.childEdges.length-1].childNode.location.y+1;\n        }\n\n        return new model.Point(x, y)\n    }\n\n    getInjectedNodeLocation(edge){\n\n        var p = edge.$linePoints[2];\n\n        return new model.Point(p[0], p[1])\n    }\n\n    moveNodeToEmptyPlace(node, redrawIfChanged=true){\n        var positionMap = {};\n        var self = this;\n        node.location.x = Math.max(this.getNodeMinX(node), node.location.x);\n        node.location.y = Math.max(this.getNodeMinY(node), node.location.y);\n\n\n        this.nodesSortedByX = this.data.nodes.slice();\n        this.nodesSortedByX.sort((a,b)=>a.location.x - b.location.x);\n\n        function findCollidingNode(node, location){\n            return Utils.find(self.nodesSortedByX, n=>{\n                if(node == n){\n                    return false;\n                }\n\n                var margin = self.config.nodeSize/3;\n                var x = n.location.x;\n                var y = n.location.y;\n\n                return (location.x - margin <= x && location.x + margin >= x\n                    && location.y - margin <= y && location.y + margin >= y)\n            });\n        }\n\n        var stepX = this.config.nodeSize/2;\n        var stepY = this.config.nodeSize+10;\n        var stepXsameParent = 0;\n        var stepYsameParent = 75;\n        var changed = false;\n        var colidingNode;\n        var newLocation = new model.Point(node.location);\n        while(colidingNode = findCollidingNode(node, newLocation)){\n            changed=true;\n            var sameParent = node.$parent && colidingNode.$parent && node.$parent===colidingNode.$parent;\n            if(sameParent){\n                newLocation.move(stepXsameParent, stepYsameParent);\n            }else{\n                newLocation.move(stepX, stepY);\n            }\n        }\n        if(changed){\n            node.moveTo(newLocation.x,newLocation.y, true);\n            if(redrawIfChanged){\n                this.treeDesigner.redraw(true);\n            }\n        }\n    }\n\n    disableAutoLayout(){\n        this.config.type = Layout.MANUAL_LAYOUT_NAME;\n        this._fireOnAutoLayoutChangedCallbacks();\n    }\n\n\n    nodeSymbolSize = {};\n    drawNodeSymbol(path, transition){\n\n        var self = this;\n        var nodeSize = this.config.nodeSize;\n        this.nodeSymbol = d3.symbol().type(d=> self.nodeTypeToSymbol[d.type])\n            .size(d=>self.nodeSymbolSize[d.$id] ? Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", 64) : 64);\n\n        path\n            .each(function (d) {\n                var path = d3.select(this);\n                var prev = path.attr(\"d\");\n                if(!prev){\n                    path.attr(\"d\", self.nodeSymbol);\n                }\n                var size = Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\");\n                if(!size){\n                    var box = path.node().getBBox();\n                    var error = Math.min(nodeSize / box.width, nodeSize / box.height);\n                    size = error * error * (self.nodeSymbolSize[d.$id]||64);\n                    Utils.set(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", size);\n                }\n                if(transition){\n                    path =  path.transition();\n\n                }else{\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n                path.attr(\"d\", self.nodeSymbol);\n                if(transition){\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n            });\n    }\n\n    nodeLabelPosition(selection) {\n        return selection\n            .attr('x', 0)\n            .attr('y', -this.config.nodeSize / 2 - 7)\n    }\n\n    nodePayoffPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', 0)\n            .attr('y', this.config.nodeSize / 2 + 7)\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeAggregatedPayoffPosition(selection) {\n        var x = this.config.nodeSize / 2 + 7;\n        var self = this;\n        selection\n            .attr('x', x)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let items = d.displayValue('aggregatedPayoff');\n                let number = Utils.isArray(items) ? items.filter(it=>it !== undefined).length : 1;\n                if(number>1){\n                    return -this.getBBox().height/2 + fontSize/2;\n                }\n                return -Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            });\n\n        selection.selectAll('tspan').attr('x', x);\n        return selection;\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'hanging')\n    }\n\n    nodeProbabilityToEnterPosition(selection) {\n        var self = this;\n\n        return Layout.setHangingPosition(selection)\n            .attr('x', this.config.nodeSize / 2 + 7)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let aggregatedPayoffs = d.displayValue('aggregatedPayoff');\n                let aggregatedPayoffsNumber = Utils.isArray(aggregatedPayoffs) ? aggregatedPayoffs.filter(it=>it !== undefined).length : 1;\n                if(aggregatedPayoffsNumber>1){\n\n                    return fontSize*0.6\n                }\n\n                return Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            })\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'central')\n    }\n\n    nodeIndicatorPosition(selection) {\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 8)\n            .attr('y', - this.config.nodeSize/2)\n            .attr('dominant-baseline', 'central')\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeUnfoldButtonPosition(selection) {\n\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 5)\n            .attr('y', 0)\n            .attr('dominant-baseline', 'central')\n    }\n\n    edgeLineD(edge){\n        var line = d3.line()\n            .x(d=> d[0])\n            .y(d=> d[1]);\n        // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n        var parentNode = edge.parentNode;\n        var childNode = edge.childNode;\n\n        var dX = childNode.location.x - parentNode.location.x;\n        var dY = childNode.location.y - parentNode.location.y;\n\n        var sign = dX>=0 ? 1 : -1;\n\n        var slantStartXOffset = Math.min(dX/2, this.config.nodeSize/2+10);\n        var slantWidth = Math.min(this.config.edgeSlantWidthMax, Math.max(dX/2 - slantStartXOffset, 0));\n\n        var point1 = [parentNode.location.x +this.config.nodeSize/2 + 1, parentNode.location.y];\n        var point2 = [Math.max(parentNode.location.x+slantStartXOffset, point1[0]), parentNode.location.y];\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.nodeSize/2+8, dX/2)))), childNode.location.y];\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n        edge.$linePoints = [point1, point2, point3, point4];\n        return line(edge.$linePoints);\n    }\n\n    edgePayoffPosition(selection) {\n        Layout.setHangingPosition(selection)\n            .attr('x', d=>d.$linePoints[2][0] + 2)\n            .attr('y', d=>d.$linePoints[2][1] + 7);\n\n        selection.selectAll('tspan').attr('x', function(d){\n            return d3.select(this.parentNode).datum().$linePoints[2][0] + 2\n        });\n        return selection;\n\n    }\n\n    edgeLabelPosition(selection) {\n        return selection\n            .attr('transform', d=>'translate('+(d.$linePoints[2][0] + 2)+','+(d.$linePoints[2][1] - 7)+')')\n            // .attr('x', d=>d.$linePoints[2][0] + 2)\n            // .attr('y', d=>d.$linePoints[2][1] - 7)\n\n    }\n\n    edgeProbabilityPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', function (d) {\n                var len = this.getComputedTextLength();\n                var min = d.$linePoints[2][0] + 2 + this.previousSibling.childNodes[0].getComputedTextLength() + 7 + len;\n                return Math.max(min, d.$linePoints[3][0] - 8);\n            })\n            .attr('y', d=>d.$linePoints[2][1] + 7)\n    }\n\n    getMinMarginBetweenNodes(){\n      return this.config.nodeSize + 30;\n    }\n\n\n    getNodeMinX(d){\n        var self = this;\n        if(d && d.$parent){// && !self.isNodeSelected(d.$parent)\n            return d.$parent.location.x + self.getMinMarginBetweenNodes();\n        }\n        return self.config.nodeSize/2;\n    }\n\n    getNodeMinY(d){\n        return this.config.nodeSize/2;\n    }\n\n    getNodeMaxX(d){\n        var self = this;\n\n        if(d && d.childEdges.length){\n            return d3.min(d.childEdges, e=>!e.childNode.$hidden ? e.childNode.location.x : 9999999)-self.getMinMarginBetweenNodes();\n        }\n        return 9999999;\n    }\n\n    setGridWidth(width, withoutStateSaving){\n        var self=this;\n        if(this.config.gridWidth===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridWidth: self.config.gridWidth\n                },\n                onUndo: (data)=> {\n                    self.setGridWidth(data.gridWidth, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridWidth(width, true);\n                }\n            });\n        }\n\n        this.config.gridWidth=width;\n        this.update();\n    }\n\n    setGridHeight(gridHeight, withoutStateSaving){\n        var self=this;\n        if(this.config.gridHeight===gridHeight){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridHeight: self.config.gridHeight\n                },\n                onUndo: (data)=> {\n                    self.setGridHeight(data.gridHeight, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridHeight(gridHeight, true);\n                }\n            });\n        }\n\n        this.config.gridHeight=gridHeight;\n        this.update();\n    }\n\n    setNodeSize(nodeSize, withoutStateSaving){\n        var self=this;\n        if(this.config.nodeSize===nodeSize){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    nodeSize: self.config.nodeSize\n                },\n                onUndo: (data)=> {\n                    self.setNodeSize(data.nodeSize, true);\n                },\n                onRedo: (data)=> {\n                    self.setNodeSize(nodeSize, true);\n                }\n            });\n        }\n\n        this.config.nodeSize=nodeSize;\n        this.update();\n        if(this.isManualLayout()){\n            this.fitNodesInPlottingRegion(self.data.getRoots());\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    setEdgeSlantWidthMax(width, withoutStateSaving){\n        var self=this;\n        if(this.config.edgeSlantWidthMax===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    edgeSlantWidthMax: self.config.edgeSlantWidthMax\n                },\n                onUndo: (data)=> {\n                    self.setEdgeSlantWidthMax(data.edgeSlantWidthMax, true);\n                },\n                onRedo: (data)=> {\n                    self.setEdgeSlantWidthMax(width, true);\n                }\n            });\n        }\n\n        this.config.edgeSlantWidthMax=width;\n        this.treeDesigner.redraw(true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        var self=this;\n\n\n\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    newLayout: type,\n                    currentLayout: self.config.type\n                },\n                onUndo: (data)=> {\n                    self.config.type = data.currentLayout;\n                    self._fireOnAutoLayoutChangedCallbacks();\n                },\n                onRedo: (data)=> {\n                    self.autoLayout(data.newLayout, true);\n                }\n            });\n        }\n        this.config.type = type;\n        if(!this.data.nodes.length){\n            this._fireOnAutoLayoutChangedCallbacks();\n            return;\n        }\n\n        var prevTreeMaxY = self.getNodeMinY();\n        this.data.getRoots().forEach(r=>{\n            var root = d3.hierarchy(r, d=>{\n                return d.childEdges.filter(e=>!e.$hidden).map(e=>e.childNode);\n            });\n\n            // root.sort((a,b)=>self.nodeTypeOrder[a.data.type]-self.nodeTypeOrder[b.data.type]);\n            root.sort((a,b)=>a.data.location.y - b.data.location.y);\n\n\n            var layout;\n            if(type==='cluster'){\n                layout = d3.cluster();\n            }else{\n                layout = d3.tree();\n            }\n            layout.nodeSize([self.config.gridHeight, self.config.gridWidth]);\n            layout.separation(self.nodeSeparation);\n\n            layout(root);\n            var minY = 999999999;\n            root.each(d=>{\n                minY = Math.min(minY, d.x);\n            });\n\n            var dy = root.x - minY + prevTreeMaxY;\n            var dx = self.getNodeMinX();\n            var maxY=0;\n            root.each(d=>{\n                d.data.location.x = d.y + dx;\n                d.data.location.y = d.x + dy;\n\n                maxY = Math.max(maxY, d.data.location.y);\n            });\n\n            prevTreeMaxY = maxY + self.config.nodeSize+self.treeMargin;\n        });\n\n\n        // this.transition = true;\n        this.treeDesigner.redraw(true);\n        // this.transition = false;\n\n        this._fireOnAutoLayoutChangedCallbacks();\n        return this;\n    }\n\n    fitNodesInPlottingRegion(nodes){\n        var self = this;\n        var topY = d3.min(nodes, n=>n.location.y);\n        var minY = self.getNodeMinY();\n        var dy = topY - minY;\n\n        var minX = d3.min(nodes, n=>n.location.x);\n        var dx = minX - self.getNodeMinX();\n\n        if(dy<0 ||  dx<0){\n            nodes.forEach(n=>n.move(-dx, -dy));\n        }\n    }\n\n    moveNodes(nodes, dx, dy, pivot){\n        var self = this;\n        var limit = self.config.limitNodePositioning;\n        if(limit){\n            if(dx<0){\n                nodes.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                nodes.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n        var minY = d3.min(nodes, d=>d.location.y);\n        if(minY + dy < self.getNodeMinY()){\n            dy = self.getNodeMinY() - minY;\n        }\n\n        nodes.forEach(d=>{\n            if(limit){\n                Layout.backupNodeLocation(d);\n                var minX = self.getNodeMinX(d);\n                var maxX = self.getNodeMaxX(d);\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y += dy;\n            }else{\n                d.location.x +=dx;\n                d.location.y += dy;\n            }\n\n        });\n\n\n        var revertX = pivot && self.config.limitNodePositioning && (pivot.location.x === pivot.$location.x);\n\n        nodes.forEach(d=>{\n            if(revertX){\n                d.location.x = d.$location.x;\n            }\n            self.treeDesigner.updateNodePosition(d);\n        });\n\n\n    }\n\n    static backupNodeLocation(node) {\n        node.$location = new model.Point(node.location);\n    }\n\n    _fireOnAutoLayoutChangedCallbacks(){\n        this.onAutoLayoutChanged.forEach(c=>c(this.config.type));\n    }\n\n    static setHangingPosition(selection){\n        // window.setTimeout(function(){\n        //     selection.each(function(){\n        //         var h =  this.getBBox().height;\n        //         d3.select(this).attr('dy', h);\n        //     });\n        // },0);\n\n        if(AppUtils.isHidden(selection.node())){ // setting hanging position of hidden elements fails on firefox\n            return selection;\n        }\n\n\n        selection.each(function(){\n            var h =  this.getBBox().height;\n            d3.select(this).attr('dy', '0.75em');\n        });\n\n        return selection;\n    }\n\n}\n\n\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class NodeDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        if(self.ignoreDrag){\n            self.ignoreDrag=false;\n            self.ignoredDrag=true;\n            return;\n        }\n        self.ignoredDrag=false;\n\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var node = d3.select(this);\n        if(!node.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectNode(d);\n        node.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes(true);\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedNode, self){\n        if(self.ignoredDrag){\n            return;\n        }\n\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n        if(self.selectedNodes.length>5 && self.dragEventCount%2!=1){\n            return;\n        }\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n        self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\n\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.redrawEdges();\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n        var node = d3.select(this).classed(\"dragging\", false);\n        if(self.ignoredDrag){\n            return;\n        }\n        self.treeDesigner.layout.update(draggedNode)\n    }\n\n    cancelDrag(){\n        this.ignoreDrag = true;\n    }\n\n}\n\n\n","var epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nexport default {\n    /*draw: function(context, size) {\n        var r = Math.sqrt(size / pi);\n        context.moveTo(r, 0);\n        context.arc(0, 0, r, 0, tau);\n    }*/\n    draw: function(context, size) {\n\n        var r = Math.sqrt(size / pi);\n        var dist =0.552284749831 * r;\n\n        context.moveTo(-r, 0)\n        // context.lineTo(2*r, 2*r)\n        // context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n        context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n\n        context.bezierCurveTo(dist, -r, r, -dist, r,0);\n\n        context.bezierCurveTo(r, dist, dist, r, 0, r);\n\n        context.bezierCurveTo(-dist, r, -r, dist, -r, 0);\n    }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n    draw: function(context, size) {\n        var r = Math.sqrt(size / Math.PI);\n        context.moveTo(-r, 0);\n        context.lineTo(0.9*r, -r);\n        context.lineTo(0.9*r, r);\n        context.closePath();\n    }\n};\n","import {Utils} from \"sd-utils\";\nimport {i18n} from './i18n/i18n'\n\nexport class Templates{\n\n    static growl = require('./templates/growl_message.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n    static styleRule(selector, props){\n        var s = selector+ '{';\n        props.forEach(p=> s+=Templates.styleProp(p[0], p[1]));\n        s+='} ';\n        return s;\n    }\n    static styleProp(styleName, variableName){\n        return  styleName+': <%= '+variableName+' %>; '\n    }\n\n    static treeDesignerSelector = 'svg.sd-tree-designer';\n    static nodeSelector(type, clazz){\n        var s = Templates.treeDesignerSelector+' .node';\n        if(type){\n            s+='.'+type+'-node';\n        }\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n    static edgeSelector(clazz){\n        var s = Templates.treeDesignerSelector+' .edge';\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n\n    static treeDesignerStyles =\n\n        Templates.styleRule(Templates.treeDesignerSelector,[\n            ['font-size', 'fontSize'],\n            ['font-family', 'fontFamily'],\n            ['font-weight', 'fontWeight'],\n            ['font-style', 'fontStyle']\n        ])+\n        //   node\n        Templates.styleRule(Templates.nodeSelector()+' path',[\n            ['fill', 'node.fill'],\n            ['stroke-width', 'node.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'optimal')+' path, '+Templates.nodeSelector('chance', 'optimal')+' path,' +Templates.nodeSelector('terminal', 'optimal')+' path',[\n            ['stroke', 'node.optimal.stroke'],\n            ['stroke-width', 'node.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .label',[\n            ['font-size', 'node.label.fontSize'],\n            ['fill', 'node.label.color']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff',[\n            ['font-size', 'node.payoff.fontSize'],\n            ['fill', 'node.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff.negative',[\n            ['fill', 'node.payoff.negativeColor'],\n        ])+\n\n        //    decision node\n        Templates.styleRule(Templates.nodeSelector('decision')+' path',[\n            ['fill', 'node.decision.fill'],\n            ['stroke', 'node.decision.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'selected')+' path',[\n            ['fill', 'node.decision.selected.fill']\n        ])+\n\n        //    chance node\n        Templates.styleRule(Templates.nodeSelector('chance')+' path',[\n            ['fill', 'node.chance.fill'],\n            ['stroke', 'node.chance.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('chance', 'selected')+' path',[\n            ['fill', 'node.chance.selected.fill']\n        ])+\n\n        //    terminal node\n        Templates.styleRule(Templates.nodeSelector('terminal')+' path',[\n            ['fill', 'node.terminal.fill'],\n            ['stroke', 'node.terminal.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal', 'selected')+' path',[\n            ['fill', 'node.terminal.selected.fill']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff',[\n            ['font-size', 'node.terminal.payoff.fontSize'],\n            ['fill', 'node.terminal.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff.negative',[\n            ['fill', 'node.terminal.payoff.negativeColor'],\n        ])+\n\n\n        //probability\n        Templates.styleRule(Templates.treeDesignerSelector+' .node .probability-to-enter, '+Templates.treeDesignerSelector+' .edge .probability',[\n            ['font-size', 'probability.fontSize'],\n            ['fill', 'probability.color']\n        ])+\n\n        //edge\n        Templates.styleRule(Templates.edgeSelector()+' path',[\n            ['stroke', 'edge.stroke'],\n            ['stroke-width', 'edge.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow path',[\n            ['fill', 'edge.stroke'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector('optimal')+' path',[\n            ['stroke', 'edge.optimal.stroke'],\n            ['stroke-width', 'edge.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-optimal path',[\n            ['fill', 'edge.optimal.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector('selected')+' path',[\n            ['stroke', 'edge.selected.stroke'],\n            ['stroke-width', 'edge.selected.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-selected path',[\n            ['fill', 'edge.selected.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .label',[\n            ['font-size', 'edge.label.fontSize'],\n            ['fill', 'edge.label.color']\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .payoff',[\n            ['font-size', 'edge.payoff.fontSize'],\n            ['fill', 'edge.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector()+' .payoff.negative',[\n            ['fill', 'edge.payoff.negativeColor'],\n        ])+\n\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-title',[\n            ['font-size', 'title.fontSize'],\n            ['font-weight', 'title.fontWeight'],\n            ['font-style', 'title.fontStyle'],\n            ['fill', 'title.color']\n        ]) +\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-description',[\n            ['font-size', 'description.fontSize'],\n            ['font-weight', 'description.fontWeight'],\n            ['font-style', 'description.fontStyle'],\n            ['fill', 'description.color']\n        ])\n}\n\n\n\n\n","module.exports = \"<div class=\\\"sd-growl-message <%=type%>\\\">\\n    <div class=\\\"sd-growl-message-text\\\">\\n        <%= message %>\\n    </div>\\n</div>\\n\";\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class TextDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var text = d3.select(this);\n        if(!text.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectText(d);\n        text.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes();\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedText, self){\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n\n        draggedText.location.move(dx, dy);\n        self.treeDesigner.updateTextPosition(draggedText);\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n         d3.select(this).classed(\"dragging\", false);\n    }\n\n}\n\n\n","import * as d3 from './d3'\nimport {Utils} from 'sd-utils'\n\nexport class Tooltip {\n    static getContainer(){\n        return d3.select(\"body\").selectOrAppend('div.sd-tooltip');\n    }\n\n    static show(html, xOffset = 5, yOffset = 28, event, duration=null) {\n        var container = Tooltip.getContainer()\n            .style(\"opacity\", 0);\n        container.transition()\n            .duration(200)\n            .style(\"opacity\", .98);\n        container.html(html);\n        Tooltip.updatePosition(xOffset, yOffset, event);\n        if(duration){\n            setTimeout(function(){\n                Tooltip.hide();\n            }, duration)\n        }\n    }\n\n    static updatePosition(xOffset = 5, yOffset = 28, event) {\n        event = event || d3.event;\n        Tooltip.getContainer()\n            .style(\"left\", (event.pageX + xOffset) + \"px\")\n            .style(\"top\", (event.pageY - yOffset) + \"px\");\n    }\n\n    static hide(duration = 500) {\n        var t = Tooltip.getContainer();\n        if(duration){\n            t = t.transition().duration(duration)\n        }\n        t.style(\"opacity\", 0);\n    }\n\n    static attach(target, htmlOrFn, xOffset, yOffset) {\n        target.on('mouseover', function (d, i) {\n            var html = null;\n            if (Utils.isFunction(htmlOrFn)) {\n                html = htmlOrFn(d, i);\n            } else {\n                html = htmlOrFn;\n            }\n\n            if (html !== null && html !== undefined && html !== '') {\n                Tooltip.show(html, xOffset, yOffset);\n            }else{\n                Tooltip.hide(0);\n            }\n\n        }).on('mousemove', function (d) {\n            Tooltip.updatePosition(xOffset, yOffset);\n        }).on(\"mouseout\", function (d) {\n            Tooltip.hide();\n        });\n    }\n}\n","import * as d3 from \"./d3\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {ContextMenu} from \"./context-menu/context-menu\";\nimport {MainContextMenu} from \"./context-menu/main-context-menu\";\nimport {NodeContextMenu} from \"./context-menu/node-context-menu\";\nimport {Layout} from \"./layout\";\nimport {NodeDragHandler} from \"./node-drag-handler\";\nimport {Tooltip} from \"./tooltip\";\nimport {Templates} from \"./templates\";\nimport {TextDragHandler} from \"./text-drag-handler\";\nimport {TextContextMenu} from \"./context-menu/text-context-menu\";\nimport {EdgeContextMenu} from \"./context-menu/edge-context-menu\";\nimport * as Hammer from \"hammerjs\";\nimport {i18n} from \"./i18n/i18n\";\n\n\nexport class TreeDesignerConfig {\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    lng = 'en';\n    layout= {\n        type: 'tree',\n        nodeSize: 40,\n        limitNodePositioning: true,\n        gridHeight: 75,\n        gridWidth: 150,\n        edgeSlantWidthMax: 20\n    };\n    fontFamily = 'sans-serif';\n    fontSize = '12px';\n    fontWeight = 'normal';\n    fontStyle = 'normal';\n    node = {\n        strokeWidth: '1px',\n        optimal: {\n            stroke: '#006f00',\n            strokeWidth: '1.5px',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'black'\n        },\n        payoff: {\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        },\n        decision: {\n            fill: '#ff7777',\n            stroke: '#660000',\n\n            selected: {\n                fill: '#aa3333',\n                // stroke: '#666600'\n            }\n        },\n        chance: {\n            fill: '#ffff44',\n            stroke: '#666600',\n\n            selected: {\n                fill: '#aaaa00',\n                // stroke: '#666600'\n            }\n        },\n        terminal:{\n            fill: '#44ff44',\n            stroke: 'black',\n            selected: {\n                fill: '#00aa00',\n                // stroke: 'black'\n            },\n            payoff: {\n                fontSize: '1em',\n                color: 'black',\n                negativeColor: '#b60000'\n            },\n        }\n    };\n    edge={\n        stroke: '#424242',\n        strokeWidth: '1.5',\n        optimal:{\n            stroke: '#006f00',\n            strokeWidth: '2.4',\n        },\n        selected:{\n            stroke: '#045ad1',\n            strokeWidth: '3.5',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'back'\n        },\n        payoff:{\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        }\n\n    };\n    probability = {\n        fontSize: '1em',\n        color: '#0000d7'\n    };\n    title = {\n        fontSize: '16px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 15,\n            bottom: 10\n        }\n    };\n    description = {\n        show: true,\n        fontSize: '12px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 5,\n            bottom: 10\n        }\n    };\n\n    readOnly= false;\n    disableAnimations=false;\n    forceFullEdgeRedraw=false;\n    hideLabels=false;\n    hidePayoffs=false;\n    hideProbabilities=false;\n    raw=false;\n\n\n    payoffNumberFormatter = (v, i)=> v;\n    probabilityNumberFormatter  = (v)=> v;\n\n    onNodeSelected = (node) => {};\n    onEdgeSelected = (edge) => {};\n    onTextSelected = (text) => {};\n    onSelectionCleared = () => {};\n\n    operationsForObject = (o) => [];\n\n    payoffNames = [null, null];\n    maxPayoffsToDisplay = 1;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n\nexport class TreeDesigner {\n\n    config;\n    container;\n    data; //data model manager\n    svg;\n\n    constructor(container, dataModel, config){\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    }\n\n    setConfig(config) {\n        this.config = new TreeDesignerConfig(config);\n        if(this.layout){\n            this.layout.config=this.config.layout;\n        }\n        this.updateCustomStyles();\n        return this;\n    }\n\n    init(){\n\n        this.initSvg();\n        this.initLayout();\n        this.initI18n();\n        this.initBrush();\n        this.initEdgeMarkers();\n\n        this.updateCustomStyles();\n        if(!this.config.readOnly){\n            this.initMainContextMenu();\n            this.initNodeContextMenu();\n            this.initEdgeContextMenu();\n            this.initNodeDragHandler();\n            this.initTextDragHandler();\n            this.initTextContextMenu();\n        }\n        this.redraw();\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n\n    updateCustomStyles(){\n        d3.select('head').selectOrAppend('style#sd-tree-designer-style').html(Templates.get('treeDesignerStyles', this.config));\n        return this;\n    }\n\n    initLayout(){\n        this.layout = new Layout(this, this.data, this.config.layout);\n    }\n\n    initNodeDragHandler(){\n        this.nodeDragHandler = new NodeDragHandler(this, this.data);\n    }\n\n    initTextDragHandler(){\n        this.textDragHandler = new TextDragHandler(this, this.data);\n    }\n\n    redraw(withTransitions=false){\n\n        var self = this;\n        withTransitions = !self.config.disableAnimations && withTransitions;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(withTransitions);\n        if(withTransitions){\n            self.transitionPrev = self.transition;\n            self.transition = true;\n        }\n        this.redrawNodes();\n        this.redrawEdges();\n        this.redrawFloatingTexts();\n        this.updateValidationMessages();\n        if(withTransitions){\n            self.transition =  self.transitionPrev;\n        }\n        setTimeout(function(){\n            self.updatePlottingRegionSize();\n        },10);\n\n        return this;\n    }\n\n    computeAvailableSpace(){\n        this.availableHeight = AppUtils.sanitizeHeight(this.config.height, this.container, this.config.margin);\n        this.availableWidth = AppUtils.sanitizeWidth(this.config.width, this.container, this.config.margin);\n    }\n\n    initSvg() {\n        var c = this;\n        var self = this;\n        this.computeAvailableSpace();\n        this.svg = this.container.selectOrAppend('svg.sd-tree-designer');\n        this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\n\n        this.mainGroup = this.svg.selectOrAppend('g.main-group');\n        this.updateMargin();\n\n\n        if (!this.config.width) {\n            d3.select(window)\n                .on(\"resize.tree-designer\", function () {\n                    self.updatePlottingRegionSize();\n                    self.redrawDiagramTitle();\n                });\n        }\n\n        var mc = new Hammer.Manager(this.svg.node(), {touchAction : 'auto'});\n        mc.add(new Hammer.Press({\n            pointerType: 'touch'\n        }));\n\n        mc.add(new Hammer.Pinch({\n            pointerType: 'touch'\n        }));\n\n        var cancel;\n        mc.on('pinchstart', function(){\n            self.disableBrush();\n        })\n        mc.on('pinch', function(){\n            cancel = Utils.waitForFinalEvent(()=>self.enableBrush(), 'pinchend', 5000)\n        })\n    }\n\n    updateMargin(withTransitions){\n        var self = this;\n        var margin = this.config.margin;\n        var group = this.mainGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        this.topMargin = margin.top;\n        if(this.diagramTitle||this.diagramDescription){\n            this.topMargin = parseInt(this.diagramTitle ? this.config.title.margin.top : 0) + this.getTitleGroupHeight()\n                +  Math.max(this.topMargin, parseInt(this.config.title.margin.bottom));\n        }\n\n        group.attr(\"transform\", \"translate(\" + margin.left + \",\" + this.topMargin + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setMargin(margin, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    margin: Utils.clone(self.config.margin)\n                },\n                onUndo: (data)=> {\n                    self.setMargin(data.margin, true);\n                },\n                onRedo: (data)=> {\n                    self.setMargin(margin, true);\n                }\n            });\n        }\n        Utils.deepExtend(this.config.margin, margin);\n        this.redrawDiagramTitle();\n        this.updateMargin(true);\n    }\n\n    initContainer(containerIdOrElem) {\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else if(containerIdOrElem._parents){\n            this.container = containerIdOrElem\n        }else{\n            this.container = d3.select(containerIdOrElem);\n        }\n    }\n\n    updatePlottingRegionSize() {\n        var changed = false;\n        this.computeAvailableSpace();\n        var margin = this.config.margin;\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        var mainGroupBox = this.mainGroup.node().getBBox();\n        var newSvgWidth = mainGroupBox.width+mainGroupBox.x+margin.left+margin.right;\n        this.container.classed('with-overflow-x', newSvgWidth>=this.availableWidth);\n        newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\n        if(svgWidth!=newSvgWidth){\n            changed = true;\n            this.svg.attr('width', newSvgWidth);\n        }\n        var newSvgHeight = mainGroupBox.height+mainGroupBox.y+this.topMargin+margin.bottom;\n\n        this.container.classed('with-overflow-y', newSvgHeight>=this.availableHeight);\n        newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\n        if(svgHeight!=newSvgHeight){\n            changed=true;\n            this.svg.attr('height', newSvgHeight);\n        }\n        if(changed){\n            this.updateBrushExtent()\n        }\n\n\n    }\n\n    redrawNodes() {\n        var self = this;\n\n\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes.filter(d=>!d.$hidden), (d,i)=> d.$id);\n        nodes.exit().remove();\n        var nodesEnter = nodes.enter().append('g')\n            .attr('id', d=>'node-'+d.$id)\n            .attr('class', d=>d.type+'-node node')\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n        nodesEnter.append('path');\n\n        var labelEnter = nodesEnter.append('text').attr('class', 'label');\n        var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\n        var indicatorEnter = nodesEnter.append('text').attr('class', 'error-indicator').text('!!');\n        var aggregatedPayoffEnter = nodesEnter.append('text').attr('class', 'aggregated-payoff');\n        var probabilityToEnterEnter = nodesEnter.append('text').attr('class', 'probability-to-enter');\n\n        var nodesMerge = nodesEnter.merge(nodes);\n        nodesMerge.classed('optimal', (d)=>self.isOptimal(d));\n\n        var nodesMergeT = nodesMerge;\n        if(this.transition){\n            nodesMergeT = nodesMerge.transition();\n            nodesMergeT.on('end', ()=> self.updatePlottingRegionSize())\n        }\n        nodesMergeT\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')')\n\n        var path = nodesMerge.select('path');\n        this.layout.drawNodeSymbol(path,this.transition);\n\n        /*path\n            .style('fill', d=> {\n                // if(self.isNodeSelected(d)){\n                //     return self.config.node[d.type].selected.fill\n                // }\n                return self.config.node[d.type].fill\n            })\n            .style('stroke', d=> self.config.node[d.type].stroke)\n            .style('stroke-width', d=> {\n                if(self.config.node[d.type].strokeWidth!==undefined){\n                    return self.config.node[d.type].strokeWidth;\n                }\n                return self.config.node.strokeWidth;\n            });\n        */\n        this.layout.nodeLabelPosition(labelEnter);\n        var labelMerge = nodesMerge.select('text.label');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = nodesMergeT.select('text.label');\n        labelMergeT.each(this.updateTextLines);\n        this.layout.nodeLabelPosition(labelMergeT)\n            .attr('text-anchor', 'middle')\n\n        var payoff = nodesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('childrenPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n            // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0')\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((d, i)=> {\n                var val = d\n\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n        this.attachPayoffTooltip(payoffTspansM);\n\n\n        var payoffT = payoff;\n        if(this.transition){\n            payoffT = payoff.transition();\n        }\n\n        this.layout.nodePayoffPosition(payoffEnter);\n        this.layout.nodePayoffPosition(payoffT);\n\n        var aggregatedPayoff = nodesMerge.select('text.aggregated-payoff');\n        var aggregatedPayoffTspans = aggregatedPayoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('aggregatedPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        aggregatedPayoffTspans.exit().remove();\n        var aggregatedPayoffTspansM = aggregatedPayoffTspans.enter().append('tspan').merge(aggregatedPayoffTspans)\n            .attr('dy', (d,i)=>i>0 ? '0.95em': undefined)\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((val, i)=> {\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n\n        this.attachPayoffTooltip(aggregatedPayoffTspansM, 'aggregatedPayoff');\n\n        var aggregatedPayoffT = aggregatedPayoff;\n        if(this.transition){\n            aggregatedPayoffT = aggregatedPayoff.transition();\n        }\n\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffEnter);\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffT);\n\n        var probabilityToEnter = nodesMerge.select('text.probability-to-enter')\n            .text(d=>{\n                var val = d.displayValue('probabilityToEnter');\n                return val!==null ? (isNaN(val) ? val : self.config.probabilityNumberFormatter(val)): ''\n            })\n            .classed('sd-hidden', this.config.hideProbabilities || this.config.raw);\n        Tooltip.attach(probabilityToEnter, i18n.t('tooltip.node.probabilityToEnter'));\n\n\n        var probabilityToEnterT = probabilityToEnter;\n        if(this.transition){\n            probabilityToEnterT = probabilityToEnter.transition();\n        }\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterEnter);\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterT);\n\n\n        var indicator = nodesMerge.select('text.error-indicator');\n        indicator.classed('sd-hidden', this.config.raw)\n        this.layout.nodeIndicatorPosition(indicatorEnter);\n        this.layout.nodeIndicatorPosition(indicator);\n\n        if(this.nodeDragHandler){\n            nodesMerge.call(this.nodeDragHandler.drag);\n        }\n\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\n        nodesMerge.on('dblclick', this.nodeContextMenu)\n        nodesMerge.each(function(d, i){\n            var nodeElem = this;\n            var mc = new Hammer.Manager(nodeElem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n            mc.on('press', function(e){\n                if(e.pointerType=='touch'){\n                    self.nodeDragHandler.cancelDrag();\n                }\n            })\n\n\n            if(d.folded){\n                let button = d3.select(nodeElem).selectOrAppend('text.sd-unfold-button')\n                    .text(\"[+]\")\n                    .on('click dbclick mousedown', ()=>self.foldSubtree(d, false)); //firefox detects only mousedown event - related to drag handler\n\n                self.layout.nodeUnfoldButtonPosition(button);\n                Tooltip.attach(button, i18n.t('contextMenu.node.unfold'));\n            }else{\n                d3.select(nodeElem).select('.sd-unfold-button').remove();\n            }\n\n        })\n    }\n\n    attachPayoffTooltip(selection, payoffFiledName = 'payoff', object='node'){\n        var self = this;\n        Tooltip.attach(selection, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.named',{value: d.payoff, number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.default',{value: d.payoff, number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n    }\n\n    updateTextLines(d){ //helper method for splitting text to tspans\n        var lines = d.name ? d.name.split('\\n') : [];\n        lines.reverse();\n        var tspans = d3.select(this).selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .text(l=>l)\n            .attr('dy', (d,i)=>i>0 ? '-1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n    }\n\n    isOptimal(d){\n        return d.displayValue('optimal');\n    }\n\n    redrawEdges() {\n        var self = this;\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n        if(self.config.forceFullEdgeRedraw){\n            edgesContainer.selectAll(\"*\").remove();\n        }\n\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges.filter(e=>!e.$hidden), (d,i)=> d.$id);\n        edges.exit().remove();\n        var edgesEnter = edges.enter().append('g')\n            .attr('id', d=>'edge-'+d.$id)\n            .attr('class', 'edge');\n\n\n        edgesEnter.append('path');\n        var labelEnter = edgesEnter.appendSelector('g.label-group');\n        labelEnter.append('text').attr('class', 'label');\n        var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\n        var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\n\n\n        var edgesMerge = edgesEnter.merge(edges);\n\n\n        var optimalClassName = 'optimal';\n        edgesMerge.classed(optimalClassName, (d)=>self.isOptimal(d));\n\n        var edgesMergeT = edgesMerge;\n        if(this.transition){\n            edgesMergeT = edgesMerge.transition();\n        }\n\n        edgesMergeT.select('path')\n            .attr('d', d=> this.layout.edgeLineD(d))\n            // .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\")\n            .attr(\"marker-end\", function(d) {\n                var suffix = d3.select(this.parentNode).classed('selected') ? '-selected' : (self.isOptimal(d)?'-optimal':'');\n                return \"url(#arrow\"+ suffix+\")\"\n            });\n            // .attr(\"shape-rendering\", \"optimizeQuality\")\n\n\n        edgesMerge.on('click', d=>{\n            self.selectEdge(d, true)\n        });\n\n        this.layout.edgeLabelPosition(labelEnter);\n        edgesMergeT.select('text.label').each(this.updateTextLines);\n        var labelMerge = edgesMerge.select('g.label-group');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = edgesMergeT.select('g.label-group');\n        this.layout.edgeLabelPosition(labelMergeT);\n            // .text(d=>d.name);\n\n        var payoff = edgesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d => {\n            let item = d.displayValue('payoff');\n            return Utils.isArray(item) ? item.slice(0, Math.min(item.length, self.config.maxPayoffsToDisplay)).map(_=>d) : [d];\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n        // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            // .attr('x', '0')\n\n            // .attr('dominant-baseline', 'hanging')\n            .classed('negative', (d, i)=> {\n                var val = d.displayPayoff(undefined, i);\n                return val!==null && val<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs)\n            // .text(d=> isNaN(d.payoff) ? d.payoff : self.config.payoffNumberFormatter(d.payoff))\n            .text((d, i)=>{\n                if(this.config.raw){\n                    return d.payoff[i];\n                }\n\n                let item = d.displayValue('payoff');\n                let items = Utils.isArray(item) ? item : [item];\n\n                let val = items[i];\n                if (val !== null) {\n                    if (!isNaN(val)) {\n                        return self.config.payoffNumberFormatter(val, i);\n                    }\n                    if (Utils.isString(val)) {\n                        return val;\n                    }\n                }\n\n                if (d.payoff[i] !== null && !isNaN(d.payoff[i]))\n                    return self.config.payoffNumberFormatter(d.payoff[i], i);\n\n                return d.payoff[i];\n\n            });\n\n        Tooltip.attach(payoffTspansM, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.edge.payoff.named',{value: d.payoff[i], number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.edge.payoff.default',{value: d.payoff[i], number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n\n        var payoffTextT = payoff;\n        if(this.transition){\n            payoffTextT = payoff.transition();\n        }\n        this.layout.edgePayoffPosition(payoffEnter);\n        this.layout.edgePayoffPosition(payoffTextT);\n\n        Tooltip.attach(edgesMerge.select('text.probability'), d=>i18n.t('tooltip.edge.probability',{value: d.probability=== undefined ? d.displayProbability() : d.probability}));\n\n        edgesMerge.select('text.probability')\n            .classed('sd-hidden', this.config.hideProbabilities);\n        var probabilityMerge = edgesMerge.select('text.probability');\n        probabilityMerge\n            .attr('text-anchor', 'end')\n            .text(d=>{\n                if(this.config.raw){\n                    return d.probability;\n                }\n                var val = d.displayProbability();\n\n                if(val!==null){\n                    if(!isNaN(val)){\n                        return self.config.probabilityNumberFormatter(val);\n                    }\n                    if(Utils.isString(val)){\n                        return val;\n                    }\n                }\n\n                if(d.probability!==null && !isNaN(d.probability))\n                    return self.config.probabilityNumberFormatter(d.probability);\n\n                return d.probability;\n            });\n        var probabilityMergeT = probabilityMerge;\n        if(this.transition){\n            probabilityMergeT = probabilityMerge.transition();\n        }\n\n        this.layout.edgeProbabilityPosition(probabilityEnter);\n        this.layout.edgeProbabilityPosition(probabilityMergeT);\n\n\n        edgesContainer.selectAll('.edge.'+optimalClassName).raise();\n\n        edgesMerge.on('contextmenu', this.edgeContextMenu);\n        edgesMerge.on('dblclick', this.edgeContextMenu);\n        edgesMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: Hammer.POINTER_TOUCH\n            }));\n        })\n    }\n\n    redrawFloatingTexts() {\n        var self = this;\n\n\n        var textsContainer = this.mainGroup.selectOrAppend('g.floating-texts');\n        var texts = textsContainer.selectAll('.floating-text').data(this.data.texts, (d,i)=> d.$id);\n        texts.exit().remove();\n        var textsEnter = texts.enter().appendSelector('g.floating-text')\n            .attr('id', d=>'text-'+d.$id);\n\n\n        var rectWidth = 40;\n        var rectHeight = 20;\n\n        textsEnter.append('rect').attr('x', -5).attr('y', -16).attr('fill-opacity', 0);\n        textsEnter.append('text');\n\n        var textsMerge = textsEnter.merge(texts);\n        var textsMergeT = textsMerge;\n        if(this.transition){\n            textsMergeT = textsMerge.transition();\n        }\n\n        textsMergeT.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n\n        var tspans = textsMerge.select('text').selectAll('tspan').data(d=>d.value ? d.value.split('\\n') : []);\n\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        textsMerge.classed('sd-empty', d=>!d.value || !d.value.trim());\n        textsMerge.select('rect').attr('width', rectWidth).attr('height', rectHeight);\n\n        textsMerge.each(function(d){\n            if(!d.value){\n                return;\n            }\n            var bb = d3.select(this).select('text').node().getBBox();\n           d3.select(this).select('rect')\n               .attr('y', bb.y-5)\n               .attr('width', Math.max(bb.width+10, rectWidth))\n               .attr('height', Math.max(bb.height+10, rectHeight))\n        });\n\n        if(this.textDragHandler){\n            textsMerge.call(this.textDragHandler.drag);\n        }\n        textsMerge.on('contextmenu', this.textContextMenu);\n        textsMerge.on('dblclick', this.textContextMenu);\n        textsMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n        })\n\n    }\n\n    updateValidationMessages() {\n        var nodes = this.mainGroup.selectAll('.node');\n        nodes.classed('error', false);\n\n        this.data.validationResults.forEach(validationResult=>{\n            if(validationResult.isValid()){\n                return;\n            }\n\n            Object.getOwnPropertyNames(validationResult.objectIdToError).forEach(id=>{\n                var errors = validationResult.objectIdToError[id];\n                var nodeSelection = this.getNodeD3SelectionById(id);\n                nodeSelection.classed('error', true);\n                var tooltipHtml = '';\n                errors.forEach(e=>{\n                    if(tooltipHtml){\n                        tooltipHtml+='<br/>'\n                    }\n                    tooltipHtml+=AppUtils.getValidationMessage(e);\n                });\n\n                Tooltip.attach(nodeSelection.select('.error-indicator'), tooltipHtml);\n\n\n            })\n        });\n    }\n\n\n    initEdgeMarkers() {\n        var defs = this.svg.append(\"svg:defs\");\n\n        this.initArrowMarker(\"arrow\");\n        this.initArrowMarker(\"arrow-optimal\");\n        this.initArrowMarker(\"arrow-selected\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.select(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    updateBrushExtent() {\n        var self =this;\n        this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\n        this.brushContainer.call(this.brush);\n    }\n    initBrush() {\n        var self = this;\n\n        var brushContainer = self.brushContainer = this.brushContainer= this.svg.selectOrInsert(\"g.brush\", \":first-child\")\n            .attr(\"class\", \"brush\");\n\n        var brush = this.brush = d3.brush()\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n\n\n        this.updateBrushExtent();\n\n        brushContainer.select('.overlay').on(\"mousemove.edgeSelection\", mousemoved);\n        function mousemoved() {\n            var m = d3.mouse(this);\n            var mgt = self.getMainGroupTranslation();\n            var margin = 10;\n\n            var closest = [null, 999999999];\n            var closeEdges = [];\n            self.mainGroup.selectAll('.edge').each(function(d){\n                var selection = d3.select(this);\n                selection.classed('sd-hover', false);\n                var pathNode = selection.select('path').node();\n                var b = pathNode.getBBox();\n                if(b.x+mgt[0] <=m[0] && b.x+b.width+mgt[0] >= m[0] &&\n                   b.y+mgt[1]-margin <=m[1] && b.y+b.height+mgt[1]+margin >= m[1]){\n\n                    var cp = AppUtils.closestPoint(pathNode, [m[0]-mgt[0], m[1]-mgt[1]]);\n                    if(cp.distance < margin && cp.distance<closest[1]){\n                        closest = [selection, cp.distance];\n                    }\n                }\n\n            });\n\n            self.hoveredEdge = null;\n            if(closest[0]){\n                closest[0].classed('sd-hover', true);\n                self.hoveredEdge = closest[0];\n            }\n\n        }\n\n        function brushstart() {\n            if (!d3.event.selection) return;\n            if(self.hoveredEdge){\n                self.selectEdge(self.hoveredEdge.datum(), true)\n            }else{\n                self.clearSelection();\n            }\n            ContextMenu.hide();\n        }\n\n        // Highlight the selected nodes.\n        function brushmove() {\n            var s = d3.event.selection;\n            if(!s)return;\n\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n                var mainGroupTranslation = self.getMainGroupTranslation();\n                var x = d.location.x+mainGroupTranslation[0];\n                var y = d.location.y+mainGroupTranslation[1];\n                var nodeSize = self.config.layout.nodeSize;\n                var offset = nodeSize*0.25;\n                return s[0][0] <= x+offset && x-offset <= s[1][0]\n                    && s[0][1] <= y+offset && y-offset <= s[1][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) return;\n            brush.move(brushContainer, null);\n\n            var selectedNodes = self.getSelectedNodes();\n            if(selectedNodes && selectedNodes.length === 1){\n                self.selectNode(selectedNodes[0]);\n            }\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n        }\n    }\n\n    disableBrush(){\n        if(!this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushDisabled'), 'info', 'left')\n        }\n        this.brushDisabled = true;\n        this.brushContainer.remove();\n    }\n\n    enableBrush(){\n        if(this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushEnabled'), 'info', 'left')\n            this.initBrush();\n            this.brushDisabled = false;\n        }\n\n\n    }\n\n    getMainGroupTranslation(invert) {\n        var translation = AppUtils.getTranslation(this.mainGroup.attr(\"transform\"));\n        if(invert){\n            translation[0] = -translation[0];\n            translation[1] = -translation[1]\n        }\n        return translation;\n    }\n\n    initNodeContextMenu() {\n        this.nodeContextMenu = new NodeContextMenu(this, this.config.operationsForObject);\n    }\n\n    initEdgeContextMenu() {\n        this.edgeContextMenu = new EdgeContextMenu(this);\n    }\n\n    initTextContextMenu() {\n        this.textContextMenu = new TextContextMenu(this);\n    }\n\n\n\n    initMainContextMenu() {\n        this.mainContextMenu = new MainContextMenu(this);\n        this.svg.on('contextmenu',this.mainContextMenu);\n        this.svg.on('dblclick',this.mainContextMenu);\n    }\n\n    addText(text){\n        this.data.saveState();\n        this.data.addText(text);\n        this.redraw();\n        this.selectText(text);\n    }\n\n    addNode(node, parent, redraw=false){\n        this.data.saveState();\n        this.data.addNode(node, parent);\n        this.redraw(true);\n        this.layout.update(node);\n        return node;\n    }\n\n    addDecisionNode(parent){\n        var newNode = new model.DecisionNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addChanceNode(parent){\n        var newNode = new model.ChanceNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addTerminalNode(parent){\n        var newNode = new model.TerminalNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n\n    injectNode(node, edge){\n        this.data.saveState();\n        this.data.injectNode(node, edge);\n        this.redraw();\n        this.layout.update(node);\n        return node;\n    }\n\n    injectDecisionNode(edge){\n        var newNode = new model.DecisionNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n\n    }\n\n    injectChanceNode(edge){\n        var newNode = new model.ChanceNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n    }\n\n    removeNode(node) {\n        this.data.saveState();\n        this.data.removeNode(node);\n\n\n        if(!this.layout.isManualLayout()){\n            this.layout.update();\n        }else{\n            this.redraw();\n        }\n    }\n\n    removeSelectedNodes() {\n        var selectedNodes = this.getSelectedNodes();\n        if(!selectedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeNodes(selectedNodes);\n        this.clearSelection();\n        this.redraw();\n        this.layout.update();\n    }\n\n    removeSelectedTexts(){\n        var selectedTexts = this.getSelectedTexts();\n\n        if(!selectedTexts.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeTexts(selectedTexts);\n        this.clearSelection();\n        this.redraw();\n    }\n\n    copyNode(d, notClearPrevSelection) {\n        var clone = this.data.cloneSubtree(d);\n        if(notClearPrevSelection){\n            if(!this.copiedNodes){\n                this.copiedNodes=[];\n            }\n            this.copiedNodes.push(clone);\n        }else{\n            this.copiedNodes = [clone];\n        }\n\n    }\n\n    cutNode(d) {\n        this.copyNode(d);\n        this.removeNode(d);\n    }\n\n    cutSelectedNodes(){\n        var selectedNodes = this.getSelectedNodes();\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n        this.removeSelectedNodes();\n    }\n\n    copySelectedNodes() {\n        var self;\n        var selectedNodes = this.getSelectedNodes();\n\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n\n\n    }\n\n    copyNodes(nodes){\n        this.copiedNodes = nodes.map(d=>this.data.cloneSubtree(d));\n    }\n\n\n\n    pasteToNode(node) {\n        if(!this.copiedNodes || !this.copiedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=>{\n            var attached = this.data.attachSubtree(toAttach, node).childNode;\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            var location = self.layout.getNewChildLocation(node);\n            attached.moveTo(location.x, location.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        if(node.folded){\n            self.foldSubtree(node, node.folded, false);\n        }\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    pasteToNewLocation(point) {\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=> {\n            var attached = this.data.attachSubtree(toAttach);\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            attached.moveTo(point.x, point.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    convertNode(node, typeToConvertTo){\n        var self = this;\n        this.data.saveState();\n        this.data.convertNode(node, typeToConvertTo);\n        setTimeout(function(){\n            self.redraw(true);\n        },10)\n    }\n\n    performOperation(object, operation){\n        var self = this;\n        this.data.saveState();\n        operation.perform(object);\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    foldSubtree(node, fold = true, redraw=true){\n        let self = this;\n        node.folded = fold;\n\n        this.data.getAllDescendantNodes(node).forEach(n=>{\n            n.$hidden = fold;\n            n.folded = false;\n        });\n        this.data.getAllDescendantEdges(node).forEach(e=>e.$hidden = fold);\n\n        if(!redraw){\n            return;\n        }\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    updateVisibility(node = null){\n        if(!node){\n            this.data.getRoots().forEach(n=>this.updateVisibility(n));\n            return;\n        }\n\n        if(node.folded){\n            this.foldSubtree(node, true, false);\n            return;\n        }\n\n        node.childEdges.forEach(e => this.updateVisibility(e.childNode));\n\n    }\n\n    moveNodeTo(x,y){\n\n    }\n\n    updateNodePosition(node) {\n        this.getNodeD3Selection(node).raise().attr('transform', 'translate('+node.location.x+' '+node.location.y+')');\n    }\n\n    updateTextPosition(text) {\n        this.getTextD3Selection(text).raise().attr('transform', 'translate('+text.location.x+' '+text.location.y+')');\n    }\n\n    getNodeD3Selection(node){\n        return this.getNodeD3SelectionById(node.$id);\n    }\n\n    getNodeD3SelectionById(id){\n        return this.mainGroup.select('#node-'+id);\n    }\n    getTextD3Selection(text){\n        return this.getTextD3SelectionById(text.$id);\n    }\n    getTextD3SelectionById(id){\n        return this.mainGroup.select('#text-'+id);\n    }\n\n    getSelectedNodes(visibleOnly = false) {\n        let selectedVisible = this.mainGroup.selectAll(\".node.selected\").data();\n        if(visibleOnly){\n            return selectedVisible;\n        }\n\n        let allSelected  = [];\n        allSelected.push(...selectedVisible);\n\n        selectedVisible.forEach(n=>{\n            if(n.folded){\n                let descendants = this.data.getAllDescendantNodes(n);\n                if(descendants){\n                    allSelected.push(...descendants);\n                }\n            }\n        });\n\n        return allSelected;\n    }\n\n    getSelectedTexts(){\n        return this.mainGroup.selectAll(\".floating-text.selected\").data();\n    }\n\n    clearSelection(){\n        this.mainGroup.selectAll(\".edge.selected\").select('path').attr(\"marker-end\", d => \"url(#arrow\"+(this.isOptimal(d)?'-optimal':'')+\")\")\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\n        this.config.onSelectionCleared();\n    }\n\n    selectEdge(edge, clearSelectionBeforeSelect){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.config.onEdgeSelected(edge);\n        this.mainGroup.select('#edge-'+edge.$id)\n            .classed('selected', true)\n            .select('path')\n            .attr(\"marker-end\", d => \"url(#arrow-selected)\")\n    }\n\n    isNodeSelected(node){\n        return this.getNodeD3Selection(node).classed('selected');\n    }\n\n    selectNode(node, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onNodeSelected(node);\n        }\n\n        this.getNodeD3SelectionById(node.$id).classed('selected', true);\n    }\n\n    selectText(text, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onTextSelected(text)\n        }\n\n        this.getTextD3SelectionById(text.$id).classed('selected', true);\n    }\n\n    selectSubTree(node, clearSelectionBeforeSelect,skipCallback) {\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.selectNode(node, false, skipCallback);\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode, false, true));\n    }\n\n    selectAllNodes() {\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        this.layout.autoLayout(type, withoutStateSaving);\n    }\n\n    updateDiagramTitle(titleValue){\n        if(!titleValue){\n            titleValue = '';\n        }\n        this.diagramTitle = titleValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n    redrawDiagramTitle(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n        title.text(this.diagramTitle);\n        Layout.setHangingPosition(title);\n\n        var marginTop = parseInt(this.config.title.margin.top);\n        this.titleContainer.attr('transform', 'translate('+(svgWidth/2)+','+( marginTop)+')');\n    }\n    redrawDiagramDescription(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var desc = this.titleContainer.selectOrAppend('text.sd-description');\n\n        if(!this.config.description.show){\n            desc.remove();\n            return;\n        }\n\n        var lines = this.diagramDescription ? this.diagramDescription.split('\\n') : [];\n        var tspans = desc.selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        Layout.setHangingPosition(desc);\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n\n        var marginTop = 0;\n        if(this.diagramTitle){\n            marginTop += title.node().getBBox().height;\n            marginTop+= Math.max(parseInt(this.config.description.margin.top), 0);\n        }\n\n\n        desc.attr('transform', 'translate(0,'+( marginTop)+')');\n    }\n\n    updateDiagramDescription(descriptionValue){\n        if(!descriptionValue){\n            descriptionValue = '';\n        }\n        this.diagramDescription = descriptionValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n\n    getTitleGroupHeight(withMargins){\n        if(!this.titleContainer){\n            return 0;\n        }\n        var h = this.titleContainer.node().getBBox().height;\n        if(withMargins){\n            h+= parseInt(this.config.title.margin.bottom);\n            h+= parseInt(this.config.title.margin.top);\n        }\n        return h;\n    }\n\n}\n","module.exports={\n  \"name\": \"silver-decisions\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Software for creating and analyzing decision trees.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/SilverDecisions/SilverDecisions.git\"\n  },\n  \"author\": \"Michał Wasiluk, Bogumił Kamiński, Przemysław Szufel\",\n  \"license\": \"LGPL-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/SilverDecisions/SilverDecisions/issues\"\n  },\n  \"homepage\": \"https://github.com/SilverDecisions/SilverDecisions#readme\",\n  \"browserify\": {\n    \"transform\": [\n      [\n        \"babelify\",\n        {\n          \"presets\": [\n            \"es2015\"\n          ],\n          \"plugins\": [\n            [\"transform-class-properties\", { \"spec\": true }],\n            \"transform-object-assign\",\n            \"transform-es2015-spread\",\n            \"transform-object-rest-spread\",\n            [\n              \"babel-plugin-transform-builtin-extend\",\n              {\n                \"globals\": [\n                  \"Error\"\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    ]\n  },\n  \"devDependencies\": {\n    \"babel-plugin-transform-builtin-extend\": \"^1.1.2\",\n    \"babel-plugin-transform-class-properties\": \"^6.11.5\",\n    \"babel-plugin-transform-es2015-spread\": \"^6.22.0\",\n    \"babel-plugin-transform-object-assign\": \"^6.8.0\",\n    \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.14.0\",\n    \"babelify\": \"^7.3.0\",\n    \"browser-sync\": \"^2.13.0\",\n    \"browserify\": \"^14.5.0\",\n    \"browserify-resolutions\": \"^1.1.0\",\n    \"browserify-shim\": \"^3.8.13\",\n    \"chalk\": \"^2.3.0\",\n    \"del\": \"^3.0.0\",\n    \"es6-set\": \"^0.1.5\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-concat\": \"^2.6.0\",\n    \"gulp-filelist\": \"^1.0.0\",\n    \"gulp-html2js\": \"^0.4.2\",\n    \"gulp-load-plugins\": \"^1.2.4\",\n    \"gulp-minify-css\": \"^1.2.4\",\n    \"gulp-plumber\": \"^1.1.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-replace\": \"^0.6.1\",\n    \"gulp-sass\": \"^3.1.0\",\n    \"gulp-sourcemaps\": \"^2.6.1\",\n    \"gulp-strip-debug\": \"^1.1.0\",\n    \"gulp-template\": \"^4.0.0\",\n    \"gulp-uglify\": \"^3.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"jasmine\": \"^2.5.2\",\n    \"jasmine-jquery\": \"^2.1.1\",\n    \"karma\": \"^1.7.0\",\n    \"karma-browserify\": \"^5.1.1\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-intl-shim\": \"^1.0.3\",\n    \"karma-jasmine\": \"^1.0.2\",\n    \"merge-stream\": \"^1.0.0\",\n    \"odc-d3\": \"^1.1.6\",\n    \"run-sequence\": \"^2.0.0\",\n    \"stringify\": \"^5.1.0\",\n    \"svg2pdf.js\": \"^1.1.1\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"yargs\": \"^10.0.3\"\n  },\n  \"dependencies\": {\n    \"autosize\": \"^4.0.0\",\n    \"blueimp-canvas-to-blob\": \"^3.3.0\",\n    \"d3-array\": \"^1.0.1\",\n    \"d3-dispatch\": \"^1.0.1\",\n    \"d3-drag\": \"^1.0.1\",\n    \"d3-scale\": \"^1.0.3\",\n    \"d3-selection\": \"^1.0.2\",\n    \"d3-time-format\": \"^2.0.2\",\n    \"file-saver\": \"^1.3.2\",\n    \"hammerjs\": \"^2.0.8\",\n    \"i18next\": \"^10.0.3\",\n    \"jquery\": \"^3.1.1\",\n    \"jquery-ui\": \"^1.12.1\",\n    \"pivottable\": \"^2.11.0\",\n    \"sd-computations\": \"0.3.5\",\n    \"sd-model\": \"0.2.6\",\n    \"sd-utils\": \"0.1.10\",\n    \"sd-tree-designer\": \"0.1.6\"\n  }\n}\n","import * as d3 from \"./d3\";\nimport * as autosize from \"autosize\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils as TdUtils} from \"sd-tree-designer\";\n\nexport class AppUtils extends TdUtils{\n\n\n\n    static updateInputClass(selection){\n        var value = selection.node().value;\n        selection.classed('empty', value!==0 && !value);\n        return selection;\n    }\n\n    static autoResizeTextarea(element){\n        setTimeout(function(){\n            element.style.width = \"\";\n            var width = element.getBoundingClientRect().width;\n            if(width){\n                element.style.width = width+'px';\n            }\n            autosize.update(element);\n        }, 10);\n    }\n\n    static elasticTextarea(selection){\n        setTimeout(function(){\n            selection.style('width',undefined);\n            var width = selection.node().getBoundingClientRect().width;\n            if(width){\n                selection.style('width', width+'px')\n            }\n            autosize.default(selection.node());\n        },10)\n    }\n\n    static postByForm(url, data) {\n        var name,\n            form;\n\n        // create the form\n        form = AppUtils.createElement('form', AppUtils.mergeDeep({\n            method: 'post',\n            action: url,\n            enctype: 'multipart/form-data'\n        }), document.body);\n\n        for (name in data) {\n            if(data.hasOwnProperty(name)){\n                AppUtils.createElement('input', {\n                    type: 'hidden',\n                    name: name,\n                    value: data[name]\n                }, form);\n            }\n        }\n\n        form.submit();\n\n        AppUtils.removeElement(form);\n    };\n\n    static showFullScreenPopup(title, html, closeCallback){\n        var popup = d3.select(\"body\").selectOrAppend(\"div.sd-full-screen-popup-container\").html(Templates.get('fullscreenPopup', {title:title,body:html}));\n        popup.select('.sd-close-popup').on('click', ()=>{\n            popup.remove();\n            if(closeCallback) {\n                closeCallback()\n            }\n        })\n\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport * as model from \"sd-model\";\nimport {TreeDesigner} from \"sd-tree-designer\";\nimport {Templates} from \"./templates\";\nimport {Sidebar} from \"./sidebar\";\nimport {Toolbar} from \"./toolbar\";\nimport {SettingsDialog} from \"./dialogs/settings-dialog\";\nimport {AboutDialog} from \"./dialogs/about-dialog\";\nimport {Exporter} from \"./exporter\";\nimport {DefinitionsDialog} from \"./dialogs/definitions-dialog\";\nimport {ComputationsManager} from \"sd-computations\";\nimport {SensitivityAnalysisDialog} from \"./dialogs/sensitivity-analysis-dialog\";\nimport {LoadingIndicator} from \"./loading-indicator\";\nimport {LeagueTableDialog} from \"./league-table/league-table-dialog\";\n\nvar buildConfig = require('../tmp/build-config.js');\n\nexport class AppConfig {\n    readOnly = false;\n    logLevel = 'warn';\n    workerUrl = null;\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n    buttons = {\n        new: true,\n        save: true,\n        open: true,\n        exportToPng: true,\n        exportToSvg: true,\n        exportToPdf: true\n    };\n    exports = {\n        show: true,\n        serverUrl: 'http://export.highcharts.com', //url of the export server\n        pdf: {\n            mode: 'server', // available options: 'client', 'server', 'fallback',\n        },\n        png: {\n            mode: 'fallback', // available options: 'client', 'server', 'fallback',\n        }\n    };\n    showDetails = true;\n    showDefinitions = true;\n    jsonFileDownload = true;\n    width = undefined;\n    height = undefined;\n    rule = \"expected-value-maximization\";\n    lng = 'en';\n    format = {// NumberFormat  options\n        locales: 'en',\n        payoff1: {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        payoff2: {\n            style: 'decimal',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        probability: { // NumberFormat  options\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 3,\n            useGrouping: true\n        }\n    };\n    title = '';\n    description = '';\n    treeDesigner = {};\n    leagueTable = {\n        plot: {\n            maxWidth: \"800px\",\n            groups: {\n                'highlighted': {\n                    color: '#008000'\n                },\n                'highlighted-default': {\n                    color: '#00bd00'\n                },\n                'extended-dominated': {\n                    color: '#ffa500'\n                },\n                'dominated': {\n                    color: '#ff0000'\n                },\n                'default': {\n                    color: '#000000'\n                }\n            }\n        }\n    };\n\n    //https://github.com/d3/d3-format/blob/master/README.md#format\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class App {\n    static version = ''; // version is set from package.json\n    static buildTimestamp = buildConfig.buildTimestamp;\n    static utils = Utils;\n    static appUtils = AppUtils;\n    static d3 = d3;\n\n    config;\n    container;\n    dataModel; //Data model manager\n    expressionEngine;\n    computationsManager;\n    treeDesigner;\n    toolbar;\n    sidebar;\n    viewModes = [];\n    currentViewMode;\n\n    payoffsMaximization=[true, false];\n\n    constructor(containerIdOrElem, config, diagramData) {\n        var p = Promise.resolve();\n        this.setConfig(config);\n        this.initI18n();\n        this.initContainer(containerIdOrElem);\n        this.initViewModes();\n        this.initDataModel();\n        p = this.initComputationsManager();\n        this.initProbabilityNumberFormat();\n        this.initPayoffNumberFormat();\n        this.initTreeDesigner();\n        this.initSidebar();\n        this.initSettingsDialog();\n        this.initAboutDialog();\n        this.initDefinitionsDialog();\n        this.initSensitivityAnalysisDialog();\n        this.initLeagueTableDialog();\n        this.initOnBeforeUnload();\n        this.initKeyCodes();\n        p.then(()=> {\n            this.initToolbar();\n            if (diagramData) {\n                this.openDiagram(diagramData);\n            } else {\n                this.updateView();\n            }\n        }).catch(e=> {\n            log.error(e);\n        });\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new AppConfig();\n        } else {\n            this.config = new AppConfig(config);\n        }\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    static growl() {\n        return AppUtils.growl(arguments)\n    }\n\n    setLogLevel(level) {\n        log.setLevel(level)\n    }\n\n    initContainer(containerIdOrElem) {\n\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else {\n            this.container = d3.select(containerIdOrElem);\n        }\n        var self = this;\n\n        let html = Templates.get('main', {\n            version: App.version,\n            buildTimestamp: App.buildTimestamp,\n            'lng': self.config.lng\n        });\n        this.container.html(html);\n\n        this.container.select('#silver-decisions').classed('sd-read-only', this.config.readOnly);\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n    initDataModel() {\n        var self = this;\n        this.dataModel = new model.DataModel();\n        // this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = ()=>self.onNodeAddedOrRemoved();\n        this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = (node)=> Utils.waitForFinalEvent(()=>this.onNodeAddedOrRemoved(), 'onNodeAddedOrRemoved', 5);\n\n        this.dataModel.textAddedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextAdded(text), 'onTextAdded');\n        this.dataModel.textRemovedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextRemoved(text), 'onTextAdded');\n    }\n\n    initComputationsManager() {\n        this.computationsManager = new ComputationsManager({\n            ruleName: this.config.ruleName,\n            worker: {\n                url: this.config.workerUrl,\n            },\n            jobRepositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        }, this.dataModel);\n        this.expressionEngine = this.computationsManager.expressionEngine;\n        return this.checkValidityAndRecomputeObjective(false, false, false, true);\n\n    }\n\n    initSidebar() {\n        this.sidebar = new Sidebar(this.container.select('#sd-sidebar'), this);\n\n    }\n\n    initSettingsDialog() {\n        this.settingsDialog = new SettingsDialog(this);\n    }\n\n    initAboutDialog() {\n        this.aboutDialog = new AboutDialog(this);\n    }\n\n    initDefinitionsDialog() {\n        this.definitionsDialog = new DefinitionsDialog(this);\n        this.definitionsDialog.onClosed = ()=> this.recompute(true, true);\n\n    }\n\n    initLeagueTableDialog() {\n        this.leagueTableDialog = new LeagueTableDialog(this);\n    }\n\n    isLeagueTableAvailable() {\n        return this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.leagueTableDialog.validateParams();\n    }\n\n    initSensitivityAnalysisDialog() {\n        this.sensitivityAnalysisDialog = new SensitivityAnalysisDialog(this);\n\n    }\n\n    isSensitivityAnalysisAvailable() {\n        return !this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.dataModel.getGlobalVariableNames(true).length;\n    }\n\n    initToolbar() {\n        this.toolbar = new Toolbar(this.container.select('#sd-toolbar'), this);\n\n    }\n\n    initPayoffNumberFormat() {\n\n        this.payoffNumberFormat = [\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff1),\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff2)\n        ]\n\n    }\n\n    initProbabilityNumberFormat() {\n        this.probabilityNumberFormat = new Intl.NumberFormat(this.config.format.locales, this.config.format.probability);\n    }\n\n    initTreeDesigner() {\n        var self = this;\n        var config = this.getTreeDesignerInitialConfig();\n        let container2 = this.container.select('#tree-designer-container');\n\n        this.treeDesigner = new TreeDesigner(container2, this.dataModel, config);\n    }\n\n    getTreeDesignerInitialConfig() {\n        var self = this;\n\n        return Utils.deepExtend({\n            lng: self.config.lng,\n            readOnly: self.config.readOnly,\n            onNodeSelected: function (node) {\n                self.onObjectSelected(node);\n            },\n            onEdgeSelected: function (edge) {\n                self.onObjectSelected(edge);\n            },\n            onTextSelected: function (text) {\n                self.onObjectSelected(text);\n            },\n            onSelectionCleared: function () {\n                self.onSelectionCleared();\n            },\n            payoffNumberFormatter: (v, i) => {\n                let prefix = '';\n                if(self.currentViewMode.multiCriteria){\n                    prefix =  self.dataModel.payoffNames[i].charAt(0) + ': ';\n                }\n\n                return prefix + self.payoffNumberFormat[i || self.currentViewMode.payoffIndex || 0].format(v)\n            },\n            probabilityNumberFormatter: (v) => self.probabilityNumberFormat.format(v),\n            operationsForObject: (o) => self.computationsManager.operationsForObject(o)\n        }, self.config.treeDesigner);\n    }\n\n    onObjectSelected(object) {\n        var self = this;\n        if (this.selectedObject === object) {\n            return;\n        }\n        this.selectedObject = object;\n        setTimeout(function () {\n            self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10)\n    }\n\n    onSelectionCleared() {\n        var self = this;\n        this.selectedObject = null;\n        this.sidebar.hideObjectProperties();\n        setTimeout(function () {\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10);\n        // console.log();\n    }\n\n    getCurrentVariableDefinitionsSourceObject() {\n        if (this.selectedObject) {\n            if (this.selectedObject instanceof model.domain.Node) {\n                return this.selectedObject;\n            }\n            if (this.selectedObject instanceof model.domain.Edge) {\n                return this.selectedObject.parentNode;\n            }\n        }\n        return this.dataModel;\n    }\n\n    updateVariableDefinitions() {\n        var self = this;\n        var definitionsSourceObject = self.getCurrentVariableDefinitionsSourceObject();\n        var readOnly = (this.selectedObject instanceof model.domain.Edge) || (this.selectedObject instanceof model.domain.TerminalNode);\n        self.sidebar.updateDefinitions(definitionsSourceObject, readOnly, (code)=> {\n            self.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            self.recompute(true, true)\n        });\n\n    }\n\n    openDefinitionsDialog() {\n        var definitionsSourceObject = this.getCurrentVariableDefinitionsSourceObject();\n        this.definitionsDialog.open(definitionsSourceObject, (code)=> {\n            this.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            this.recompute(true, true);\n        });\n    }\n\n    updateView(withTransitions = true) {\n        // console.log('_updateView');\n        this.treeDesigner.redraw(withTransitions);\n        this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        this.updateVariableDefinitions();\n        this.toolbar.update();\n        this.sidebar.updateLayoutOptions();\n        this.sidebar.updateDiagramDetails();\n        this.sidebar.updateMultipleCriteria();\n    }\n\n    undo() {\n        var self = this;\n        self.dataModel.undo();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n\n    }\n\n    redo() {\n        var self = this;\n        self.dataModel.redo();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n    }\n\n    onNodeAddedOrRemoved() {\n        var self = this;\n        return this.checkValidityAndRecomputeObjective().then(()=> {\n            self.updateView();\n        });\n\n    }\n\n    onTextAdded(text) {\n        return this.onObjectSelected(text);\n    }\n\n    onTextRemoved(text) {\n        this.updateView();\n    }\n\n    onObjectUpdated(object, fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (!(object instanceof model.domain.Text) && fieldName !== 'name') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        // this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n            }, 1);\n        });\n    }\n\n    onMultiCriteriaUpdated(fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (fieldName === 'defaultCriterion1Weight') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        this.sidebar.updateMultipleCriteria();\n\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n                self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            }, 1);\n        });\n    }\n\n    setObjectiveRule(ruleName, evalCode = false, evalNumeric = false, updateView = true, recompute = true) {\n        let prevRule = this.computationsManager.getCurrentRule();\n        this.computationsManager.setCurrentRuleByName(ruleName);\n        let currentRule = this.computationsManager.getCurrentRule();\n        let multiCriteria = currentRule.multiCriteria;\n        this.treeDesigner.config.maxPayoffsToDisplay = multiCriteria ? 2 : 1;\n\n        if (multiCriteria) {\n            this.payoffsMaximization = currentRule.payoffCoeffs.map(c=>c>0);\n\n            if (!this.dataModel.payoffNames.length) {\n                this.dataModel.payoffNames.push(null, null);\n                this.dataModel.payoffNames[0] = i18n.t('multipleCriteria.defaultMinimizedCriterionName');\n                this.dataModel.payoffNames[1] = i18n.t('multipleCriteria.defaultMaximizedCriterionName');\n            }\n            this.treeDesigner.config.payoffNames = this.dataModel.payoffNames;\n        } else {\n            this.payoffsMaximization[this.currentViewMode.payoffIndex] = currentRule.maximization;\n            this.treeDesigner.config.payoffNames = [null, null];\n        }\n        if (!recompute) {\n            return Promise.resolve();\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, evalCode, evalNumeric).then(()=> {\n            if (updateView) {\n                this.updateView(false);\n            }\n        });\n\n    }\n\n    isMultipleCriteria() {\n        return this.computationsManager.getCurrentRule().multiCriteria;\n    }\n\n    flipCriteria() {\n        let tmp = this.config.format.payoff1;\n        this.config.format.payoff1 = this.config.format.payoff2;\n        this.config.format.payoff2 = tmp;\n        this.initPayoffNumberFormat();\n\n        this.computationsManager.flipCriteria().then(()=> {\n            this.updateView(false);\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n\n    getCurrentObjectiveRule() {\n        return this.computationsManager.getCurrentRule();\n    }\n\n    getObjectiveRules() {\n        return this.computationsManager.getObjectiveRules().filter(rule=>rule.multiCriteria === this.currentViewMode.multiCriteria);\n    }\n\n\n    initViewModes() {\n        this.viewModes.push({\n            name: \"criterion1\",\n            multiCriteria: false,\n            payoffIndex: 0,\n        });\n\n        this.viewModes.push({\n            name: \"criterion2\",\n            multiCriteria: false,\n            payoffIndex: 1,\n        });\n\n        this.viewModes.push({\n            name: \"twoCriteria\",\n            multiCriteria: true,\n            payoffIndex: null,\n        });\n        this.currentViewMode = this.viewModes[0];\n    }\n\n    getCurrentViewMode() {\n        return this.currentViewMode;\n    }\n\n    setViewModeByName(name, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.name === name), recompute, updateView)\n    }\n\n    setViewMode(mode, recompute = true, updateView = true) {\n        let prevMode = this.currentViewMode;\n        this.currentViewMode = mode;\n\n        this.computationsManager.objectiveRulesManager.setPayoffIndex(this.currentViewMode.payoffIndex);\n\n\n        if (!recompute) {\n            return Promise.resolve();\n        }\n        let rules = this.getObjectiveRules();\n        let prevRule = this.computationsManager.getCurrentRule();\n        let newRule = rules[0];\n\n\n        if(this.currentViewMode.payoffIndex !== null){\n            newRule = Utils.find(rules, r => r.maximization == this.payoffsMaximization[this.currentViewMode.payoffIndex])\n        }else{\n            newRule = Utils.find(rules, r => r.payoffCoeffs.map(c=>c>0).every((max, i)=> this.payoffsMaximization[i] === max))\n        }\n\n        this.setObjectiveRule(newRule.name, false, false, updateView, recompute)\n    }\n\n    setDefaultViewModeForRule(rule, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.multiCriteria === rule.multiCriteria), recompute, updateView)\n    }\n\n    getViewModes() {\n        return this.viewModes;\n    }\n\n    showLeagueTable() {\n        this.leagueTableDialog.open();\n    }\n\n    openSensitivityAnalysis() {\n        let self = this;\n        setTimeout(function(){\n            if(!self.isSensitivityAnalysisAvailable()){\n                return;\n            }\n            self.sensitivityAnalysisDialog.open();\n        }, 200);\n\n    }\n\n    showTreePreview(dataDTO, closeCallback, autoLayout = true) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.dataModel.loadFromDTO(dataDTO, this.computationsManager.expressionEngine.getJsonReviver());\n        this.computationsManager.updateDisplayValues(this.dataModel);\n        this.updateView(false);\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node());\n                AppUtils.showFullScreenPopup('', svgString, ()=> {\n                    if (closeCallback) {\n                        self.dataModel._setNewState(self.originalDataModelSnapshot);\n                        self.updateView(false);\n\n                        closeCallback();\n                        setTimeout(function () {\n                            self.updateView(false);\n                        }, 1)\n                    }\n                });\n            }, 300);\n        }, 1)\n\n    }\n\n    showPolicyPreview(title, policy, closeCallback) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.computationsManager.displayPolicy(policy);\n        this.updateView(false);\n        AppUtils.showFullScreenPopup(title, '');\n        LoadingIndicator.show();\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node(), true);\n                LoadingIndicator.hide();\n                AppUtils.showFullScreenPopup(title, svgString, ()=> {\n\n                    self.dataModel._setNewState(self.originalDataModelSnapshot);\n\n                    // self.computationsManager.updateDisplayValues(self.dataModel);\n                    self.updateView(false);\n                    if (closeCallback) {\n                        closeCallback();\n                    }\n                    setTimeout(function () {\n                        self.updateView(false);\n                    }, 1)\n                });\n            }, 500);\n        }, 1)\n    }\n\n\n    recompute(updateView = true, debounce = false, forceWhenAutoIsDisabled=true) {\n        if (debounce) {\n            if (!this.debouncedRecompute) {\n                this.debouncedRecompute = Utils.debounce((updateView)=>this.recompute(updateView, false), 200);\n            }\n            this.debouncedRecompute(updateView);\n            return;\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, true, true, forceWhenAutoIsDisabled).then(()=> {\n            if (updateView) {\n                this.updateView();\n            }\n        });\n\n    }\n\n    onRawOptionChanged(){\n        if(this.isAutoRecalculationEnabled()){\n            return this.checkValidityAndRecomputeObjective(false, false).then(()=> {\n                this.updateView();\n            })\n        }\n    }\n\n    isAutoRecalculationEnabled(){\n        return !this.treeDesigner.config.raw;\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true, forceWhenAutoIsDisabled=false) {\n        if(!forceWhenAutoIsDisabled && !this.isAutoRecalculationEnabled()){\n            return Promise.resolve();\n        }\n\n        return this.computationsManager.checkValidityAndRecomputeObjective(allRules, evalCode, evalNumeric).then(()=> {\n            this.updateValidationMessages();\n            AppUtils.dispatchEvent('SilverDecisionsRecomputedEvent', this);\n        }).catch(e=> {\n            log.error(e);\n        });\n\n    }\n\n    updateValidationMessages() {\n        var self = this;\n        setTimeout(function () {\n            self.treeDesigner.updateValidationMessages();\n        }, 1);\n    }\n\n    newDiagram() {\n        this.clear();\n        this.updateView();\n    }\n\n    clear() {\n        this.dataModel.clear();\n        this.currentViewMode = this.viewModes[0];\n        this.computationsManager.setCurrentRuleByName(this.computationsManager.getObjectiveRules()[0].name);\n        this.setDiagramTitle('', true);\n        this.setDiagramDescription('', true);\n        this.treeDesigner.setConfig(Utils.deepExtend(this.getTreeDesignerInitialConfig()));\n        this.onSelectionCleared();\n        this.sensitivityAnalysisDialog.clear(true, true)\n\n    }\n\n    openDiagram(diagramData) {\n\n        var self = this;\n        var errors = [];\n\n        if (Utils.isString(diagramData)) {\n            try {\n                diagramData = JSON.parse(diagramData, self.computationsManager.expressionEngine.getJsonReviver());\n            } catch (e) {\n                errors.push('error.jsonParse');\n                alert(i18n.t('error.jsonParse'));\n                log.error(e);\n                return Promise.resolve(errors);\n            }\n        }\n\n        var dataModelObject = diagramData.data;\n\n        this.clear();\n        if (!diagramData.SilverDecisions) {\n            errors.push('error.notSilverDecisionsFile');\n            alert(i18n.t('error.notSilverDecisionsFile'));\n            return Promise.resolve(errors);\n        }\n\n        if (!Utils.isValidVersionString(diagramData.SilverDecisions)) {\n            errors.push('error.incorrectVersionFormat');\n            alert(i18n.t('error.incorrectVersionFormat'));\n        } else {\n            //Check if version in file is newer than version of application\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, App.version) > 0) {\n                errors.push('error.fileVersionNewerThanApplicationVersion');\n                alert(i18n.t('error.fileVersionNewerThanApplicationVersion'));\n            }\n\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, \"0.7.0\") < 0) {\n                dataModelObject = {\n                    code: diagramData.code,\n                    expressionScope: diagramData.expressionScope,\n                    trees: diagramData.trees,\n                    texts: diagramData.texts\n                }\n            }\n        }\n\n        try {\n            if (diagramData.lng) {\n                this.config.lng = diagramData.lng;\n            }\n\n            if (diagramData.rule) {\n                if (this.computationsManager.isRuleName(diagramData.rule)) {\n                    this.config.rule = diagramData.rule;\n                } else {\n                    delete this.config.rule;\n                }\n            }\n\n            if (diagramData.viewMode) {\n                this.setViewModeByName(diagramData.viewMode)\n            } else {\n                this.setDefaultViewModeForRule(this.computationsManager.getObjectiveRuleByName(this.config.rule), false, false);\n            }\n\n            if (diagramData.format) {\n                this.config.format = diagramData.format;\n            }\n\n            this.setConfig(this.config);\n            this.dataModel.load(dataModelObject);\n\n            if (diagramData.treeDesigner) {\n                this.treeDesigner.setConfig(Utils.deepExtend(self.getTreeDesignerInitialConfig(), diagramData.treeDesigner));\n            }\n            this.treeDesigner.updateVisibility();\n\n            this.setDiagramTitle(diagramData.title || '', true);\n            this.setDiagramDescription(diagramData.description || '', true);\n\n            if (diagramData.sensitivityAnalysis) {\n                this.sensitivityAnalysisDialog.loadSavedParamValues(diagramData.sensitivityAnalysis);\n            }\n\n        } catch (e) {\n            errors.push('error.malformedData');\n            alert(i18n.t('error.malformedData'));\n            this.clear();\n            log.error('malformedData', e);\n            return Promise.resolve(errors);\n\n        }\n        try {\n            this.updateNumberFormats(false);\n        } catch (e) {\n            log.error('incorrectNumberFormatOptions', e);\n            errors.push('error.incorrectNumberFormatOptions');\n            alert(i18n.t('error.incorrectNumberFormatOptions'));\n            delete this.config.format;\n            this.setConfig(this.config);\n            this.updateNumberFormats(false);\n        }\n        return this.setObjectiveRule(this.config.rule, false, true, false).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            return errors\n        }).then(()=> {\n            this.updateView(false);\n            return errors;\n        }).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            this.updateView(false);\n            return errors\n        });\n    }\n\n    serialize(filterLocation = false, filterComputed = false, filterPrivate = true) {\n        var self = this;\n        return self.checkValidityAndRecomputeObjective(true, false, false, true).then(()=> {\n            var obj = {\n                SilverDecisions: App.version,\n                buildTimestamp: App.buildTimestamp,\n                savetime: d3.isoFormat(new Date()),\n                lng: self.config.lng,\n                viewMode: self.currentViewMode.name,\n                rule: self.computationsManager.getCurrentRule().name,\n                title: self.config.title,\n                description: self.config.description,\n                format: self.config.format,\n                treeDesigner: self.treeDesigner.config,\n                data: self.dataModel.serialize(false),\n                sensitivityAnalysis: this.sensitivityAnalysisDialog.jobNameToParamValues\n            };\n\n            return Utils.stringify(obj, self.dataModel.getJsonReplacer(filterLocation, filterComputed, self.computationsManager.expressionEngine.getJsonReplacer(), filterPrivate), filterPrivate ? ['$'] : []);\n        });\n    }\n\n    saveToFile(filterLocation = false, filterComputed = false, filterPrivate = true){\n        this.serialize(filterLocation, filterComputed, filterPrivate).then((json)=>{\n            AppUtils.dispatchEvent('SilverDecisionsSaveEvent', json);\n            if(this.config.jsonFileDownload){\n                var blob = new Blob([json], {type: \"application/json\"});\n                Exporter.saveAs(blob, Exporter.getExportFileName('json'));\n            }\n        });\n    }\n\n    updateNumberFormats(updateView = true) {\n        this.initPayoffNumberFormat();\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    updatePayoffNumberFormat(updateView = true) {\n        this.initPayoffNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n\n    }\n\n    updateProbabilityNumberFormat(updateView = true) {\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    initOnBeforeUnload() {\n        var self = this;\n        window.addEventListener(\"beforeunload\", function (e) {\n            if (!(self.dataModel.isUndoAvailable() || self.dataModel.isRedoAvailable())) {\n                return;\n            }\n\n            var dialogText = i18n.t('confirm.beforeunload');\n            e.returnValue = dialogText;\n            return dialogText;\n        });\n    }\n\n    setConfigParam(path, value, withoutStateSaving, callback) {\n        var self = this;\n        var prevValue = Utils.get(this.config, path);\n\n        if (prevValue == value) {\n            return;\n        }\n        if (!withoutStateSaving) {\n            this.dataModel.saveState({\n                data: {\n                    prevValue: prevValue\n                },\n                onUndo: (data)=> {\n                    self.setConfigParam(path, data.prevValue, true, callback);\n                },\n                onRedo: (data)=> {\n                    self.setConfigParam(path, value, true, callback);\n                }\n            });\n        }\n        Utils.set(this.config, path, value);\n        if (callback) {\n            callback(value);\n        }\n    }\n\n\n    setDiagramTitle(title, withoutStateSaving) {\n        this.setConfigParam('title', title, withoutStateSaving, (v) => this.treeDesigner.updateDiagramTitle(v));\n    }\n\n    setDiagramDescription(description, withoutStateSaving) {\n        this.setConfigParam('description', description, withoutStateSaving, (v) => this.treeDesigner.updateDiagramDescription(v));\n    }\n\n    initKeyCodes() {\n\n        this.container.on(\"keyup\", (d)=> {\n            let srcElement = d3.event.target || d3.event.srcElement;\n\n            if (srcElement && ['INPUT', 'TEXTAREA'].indexOf(srcElement.nodeName.toUpperCase()) > -1) { //ignore events from input and textarea elements\n                return;\n            }\n\n            var key = d3.event.keyCode;\n            if (key == 46) {//delete\n                this.treeDesigner.removeSelectedNodes();\n                this.treeDesigner.removeSelectedTexts();\n                return;\n            }\n            if (!d3.event.ctrlKey) {\n                return;\n            }\n\n\n            if (d3.event.altKey) {\n                if (this.selectedObject instanceof model.domain.Node) {\n                    let selectedNode = this.selectedObject;\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.addDecisionNode(selectedNode);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.addChanceNode(selectedNode);\n                    } else if (key == 84) { // ctrl + alt + t\n                        this.treeDesigner.addTerminalNode(selectedNode);\n                    }\n                    return;\n                } else if (this.selectedObject instanceof model.domain.Edge) {\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.injectDecisionNode(this.selectedObject);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.injectChanceNode(this.selectedObject);\n                    }\n                }\n\n            }\n\n\n            if (key == 90) {//ctrl + z\n                this.undo();\n                return;\n            }\n            if (key == 89) {//ctrl + y\n                this.redo();\n                return;\n            }\n\n            /*if(key==65){//ctrl + a\n             if(selectedNodes.length==1){\n             this.treeDesigner.selectSubTree(selectedNodes[0])\n             }else{\n             this.treeDesigner.selectAllNodes();\n             }\n             // d3.event.preventDefault()\n             return;\n             }*/\n            var selectedNodes = this.treeDesigner.getSelectedNodes();\n            if (key == 86) {//ctrl + v\n                if (selectedNodes.length == 1) {\n                    let selectedNode = selectedNodes[0];\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    this.treeDesigner.pasteToNode(selectedNode)\n                } else if (selectedNodes.length == 0) {\n\n                }\n                return;\n            }\n\n            if (!selectedNodes.length) {\n                return;\n            }\n\n            if (key == 88) {//ctrl + x\n                this.treeDesigner.cutSelectedNodes();\n\n            } else if (key == 67) {//ctrl + c\n                this.treeDesigner.copySelectedNodes();\n\n            }\n\n        });\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nvar $ = require('jquery');\nUtils.getGlobalObject().jQuery = $; //FIXME\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/button');\nrequire('jquery-ui/ui/widgets/menu');\nrequire('jquery-ui/ui/unique-id');\nrequire('jquery-ui/ui/position');\nrequire('jquery-ui/ui/keycode');\nrequire('jquery-ui/ui/safe-active-element');\nrequire('jquery-ui/ui/widgets/autocomplete');\nimport * as d3 from './d3'\n\n$( function() {\n    $.widget( \"sd.combobox\", {\n        _create: function() {\n            this.wrapper = $( \"<span>\" )\n                .addClass( \"sd-combobox\" )\n                .insertAfter( this.element );\n\n            this.element.hide();\n            this._createAutocomplete();\n            this._createShowAllButton();\n        },\n\n        _createAutocomplete: function() {\n            var selected = this.element.children( \":selected\" ),\n                value = selected.val() ? selected.text() : \"\";\n\n            this.input = $( \"<input>\" )\n                .appendTo( this.wrapper )\n                .val( value )\n                .attr( \"title\", \"\" )\n                .attr( \"type\", \"text\" )\n                .addClass( \"sd-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\n                .autocomplete({\n                    delay: 0,\n                    minLength: 0,\n                    source: $.proxy( this, \"_source\" ),\n                    classes: {\n                        \"ui-autocomplete\": \"sd-combobox-autocomplete\"\n                    }\n                });\n            $( \"<span class='bar'>\" ).appendTo( this.wrapper )\n\n            var input = this.input;\n            this._on( this.input, {\n                autocompleteselect: function( event, ui ) {\n                    ui.item.option.selected = true;\n                    this._trigger( \"select\", event, {\n                        item: ui.item.option\n                    });\n\n                },\n\n                autocompletechange: function(){\n                    let inputD3 = d3.select($(input).get(0));\n                    AppUtils.dispatchHtmlEvent(inputD3.node(), \"change\");\n                }\n            });\n        },\n\n        _createShowAllButton: function() {\n            var input = this.input,\n                wasOpen = false;\n\n            $( \"<button>\" )\n                .attr( \"tabIndex\", -1 )\n                .attr( \"type\", \"button\" )\n                .html('<i class=\"material-icons\">arrow_drop_down</i>')\n                .appendTo( this.wrapper )\n                .addClass( \"sd-combobox-toggle ui-corner-right\" )\n                .on( \"mousedown\", function() {\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\n                })\n                .on( \"click\", function() {\n                    input.trigger( \"focus\" );\n                    // Close if already visible\n                    if ( wasOpen ) {\n                        return;\n                    }\n\n                    // Pass empty string as value to search for, displaying all results\n                    input.autocomplete( \"search\", \"\" );\n                });\n        },\n\n        _source: function( request, response ) {\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n            response( this.element.children( \"option\" ).map(function() {\n                var text = $( this ).text();\n                if ( this.value && ( !request.term || matcher.test(text) ) )\n                    return {\n                        label: text,\n                        value: text,\n                        option: this\n                    };\n            }) );\n        },\n\n        _destroy: function() {\n            this.wrapper.remove();\n            this.element.show();\n        },\n\n        input_element: function(){\n            return this.input;\n        }\n    });\n} );\n\nexport class Autocomplete{\n\n\n    constructor(container){\n        this.container= container;\n        this.combobox = $( this.container.node() ).combobox();\n    }\n\n    getInput(){\n        return d3.select($(this.combobox).combobox('input_element').get(0))\n    }\n\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","import {Dialog} from './dialog'\n\nexport class AboutDialog extends Dialog{\n\n    constructor(app){\n        super(app.container.select('#sd-about-dialog'), app);\n    }\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {Templates} from \"../templates\";\nimport {domain as model} from \"sd-model\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class DefinitionsDialog extends Dialog {\n    changeCallback;\n\n    constructor(app) {\n        super(app.container.select('#sd-definitions-dialog'), app);\n        var self = this;\n\n        this.definitionsScopeLabel = this.container.select(\".sd-definitions-dialog-scope-label\");\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('input', function () {\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('change', function () {\n            if (self.changeCallback) {\n                self.changeCallback(this.value)\n            }\n        });\n\n        this.recalculateButton = this.container.select('button#sd-definitions-dialog-recalculate-button').on('click', function () {\n            self.app.recompute();\n        });\n\n        this.variableValuesContainer = this.container.select(\"#sd-definitions-dialog-variable-values\");\n        AppUtils.elasticTextarea(this.definitionsCode);\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.update();\n            }\n        });\n    }\n\n\n    open(definitionsSourceObject, changeCallback) {\n        super.open();\n        this.changeCallback = changeCallback;\n        this.definitionsSourceObject = definitionsSourceObject;\n        this.update();\n    }\n\n    update(force = false) {\n        if (!force && !this.isVisible()) {\n            return;\n        }\n\n        let scopeType = 'global';\n        let labelSuffix=\"\";\n        if (this.definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node';\n            let name =  this.definitionsSourceObject.name;\n            if(name){\n                labelSuffix += \" (\"+name+\")\"\n            }\n        }\n        this.definitionsScopeLabel.text(i18n.t(\"definitionsDialog.scope.\"+scopeType)+labelSuffix);\n\n        this.definitionsCode.node().value = this.definitionsSourceObject.code;\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node());\n        this.definitionsCode.classed('invalid', !!this.definitionsSourceObject.$codeError);\n        if(this.definitionsSourceObject.$codeError){\n            this.printError(this.definitionsSourceObject.$codeError);\n        }else{\n            this.printVariables(this.definitionsSourceObject.expressionScope);\n        }\n\n    }\n\n    printError(error) {\n        var html = error;\n        this.variableValuesContainer.html(html);\n    }\n\n    printVariables(scope) {\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(scope)});\n        this.variableValuesContainer.html(html);\n    }\n\n\n}\n","\nexport class Dialog{\n\n    app;\n\n    container;\n\n    constructor(container,app){\n        this.app = app;\n        this.container=container;\n        this.container.select('.sd-close-modal').on('click', ()=>this.close());\n        this.container.select('.sd-extend-modal').on('click', ()=>this.extend());\n        this.container.select('.sd-shrink-modal').on('click', ()=>this.shrink());\n    }\n\n    open(){\n        this.onOpen();\n        this.container.classed('open', true);\n    }\n    close(){\n        this.container.classed('open', false);\n        this.onClosed();\n    }\n\n    setFullScreen(fullScreen=true){\n        let self = this;\n        this.container.classed('sd-full-screen', fullScreen);\n        setTimeout(function(){ self.onResized() }, 10)\n    }\n\n    extend(){\n        this.setFullScreen();\n    }\n\n    shrink(){\n        this.setFullScreen(false);\n    }\n\n    isVisible(){\n        return this.container.classed('open');\n    }\n\n    onClosed(){\n\n    }\n\n    onOpen(){\n\n    }\n\n    onResized(){\n\n    }\n}\n","import {Dialog} from \"./dialog\";\nimport {JobParametersBuilder} from \"../jobs/job-parameters-builder\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {SensitivityAnalysisJobResultTable} from \"../jobs/sensitivity-analysis-result-table\";\nimport {ProbabilisticSensitivityAnalysisJobResultTable} from \"../jobs/probabilistic-sensitivity-analysis-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {TornadoDiagramPlot} from \"../jobs/tornado-diagram-plot\";\nimport {SpiderPlot} from \"../jobs/spider-plot\";\n\nexport class SensitivityAnalysisDialog extends Dialog {\n    computationsManager;\n    jobConfigurationContainer;\n\n    jobConfigurations = [];\n    jobInstanceManager;\n    jobNameToParamValues = {};\n\n    constructor(app) {\n        super(app.container.select('.sd-sensitivity-analysis-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        // this.initJobConfigurations();\n\n        this.jobConfigurationContainer = this.container.select(\".sd-sensitivity-analysis-job-configuration\");\n        this.parameterBuilderContainer = this.jobConfigurationContainer.select(\".sd-job-parameters-builder\");\n        this.jobParametersBuilder = new JobParametersBuilder(this.parameterBuilderContainer, 'job', () => this.onJobParametersChanged());\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-sensitivity-analysis-job-results\");\n        this.jobResultPlotContainer = this.jobResultsContainer.select(\".sd-job-result-plot-container\");\n\n        this.debouncedCheckWarnings = Utils.debounce(()=>this.checkWarnings(), 200);\n\n        this.initButtons();\n        let self = this;\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.onOpen();\n            }\n        });\n    }\n\n    onOpen() {\n\n        this.initJobConfigurations();\n        if (!this.jobSelect) {\n            this.initJobSelect();\n        }\n\n        let payoffConf = Utils.cloneDeep(this.app.config.format.payoff1);\n        payoffConf.style = 'decimal';\n        payoffConf.useGrouping = false;\n        this.payoffNumberFormat = new Intl.NumberFormat('en', payoffConf);\n        // this.payoffNumberFormat = {\n        //     format: v => this.app.computationsManager.expressionEngine.constructor.toFloat(v, payoffConf.maximumFractionDigits)\n        // }\n\n        this.clear();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n\n\n    onJobSelected(jobConfig) {\n\n        this.clearWarnings();\n        this.selectedJobConfig = jobConfig;\n        if (!jobConfig) {\n            return;\n        }\n        this.jobSelect.node().value = jobConfig.jobName;\n        let jobName = this.selectedJobConfig.jobName;\n        this.job = this.computationsManager.getJobByName(jobName);\n\n        var jobParamsValues = this.jobNameToParamValues[jobName] || {};\n\n        this.setJobParamsValues(jobParamsValues)\n    }\n\n    refreshSelectedJobConfig() {\n        if (this.selectedJobConfig) {\n            this.selectedJobConfig = Utils.find(this.jobConfigurations, (c)=>c.jobName === this.selectedJobConfig.jobName);\n        }\n    }\n\n    setJobParamsValues(jobParamsValues, deleteId = true) {\n        if(!this.job){\n            return;\n        }\n        this.refreshSelectedJobConfig();\n\n        if(deleteId){\n            delete jobParamsValues.id;\n        }\n        this.jobParameters = this.job.createJobParameters(jobParamsValues);\n\n        this.jobNameToParamValues[this.job.name] = this.jobParameters.values;\n\n        this.jobParametersBuilder.setJobParameters(this.job.name, this.jobParameters, this.selectedJobConfig.customParamsConfig);\n    }\n\n    onJobParametersChanged() {\n        this.debouncedCheckWarnings();\n\n    }\n\n    getGlobalVariableNames() {\n        return this.app.dataModel.getGlobalVariableNames(true);\n    }\n\n    initJobConfigurations() {\n        let self = this;\n        this.jobConfigurations.length = 0;\n        let ExpressionEngine = this.app.expressionEngine.constructor;\n        let customVariablesValidator = values => {\n            var isValidArray = [];\n\n            var names = [];\n            values.forEach((v, i)=>{\n                let isVariableInGlobalScope = self.app.dataModel.expressionScope.hasOwnProperty(v.name);\n                var valid = names.indexOf(v.name)<0 && isVariableInGlobalScope;\n                names.push(v.name);\n                isValidArray.push(valid);\n            });\n\n            return isValidArray;\n        };\n\n        let largeScenariosNumberWarning = {\n            name: 'largeScenariosNumber',\n            data: {\n                number: 10000,\n                numberFormatted: \"10,000\"\n            },\n            check: function (jobParameters) { // called with this set to warning config object\n                let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a * (b || 1), 1);\n                return combinations > this.data.number\n            }\n        };\n        this.jobConfigurations.push({\n            jobName: 'sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try {\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n\n                }\n            },\n            warnings: [\n                largeScenariosNumberWarning,\n                {\n                    name: 'largeParametersNumber',\n                    data: {\n                        number: 2,\n                    },\n                    check: function (jobParameters) { // called with this set to warning config object\n                        return jobParameters.values.variables.length > this.data.number\n                    }\n                }\n            ]\n        });\n\n\n        this.jobConfigurations.push({\n            jobName: 'tornado-diagram',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        },\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: (values)=>{\n                        let isValidNameArray = customVariablesValidator(values);\n\n                        return values.map((v, i)=>{\n                            if(!isValidNameArray[i]){\n                                return false;\n                            }\n\n                            if (!v.name || v.min === undefined || v.min === null || v.max === undefined || v.max === null) {\n                                return false;\n                            }\n\n                            let defVal = self.app.dataModel.expressionScope[v.name];\n                            return v.min < defVal && v.max >  defVal;\n                        });\n                    }\n\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a + b, 0);\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'probabilistic-sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    formula:{\n                        options: ExpressionEngine.randomMenuList,\n                        optionsAutocomplete: true\n                    },\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [largeScenariosNumberWarning]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'spider-plot',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.length * jobParameters.values.variables.length;\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n    }\n\n\n    checkWarnings() {\n        this.clearWarnings();\n        if (!this.selectedJobConfig.warnings) {\n            return;\n        }\n\n        this.selectedJobConfig.warnings.forEach(warnConf=> {\n            if (warnConf.check.call(warnConf, this.jobParameters)) {\n                this.addWarning(warnConf);\n            }\n        })\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-sensitivity-analysis-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-sensitivity-analysis-warnings\").appendSelector(\"div.sd-sensitivity-analysis-warning\").html(msgHTML);\n    }\n\n    initJobSelect() {\n        var self = this;\n        this.jobSelect = this.container.select(\".sd-job-select-input-group\").html(Templates.get(\"selectInputGroup\", {\n            id: Utils.guid(),\n            label: null,\n            name: \"sd-job-select\",\n            options: this.jobConfigurations.map(c=>({\n                label: i18n.t(\"job.\" + c.jobName + \".name\"),\n                value: c.jobName\n            }))\n        })).select(\"select\").on('change input', function (d) {\n            self.onJobSelected(Utils.find(self.jobConfigurations, c=>c.jobName === this.value))\n        });\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (rows, indexes, e)=> this.onResultRowSelected(rows, indexes, e),\n            className: \"sd-\" + this.job.name\n        };\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.setClassName(\"sd-\" + this.job.name);\n            this.resultTable.hide();\n        }\n\n        if (this.job.name == \"sensitivity-analysis\") {\n            this.resultTable = new SensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n        } else if (this.job.name == \"probabilistic-sensitivity-analysis\") {\n            this.resultTable = new ProbabilisticSensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config, (v) => this.payoffNumberFormat.format(v), (v) => this.app.probabilityNumberFormat.format(v));\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n\n        }\n\n\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-sensitivity-analysis-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n    initButtons() {\n        this.runJobButton = this.container.select(\".sd-run-job-button\").on('click', ()=> {\n            if (!this.jobParametersBuilder.validate()) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.checkWarnings();\n\n            this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n                onJobStarted: this.onJobStarted,\n                onJobCompleted: this.onJobCompleted,\n                onJobFailed: this.onJobFailed,\n                onJobStopped: this.onJobStopped,\n                onJobTerminated: this.onJobTerminated,\n                onProgress: this.onProgress,\n                callbacksThisArg: this\n            }).then(jobInstanceManager=> {\n                this.jobInstanceManager = jobInstanceManager;\n            }).catch(e=> {\n                log.error(e);\n            }).then(()=> {\n                this.disableActionButtonsAndShowLoadingIndicator(false);\n            })\n\n        });\n\n        this.resumeJobButton = this.container.select(\".sd-resume-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.resume();\n        });\n\n        this.stopJobButton = this.container.select(\".sd-stop-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.stop();\n        });\n\n        this.terminateJobButton = this.container.select(\".sd-terminate-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.terminateJob();\n        });\n\n        this.backButton = this.container.select(\".sd-back-button \").on('click', ()=> {\n            if (this.jobInstanceManager) {\n                this.jobInstanceManager.terminate();\n            }\n\n        });\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    loadSavedParamValues(jobNameToParamValues){\n        this.jobNameToParamValues = jobNameToParamValues;\n        this.selectedJobConfig = null;\n        this.jobParameters = null;\n    }\n\n\n    clear(clearParams = false, clearAllParams = false) {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        if (!this.selectedJobConfig) {\n            this.onJobSelected(this.jobConfigurations[0]);\n        }\n\n        if(clearAllParams){\n            Utils.forOwn(this.jobNameToParamValues, (value, key)=> this.jobNameToParamValues[key] = {})\n        }\n\n        let globalVariableNames = this.getGlobalVariableNames();\n        Utils.forOwn(this.jobNameToParamValues, (value, key)=> {\n            let paramValues = value;\n            if(clearAllParams){\n                paramValues = {}\n            }else if(paramValues.variables){\n                paramValues.variables = paramValues.variables.filter(v=>globalVariableNames.indexOf(v.name)!==-1);\n                if(!paramValues.variables.length){\n                    paramValues.variables.push({})\n                }\n            }\n\n            this.jobNameToParamValues[key] = paramValues;\n        });\n\n        if (this.job) {\n            if (clearParams) {\n                this.jobNameToParamValues[this.job.name] = {};\n                this.setJobParamsValues({});\n            } else {\n                this.jobParameters.values.ruleName = this.computationsManager.getCurrentRule().name;\n                this.setJobParamsValues(this.jobParameters.values);\n            }\n        }\n\n\n        AppUtils.show(this.jobConfigurationContainer);\n        AppUtils.show(this.runJobButton);\n        AppUtils.show(this.clearButton);\n\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.jobResultsContainer);\n        AppUtils.hide(this.backButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n        if(this.resultPlots){\n            this.resultPlots.forEach(p=>p.destroy())\n            this.jobResultPlotContainer.selectAll(\"*\").remove();\n        }\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.jobConfigurationContainer);\n        AppUtils.hide(this.runJobButton);\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.clearButton);\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n        AppUtils.show(this.stopJobButton);\n        AppUtils.show(this.terminateJobButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.backButton);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.clearButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlots(result);\n\n\n\n    }\n\n    initResultPlots(result) {\n\n\n        if (this.job.name === \"tornado-diagram\") {\n            this.initTornadoResultPlots(result);\n        } else if (this.job.name === \"spider-plot\") {\n            this.initSpiderResultPlots(result);\n        }\n\n\n\n    }\n\n    initTornadoResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new TornadoDiagramPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    initSpiderResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new SpiderPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    onResized() {\n        if (this.resultPlots) {\n            this.resultPlots.forEach(p=>p.init());\n\n        }\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.clearButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(rows, indexes, event) {\n\n        if (!rows.length) {\n            return;\n        }\n\n        let policyIndexes = rows.map(r=>r.policyIndex).filter((value, index, self)=>self.indexOf(value) === index);\n\n        if (policyIndexes.length > 1) {\n            Tooltip.show(i18n.t('jobResultTable.tooltip.multiplePoliciesInCell', {number: policyIndexes.length}), 5, 28, event, 2000);\n            return;\n        }\n\n\n        let policy = this.result.policies[policyIndexes[0]];\n        let title = Policy.toPolicyString(policy, false);\n\n        if(rows.length==1){\n\n            let row = rows[0];\n            if(row.variables){\n                title = '';\n                this.result.variableNames.forEach((v, i)=>{\n                    if(i){\n                        title += \"; \"\n                    }\n                    title += v + \" = \" + row.variables[i];\n                });\n            }\n        }\n\n        this.app.showPolicyPreview(title, policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows())\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {i18n} from \"../i18n/i18n\";\nimport {Templates} from \"../templates\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {InputField} from \"../form/input-field\";\nimport {PathValueAccessor} from \"../form/path-value-accessor\";\n\nexport class SettingsDialog extends Dialog{\n\n    formGroups=[];\n\n    static fontWeightOptions = ['normal', 'bold', 'lighter', 'bolder'];\n    static fontStyleOptions = ['normal', 'italic', 'oblique'];\n\n    constructor(app){\n        super(app.container.select('#sd-settings-dialog'), app);\n\n        var group = new FormGroup('general', ()=> {\n            app.treeDesigner.updateCustomStyles();\n            app.updateNumberFormats();\n        });\n        group\n            .addField('fontFamily', 'text', app.treeDesigner, 'config.fontFamily')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('numberFormatLocale', 'text', app, 'config.format.locales', {validate: (v)=>{try{new Intl.NumberFormat(v); return true;}catch (e){return false}}});\n        this.formGroups.push(group);\n\n\n        var payoffGroup = new FormGroup('payoff1', ()=>app.updatePayoffNumberFormat());\n        payoffGroup\n            .addSelectField('style', app, 'config.format.payoff1.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff1.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff1.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff1.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff1.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff1.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff1.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff1.useGrouping')\n\n        this.formGroups.push(payoffGroup);\n\n        var payoff2Group = new FormGroup('payoff2', ()=>app.updatePayoffNumberFormat());\n        payoff2Group\n            .addSelectField('style', app, 'config.format.payoff2.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff2.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff2.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff2.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff2.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff2.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff2.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff2.useGrouping')\n\n        this.formGroups.push(payoff2Group);\n\n\n        group = new FormGroup('probability', ()=>{\n            app.updateProbabilityNumberFormat();\n            app.treeDesigner.updateCustomStyles().redraw();\n        });\n        group\n            .addSelectField('style', app, 'config.format.probability.style', ['decimal', 'percent'])\n            .addField('minimumFractionDigits', 'number', app, 'config.format.probability.minimumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.probability.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.probability.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.probability.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('fontSize', 'text', app.treeDesigner, 'config.probability.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.probability.color');\n        this.formGroups.push(group);\n\n\n        var nodeGroup = new FormGroup('node', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        nodeGroup\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.strokeWidth');\n\n        nodeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.optimal.stroke');\n\n        nodeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.label.color');\n\n        nodeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.node.payoff.negativeColor');\n\n        this.formGroups.push(nodeGroup);\n\n        nodeGroup.addGroup('decision')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.decision.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.decision.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.decision.selected.fill');\n\n\n        nodeGroup.addGroup('chance')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.chance.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.chance.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.chance.selected.fill');\n\n        nodeGroup.addGroup('terminal')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.terminal.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.terminal.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.terminal.selected.fill')\n            .addGroup('payoff')\n                .addField('fontSize', 'text', app.treeDesigner, 'config.node.terminal.payoff.fontSize')\n                .addField('color', 'color', app.treeDesigner, 'config.node.terminal.payoff.color')\n                .addField('negativeColor', 'color', app.treeDesigner, 'config.node.terminal.payoff.negativeColor');\n\n\n\n        var edgeGroup = new FormGroup('edge', ()=>app.treeDesigner.updateCustomStyles().redraw())\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.stroke')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.strokeWidth');\n\n        edgeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.optimal.stroke');\n\n        edgeGroup.addGroup('selected')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.selected.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.selected.stroke');\n\n        edgeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.label.color');\n\n        edgeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.edge.payoff.negativeColor');\n        this.formGroups.push(edgeGroup);\n\n\n        var titleGroup = new FormGroup('diagramTitle', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        titleGroup\n            .addField('fontSize', 'text', app.treeDesigner, 'config.title.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.title.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.title.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.title.color')\n\n        .addGroup('margin')\n            .addField('top', 'number', app.treeDesigner, 'config.title.margin.top')\n            .addField('bottom', 'number', app.treeDesigner, 'config.title.margin.bottom');\n\n        titleGroup\n            .addGroup('description')\n            .addField('show', 'checkbox', app.treeDesigner, 'config.description.show')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.description.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.description.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.description.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.description.color')\n            .addField('marginTop', 'number', app.treeDesigner, 'config.description.margin.top');\n\n        this.formGroups.push(titleGroup);\n\n\n\n        var leagueTableGroup = new FormGroup('leagueTable');\n        leagueTableGroup\n            .addGroup('plot')\n            .addField('maxWidth', 'text', app, 'config.leagueTable.plot.maxWidth')\n            .addField('highlightedColor', 'color', app, 'config.leagueTable.plot.groups.highlighted.color')\n            .addField('highlightedDefaultColor', 'color', app, 'config.leagueTable.plot.groups.highlighted-default.color')\n            .addField('extendedDominatedColor', 'color', app, 'config.leagueTable.plot.groups.extended-dominated.color')\n            .addField('dominatedColor', 'color', app, 'config.leagueTable.plot.groups.dominated.color')\n            .addField('defaultColor', 'color', app, 'config.leagueTable.plot.groups.default.color');\n\n        this.formGroups.push(leagueTableGroup);\n\n\n\n        var otherGroup = new FormGroup('other', ()=>app.treeDesigner.redraw());\n        otherGroup\n            .addField('disableAnimations', 'checkbox', app.treeDesigner, 'config.disableAnimations')\n            .addField('forceFullEdgeRedraw', 'checkbox', app.treeDesigner, 'config.forceFullEdgeRedraw')\n            .addField('hideLabels', 'checkbox', app.treeDesigner, 'config.hideLabels')\n            .addField('hidePayoffs', 'checkbox', app.treeDesigner, 'config.hidePayoffs')\n            .addField('hideProbabilities', 'checkbox', app.treeDesigner, 'config.hideProbabilities')\n            .addField({\n                name: 'raw',\n                type: 'checkbox',\n                config: app.treeDesigner,\n                path: 'config.raw',\n                valueUpdateCallback: ()=>app.onRawOptionChanged()\n            });\n\n        this.formGroups.push(otherGroup);\n\n        this.initView();\n\n    }\n\n    initFormGroups(container, data){\n        var self = this;\n        var temp = {};\n        var formGroups = container.selectAll('div.sd-form-group').filter(function(d) { return this.parentNode==container.node(); }).data(data);\n        var formGroupsEnter = formGroups.enter().appendSelector('div.sd-form-group').attr('id', d=>d.id).html(d=>Templates.get('settingsDialogFormGroup', d));\n        formGroupsEnter.select('.toggle-button').on('click', (d) => {\n            var g = container.select('#'+d.id);\n            g.classed('sd-extended', !g.classed('sd-extended'));\n        });\n\n        var formGroupsMerge = formGroupsEnter.merge(formGroups);\n        var inputGroups = formGroupsMerge.select('  .sd-form-group-content > .sd-form-group-inputs').selectAll('div.input-group').data(d=>d.fields);\n\n\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n\n\n        inputGroupsEnter.merge(inputGroups).select('input, select').on('change input', function(d,i){\n            var value = this.value;\n            if(d.type=='checkbox'){\n                value = this.checked\n            }\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n                if(d3.event.type=='change'){\n                    this.value = d.valueAccessor.get();\n                }\n                return;\n            }\n            d3.select(this).classed('invalid', false);\n\n            d.valueAccessor.set(value);\n            if(d.valueUpdateCallback){\n                d.valueUpdateCallback();\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n\n        }).each(function(d, i){\n            var value = d.valueAccessor.get();\n            if(d.type=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n        });\n\n        formGroupsMerge.each(function(d){\n            self.initFormGroups(d3.select(this).select('.sd-form-group-content > .sd-form-group-child-groups'), d.groups);\n        });\n    }\n\n    initView() {\n        var temp = {};\n        this.initFormGroups(this.container.select('form#sd-settings-form'), this.formGroups);\n\n    }\n\n    onOpen(){\n        this.initView();\n    }\n\n}\n\nexport class FormGroup{\n    id;\n    name;\n    fields=[];\n    groups=[];\n    valueUpdateCallback;\n\n    constructor(name, valueUpdateCallback){\n        this.id = 'sd-form-group-'+name.replace(/\\./g, '-');\n        this.name = name;\n        this.valueUpdateCallback = valueUpdateCallback;\n    }\n\n    addSelectField(name, config, path, options) {\n        this.addField(name, 'select', config, path, null, options);\n        return this;\n    }\n\n    addField(fieldConfig){\n        if(arguments.length>1){\n            return this._addField(...arguments);\n        }\n\n        return this._addField(fieldConfig['name'], fieldConfig['type'], fieldConfig['config'], fieldConfig['path'], fieldConfig['validator'],\n                                fieldConfig['options'], fieldConfig['valueUpdateCallback'])\n    }\n\n    _addField(name, type, config, path, validator, options, valueUpdateCallback){\n        var fieldId = this.name+\"-\"+name;\n        var label = i18n.t(\"settingsDialog.\"+this.name+\".\"+name);\n        var configInputField = new ConfigInputField(fieldId,fieldId, type,label, config, path, validator, options);\n        if(valueUpdateCallback){\n            configInputField.valueUpdateCallback =  ()=>{\n                this.valueUpdateCallback();\n                valueUpdateCallback();\n            };\n        }else{\n            configInputField.valueUpdateCallback =  this.valueUpdateCallback;\n        }\n\n        this.fields.push(configInputField);\n        return this;\n    }\n\n    addGroup(name){\n        var groupName = this.name+'.'+name;\n        var group = new FormGroup(groupName, this.valueUpdateCallback);\n        this.groups.push(group);\n        return group;\n    }\n}\n\n\nclass ConfigInputField extends InputField{\n    constructor(id, name, type, label, sourceObject, path, validator, options){\n        super(id, name, type, label, new PathValueAccessor(sourceObject, path), validator, options);\n    }\n}\n\n","import {dataURLtoBlob} from \"blueimp-canvas-to-blob\";\nimport {saveAs} from \"file-saver\";\nimport * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {LoadingIndicator} from \"./loading-indicator\";\n\nexport class Exporter {\n    static saveAs = saveAs;\n    static dataURLtoBlob = dataURLtoBlob;\n    static exportedStyles = [/^font/, /^color/, /^opacity$/];\n    static svgProperties = [/^stroke/, /^fill/, /^text/];\n\n// Below are the function that handle actual exporting:\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n    static getSvgCloneWithInlineStyles(svgNode) {\n        var svgClone = svgNode.cloneNode(true);\n        appendInlineStyles(svgNode, svgClone);\n\n        function appendInlineStyles(source, target, parentCs) {\n            if (!source) {\n                log.error('Exporter.appendInlineStyles - undefined source!');\n                return false;\n            }\n            var children = source.children;\n            var targetChildren = target.children;\n            if (!source.children) {\n                children = source.childNodes;\n                targetChildren = target.childNodes;\n            }\n\n            if (source.tagName === 'text') {\n                /*\n                 var bBox = source.getBBox();\n                 console.log(source, bBox);\n                 target.setAttribute('y', bBox.y)*/\n            }\n\n\n            var cssStyleText = '';\n            var cs = getComputedStyle(source);\n            if (!cs) {\n                return true;\n            }\n            if (cs.display === 'none') {\n                return false;\n            }\n\n\n            for (let i = 0; i < cs.length; i++) {\n                var styleName = cs.item(i);\n                if (Utils.startsWith(styleName, '-')) {\n                    continue;\n                }\n\n                var propertyValue = cs.getPropertyValue(styleName);\n                if (parentCs) {\n                    if (propertyValue === parentCs.getPropertyValue(styleName)) {\n                        continue;\n                    }\n                }\n\n                if (Exporter.exportedStyles.some(s=>s.test(styleName))) {\n                    cssStyleText += '; ' + styleName + ': ' + propertyValue;\n                } else if (Exporter.svgProperties.some(s=>s.test(styleName))) {\n                    target.setAttribute(styleName, propertyValue);\n                }\n\n            }\n            if (cssStyleText.length) {\n                target.setAttribute(\"style\", cssStyleText);\n            } else {\n                target.removeAttribute(\"style\")\n            }\n\n\n            var toRemove = [];\n            for (let i = 0; i < children.length; i++) {\n                var node = children[i];\n                if (!appendInlineStyles(node, targetChildren[i], cs)) {\n                    toRemove.push(targetChildren[i]);\n                }\n            }\n            toRemove.forEach(n=> {\n                target.removeChild(n)\n            });\n            return true;\n        }\n\n        /*var textElements = svgNode.getElementsByTagName('text')\n         _.each(textElements, function (el) {\n\n\n         var textBBox = el.getBBox();\n         console.log(el,textBBox, el.getBoundingClientRect());\n         _.each(el.getElementsByTagName('tspan'), tspan=>{\n         var tspanBBox = tspan.getBBox();\n         console.log(tspan,tspanBBox, tspan.getBoundingClientRect());\n         })\n\n         // el.style['font-family'] = el.style['font-family'] && el.style['font-family'].split(' ').splice(-1);\n         });*/\n\n\n        svgClone.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        return svgClone;\n    }\n\n\n    static getSVGString(svgNode, removeIds=false) {\n        // svgNode = svgNode.cloneNode(true);\n        var svgClone = Exporter.getSvgCloneWithInlineStyles(svgNode);\n\n        var svgString = Exporter.serializeSvgNode(svgClone);\n        // svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\n        // svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\n        svgString = Exporter.sanitizeSVG(svgString, removeIds);\n\n        return svgString;\n    }\n\n    static serializeSvgNode(svgNode) {\n        var serializer = new XMLSerializer();\n        return serializer.serializeToString(svgNode);\n    }\n\n    static validateSvgNode(svgNode) {\n        var svgString = Exporter.serializeSvgNode(svgNode);\n        var oParser = new DOMParser();\n        var doc = oParser.parseFromString(svgString, 'image/svg+xml');\n        return doc.documentElement.nodeName.indexOf('parsererror') === -1;\n    }\n\n    static svgString2Image(svgString, width, height, format, callback) {\n        var format = format ? format : 'png';\n        var imgsrc = 'data:image/svg+xml,' + (encodeURIComponent(svgString)); // Convert SVG string to dataurl\n\n        // var canvas = document.createElement(\"canvas\");\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n\n        var image = new Image;\n        image.width = width;\n        image.height = height;\n        var target = new Image;\n        target.width = width;\n        target.height = height;\n\n\n        image.onload = function () {\n            // context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            canvas.toBlob(function (blob) {\n                var filesize = Math.round(blob.length / 1024) + ' KB';\n                if (callback) callback(blob, filesize);\n            });\n\n        };\n\n        image.src = imgsrc;\n    }\n\n    //decisiontree@yyyy.mm.dd_hh.mm.ss\n    static getExportFileName(ext, name='decisiontree') {\n        var format = d3.timeFormat(\"%Y.%m.%d_%H.%M.%S\");\n        var date = new Date();\n        name += '@' + format(date);\n        if (ext) {\n            name += '.' + ext\n        }\n        return name;\n    }\n\n    static saveAsPng(svg, options) {\n\n        var clientSide = options.png.mode === 'client';\n        var fallback = options.png.mode === 'fallback';\n        var serverSide = options.png.mode === 'server';\n        if (Utils.detectIE()) {\n            if (clientSide) {\n                alert(i18n.t('error.pngExportNotSupportedIE'));\n                return;\n            }\n\n            if (fallback) {\n                fallback = false;\n                serverSide = true;\n            }\n        }\n        LoadingIndicator.show();\n\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n            var svgWidth = svg.attr('width');\n            var svgHeight = svg.attr('height');\n\n            var pngWidth = 4 * svgWidth;\n            var pngHeight = 4 * svgHeight;\n            if (clientSide || fallback) {\n                Exporter.svgString2Image(svgString, pngWidth, pngHeight, 'png', save); // passes Blob and filesize String to the callback\n\n                function save(dataBlob, filesize) {\n                    try {\n                        Exporter.saveAs(dataBlob, Exporter.getExportFileName('png'));\n                        LoadingIndicator.hide();\n                    } catch (e) {\n                        log.warn('client side png rendering failed!');\n                        if (fallback) {\n                            log.info('performing server side fallback.');\n                            Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n                        } else {\n                            throw e;\n                        }\n                    }\n\n                }\n            } else if (serverSide) {\n                Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n            }\n\n\n        } catch (e) {\n            alert(i18n.t('error.pngExportNotSupported'));\n            LoadingIndicator.hide();\n            log.error('pngExportNotSupported', e);\n        }\n    }\n\n\n    static saveAsSvg(svg) {\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\n            Exporter.saveAs(blob, Exporter.getExportFileName('svg'));\n        } catch (e) {\n            alert(i18n.t('error.svgExportNotSupported'));\n            log.error('svgExportNotSupported', e);\n        }\n    }\n\n    static exportPdfClientSide(svgString, width, height) {\n        var doc = new jsPDF('l', 'pt', [width, height]);\n        var dummy = document.createElement('svg');\n        dummy.innerHTML = svgString;\n        svg2pdf(dummy.firstChild, doc, {\n            xOffset: 0,\n            yOffset: 0,\n            scale: 1\n        });\n        doc.save(Exporter.getExportFileName('pdf'));\n        LoadingIndicator.hide();\n\n    }\n\n    static postAndSave(url, data, filename, successCallback, failCallback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('post', url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function () {\n            var status = xhr.status;\n            log.debug(status);\n            var type = xhr.getResponseHeader('Content-Type');\n            if (status == 200) {\n                var blob = new Blob([this.response], {type: type});\n                Exporter.saveAs(blob, filename);\n                if (successCallback) {\n                    successCallback();\n                }\n            } else {\n                if (failCallback) {\n                    failCallback();\n                }\n            }\n        };\n        xhr.onreadystatechange = function (oEvent) {\n            if (xhr.readyState === 4) {\n                if (xhr.status !== 200) {\n                    failCallback();\n                }\n            }\n        };\n\n\n        xhr.send(JSON.stringify(data));\n    }\n\n    static exportPdfServerSide(svgString, url) {\n        var filename = Exporter.getExportFileName('pdf');\n        var data = {svg: svgString, type: 'pdf', noDownload: true};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        // Utils.postByForm(url, {\n        //     filename: filename,\n        //     type: 'pdf',\n        //     // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n        //     // scale: options.scale,\n        //     svg: svgString\n        // });\n\n    }\n\n    static exportPngServerSide(svgString, url, pngWidth, pngHeight) {\n        var filename = Exporter.getExportFileName('png');\n        var data = {svg: svgString, type: 'png', noDownload: true, width: pngWidth};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        /*Utils.postByForm(url, {\n         filename: filename,\n         type: 'pdf',\n         // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n         // scale: options.scale,\n         svg: svgString\n         });*/\n\n    }\n\n    static saveAsPdf(svg, options) {\n        var clientSidePdfExportAvailable = Exporter.isClientSidePdfExportAvailable();\n        if (options.pdf.mode === 'client') {\n            if (!clientSidePdfExportAvailable) {\n                alert(i18n.t('error.jsPDFisNotIncluded'));\n                return;\n            }\n        }\n        LoadingIndicator.show();\n        var margin = 20;\n        var svgElement = svg.node();\n        var width = svgElement.width.baseVal.value + 2 * margin,\n            height = svgElement.height.baseVal.value + 2 * margin;\n        try {\n            var svgString = Exporter.getSVGString(svgElement);\n\n            var fallback = options.pdf.mode === 'fallback';\n            if (options.pdf.mode === 'client' || fallback) {\n                try {\n                    Exporter.exportPdfClientSide(svgString, width, height);\n                } catch (e) {\n                    log.error('client side pdf rendering failed!');\n                    if (fallback) {\n                        log.info('performing server side fallback.');\n                        Exporter.exportPdfServerSide(svgString, options.serverUrl);\n                    } else {\n                        throw e;\n                    }\n                }\n            } else if (options.pdf.mode === 'server') {\n                Exporter.exportPdfServerSide(svgString, options.serverUrl);\n            }\n        } catch (e) {\n            log.error('pdfExportNotSupported', e);\n            LoadingIndicator.hide();\n            alert(i18n.t('error.pdfExportNotSupported'));\n\n        }\n\n    }\n\n    static isClientSidePdfExportAvailable() {\n        return typeof jsPDF !== 'undefined' && typeof svg2pdf !== 'undefined'\n    }\n\n\n    static sanitizeSVG(svg, removeIds=false) {\n        let sanitized = svg\n            .replace(/zIndex=\"[^\"]+\"/g, '')\n            .replace(/isShadow=\"[^\"]+\"/g, '')\n            .replace(/symbolName=\"[^\"]+\"/g, '')\n            .replace(/jQuery[0-9]+=\"[^\"]+\"/g, '')\n            .replace(/url\\((\"|&quot;)(\\S+)(\"|&quot;)\\)/g, 'url($2)')\n            .replace(/url\\([^#]+#/g, 'url(#')\n            .replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ')\n            .replace(/ (NS[0-9]+\\:)?href=/g, ' xlink:href=')\n            .replace(/\\n/, ' ')\n            .replace(/<\\/svg>.*?$/, '</svg>')\n            .replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"')\n            .replace(/&nbsp;/g, '\\u00A0')\n            .replace(/&shy;/g, '\\u00AD');\n\n        if(removeIds){\n            return sanitized.replace(/id=\"[^\"]+\"/g, '')\n        }\n\n        return sanitized;\n\n    }\n\n    static saveAsCSV(rows, name='decisiontree') {\n        var csvRows = [];\n        rows.forEach(row => {\n            csvRows.push(row.map(r=>Exporter.escapeCsvField(r)).join(','))\n        });\n        var csvString = csvRows.join(\"\\r\\n\");\n\n        var blob = new Blob([csvString], {type: \"text/csv\"});\n        Exporter.saveAs(blob, Exporter.getExportFileName('csv', name));\n\n    }\n\n    static escapeCsvField(field){\n        if(Utils.isString(field)){\n            return '\"'+field.replace(/\"/g, '\"\"')+'\"'\n        }\n        return field;\n    }\n}\n","import {i18n} from './i18n/i18n'\n\nexport class FileLoader{\n\n    static openFile(callback){\n        var input =  document.getElementById('sd-file-input');\n        input.onchange = loadFile;\n\n        input.click();\n\n        function loadFile() {\n\n             var file, fr;\n\n\n            if (typeof window.FileReader !== 'function') {\n                alert(i18n.t('error.fileApiNotSupported'));\n                return;\n            }\n            input =  document.getElementById('sd-file-input');\n            if (!input.files) {\n                alert(i18n.t('error.inputFilesProperty'));\n                return;\n            }\n\n            if (!input.files[0]) {\n                return;\n            }\n\n            file = input.files[0];\n            fr = new FileReader();\n            fr.onload = receivedText;\n            fr.readAsText(file);\n\n\n            function receivedText(e) {\n                callback(e.target.result);\n                input.value = null;\n            }\n        }\n    }\n\n}\n","export class InputField{\n    name;\n    type;\n    validator;\n    valueAccessor;\n\n    id;\n    label;\n    valueUpdateCallback;\n\n    constructor(id, name, type, label, valueAccessor, validator, options, parser, styleClass){\n        this.name = name;\n        this.type = type;\n        this.valueAccessor = valueAccessor;\n        this.validator = validator;\n        this.id=id;\n        this.label = label;\n        this.options = options;\n        this.parser = parser;\n        this.styleClass = styleClass;\n    }\n\n    getValue(){\n        return this.valueAccessor.get();\n    }\n\n    setValue(val){\n        return this.valueAccessor.set(val);\n    }\n\n    parse(val){\n        if(this.parser){\n            return this.parser(val)\n        }\n        return val;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PathValueAccessor {\n    sourceObject;\n    path;\n    constructor(sourceObject, path){\n        this.sourceObject=sourceObject;\n        this.path = path;\n    }\n\n    get(){\n        return Utils.get(this.sourceObject, this.path);\n    }\n\n    set(v){\n        return Utils.set(this.sourceObject, this.path, v);\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Neues Diagramm\",\n        \"openDiagram\": \"Diagramm öffnen\",\n        \"saveDiagram\": \"Aktuelles Diagramm speichern\",\n        \"export\":{\n            \"label\": \"Exportieren nach\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Baum\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"Aussicht\",\n            \"options\": {\n                \"criterion1\":\"Kriterium 1\",\n                \"criterion2\":\"Kriterium 2\",\n                \"twoCriteria\":\"Zwei Kriterien\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regel\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Rückgängig machen\",\n        \"redo\": \"Wiederholen\",\n        \"settings\": \"Einstellungen\",\n        \"about\": \"Über\",\n        \"sensitivityAnalysis\": \"Sensitivitätsanalyse\",\n        \"recompute\": \"Neu Berechnen\"\n    },\n    \"node\":{\n        \"name\": \"Beschreibung\"\n    },\n    \"edge\":{\n        \"name\": \"Beschreibung\",\n        \"payoff\": \"Auszahlung\",\n        \"probability\": \"Wahrscheinlichkeit\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Rangliste\",\n        \"buttons\": {\n            \"downloadCsv\": \"CSV Herunterladen\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regel #\",\n            \"policy\": \"Regel\",\n            \"comment\": \"Kommentar\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominiert (durch#{{policy}})\",\n            \"extendedDominatedBy\": \"Erweitert-dominiert (durch #{{policy1}} und #{{policy2}})\",\n            \"incratio\": \"Inkrementelles Verhältnis={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Markiert\",\n                \"highlighted-default\": \"Empfohlen (für Standard-WTP)\",\n                \"extended-dominated\" : \"Erweitert-dominiert\",\n                \"dominated\": \"Dominiert\",\n                \"default\": \"Andere\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Richtung von{{name}} Optimierung\",\n                \"gradientArrow2\": \"Richtung von {{name}} Optimierung\",\n                \"dominatedRegion\": \"Dominierte Region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Graumarkiert Bereich stellt dominierte Region dar\",\n                \"gradientArrows\": \"Pfeile zeigen Verbesserungsrichtung an\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivitätsanalyse\",\n        \"buttons\": {\n            \"runJob\": \"Lauf\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Beenden\",\n            \"resumeJob\": \"Fortsetzen\",\n            \"downloadCsv\": \"CSV Herunterladen\",\n            \"back\": \"Zurück\",\n            \"clear\": \"Löschen\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Entfernen\",\n            \"addParameterValue\": \"Hinzufügen\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} Grundregeln\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Wärmekarte\"\n            }\n        },\n        \"policyPreview\": \"Grundregel Vorschau\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-Wege-Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado-diagramm\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Verringerung\",\n                    \"high\": \"Erhöhung\"\n                },\n                \"xAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistische Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"numberOfRuns\": {\n                    \"label\": \"Anzahl der Läufe\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formel\",\n                        \"help\": \"Wählen Sie die Formelvorlage aus dem Menü aus oder schreiben Sie benutzerdefinierten Code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\",\n                \"param-computation\": \"Fehler beim Berechnen von Parameterwerten:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Netzdiagramm\",\n            \"param\": {\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- prozentuale Veränderung zum Berücksichtigen\"\n                },\n                \"length\": {\n                    \"label\": \"Anzahl der zu testenden Werte\",\n                    \"help\": \"Anzahl der zu testenden Werte (an einer Seite des Bereichs)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Prozentuale Veränderung\",\n                \"yAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Rangliste\"\n        },\n        \"errors\":{\n            \"generic\": \"Fehler bei der Sensitivitätsanalyse: {{message}}\",\n            \"params\": \"Inkorrekte {{jobName}} Parametern\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Einstellungen\",\n        \"general\":{\n            \"title\": \"Allgemein\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontFamily\": \"Schriftfamilie\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"numberFormatLocale\": \"Zahlenformat Gebietsschema\"\n        },\n        \"payoff1\":{\n            \"title\": \"Auszahlung 1 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"payoff2\":{\n            \"title\": \"Auszahlung 2 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"probability\":{\n            \"title\": \"Wahrscheinlichkeit Zahlenformat\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"fontSize\": \"Schriftgröße\",\n            \"color\": \"Farbe\"\n        },\n        \"node\":{\n            \"title\": \"Knoten\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Beschreibung Schriftgröße\",\n                \"color\": \"Beschreibungsfarbe\"\n            },\n            \"payoff\": {\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            },\n            \"decision\": {\n                \"title\": \"Entscheidungsknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Zufall Knoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Endknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                },\n                \"payoff\": {\n                    \"title\": \"Auszahlung\",\n                    \"fontSize\": \"Schriftgröße\",\n                    \"color\": \"Farbe\",\n                    \"negativeColor\": \"Negative Farbe\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \" Zweig\",\n            \"stroke\": \"Farbe\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"selected\":{\n                \"title\": \"Ausgewählt\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\"\n            },\n            \"payoff\":{\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagrammtitel\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"color\": \"Farbe\",\n            \"margin\":{\n                \"title\": \"Rand\",\n                \"top\": \"Oben\",\n                \"bottom\": \"Unten\"\n            },\n            \"description\":{\n                \"title\": \"Untertitel (Diagrammbeschreibung)\",\n                \"show\": \"Anzeigen\",\n                \"fontSize\": \"Schriftgröße\",\n                \"fontWeight\": \"Schriftgewicht\",\n                \"fontStyle\": \"Schriftstil\",\n                \"color\": \"Farbe\",\n                \"marginTop\": \"Rand Oben\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Rangliste\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max Breite\",\n                \"highlightedColor\": \"Farbe der markierten Regel\",\n                \"highlightedDefaultColor\": \"Empfohlene Regel(für Standard-WTP) Farbe\",\n                \"extendedDominatedColor\": \"Farbe der erweitert-dominierten Regel\",\n                \"dominatedColor\": \"Farbe der dominierten Regel\",\n                \"defaultColor\": \"Farbe der anderen Regeln\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Weitere\",\n            \"disableAnimations\": \"Animationen Deaktivieren\",\n            \"forceFullEdgeRedraw\": \"Erzwingt vollständige Neuzeichnung der Zweige\",\n            \"hideLabels\": \"Verstecke Beschreibung\",\n            \"hidePayoffs\": \"Verstecke Auszahlungen\",\n            \"hideProbabilities\": \"Verstecke Wahrscheinlichkeiten\",\n            \"raw\": \"Rau\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Über\"\n    },\n    \"help\":{\n        \"header\": \"Hilfe\",\n        \"mouse\": {\n            \"header\":\"Mausaktionen:\",\n            \"list\":{\n                \"1\": \"Linke Maustaste: Knoten/Zweig Auswahl\",\n                \"2\": \"Rechte Maustaste: Kontextmenü (Hinzufügen / Manipulieren von Knoten)\",\n                \"3\": \"Linke Maus Doppelklick: Kontextmenü\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Tastatur:\",\n            \"list\":{\n                \"1\": \"Del: ausgewählte Knoten Löschen\",\n                \"2\": \"Ctrl-C/X: ausgewählte Knoten Kopieren/Ausschneiden\",\n                \"3\": \"Ctrl-V: kopierte Knoten als Teilbaum ausgewähltes Knotens einfügen\",\n                \"4\": \"Ctrl-Y/Z: Rückgängig/Wiederholen\",\n                \"5\": \"Ctrl-Alt-D/C/T: Neue Entscheidungs/Zufall/Endsknoten als Unterknoten von <strong>ausgewähltem Knoten</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Neue Entscheidungs/Zufall Knoten in <strong>ausgewählten Zweig </strong> Injizieren\"\n            }\n        },\n        \"docs\": \"Die Dokumentation von SilverDecisions ist unter <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a> verfügbar\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variablendefinitionen\",\n        \"scope\": {\n            \"global\": \"Globaler Anwendungsbereich\",\n            \"node\": \"Gewählten Knoten und Teilbaum Anwendungsbereich\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variabel Anwendungsbereich:\",\n            \"global\": \"Globaler\",\n            \"node\": \"Gewählten Knoten und Teilbaum\"\n        },\n        \"header\": \"Variablen\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Dialog Öffnen\",\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Mehrere Kriterien\",\n        \"defaultMaximizedCriterionName\": \"Effekt\",\n        \"defaultMinimizedCriterionName\": \"Kosten\",\n        \"nameOfCriterion1\": \"Name des Kriteriums 1\",\n        \"nameOfCriterion2\": \"Name des Kriteriums 2\",\n        \"defaultCriterion1Weight\": \"Default 1. Kriterium Gewicht\",\n        \"weightLowerBound\": \"Gewicht untere Grenze\",\n        \"weightUpperBound\": \"Gewicht obere Grenze\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Rangliste anzeigen\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontaler Rand\",\n        \"marginVertical\": \"Vertikaler Rand\",\n        \"nodeSize\": \"Knotengröße\",\n        \"edgeSlantWidthMax\": \"Kantenschräge (max)\",\n        \"gridWidth\": \"Breite\",\n        \"gridHeight\": \"Höhe\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Einzelheiten\",\n        \"title\" : \"Titel\",\n        \"description\" : \"Beschreibung\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Entscheidungsknoten\",\n                \"chance\":\"Zufall Knoten\",\n                \"terminal\":\"Endknoten\"\n            },\n            \"edge\": \"Zweig\",\n            \"text\": \"Schwimmender Text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Verbindungen\",\n                \"child\": {\n                    \"header\": \"Zweig #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Möchten Sie das aktuelle Diagramm wirklich löschen? Alle nicht gespeicherten Daten werden verloren.\",\n        \"openDiagram\": \"Sind Sie sicher? Alle nicht gespeicherten Diagrammdaten werden verloren.\",\n        \"beforeunload\": \"Sind Sie sicher, dass Sie SilverDecisions schließen möchten? Alle nicht gespeicherten Diagrammdaten werden verloren.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Fehler beim Analysieren der Datei!\",\n        \"fileApiNotSupported\":\"Die Datei-API wird in diesem Browser noch nicht unterstützt.\",\n        \"inputFilesProperty\":\"Ihr Browser scheint die `files`-Eigenschaft der Dateieingaben nicht zu unterstützen.\",\n        \"notSilverDecisionsFile\":\"Keine SilverDecisions-Datei!\",\n        \"incorrectVersionFormat\": \"Falsches Format der Versionszeichenfolge!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version der Datei ist neuer als Version des Softwares. Einige Funktionen möglicherweise fehlen.\",\n        \"objectiveComputationFailure\": \"Fehler beim Berechnen von Objektiven!\",\n        \"diagramDrawingFailure\": \"Fehler beim Zeichnen des Diagramms!\",\n        \"malformedData\":\"Fehler beim Lesen der Baumdaten!\",\n        \"pngExportNotSupported\": \"Der Export nach PNG wird in Ihrem Browser nicht unterstützt.\",\n        \"pngExportNotSupportedIE\": \"Der Export nach PNG wird in Internet Explorer nicht unterstützt.\",\n        \"svgExportNotSupported\": \"Der Export nach SVG wird in Ihrem Browser nicht unterstützt.\",\n        \"pdfExportNotSupported\": \"Der Export nach PDF wird in Ihrem Browser nicht unterstützt.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Falsche Auszahlungsformat Optionen\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Falsche Wahrscheinlichkeitsformat Optionen\",\n        \"incorrectNumberFormatOptions\": \"Falsche Zahlenformat, die Standardeinstellungen angewendet.\",\n        \"jsPDFisNotIncluded\": \"jsPDF ist nicht enthalten!\",\n        \"serverSideExportRequestFailure\": \"Export Server Anfrage fehlgeschlagen!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"New diagram\",\n        \"openDiagram\": \"Open existing diagram\",\n        \"saveDiagram\": \"Save current diagram\",\n        \"export\":{\n            \"label\": \"Export to\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Tree\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"View\",\n            \"options\": {\n                \"criterion1\":\"Criterion 1\",\n                \"criterion2\":\"Criterion 2\",\n                \"twoCriteria\":\"Two criteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Rule\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Undo\",\n        \"redo\": \"Redo\",\n        \"settings\": \"Settings\",\n        \"about\": \"About\",\n        \"sensitivityAnalysis\": \"Sensitivity analysis\",\n        \"recompute\": \"Recompute\"\n    },\n    \"node\":{\n        \"name\": \"Label\"\n    },\n    \"edge\":{\n        \"name\": \"Label\",\n        \"payoff\": \"Payoff\",\n        \"probability\": \"Probability\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"League table\",\n        \"buttons\": {\n            \"downloadCsv\": \"Download CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Policy #\",\n            \"policy\": \"Policy\",\n            \"comment\": \"Comment\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominated (by #{{policy}})\",\n            \"extendedDominatedBy\": \"extended-dominated (by #{{policy1}} and #{{policy2}})\",\n            \"incratio\": \"incremental ratio={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Recommended (for some WTP in range)\",\n                \"highlighted-default\": \"Recommended (for default WTP)\",\n                \"extended-dominated\" : \"Extended-dominated\",\n                \"dominated\": \"Dominated\",\n                \"default\": \"Other\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direction of {{name}} optimization\",\n                \"gradientArrow2\": \"Direction of {{name}} optimization\",\n                \"dominatedRegion\": \"Not recommended region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Grey area highlights not recommended region\",\n                \"gradientArrows\": \"Arrows indicate improvement direction\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivity analysis\",\n        \"buttons\": {\n            \"runJob\": \"Run\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Terminate\",\n            \"resumeJob\": \"Resume\",\n            \"downloadCsv\": \"Download CSV\",\n            \"back\": \"Back\",\n            \"clear\": \"Clear\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Remove\",\n            \"addParameterValue\": \"Add\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} policies\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Heatmap\"\n            }\n        },\n        \"policyPreview\": \"policy preview\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-way sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado diagram\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decrease\",\n                    \"high\": \"Increase\"\n                },\n                \"xAxisTitle\": \"Payoff\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistic sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"numberOfRuns\": {\n                    \"label\": \"Number of runs\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Select formula template from the menu or write custom code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\",\n                \"param-computation\": \"Error computing parameter values:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Spider plot\",\n            \"param\": {\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- percentage change to consider\"\n                },\n                \"length\": {\n                    \"label\": \"Number of values to test\",\n                    \"help\": \"Number of values to test (in one side of range)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Percentage change\",\n                \"yAxisTitle\": \"Payoff\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"League table\"\n        },\n        \"errors\":{\n            \"generic\": \"Error in {{jobName}} computations: {{message}}\",\n            \"params\": \"Incorrect {{jobName}} parameters\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Settings\",\n        \"general\":{\n            \"title\": \"General\",\n            \"fontSize\": \"Font size\",\n            \"fontFamily\": \"Font family\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"numberFormatLocale\": \"Number format locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Payoff 1 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"payoff2\":{\n            \"title\": \"Payoff 2 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"probability\":{\n            \"title\": \"Probability number format\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"fontSize\": \"Font size\",\n            \"color\": \"Color\"\n        },\n        \"node\":{\n            \"title\": \"Node\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Label font size\",\n                \"color\": \"Label color\"\n            },\n            \"payoff\": {\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            },\n            \"decision\": {\n                \"title\": \"Decision Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Chance Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Terminal Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                },\n                \"payoff\": {\n                    \"title\": \"Payoff\",\n                    \"fontSize\": \"Font size\",\n                    \"color\": \"Color\",\n                    \"negativeColor\": \"Negative color\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Edge\",\n            \"stroke\": \"Color\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"selected\":{\n                \"title\": \"Selected\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\"\n            },\n            \"payoff\":{\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagram title\",\n            \"fontSize\": \"Font size\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"color\": \"Color\",\n            \"margin\":{\n                \"title\": \"Margin\",\n                \"top\": \"Top\",\n                \"bottom\": \"Bottom\"\n            },\n            \"description\":{\n                \"title\": \"Subtitle (diagram description)\",\n                \"show\": \"Show\",\n                \"fontSize\": \"Font size\",\n                \"fontWeight\": \"Font weight\",\n                \"fontStyle\": \"Font style\",\n                \"color\": \"Color\",\n                \"marginTop\": \"Margin top\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"League Table\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max width\",\n                \"highlightedColor\": \"Recommended (for some WTP in range) policy color\",\n                \"highlightedDefaultColor\": \"Recommended (for default WTP) policy color\",\n                \"extendedDominatedColor\": \"Extended dominated policy color\",\n                \"dominatedColor\": \"Dominated policy color\",\n                \"defaultColor\": \"Other policies color\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Other\",\n            \"disableAnimations\": \"Disable animations\",\n            \"forceFullEdgeRedraw\": \"Force full redraw of edges\",\n            \"hideLabels\": \"Hide labels\",\n            \"hidePayoffs\": \"Hide payoffs\",\n            \"hideProbabilities\": \"Hide probabilities\",\n            \"raw\": \"Raw\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"About\"\n    },\n    \"help\":{\n        \"header\": \"Help\",\n        \"mouse\": {\n            \"header\":\"Mouse actions:\",\n            \"list\":{\n                \"1\": \"left mouse button: node/edge selection\",\n                \"2\": \"right mouse button: context menu (adding/manipulating nodes)\",\n                \"3\": \"left mouse dbclick: context menu\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Keyboard:\",\n            \"list\":{\n                \"1\": \"Del: delete selected nodes\",\n                \"2\": \"Ctrl-C/X: copy/cut selected nodes\",\n                \"3\": \"Ctrl-V: paste copied nodes as a subtree of a selected node\",\n                \"4\": \"Ctrl-Y/Z: undo/redo\",\n                \"5\": \"Ctrl-Alt-D/C/T: add new Decision/Chance/Terminal subnode of a <strong>selected node</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inject new Decision/Chance node into a <strong>selected edge</strong>\"\n            }\n        },\n        \"docs\": \"Documentation of SilverDecisions is available <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variable definitions\",\n        \"scope\": {\n            \"global\": \"global scope\",\n            \"node\": \"selected node and subtree scope\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variable scope:\",\n            \"global\": \"global\",\n            \"node\": \"selected node and subtree\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Open dialog\",\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Multiple criteria\",\n        \"defaultMaximizedCriterionName\": \"Effect\",\n        \"defaultMinimizedCriterionName\": \"Cost\",\n        \"nameOfCriterion1\": \"Name for criterion 1\",\n        \"nameOfCriterion2\": \"Name for criterion 2\",\n        \"defaultCriterion1Weight\": \"Default 1st criterion weight\",\n        \"weightLowerBound\": \"Weight lower bound\",\n        \"weightUpperBound\": \"Weight upper bound\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Show league table\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontal Margin\",\n        \"marginVertical\": \"Vertical Margin\",\n        \"nodeSize\": \"Node size\",\n        \"edgeSlantWidthMax\": \"Edge slant (max)\",\n        \"gridWidth\": \"Width\",\n        \"gridHeight\": \"Height\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Details\",\n        \"title\" : \"Title\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Decision Node\",\n                \"chance\":\"Chance Node\",\n                \"terminal\":\"Terminal Node\"\n            },\n            \"edge\": \"Edge\",\n            \"text\": \"Floating text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connections\",\n                \"child\": {\n                    \"header\": \"Edge #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Do you really want to clear current diagram? All unsaved data will be lost.\",\n        \"openDiagram\": \"Are you sure? All unsaved diagram data will be lost.\",\n        \"beforeunload\": \"Are you sure you want to close SilverDecisions? All unsaved diagram data will be lost.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Error parsing file!\",\n        \"fileApiNotSupported\":\"The file API isn't supported on this browser yet.\",\n        \"inputFilesProperty\":\"Your browser doesn't seem to support the `files` property of file inputs.\",\n        \"notSilverDecisionsFile\":\"Not a SilverDecisions file!\",\n        \"incorrectVersionFormat\": \"Incorrect format of version string!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version in file is newer than version of the application. Some features may be missing.\",\n        \"objectiveComputationFailure\": \"Error while computing objective!\",\n        \"diagramDrawingFailure\": \"Error while drawing diagram!\",\n        \"malformedData\":\"Error reading tree data!\",\n        \"pngExportNotSupported\": \"Export to PNG is not supported in your browser.\",\n        \"pngExportNotSupportedIE\": \"Export to PNG not supported in Internet Explorer.\",\n        \"svgExportNotSupported\": \"Export to SVG is not supported in your browser.\",\n        \"pdfExportNotSupported\": \"Export to PDF is not supported in your browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Incorrect payoff number format options\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Incorrect probability number format options\",\n        \"incorrectNumberFormatOptions\": \"Incorrect number format options, using default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF is not included!\",\n        \"serverSideExportRequestFailure\": \"Export Server request failed!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nouveau diagramme\",\n        \"openDiagram\": \"Ouvrir le diagramme existant\",\n        \"saveDiagram\": \"Enregistrer le diagramme actuel\",\n        \"export\":{\n            \"label\": \"Exporter vers\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposition\",\n            \"manual\": \"Manuel\",\n            \"tree\": \"Arbre\",\n            \"cluster\": \"Grappe\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vue\",\n            \"options\": {\n                \"criterion1\":\"Critère 1\",\n                \"criterion2\":\"Critère 2\",\n                \"twoCriteria\":\"Deux critères\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regle\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Annuler\",\n        \"redo\": \"Refaire\",\n        \"settings\": \"Parametres\",\n        \"about\": \"A propos\",\n        \"sensitivityAnalysis\": \"Analyse de sensibilité\",\n        \"recompute\": \"Recalculer\"\n    },\n    \"node\":{\n        \"name\": \"Étiquette\"\n    },\n    \"edge\":{\n        \"name\": \"Étiquette\",\n        \"payoff\": \"Avantage\",\n        \"probability\": \"Probabilité\"\n    },\n    \"text\":{\n        \"value\": \"Texte\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classement\",\n        \"buttons\": {\n            \"downloadCsv\": \"Télécharger CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Règle #\",\n            \"policy\": \"Règle\",\n            \"comment\": \"Commentaire\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominé (par #{{policy}})\",\n            \"extendedDominatedBy\": \"Étendu-dominé (par #{{policy1}} et #{{policy2}})\",\n            \"incratio\": \"Ratio incrémental={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Surligné\",\n                \"highlighted-default\": \"Recommandée (pour WTP par défaut)\",\n                \"extended-dominated\" : \"Étendu-dominé\",\n                \"dominated\": \"Dominé\",\n                \"default\": \"Autre\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"La direction de {{name}} optimisation\",\n                \"gradientArrow2\": \"La direction de {{name}} optimisation\",\n                \"dominatedRegion\": \"Région dominée\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"La région grise surligne la région dominée\",\n                \"gradientArrows\": \"Les flèches indiquent une direction d'amélioration\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analyse de sensibilité\",\n        \"buttons\": {\n            \"runJob\": \"Exécuter\",\n            \"stopJob\": \"Arrêter\",\n            \"terminateJob\": \"Terminer\",\n            \"resumeJob\": \"Reprendre\",\n            \"downloadCsv\": \"Télécharger CSV\",\n            \"back\": \"Retourner\",\n            \"clear\": \"Effacer\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Effacer\",\n            \"addParameterValue\": \"Ajouter\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} règles\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Carte de chaleur\"\n            }\n        },\n        \"policyPreview\": \"Aperçu de la règle\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité multivariée\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Graphique en tornade\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Diminuer\",\n                    \"high\": \"Augmenter\"\n                },\n                \"xAxisTitle\": \"Avantage\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité probabiliste\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"numberOfRuns\": {\n                    \"label\": \"Nombre d'essais\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formule\",\n                        \"help\": \"Sélectionner le modèle de la formule dans le menu ou écrire un code personnalisé.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\",\n                \"param-computation\": \"Erreur de calcul des valeurs de paramètres:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Graphique en radar\",\n            \"param\": {\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- changement de pourcentage à considérer\"\n                },\n                \"length\": {\n                    \"label\": \"Nombre de valeurs à tester\",\n                    \"help\": \"Nombre de valeurs à tester (dans une partie de gamme)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Nom\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Changement de pourcentage\",\n                \"yAxisTitle\": \"Avantage\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classement\"\n        },\n        \"errors\":{\n            \"generic\": \"Erreur de calcul d'analyse de sensibilité: {{message}}\",\n            \"params\": \"Paramètres du {{jobName}} sont incorrect\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Parametres\",\n        \"general\":{\n            \"title\": \"Général\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontFamily\": \"Famille de police\",\n            \"fontWeight\": \"Poid de la police\",\n            \"fontStyle\": \"Style de police\",\n            \"numberFormatLocale\": \"format local de numérotation\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format de la numérotation des avantages 1\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format de la numérotation des avantages 2\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"probability\":{\n            \"title\": \"Format de la numérotatio des probabilités\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"fontSize\": \"Taille de police\",\n            \"color\": \"Couleur\"\n        },\n        \"node\":{\n            \"title\": \"Noud\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police de l'étiquette\",\n                \"color\": \"Couleur de l'étiquette\"\n            },\n            \"payoff\": {\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            },\n            \"decision\": {\n                \"title\": \"Noeud décisionnel\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de trait\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionnée\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Noud aléatoire\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Noeud terminal\",\n                \"fill\": \"Couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                },\n                \"payoff\": {\n                    \"title\": \"Avantage\",\n                    \"fontSize\": \"Taille de la police\",\n                    \"color\": \"Couleur\",\n                    \"negativeColor\": \"Négatif couleur\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Bord\",\n            \"stroke\": \"Couleur\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"selected\":{\n                \"title\": \"Choisi\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\"\n            },\n            \"payoff\":{\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titre du diagramme\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontWeight\": \"Poids de la police\",\n            \"fontStyle\": \"Style de la police\",\n            \"color\": \"Couleur\",\n            \"margin\":{\n                \"title\": \"Marge\",\n                \"top\": \"Haut du diagramme\",\n                \"bottom\": \"Bas du diagramme\"\n            },\n            \"description\":{\n                \"title\": \"Sous-titre (description du diagramme)\",\n                \"show\": \"Afficher\",\n                \"fontSize\": \"Taille de la police\",\n                \"fontWeight\": \"Poids de la police\",\n                \"fontStyle\": \"Style de police\",\n                \"color\": \"Couleur\",\n                \"marginTop\": \"Haut du marge\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classement\",\n            \"plot\": {\n                \"title\": \"Le graphe\",\n                \"maxWidth\": \"Largeur maximale\",\n                \"highlightedColor\": \"Couleur de la règle soulignée\",\n                \"highlightedDefaultColor\": \"Couleur recommandée pour la règle (pour WTP par défaut)\",\n                \"extendedDominatedColor\": \"Couleur de la règle étendu-dominée\",\n                \"dominatedColor\": \"Couleur de la règle dominée\",\n                \"defaultColor\": \"Couleur des autres règles\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Autre\",\n            \"disableAnimations\": \"Désactiver les animations\",\n            \"forceFullEdgeRedraw\": \"Forcer le redessinage complet des bords\",\n            \"hideLabels\": \"Masquer les étiquettes\",\n            \"hidePayoffs\": \"Masquer les paiements\",\n            \"hideProbabilities\": \"Masquer les probabilités\",\n            \"raw\": \"Brut\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"A propos\"\n    },\n    \"help\":{\n        \"header\": \"Aide\",\n        \"mouse\": {\n            \"header\":\"Actions de la souris:\",\n            \"list\":{\n                \"1\": \"Bouton gauche de la souris: sélection du noud/bord\",\n                \"2\": \"Bouton droit de la souris: menu contextuel (ajout/manipulation des nouds)\",\n                \"3\": \"Double clic gauche de la souris: menu contextuel\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Raccourcis clavier:\",\n            \"list\":{\n                \"1\": \"Del: effacer les nouds sélectionnés\",\n                \"2\": \"Ctrl-C/X: copier/couper les nouds sélectionnés\",\n                \"3\": \"Ctrl-V: coller les nouds copiés comme un sous-arbre d'un noud sélectionné\",\n                \"4\": \"Ctrl-Y/Z: annuler/refaire\",\n                \"5\": \"Ctrl-Alt-D/C/T: ajouter un nouveau sous-noud de décision/aléatoire/terminal d'un <strong>noud sélectionné</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: injecter un nouveau noeud de décision/aléatoire dans un <strong>bord sélectionné</strong>\"\n            }\n        },\n        \"docs\": \"La documentation de SilverDecisions est disponible  <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">ici</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Définitions des variables\",\n        \"scope\": {\n            \"global\": \"portée mondiale\",\n            \"node\": \"la portée des nœud et sous-arborescence sélectionné\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Portée de la variable:\",\n            \"global\": \"mondial\",\n            \"node\": \"nœud et sous-arborescence sélectionné\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Ouvrir la boîte de dialogue\",\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Critères multiples\",\n        \"defaultMaximizedCriterionName\": \"Effet\",\n        \"defaultMinimizedCriterionName\": \"Coût\",\n        \"nameOfCriterion1\": \"Le nome de critère 1\",\n        \"nameOfCriterion2\": \"Le nome de critère 2\",\n        \"defaultCriterion1Weight\": \"Par défaut poid du 1er critère\",\n        \"weightLowerBound\": \"Poid de la limite inférieure\",\n        \"weightUpperBound\": \"Poid de la limite supérieure\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Montrer classement\",\n            \"flip\": \"Basculer\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposition\",\n        \"marginHorizontal\": \"Marge horizontale\",\n        \"marginVertical\": \"Marge verticale\",\n        \"nodeSize\": \"Taille du noeud\",\n        \"edgeSlantWidthMax\": \"Inclinaison du bord (max.)\",\n        \"gridWidth\": \"Largeur\",\n        \"gridHeight\": \"Taille\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Détails\",\n        \"title\" : \"Titre\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Noeud de décision\",\n                \"chance\":\"Noud aléatoire\",\n                \"terminal\":\"Noeud terminal\"\n            },\n            \"edge\": \"Bord\",\n            \"text\": \"Texte flottant\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Les connexions\",\n                \"child\": {\n                    \"header\": \"Bord #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Voulez-vous vraiment effacer le diagramme actuel? Toutes les données non enregistrées seront perdues.\",\n        \"openDiagram\": \"Etes-vous sur? Toutes les données de diagramme non enregistrées seront perdues.\",\n        \"beforeunload\": \"Voulez-vous vraiment fermer SilverDecisions? Toutes les données de diagramme non enregistrées seront perdues.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Erreur lors de l'analyse du fichier!\",\n        \"fileApiNotSupported\":\"L'API du fichier n'est pas encore prise en charge sur ce navigateur.\",\n        \"inputFilesProperty\":\"Votre navigateur ne semble pas prendre en charge la propriété `fichiers`.\",\n        \"notSilverDecisionsFile\":\"Pas de fichiers SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Format incorrect de la chaîne de version!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La version dans le fichier est plus récente que la version de l'application. Certaines fonctionnalités peuvent être manquantes.\",\n        \"objectiveComputationFailure\": \"Erreur en calculant l'objectif!\",\n        \"diagramDrawingFailure\": \"Erreur lors du dessin diagramme!\",\n        \"malformedData\":\"Erreur lors de la lecture des données arborescentes!\",\n        \"pngExportNotSupported\": \"L'exportation vers PNG n'est pas prise en charge dans votre navigateur.\",\n        \"pngExportNotSupportedIE\": \"Exporter vers PNG n'est pas pris en charge dans Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'exportation vers SVG n'est pas prise en charge par votre navigateur.\",\n        \"pdfExportNotSupported\": \"L'exportation au format PDF n'est pas prise en charge par votre navigateur.\",\n        \"incorrectPayoffNumberFormatOptions\": \"L'option de format de numérotation des avantages chiosie est incorrecte.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"L'option de format de numérotation des probabilités chiosie est incorrecte.\",\n        \"incorrectNumberFormatOptions\": \"L'option de format de numérotation choisie est incorrecte.\",\n        \"jsPDFisNotIncluded\": \"JsPDF n'est pas inclus!\",\n        \"serverSideExportRequestFailure\": \"La demande de téléchargement au serveur a échoué!\"\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: {\n                en: {\n                    translation: en\n                },\n                pl: {\n                    translation: pl\n                },\n                it: {\n                    translation: it\n                },\n                de: {\n                    translation: de\n                },\n                fr: {\n                    translation: fr\n                }\n            }\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nuovo diagramma\",\n        \"openDiagram\": \"Apri diagramma esistnte\",\n        \"saveDiagram\": \"Salva il diagramma corente\",\n        \"export\":{\n            \"label\": \"Esporta in\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposizione\",\n            \"manual\": \"Manuale\",\n            \"tree\": \"Albero\",\n            \"cluster\": \"Grappolo\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vista\",\n            \"options\": {\n                \"criterion1\":\"Criterio 1\",\n                \"criterion2\":\"Criterio 2\",\n                \"twoCriteria\":\"Due criteri\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regola\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"max-min\",\n                \"maxi-max\":\"max-max\",\n                \"mini-min\":\"min-min\",\n                \"mini-max\":\"min-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Ripristina\",\n        \"redo\": \"Ripeti\",\n        \"settings\": \"Settaggi\",\n        \"about\": \"Di\",\n        \"sensitivityAnalysis\": \"Analisi di sensibilità\",\n        \"recompute\": \"Ricalcola\"\n    },\n    \"node\":{\n        \"name\": \"Etichetta\"\n    },\n    \"edge\":{\n        \"name\": \"Eticehtta\",\n        \"payoff\": \"Saldo\",\n        \"probability\": \"Probabilità\"\n    },\n    \"text\":{\n        \"value\": \"Testo\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classifica\",\n        \"buttons\": {\n            \"downloadCsv\": \"Scarica CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regola #\",\n            \"policy\": \"Regola\",\n            \"comment\": \"Commento\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominata (da #{{policy}})\",\n            \"extendedDominatedBy\": \"estesa-dominata (da #{{policy1}} e #{{policy2}})\",\n            \"incratio\": \"rapporto incrementale={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Evidenziato\",\n                \"highlighted-default\": \"Raccomandato (per default WTP)\",\n                \"extended-dominated\" : \"Estesa-dominata\",\n                \"dominated\": \"Dominata\",\n                \"default\": \"Altro\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direzione di {{name}} ottimizzazione\",\n                \"gradientArrow2\": \"Direzione di {{name}} ottimizzazione\",\n                \"dominatedRegion\": \"Regione dominata\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"L'area grigia evidenzia la regione dominata\",\n                \"gradientArrows\": \"Le frecce indicano la direzione di miglioramento\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analisi di sensibilità\",\n        \"buttons\": {\n            \"runJob\": \"Esegui\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Esci\",\n            \"resumeJob\": \"Riprendi\",\n            \"downloadCsv\": \"Scaricare CSV\",\n            \"back\": \"Indietro\",\n            \"clear\": \"Cancella\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Cancella\",\n            \"addParameterValue\": \"Aggiungi\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} politiche\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Massimo\",\n                \"minimum\": \"Minimo\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mappa di calore\"\n            }\n        },\n        \"policyPreview\": \"Anteprima della politica\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità multivariata\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagramma a tornado\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decresce\",\n                    \"high\": \"Cresce\"\n                },\n                \"xAxisTitle\": \"Saldo\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità probabilistica\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"numberOfRuns\": {\n                    \"label\": \"Numero di operazioni\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Seleziona modello di formula dal menu o scrivi un codice personalizzato.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\",\n                \"param-computation\": \"Errore di calcolo dei valori dei parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n                \"spider-plot\": {\n            \"name\": \"Diagramma di Kiviat\",\n            \"param\": {\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- variazione percentuale da considerare\"\n                },\n                \"length\": {\n                    \"label\": \"Numero di valpri da testare\",\n                    \"help\": \"Numero di valpri da testare (in una parte della gamma)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Variazione percentuale\",\n                \"yAxisTitle\": \"Saldo\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classifica\"\n        },\n        \"errors\":{\n            \"generic\": \"Errore nei calcoli di analisi di sensibilità: {{message}}\",\n            \"params\": \"{{jobName}} parameteri errati\"\n        }\n    },\n\n    \"settingsDialog\":{\n        \"title\": \"Settaggi\",\n        \"general\":{\n            \"title\": \"Generale\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontFamily\": \"Famiglia font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"numberFormatLocale\": \"Formato numero locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Formato saldo 1\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"payoff2\":{\n            \"title\": \"Formato saldo 2\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"probability\":{\n            \"title\": \"Formato probabilità\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"fontSize\": \"Dimensione font\",\n            \"color\": \"Colore\"\n        },\n        \"node\":{\n            \"title\": \"Nodo\",\n            \"strokeWidth\": \"Spessore linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Spessore linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font etichetta\",\n                \"color\": \"Colore etichetta\"\n            },\n            \"payoff\": {\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            },\n            \"decision\": {\n                \"title\": \"Nodo dicisione\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Nodo opportunità\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Nodo terminale\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                },\n                \"payoff\": {\n                    \"title\": \"Saldo\",\n                    \"fontSize\": \"Dimensione font\",\n                    \"color\": \"Colore\",\n                    \"negativeColor\": \"Colore negativo\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Ramo\",\n            \"stroke\": \"Colore\",\n            \"strokeWidth\": \"Larghezza linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"selected\":{\n                \"title\": \"Selezionato\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\"\n            },\n            \"payoff\":{\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titolo diagramma\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"color\": \"Colore\",\n            \"margin\":{\n                \"title\": \"Margine\",\n                \"top\": \"Superiore\",\n                \"bottom\": \"Inferiore\"\n            },\n            \"description\":{\n                \"title\": \"Sotto-titolo (descrizione diagramma)\",\n                \"show\": \"Mostra\",\n                \"fontSize\": \"Dimensione font\",\n                \"fontWeight\": \"Peso del font\",\n                \"fontStyle\": \"Stile font\",\n                \"color\": \"Colore\",\n                \"marginTop\": \"Margine superiore\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classifica\",\n            \"plot\": {\n                \"title\": \"Grafico\",\n                \"maxWidth\": \"Larghezza massima\",\n                \"highlightedColor\": \"Colore evidenziato della regola\",\n                \"highlightedDefaultColor\": \"Colore polizza raccomandata (per default WTP)\",\n                \"extendedDominatedColor\": \"Colori della regola dominata estesa\",\n                \"dominatedColor\": \"Colore della denominata regola\",\n                \"defaultColor\": \"Altri criteri colore\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Altro\",\n            \"disableAnimations\": \"Disabilita animazione\",\n            \"forceFullEdgeRedraw\": \"Forza ridisegno dei rami\",\n            \"hideLabels\": \"Nascondi le etichette\",\n            \"hidePayoffs\": \"Nascondi saldo\",\n            \"hideProbabilities\": \"Nascondi le probabilità\",\n            \"raw\": \"Non elaborato\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informazioni\"\n    },\n    \"help\":{\n        \"header\": \"Aiuto\",\n        \"mouse\": {\n            \"header\":\"Azioni mouse:\",\n            \"list\":{\n                \"1\": \"Bottone sinistro: selezione nodo/ramo\",\n                \"2\": \"Bottone destro: menu di contesto (aggiunta/manipolazione nodi)\",\n                \"3\": \"Doppio click bottone sinistro: menu di contesto\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Scorciatoie tastiera:\",\n            \"list\":{\n                \"1\": \"Del: cancella nodi selezionati\",\n                \"2\": \"Ctrl-C/X: copia/taglia nodi selezionati\",\n                \"3\": \"Ctrl-V: incolla nodi copiati come sotto-albero di un nodo selezionato\",\n                \"4\": \"Ctrl-Y/Z: ripristina/ripeti\",\n                \"5\": \"Ctrl-Alt-D/C/T: aggiungi nuovo sottonodo Decisione/Opportunità/Terminale di un <strong>nodo selezionato</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inietta un nuovo nodo Decisione/Opportunità in un <strong>ramo selezionato</strong>\"\n            }\n        },\n        \"docs\": \"La documentazione di SilverDecisions e disponibile <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">qui</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definizioni delle variabili\",\n        \"scope\": {\n            \"global\": \"raggio globale\",\n            \"node\": \"raggio di nodo e sotto-albero selezionati\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Raggio variabile:\",\n            \"global\": \"globale\",\n            \"node\": \"nodo e sotto-albero selezionati\"\n        },\n        \"header\": \"Variabili\",\n        \"code\": \"Codice\",\n        \"buttons\":{\n            \"openDialog\" : \"Apri il dialogo\",\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Criteri multipli\",\n        \"defaultMaximizedCriterionName\": \"Effetto\",\n        \"defaultMinimizedCriterionName\": \"Costo\",\n        \"nameOfCriterion1\": \"Nome del criterio 1\",\n        \"nameOfCriterion2\": \"Nome del criterio 2\",\n        \"defaultCriterion1Weight\": \"Predefinito 1° peso criterio\",\n        \"weightLowerBound\": \"Peso inferiore limitato\",\n        \"weightUpperBound\": \"Peso superiore del limite\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Mostra la classifica\",\n            \"flip\": \"Ribalta\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposizione\",\n        \"marginHorizontal\": \"Margine orizzontale\",\n        \"marginVertical\": \"Margine verticale\",\n        \"nodeSize\": \"Dimensione nodo\",\n        \"edgeSlantWidthMax\": \"Inclinazione nodo\",\n        \"gridWidth\": \"Larghezza\",\n        \"gridHeight\": \"Altezza\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Dettagli\",\n        \"title\" : \"Titolo\",\n        \"description\" : \"Descrizione\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Nodo decisione\",\n                \"chance\":\"Nodo opportunità\",\n                \"terminal\":\"Nodo terminale\"\n            },\n            \"edge\": \"Ramo\",\n            \"text\": \"Testo mobile\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connessioni\",\n                \"child\": {\n                    \"header\": \"Ramo #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Vuoi davvero cancellare ildiagramma corrente ? Tutti i dati non salvati saranno persi.\",\n        \"openDiagram\": \"Sei sicuro? Tutti i dati non salvati saranno persi.\",\n        \"beforeunload\": \"Sei sicuro di voler uscire da SilverDecisions ?Tutti i dati non salvati saranno persi.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Errore analizzando il file !\",\n        \"fileApiNotSupported\":\"l'API di questo file non è ancora supportata in questo browser.  \",\n        \"inputFilesProperty\":\"Il tuo browser non sembra supportare la proprieta del file di input.\",\n        \"notSilverDecisionsFile\":\"Non è un file SilverDecisions !\",\n        \"incorrectVersionFormat\": \"Formato non corretto della serie di versione!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La versione in file è più recente rispetto alla versione dell'applicazione. Alcune funzionalità possono essere indisponibili.\",\n        \"objectiveComputationFailure\": \"Errore durante il calcolo obiettivo!\",\n        \"diagramDrawingFailure\": \"Errore durante il disegno della diagramma!\",\n        \"malformedData\":\"Errore durante la lettura dei dati dell'albero !\",\n        \"pngExportNotSupported\": \"L'esport in formato PNG non è supportata nel tuo browser.\",\n        \"pngExportNotSupportedIE\": \"L'esport in formato PNG non è supportata in Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'esport in formato SVG non è supportata nel tuo browser.\",\n        \"pdfExportNotSupported\": \"L'esport in formato PDF non è supportata nel tuo browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Opzioni per il formato dei saldi non corrette.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Opzioni per il formato delle probabilità non corrette.\",\n        \"incorrectNumberFormatOptions\": \"Opzioni per il formato dei numeri non corrette, utilizzo del default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF non incluso !\",\n        \"serverSideExportRequestFailure\": \"Richiesta di export fallita lato server !\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nowy diagram\",\n        \"openDiagram\": \"Otwórz diagram\",\n        \"saveDiagram\": \"Zapisz diagram\",\n        \"export\":{\n            \"label\": \"Eksport\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Układ\",\n            \"manual\": \"Ręczny\",\n            \"tree\": \"Drzewo\",\n            \"cluster\": \"Zgrupowany\"\n        },\n        \"viewMode\": {\n            \"label\": \"Widok\",\n            \"options\": {\n                \"criterion1\":\"Kryterium 1\",\n                \"criterion2\":\"Kryterium 2\",\n                \"twoCriteria\":\"Dwa kryteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Reguła\",\n            \"options\": {\n                \"expected-value-maximization\":\"maksimum\",\n                \"expected-value-minimization\":\"minimum\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Cofnij\",\n        \"redo\": \"Ponów\",\n        \"settings\": \"Ustawienia\",\n        \"about\": \"Informacje\",\n        \"sensitivityAnalysis\": \"Analiza wrażliwości\",\n        \"recompute\": \"Przelicz\"\n    },\n    \"node\":{\n        \"name\": \"Etykieta\"\n    },\n    \"edge\":{\n        \"name\": \"Etykieta\",\n        \"payoff\": \"Wypłata\",\n        \"probability\": \"Prawdopodobieństwo\"\n    },\n    \"text\":{\n        \"value\": \"Tekst\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Tabela ligowa\",\n        \"buttons\": {\n            \"downloadCsv\": \"Pobierz CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Nr polityki\",\n            \"policy\": \"Polityka\",\n            \"comment\": \"Komentarz\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"zdominowana (przez #{{policy}})\",\n            \"extendedDominatedBy\": \"zdominowana rozszerzenie (przez #{{policy1}} i #{{policy2}})\",\n            \"incratio\": \"inkrementalny iloraz={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Rekomendowany (dla pewnej wartości WTP w zakresie)\",\n                \"highlighted-default\": \"Rekomendowany (dla domyślnej wartości WTP)\",\n                \"extended-dominated\" : \"Zdominowana rozszerzenie\",\n                \"dominated\": \"Zdominowana\",\n                \"default\": \"Inne\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Kierunek optymalizacji {{name}}\",\n                \"gradientArrow2\": \"Kierunek optymalizacji {{name}}\",\n                \"dominatedRegion\": \"Obszar zdominowany\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Szary region oznacza obszar zdominowany\",\n                \"gradientArrows\": \"Strzałki wskazują kierunek poprawy\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analiza wrażliwości\",\n        \"buttons\": {\n            \"runJob\": \"Uruchom\",\n            \"stopJob\": \"Zatrzymaj\",\n            \"terminateJob\": \"Zakończ\",\n            \"resumeJob\": \"Wznów\",\n            \"downloadCsv\": \"Pobierz CSV\",\n            \"back\": \"Wstecz\",\n            \"clear\": \"Wyczyść\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Usuń\",\n            \"addParameterValue\": \"Dodaj\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} polityk\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maksimum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mapa cieplna\"\n            }\n        },\n        \"policyPreview\": \"podgląd polityki\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analiza wrażliwości N-czynnikowa\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maksimum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagram tornado\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maximum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Zmniejszenie\",\n                    \"high\": \"Zwiększenie\"\n                },\n                \"xAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistyczna analiza wrażliwości\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"numberOfRuns\": {\n                    \"label\": \"Liczba powtórzeń\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis reguły\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formuła\",\n                        \"help\": \"Wybierz wzór formuły z menu lub wpisz własny kod\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\",\n                \"param-computation\": \"Błąd w wyliczaniu wartości parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Tabela ligowa\"\n        },\n        \"spider-plot\": {\n            \"name\": \"Wykres pajęczynowy\",\n            \"param\": {\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- zmiana procentowa do analizy\"\n                },\n                \"length\": {\n                    \"label\": \"Liczba wartości do przetestowa\",\n                    \"help\": \"Liczba wartości do przetestowa (po jednej stronie zakresu)\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Zmiana procentowa\",\n                \"yAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"errors\":{\n            \"generic\": \"Błąd w obliczeniach analizy wrażliwości: {{message}}\",\n            \"params\": \"Błędne parametry w {{jobName}}\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Ustawienia\",\n        \"general\":{\n            \"title\": \"Ogólne\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontFamily\": \"Rodzina czcionek\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"numberFormatLocale\": \"Kod lokalizacji językowej liczb\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format wypłaty 1\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format wypłaty 2\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"probability\":{\n            \"title\": \"Format prawdopodobieństwa\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"color\": \"Kolor\"\n        },\n        \"node\":{\n            \"title\": \"Węzeł\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalny\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki etykiety\",\n                \"color\": \"Kolor etykiety\"\n            },\n            \"payoff\": {\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            },\n            \"decision\": {\n                \"title\": \"Węzeł Decyzyjny\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Węzeł Losowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Węzeł Końcowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                },\n                \"payoff\": {\n                    \"title\": \"Wypłata\",\n                    \"fontSize\": \"Rozmiar czcionki\",\n                    \"color\": \"Kolor\",\n                    \"negativeColor\": \"Kolor wartości ujemnej\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Krawędź\",\n            \"stroke\": \"Kolor\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalna\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"selected\":{\n                \"title\": \"Zaznaczona\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\"\n            },\n            \"payoff\":{\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Tytuł diagramu\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"color\": \"Kolor\",\n            \"margin\":{\n                \"title\": \"Margines\",\n                \"top\": \"Górny\",\n                \"bottom\": \"Dolny\"\n            },\n            \"description\":{\n                \"title\": \"Podtytuł (opis diagramu)\",\n                \"show\": \"Wyświetl\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"fontWeight\": \"Waga czcionki\",\n                \"fontStyle\": \"Styl czcionki\",\n                \"color\": \"Kolor\",\n                \"marginTop\": \"Margines górny\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Tabela ligowa\",\n            \"plot\": {\n                \"title\": \"Wykres\",\n                \"maxWidth\": \"Maksymalna szerokość\",\n                \"highlightedColor\": \"Kolor polityki rekomendowanej (dla pewnego WTP w zakresie)\",\n                \"highlightedDefaultColor\": \"Kolor polityki rekomendowanej (dla domyślnego WTP)\",\n                \"extendedDominatedColor\": \"Kolog polityki zdominowanej rozszerzenie\",\n                \"dominatedColor\": \"Kolor polityki zdominowanej\",\n                \"defaultColor\": \"Kolor innych polityk\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Inne\",\n            \"disableAnimations\": \"Wyłącz animacje\",\n            \"forceFullEdgeRedraw\": \"Wymuś pełne przerysowywanie krawędzi\",\n            \"hideLabels\": \"Ukryj etykiety\",\n            \"hidePayoffs\": \"Ukryj wypłaty\",\n            \"hideProbabilities\": \"Ukryj prawdopodobieństwa\",\n            \"raw\": \"Surowy\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informacje\"\n    },\n    \"help\":{\n        \"header\": \"Pomoc\",\n        \"mouse\": {\n            \"header\":\"Akcje myszy:\",\n            \"list\":{\n                \"1\": \"lewy klawisz myszy: wybór węzła/krawędzi\",\n                \"2\": \"prawy klawisz myszy: menu kontekstowe (dodawanie/manipulowanie węzłami)\",\n                \"3\": \"podwójne kliknięcie lewym przyciskiem myszy: menu kontekstowe\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Skróty klawiszowe:\",\n            \"list\":{\n                \"1\": \"Del: usuwanie wybranych węzłów\",\n                \"2\": \"Ctrl-C/X: kopiowanie/wycinanie wybranych węzłów\",\n                \"3\": \"Ctrl-V: wklej skopiowane węzły jako poddrzewo wybranego węzła\",\n                \"4\": \"Ctrl-Y/Z: cofnij/ponów\",\n                \"5\": \"Ctrl-Alt-D/C/T: dodaj nowy węzeł Decyzyjny/Losowy/Końcowy jako dziecko <strong>wybranego węzła</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Wstrzyknij nowy węzeł Decyzyjny/Losowy do <strong>wybranej krawędzi</strong>\"\n            }\n        },\n        \"docs\": \"Dokumentacja SilverDecisions jest dostępna <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">tutaj</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definicje zmiennych\",\n        \"scope\": {\n            \"global\": \"zasięg globalny\",\n            \"node\": \"zasięg wybranego węzła i poddrzewa\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Zasięg zmiennej:\",\n            \"global\": \"globalny\",\n            \"node\": \"wybrany węzeł i poddrzewo\"\n        },\n        \"header\": \"Zmienne\",\n        \"code\": \"Kod\",\n        \"buttons\":{\n            \"openDialog\" : \"Otwórz okno dialogowe\",\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Wiele kryteriów\",\n        \"defaultMaximizedCriterionName\": \"Efekt\",\n        \"defaultMinimizedCriterionName\": \"Koszt\",\n        \"nameOfCriterion1\": \"Nazwa kryterium 1\",\n        \"nameOfCriterion2\": \"Nazwa kryterium 2\",\n        \"defaultCriterion1Weight\": \"Domyślna waga kryerium 1\",\n        \"weightLowerBound\": \"Dolna granica wagi\",\n        \"weightUpperBound\": \"Górna granica wagi\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Pokaż tabelę ligową\",\n            \"flip\": \"Zamień\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Układ\",\n        \"marginHorizontal\": \"Margines w poziomie\",\n        \"marginVertical\": \"Margines w pionie\",\n        \"nodeSize\": \"Rozmiar węzła\",\n        \"edgeSlantWidthMax\": \"Skos krawędzi (maksymalny)\",\n        \"gridWidth\": \"Szerokość\",\n        \"gridHeight\": \"Wysokość\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Szczegóły\",\n        \"title\" : \"Tytuł\",\n        \"description\" : \"Opis\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Węzeł Decyzyjny\",\n                \"chance\":\"Węzeł Losowy\",\n                \"terminal\":\"Węzeł Końcowy\"\n            },\n            \"edge\": \"Krawędź\",\n            \"text\": \"Pływający tekst\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Połączenia\",\n                \"child\": {\n                    \"header\": \"Krawędź #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Czy jesteś pewien, że chcesz porzucić obecny diagram? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"openDiagram\": \"Czy jesteś pewien? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"beforeunload\": \"Czy jesteś pewien, że chcesz zamknąć SilverDecisions? Wszystkie niezapisane zmiany zostaną utracone.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Błąd przetwarzania danych z pliku!\",\n        \"fileApiNotSupported\":\"Funckja 'file API' nie jest wspierana w tej przeglądarce internetowej.\",\n        \"inputFilesProperty\":\"Twoje przeglądarka nie wspiera opcji `pliki` przy otwieraniu pliku.\",\n        \"notSilverDecisionsFile\":\"Plik niezgodny z formatem SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Niepoprawny format ciągu z numerem wersji!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Wersja pliku jest nowasza niż wersja aplikacji. Niektóre funkcjonalności mogą być niedostępne.\",\n        \"objectiveComputationFailure\": \"Błąd podczas wyliczania celu!\",\n        \"diagramDrawingFailure\": \"Błąd podczas rysowania diagramu!\",\n        \"malformedData\":\"Błąd odczytu danych drzewa!\",\n        \"pngExportNotSupported\": \"Eksport do obrazu PNG nie jest wspierany w Twojej przeglądarce.\",\n        \"pngExportNotSupportedIE\": \"Eksport do obrazu PNG nie jest wspierany w przeglądarce Internet Explorer.\",\n        \"svgExportNotSupported\": \"Eksport do obrazu SVG nie jest wspierany w Twojej przeglądarce.\",\n        \"pdfExportNotSupported\": \"Eksport do PDF nie jest wspierany w Twojej przeglądarce.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu wypłaty.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu prawdopodobieństw.\",\n        \"incorrectNumberFormatOptions\": \"Niewłaściwe ustawiono formatowanie liczb. Przyjęto ustawienia domyślne.\",\n        \"jsPDFisNotIncluded\": \"Nie włączono jsPDF!\",\n        \"serverSideExportRequestFailure\": \"Nieudane zapytanie do serwera exportu!\"\n    }\n}\n","require('es6-set/implement');\nimport {D3Extensions} from 'sd-tree-designer'\nimport {App} from './app'\nimport {version} from '../package.json';\nD3Extensions.extend();\n\nApp.version = version;\nmodule.exports = App;\n\n\n\n\n\n\n","import {Templates} from \"../templates\";\nimport {PARAMETER_TYPE} from \"sd-computations/src/jobs/engine/job-parameter-definition\";\nimport {log} from 'sd-utils'\nimport * as d3 from \"../d3\";\nimport {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {Autocomplete} from \"../autocomplete\"\n\nexport class JobParametersBuilder{\n\n\n    jobParameters;\n    hiddenParams;\n    constructor(container, i18nPrefix='', onChange=()=>{}){\n        this.container=container;\n        this.i18nPrefix = i18nPrefix;\n        this.paramTypeToInputType ={};\n        this.paramTypeToInputAttrs = {};\n\n        this.paramTypeToInputType[PARAMETER_TYPE.BOOLEAN] = 'checkbox';\n        this.paramTypeToInputType[PARAMETER_TYPE.DATE] = 'date';\n        this.paramTypeToInputType[PARAMETER_TYPE.INTEGER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.INTEGER] = [{\n            name: \"step\",\n            value: \"1\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.NUMBER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.NUMBER] = [{\n            name: \"step\",\n            value: \"any\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.STRING] = 'text';\n\n        this.onChange = onChange;\n    }\n\n\n    setJobParameters(jobName, jobParameters, customParamsConfig={}){\n        this.jobName=jobName;\n        this.jobParameters = jobParameters;\n        this.customParamsConfig = customParamsConfig;\n        this.clean();\n        this.build(this.container, this.jobParameters.definitions, this.jobParameters.values, '', this.onChange);\n    }\n\n    clean() {\n        this.container.html('');\n        this.pristine = {};\n        this.customValidators = {};\n        this.strictValidation(false);\n    }\n\n    validate(strictValidation = true){\n        this.strictValidation(strictValidation);\n        this.pristine = {};\n        this.container.selectAll('.sd-pristine').classed('sd-pristine', false);\n        return this.checkCustomValidators() && this.jobParameters.validate();\n    }\n\n    checkCustomValidators(){\n        let valid = true;\n        Utils.forOwn(this.customValidators, (val, key)=>{\n            valid = valid && val();\n        });\n        return valid;\n    }\n\n    strictValidation(enabled=true){\n        this.container.classed('sd-strict-validation', enabled);\n    }\n\n\n    build(container, jobParameterDefinitions, parentValueObject,  parentPath='', onChange=()=>{}, onInput=()=>{}){\n        container.html('');\n        var self = this;\n        var params = container.selectAll(\".sd-job-parameter\").data(jobParameterDefinitions);\n        var paramsEnter = params.enter().appendSelector('div.sd-job-parameter');\n\n        paramsEnter.html(d=>Templates.get('jobParameter', d));\n\n        var paramsMerge = paramsEnter.merge(params);\n        paramsMerge.each(function(d,i){\n            var paramSelection = d3.select(this);\n            var path = parentPath;\n\n            if(path){\n                path+='.';\n\n            }\n            path += d.name;\n            paramSelection.classed('sd-hidden', Utils.get(self.customParamsConfig, path+'.hidden'));\n\n            var value = parentValueObject[d.name];\n            var repeating = d.maxOccurs>1;\n            if(value==undefined){\n                if(repeating){\n                    value = [];\n                    for(var vi=0; vi<d.minOccurs; vi++){\n                        value.push(self.getEmptyValue(d.type))\n                    }\n\n                }else{\n                    value=Utils.get(self.customParamsConfig, path+'.value', self.getEmptyValue(d.type))\n                }\n\n                parentValueObject[d.name]=value;\n            }\n\n            if(!repeating) {\n                self.buildParameterSingleValue(paramSelection, d, {\n                    get: ()=> parentValueObject[d.name],\n                    set: (v)=> parentValueObject[d.name]=v\n                }, path,onChange, onInput)\n            }else{\n                paramSelection.appendSelector(\"div.sd-job-parameter-name\").html(self.getParamNameI18n(path));\n\n                var valuesContainer = paramSelection.appendSelector(\"div.sd-job-parameter-values\");\n                var actionButtons = paramSelection.appendSelector(\"div.sd-action-buttons\");\n                var addButton = actionButtons.appendSelector('button.sd-add-job-parameter-value-button.icon-button');\n                addButton.appendSelector(\"i.material-icons\").html('add');\n\n\n                paramSelection.classed('invalid', !d.validate(value));\n                var callbacks = {};\n                callbacks.onValueRemoved = function(v,i){\n                    value.splice(i, 1);\n                    self.buildParameterValues(valuesContainer, d, value, path,callbacks)\n                    addButton.classed('sd-hidden', value.length>=d.maxOccurs)\n                    callbacks.onChange();\n                };\n                callbacks.onChange = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onChange();\n                };\n                callbacks.onInput = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onInput();\n                };\n\n                addButton\n                    .attr('title', i18n.t('jobParametersBuilder.buttons.addParameterValue'))\n                    .classed('sd-hidden', value.length>=d.maxOccurs)\n                    .on('click', ()=>{\n                        value.push(self.getEmptyValue(d.type));\n                        Utils.set(self.pristine, path+\"[\"+(value.length-1)+\"]\", true);\n                        self.buildParameterValues(valuesContainer, d, value, path, callbacks);\n                        addButton.classed('sd-hidden', value.length>=d.maxOccurs);\n                        callbacks.onChange();\n                    });\n\n\n\n\n                self.buildParameterValues(valuesContainer, d, value, path,callbacks);\n            }\n\n        });\n\n    }\n\n    buildParameterValues(container, paramDefinition, values, path, callbacks){\n        var self = this;\n        container.html(\"\");\n\n        var paramValues = container.selectAll(\".sd-job-parameter-value\").data(values);\n\n        paramValues.exit().remove();\n        var paramValuesEnter = paramValues.enter().appendSelector('div.sd-job-parameter-value');\n\n        var paramValuesMerge = paramValuesEnter.merge(paramValues);\n\n        var indexToSelection = {};\n\n        var customValidator = Utils.get(self.customParamsConfig, path+'.customValidator');\n\n        function checkCustomValidator(){\n            let allValid = true;\n            if(customValidator){\n                customValidator(values).forEach((isValid, i)=>{\n                    var selection = indexToSelection[i];\n                    let valid = paramDefinition.validateSingleValue(values[i]) && isValid;\n                    selection.classed('invalid', !valid);\n                    allValid = allValid && valid;\n                })\n            }\n\n            return allValid;\n        }\n\n        self.customValidators[path] = checkCustomValidator;\n\n        paramValuesEnter.each(function (value, i) {\n            var derivedValueUpdaters = [];\n\n            function updateDerivedValues(){\n                derivedValueUpdaters.forEach(updater=>updater(values[i]))\n            }\n\n            var selection = d3.select(this);\n            indexToSelection[i] = selection;\n\n\n            if (PARAMETER_TYPE.COMPOSITE == paramDefinition.type) {\n                var nestedParameters = selection.selectOrAppend(\"div.sd-nested-parameters\");\n                var onChange = ()=>{\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    updateDerivedValues();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                };\n                var onInput = ()=>{\n                    updateDerivedValues();\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                };\n\n                self.build(nestedParameters, paramDefinition.nestedParameters, value, path, onChange, onInput);\n                selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                selection.classed('sd-pristine', Utils.get(self.pristine, path+\"[\"+i+\"]\", false));\n            }else{\n                self.buildParameterSingleValue(selection, paramDefinition, {\n                    get: ()=> values[i],\n                    set: (v)=> values[i]=v\n                }, path, ()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                },()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                })\n\n            }\n\n\n            var derivedValuesConfigs = Utils.get(self.customParamsConfig, path+'._derivedValues');\n            if(derivedValuesConfigs){\n                derivedValuesConfigs.forEach(derivedValueConfig =>{\n                    let updater = self.buildDerivedValue(selection, derivedValueConfig, path);\n                    updater(value);\n                    derivedValueUpdaters.push(updater);\n                });\n            }\n\n\n            var actionButtons = selection.appendSelector(\"div.sd-action-buttons\");\n            var removeButton = actionButtons.appendSelector('button.sd-remove-job-parameter-value-button.icon-button');\n            removeButton.appendSelector(\"i.material-icons\").html('remove')\n            removeButton\n                .attr('title', i18n.t('jobParametersBuilder.buttons.removeParameterValue'))\n                .classed('sd-hidden', values.length<=paramDefinition.minOccurs)\n                .on('click', (d)=>callbacks.onValueRemoved(d,i))\n\n        });\n\n        checkCustomValidator();\n\n        paramValuesMerge.each(function (value, i) {\n\n        });\n\n\n    }\n\n    buildDerivedValue(container, derivedValueConfig, path){\n        var self = this;\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group.sd-derived-value');\n        var name = this.getParamNameI18n(path+'.'+derivedValueConfig.name);\n        var input = selection.append('input').attr('type', 'text').attr(\"disabled\", \"disabled\");\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(name);\n\n        return (paramValue) => {\n            input.node().value = derivedValueConfig.value(paramValue);\n            AppUtils.updateInputClass(input);\n        }\n\n    }\n\n    buildParameterSingleValue(container, paramDefinition, valueAccessor, path, onChange, onInput){\n        var self = this;\n        var temp = {};\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group');\n        selection.classed('sd-parameter-'+paramDefinition.name, true);\n        var help = this.getParamHelpI18n(path);\n        if(help) {\n            let helpContainer = container.appendSelector('div.sd-help-icon');\n            helpContainer.html('<i class=\"material-icons\">info_outline</i>');\n            Tooltip.attach(helpContainer, (d)=>{\n                return help;\n            }, 5, 15);\n        }\n\n        var options = Utils.get(self.customParamsConfig, path+'.options', null);\n\n        var inputType = this.paramTypeToInputType[paramDefinition.type];\n        var additionalInputAttrs = this.paramTypeToInputAttrs[paramDefinition.type];\n        var input;\n        if(options && options.length){\n            inputType = 'select';\n            input = selection.append('select');\n            var optionsSel = input.selectAll(\"option\").data([null].concat(options));\n            optionsSel.enter().append(\"option\").attr(\"value\", d=>d).text(d=>d);\n\n            if(Utils.get(self.customParamsConfig, path+'.optionsAutocomplete', null)){\n                let autocomplete = new Autocomplete(input);\n                input = autocomplete.getInput();\n            }\n        }else{\n            input = selection.append('input').attr('type', inputType);\n\n            if(additionalInputAttrs){\n                additionalInputAttrs.forEach(attr=>input.attr(attr.name, attr.value))\n\n            }\n        }\n\n        input.attr('id', inputId);\n\n        input.classed('sd-input', true);\n        input.on('input change', function(d, i){\n            var value = self.parseInput(this.value, paramDefinition.type);\n            if(inputType=='checkbox'){\n                value = this.checked\n            }\n            if(!paramDefinition.validateSingleValue(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n\n            valueAccessor.set(value);\n            if (d3.event.type == 'change') {\n                if (onChange) {\n                    onChange();\n                }\n            }\n\n            if (d3.event.type == 'input') {\n                if (onInput) {\n                    onInput();\n                }\n            }\n\n            AppUtils.updateInputClass(d3.select(this));\n        }).each(function(d, i){\n            var value = valueAccessor.get();\n            if(inputType=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            d3.select(this).classed('invalid', !paramDefinition.validateSingleValue(value));\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(d=>{\n                let label = this.getParamNameI18n(path);\n                return label;\n            });\n        input.node().value = valueAccessor.get();\n    }\n\n    value(path, value){\n        return this.jobParameters.value(path, value);\n    }\n\n    parseInput(value, parameterType){\n        if(parameterType===PARAMETER_TYPE.DATE){\n            return new Date(value)\n        }\n        if(parameterType===PARAMETER_TYPE.NUMBER || parameterType===PARAMETER_TYPE.INTEGER){\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    getEmptyValue(parameterType){\n        if(parameterType===PARAMETER_TYPE.COMPOSITE){\n            return {}\n        }\n\n        return null;\n    }\n\n    getParamNameI18n(path){\n        return i18n.t(this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.label')\n    }\n\n    getParamHelpI18n(path){\n        let key = this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.help';\n        let help = i18n.t(key);\n        return help === key ? null : help;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport * as d3 from \"../d3\";\nimport {PivotTable} from \"../pivot-table\";\nvar jQuery = require('jquery');\n\nexport class JobResultTableConfig {\n    onRowSelected = (rows, indexes, event) => {};\n    className = '';\n\n    pivotTable;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobResultTable {\n\n    constructor(container, config) {\n        this.container = container;\n        this.config = new JobResultTableConfig(config);\n        this.init();\n    }\n\n    init() {\n        this.pivotTable = new PivotTable(this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true));\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = []\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(data.data[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n\n    setClassName(className){\n        if(this.config.className){\n            this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, false);\n            this.config.className = className;\n        }\n        this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true)\n    }\n\n    setData(data, jobParameters, job, config) {\n        var self = this;\n        var derivers = jQuery.pivotUtilities.derivers;\n        var pivotOptions = {\n            rows: data.rows,\n            vals: data.vals,\n            cols: data.cols,\n            hiddenAttributes: ['$rowIndex'],\n            aggregatorName: this.pivotTable.getAggregatorName(\"maximum\"),\n            rendererOptions: {\n                table: {\n                    clickCallback: function (e, value, filters, pivotData) {\n                        self.clickCallback(e, value, filters, pivotData);\n                    }\n                },\n                heatmap: {\n                    colorScaleGenerator: function (values) {\n                        let extent = d3.extent(values);\n\n                    return d3.scaleLinear()\n                        .domain([extent[0], (extent[0]+extent[1])/2,extent[1]])\n                        .range([\"#4b53ff\", \"#FFF\", \"#FF0000\"])\n                    }\n                }\n            },\n            rendererName: this.pivotTable.getRendererName(\"heatmap\")\n            /*\n             rendererName: 'custom',\n             renderers: {\n             'custom': function(pivotData, options){\n             console.log(pivotData)\n             }\n             }*/\n\n        };\n\n        if(config){\n            if(config.aggregatorName){\n                pivotOptions.aggregatorName = config.aggregatorName;\n            }\n            if(config.aggregators){\n                pivotOptions.aggregators = config.aggregators;\n            }\n        }\n\n        this.pivotTable.update(data.data.map((r, i)=>r.concat(i ?  i-1 : '$rowIndex')), pivotOptions);\n\n        // this.drawHeaders(data.headers);\n        // this.drawRows(data.rows)\n    }\n\n    clear() {\n        this.clearSelection();\n        this.pivotTable.clear();\n    }\n\n    show(show=true){\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide(){\n        this.show(false);\n    }\n\n    clearSelection() {\n        // this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {log} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nvar jQuery = require('jquery');\n\n\nexport class ProbabilisticSensitivityAnalysisJobResultTable extends JobResultTable {\n\n    constructor(container, config, payoffNumberFormatter, probabilityNumberFormatter){\n        super(container, config);\n        this.payoffNumberFormatter = payoffNumberFormatter;\n        this.probabilityNumberFormatter = probabilityNumberFormatter;\n    }\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n        var data = {rows: ['policy', 'expected value', 'median', 'standard deviation', 'best probability'], cols: [], vals: ['expected value'], data: []};\n\n\n        data.data.push(['policy', 'expected value', 'median', 'standard deviation', 'best probability']);\n        jobResult.policies.forEach((policy, i)=> {\n            var row = [\n                Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                this.payoffNumberFormatter(jobResult.expectedValues[i]),\n                this.payoffNumberFormatter(jobResult.medians[i]),\n                this.payoffNumberFormatter(jobResult.standardDeviations[i]),\n                this.probabilityNumberFormatter(jobResult.policyIsBestProbabilities[i])\n            ];\n            data.data.push(row);\n        });\n\n        log.trace(data);\n        super.setData(data, jobParameters, job,{\n            aggregatorName: \"empty\",\n            aggregators:{\n                empty: (attributeArray)=>(data, rowKey, colKey)=>{\n                    return {\n                        push: function(record) {\n                        },\n                        value: function() { return 0; },\n                        format: function(x) { return i18n.t('jobResultTable.policyPreview'); },\n                        numInputs: 1\n                    };\n                }\n            }\n        })\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push({policyIndex: record['$rowIndex']});\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Utils} from \"sd-utils\"\n\n\nexport class SensitivityAnalysisJobResultTable extends JobResultTable {\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n\n        jobParameters =job.createJobParameters(Utils.cloneDeep(jobParameters.values));\n        jobParameters.values.roundVariables = true;\n        var csvDAta = job.jobResultToCsvRows(jobResult, jobParameters);\n\n        if (csvDAta.length) {\n            csvDAta[0][0] = 'policy\\nnumber'\n        }\n\n        let cols = [];\n        let totalInColNum = 1;\n\n        jobParameters.values.variables.forEach(v=>{\n            let _totalInColNum = v.length * totalInColNum;\n            if((_totalInColNum>1000)){\n                return;\n            }\n            totalInColNum=_totalInColNum;\n            cols.push(v.name);\n        });\n\n        var data = {rows: ['policy'], cols: cols, vals: ['payoff'], data: csvDAta};\n        super.setData(data)\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self = this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(self.jobResult.rows[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {LineChartConfig, LineChart} from \"odc-d3/src/line-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class SpiderPlotConfig extends LineChartConfig {\n    maxWidth = undefined;\n\n    showLegend = true;\n    policyIndex = 0;\n    guides = true;\n    margin={\n        left: 100\n    };\n    x={// X axis config\n        title: i18n.t('job.spider-plot.plot.xAxisTitle'), // axis label\n        key: 0,\n        domainMargin: 0\n    };\n    y={// Y axis config\n        title: i18n.t('job.spider-plot.plot.yAxisTitle'), // axis label,\n        key: 1,\n        domainMargin: 0.1\n    };\n    series = true;\n    dotRadius = 3;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class SpiderPlot extends LineChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new SpiderPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new SpiderPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-spider-plot', true);\n    }\n\n    setData(data){\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map(r=>{\n            return {\n                key: r.variableName,\n                values: data.percentageRangeValues.map((rangeVal, index)=>[\n                    data.percentageRangeValues[index],\n                    r.payoffs[this.config.policyIndex][index]\n                ])\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {DivergingStackedBarChartConfig, DivergingStackedBarChart} from \"odc-d3/src/diverging-stacked-bar-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class TornadoDiagramPlotConfig extends DivergingStackedBarChartConfig {\n    maxWidth = undefined;\n    margin={\n        left: 150,\n        top: 70\n    };\n\n    showLegend = true;\n    forceLegend = true;\n\n    categoryNames = [i18n.t(\"job.tornado-diagram.plot.legend.low\"), i18n.t(\"job.tornado-diagram.plot.legend.high\")];\n    colorRange = [\"#4f81bd\", \"#9bbb59\"];\n    policyIndex = 0;\n\n    guides = true;\n    middleValue = 1000;\n    showBarValues = false;\n\n    x={// X axis config\n        title: i18n.t('job.tornado-diagram.plot.xAxisTitle'), // axis label\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class TornadoDiagramPlot extends DivergingStackedBarChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new TornadoDiagramPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new TornadoDiagramPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-tornado-diagram-plot', true);\n    }\n\n    setData(data){\n        this.config.middleValue = data.defaultPayoff;\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map((r)=>{\n            let varExtent = data.variableExtents[data.variableNames.indexOf(r.variableName)];\n            return {\n                key: r.variableName+' ['+varExtent[0]+'; '+varExtent[1]+']',\n                values: [\n                    Math.max(0, data.defaultPayoff - r.extents[this.config.policyIndex][0]),\n                    Math.max(0, r.extents[this.config.policyIndex][1] - data.defaultPayoff)\n                ],\n                categories: r.extentVariableValues[this.config.policyIndex][0] <= r.extentVariableValues[this.config.policyIndex][1] ? [0, 1] : [1, 0]\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {Dialog} from \"../dialogs/dialog\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {LeagueTable} from \"./league-table\";\nimport {LeagueTablePlot} from \"./league-table-plot\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class LeagueTableDialog extends Dialog {\n    computationsManager;\n    jobInstanceManager;\n\n    constructor(app) {\n        super(app.container.select('.sd-league-table-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-league-table-job-results\");\n        this.initButtons();\n\n        this.job = this.computationsManager.getJobByName(\"league-table\");\n    }\n\n    onOpen() {\n        this.clear();\n        this.runJob();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-league-table-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-league-table-warnings\").appendSelector(\"div.sd-league-table-warning\").html(msgHTML);\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (row, i)=> this.onResultRowSelected(row, i),\n            onRowHover: (row, i)=> this.resultPlot.emphasize(row.row, true),\n            onRowHoverOut: (row, i)=> this.resultPlot.emphasize(row.row, false),\n        };\n\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n        }\n\n\n        this.resultTable = new LeagueTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n        this.resultTable.setData(result, this.app.dataModel);\n        this.resultTable.show();\n    }\n\n\n\n    initResultPlot(result) {\n        let self = this;\n        let config = {\n            maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            weightLowerBound: result.weightLowerBound,\n            defaultWeight: result.defaultWeight,\n            weightUpperBound: result.weightUpperBound,\n            payoffCoeffs: result.payoffCoeffs,\n            payoffNames: result.payoffNames,\n            x: {\n                value: (d, key) => d.payoffs[0],\n                title: result.payoffNames[0]\n            },\n            y: {\n                value: (d, key) => d.payoffs[1],\n                title: result.payoffNames[1]\n            },\n            onDotHover: (d, i) => this.resultTable.emphasize(d, true),\n            onDotHoverOut: (d, i) => this.resultTable.emphasize(d, false),\n\n\n            color: function (group) {\n                let groupsConf = self.app.config.leagueTable.plot.groups;\n                let groupConf = groupsConf[group.key];\n                if (groupConf) {\n                    return groupConf.color;\n                }\n                return 'black'\n            },\n            groupOrdering: {\n                'dominated': 0,\n                'extended-dominated': 1,\n                'highlighted': 2,\n                'highlighted-default': 3,\n                'default': 4\n\n            },\n            groups: {\n                value: function (r) {\n                    if (r.optimalForDefaultWeight) {\n                        return 'highlighted-default'\n                    } else if (r.optimal) {\n                        return 'highlighted'\n                    }  else if (r.dominatedBy !== null) {\n                        return 'dominated'\n                    } else if (r.extendedDominatedBy !== null) {\n                        return 'extended-dominated'\n                    }\n\n                    return \"default\";\n                },\n                displayValue: (groupKey) => i18n.t(\"leagueTable.plot.groups.\"+groupKey)\n            }\n        };\n\n        this.resultPlot = new LeagueTablePlot(this.jobResultsContainer.select(\".sd-job-result-plot-container\").node(), result.rows, config);\n        setTimeout(function () {\n            self.resultPlot.init()\n        }, 100)\n    }\n\n    onResized() {\n        if (this.resultPlot) {\n            this.resultPlot.init();\n        }\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-league-table-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n\n    initJobParams(){\n        this.jobParameters = this.job.createJobParameters({\n            ruleName: this.computationsManager.getCurrentRule().name,\n            weightLowerBound: this.app.dataModel.weightLowerBound,\n            defaultWeight: this.app.dataModel.defaultCriterion1Weight,\n            weightUpperBound: this.app.dataModel.weightUpperBound,\n\n        });\n    }\n\n    validateParams(){\n        this.initJobParams();\n        return this.jobParameters.validate();\n    }\n\n    runJob() {\n\n\n        this.initJobParams();\n\n        if(!this.validateParams()){\n            alert(i18n.t(\"job.errors.params\", {\"jobName\": i18n.t(\"job.league-table.name\")}))\n            return;\n        }\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n            onJobStarted: this.onJobStarted,\n            onJobCompleted: this.onJobCompleted,\n            onJobFailed: this.onJobFailed,\n            onJobStopped: this.onJobStopped,\n            onJobTerminated: this.onJobTerminated,\n            onProgress: this.onProgress,\n            callbacksThisArg: this\n        }).then(jobInstanceManager=> {\n            this.jobInstanceManager = jobInstanceManager;\n        }).catch(e=> {\n            log.error(e);\n        }).then(()=> {\n            this.disableActionButtonsAndShowLoadingIndicator(false);\n        })\n    }\n\n    initButtons() {\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    clear() {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.jobResultsContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlot(result);\n\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.downloadCsvButtons);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                e.jobName = i18n.t(\"job.league-table.name\");\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(row, index) {\n        let title = Policy.toPolicyString(row.policy, false);\n        this.app.showPolicyPreview(title, row.policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows(), 'leaguetable')\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import {ScatterPlot, ScatterPlotConfig} from \"odc-d3/src/scatterplot\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTablePlotConfig extends ScatterPlotConfig {\n    maxWidth = undefined;\n    weightLowerBound = 0;\n    weightUpperBound = Infinity;\n    gradientArrowLength = 30;\n    gradientArrowOffset = 10;\n    payoffCoeffs = [1, 1];\n    payoffNames = [];\n\n    showLegend = true;\n    forceLegend = true;\n\n    legend = {\n        width: 125,\n    };\n\n    // d3ColorCategory = false;\n\n    guides = true;\n    dotRadius = 5;\n    emphasizedDotRadius = 8;\n\n    dotId = (d, i) => 'sd-league-table-dot-'+d.id;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LeagueTablePlot extends ScatterPlot {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LeagueTablePlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new LeagueTablePlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-league-table-plot', true);\n        this.initArrowMarker(\"triangle\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.selectOrAppend(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        this.checkOrdering();\n        super.initPlot();\n    }\n\n    checkOrdering(){\n        if(this.config.groupOrdering){\n            let getOrdering  = d => {\n                let g = this.config.groups.value(d);\n                return this.config.groupOrdering[g] === undefined ? 999 : this.config.groupOrdering[g];\n            };\n            this.data.sort((a, b)=>getOrdering(a) - getOrdering(b));\n        }\n    }\n\n    update(newData) {\n        this.checkOrdering();\n        super.update(newData);\n\n        this.updateIcerLines();\n        this.updateDominatedRegion();\n        this.updateGradientArrows();\n        this.updateDotLabels();\n\n\n    };\n\n    updateIcerLines() {\n        let self = this;\n        var linesContainerClass = this.linesContainerClass = this.prefixClass(\"lines-container\");\n        var linesContainerSelector = \"g.\" + linesContainerClass;\n        var linesContainer = this.linesContainer= self.svgG.selectOrInsert(linesContainerSelector, \".\" + self.dotsContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var linesContainerClip = linesContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        linesContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        linesContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        var line = d3.line()\n            .x(this.plot.x.map)\n            .y(this.plot.y.map);\n\n\n\n\n        let linePoints = this.plot.data.filter(d=>d.incratio !== null).sort(this.plot.x.map);\n        let highlightedPoints = this.plot.data.filter(d=>[\"highlighted\", \"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1).sort((a, b) => this.plot.x.map(a) - this.plot.x.map(b));\n        let highlightedDefaultPoints = highlightedPoints.filter(d=>[\"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1);\n\n        this.dominatedRegionPoints = highlightedPoints.map(d=>[this.plot.x.map(d), this.plot.y.map(d)]);\n\n        if (!highlightedPoints.length) {\n            linesContainer.selectAll(\"*\").remove();\n            return;\n        }\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('middle-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", line(highlightedPoints));\n\n        highlightedPoints.sort((a, b) =>a.incratio - b.incratio || (this.config.payoffCoeffs[0] * (this.plot.x.map(a) - this.plot.x.map(b))));\n\n        let minPoint = highlightedPoints[0];\n        let maxPoint = highlightedPoints[highlightedPoints.length - 1];\n\n        let lowPoint;\n        let highPoint;\n\n        let xAxisExtent = [this.plot.x.scale.invert(0), this.plot.x.scale.invert(this.plot.width)];\n        let yAxisExtent = [this.plot.y.scale.invert(this.plot.height), this.plot.y.scale.invert(0)];\n\n        let sign = (this.config.payoffCoeffs[0] * this.config.payoffCoeffs[1]) > 0 ? 1 : -1;\n\n        let infLowY = this.config.payoffCoeffs[0] > 0 ? this.plot.height: 0;\n        if(sign > 0){\n            infLowY = this.config.payoffCoeffs[0] < 0 ? this.plot.height: 0;\n        }\n        let infLowPoint = [this.plot.x.map(minPoint), infLowY];\n\n        if (this.config.weightLowerBound == Infinity) {\n            lowPoint = infLowPoint\n        } else {\n            let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n            lowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.weightLowerBound * (this.plot.x.value(minPoint) - x) + this.plot.y.value(minPoint))];\n            if(Math.abs(lowPoint[1]) > 1000000){\n                lowPoint = infLowPoint\n            }\n        }\n\n        let infHighPoint =  [this.plot.x.map(maxPoint), this.config.payoffCoeffs[1] > 0 ? this.plot.height: 0];\n        if (this.config.weightUpperBound == Infinity) {\n            highPoint = infHighPoint\n        } else {\n\n            let x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n\n            if(sign > 0){\n                x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n            }\n\n            highPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.weightUpperBound * (x - this.plot.x.value(maxPoint)) + this.plot.y.value(maxPoint))];\n            // highPoint = [this.plot.x.scale(x), this.plot.y.scale(EE.toFloat(EE.multiply(-sign, EE.multiply(this.config.weightUpperBound, (x - this.plot.x.value(maxPoint))))) + this.plot.y.value(maxPoint))];\n            if(Math.abs(highPoint[1]) > 1000000){\n                highPoint = infHighPoint\n            }\n        }\n\n        if(highlightedDefaultPoints.length){\n            let defaultPoint = highlightedDefaultPoints[0];\n            let defLowPoint = infLowPoint;\n            let defHighPoint = infHighPoint;\n            if (this.config.defaultWeight !== Infinity) {\n                let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                defLowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.defaultWeight * (this.plot.x.value(defaultPoint) - x) + this.plot.y.value(defaultPoint))];\n                x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                if(sign > 0){\n                    x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n                }\n                defHighPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.defaultWeight * (x - this.plot.x.value(defaultPoint)) + this.plot.y.value(defaultPoint))];\n            }\n            linesContainer.selectOrAppend(\"path.\" + this.prefixClass('default-incratio'))\n                .attr(\"shape-rendering\", \"optimizeQuality\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", 'black')\n                .attr(\"d\", d3.line()([defLowPoint, defHighPoint]))\n        } else{\n            linesContainer.select(\"path.\" + this.prefixClass('default-incratio')).remove()\n        }\n\n\n        this.dominatedRegionPoints.unshift(lowPoint);\n        this.dominatedRegionPoints.push(highPoint);\n\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('low-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([lowPoint, [this.plot.x.map(minPoint), this.plot.y.map(minPoint)]]))\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('high-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([highPoint, [this.plot.x.map(maxPoint), this.plot.y.map(maxPoint)]]))\n\n\n\n\n    }\n\n    updateDominatedRegion(){\n        let self = this;\n        var dominatedRegionContainerClass = this.prefixClass(\"dominated-region-container\");\n        var dominatedRegionContainerSelector = \"g.\" + dominatedRegionContainerClass;\n        var dominatedRegionContainer = self.svgG.selectOrInsert(dominatedRegionContainerSelector, \".\"+this.linesContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var dominatedRegionContainerClip = dominatedRegionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        dominatedRegionContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        dominatedRegionContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        //draw dominated region\n\n        let worstPoint = [\n            this.config.payoffCoeffs[0] < 0 ? self.plot.width : 0,\n            this.config.payoffCoeffs[1] < 0 ? 0 : self.plot.height\n        ];\n\n        this.dominatedRegionPoints.push(worstPoint);\n\n        if(this.dominatedRegionPoints.some(p=>worstPoint[1] ? p[1] <=0 : p[1] >= self.plot.height)){\n            this.dominatedRegionPoints.push([worstPoint[0], worstPoint[1] ? 0 : self.plot.height]);\n        }\n\n        this.dominatedRegionPoints.sort((a, b)=> (a[0] - b[0]));\n        this.dominatedRegionPoints = this.dominatedRegionPoints.reduce((prev, curr)=>{\n            if(!prev.length){\n                return [curr]\n            }\n            var prevPoint = prev[prev.length-1];\n            if(prevPoint[0] !== curr[0]){\n                prev.push(curr)\n            }\n            if(Math.abs(worstPoint[1] - curr[1]) > Math.abs(worstPoint[1] - prev[prev.length-1][1])){\n                prev[prev.length-1] = curr;\n            }\n            return prev;\n\n        }, []);\n\n        let area = d3.area();\n        area.y0(worstPoint[1])\n        dominatedRegionContainer.selectOrInsert(\"path.\" + this.prefixClass('dominated-region'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"gray\")\n            .attr(\"stroke-width\", 0)\n            .attr(\"d\", area(this.dominatedRegionPoints));\n\n        Tooltip.attach(dominatedRegionContainer, i18n.t('leagueTable.plot.tooltip.dominatedRegion'));\n    }\n\n    updateDotLabels() {\n        var self = this;\n        var labelsContainerClass = this.prefixClass(\"dot-labels-container\");\n        var labelsContainerSelector = \"g.\" + labelsContainerClass;\n        var labelsContainer = self.svgG.selectOrAppend(labelsContainerSelector, \".\" + self.dotsContainerClass);\n\n        var labels = labelsContainer.selectAll(\"text.\" + this.prefixClass(\"dot-label\")).data(this.plot.data);\n        labels.exit().remove();\n        labels.enter().append('text')\n            .attr('class', this.prefixClass(\"dot-label\"))\n            .merge(labels)\n            .attr('x', this.plot.x.map)\n            .attr('y', this.plot.y.map)\n            .attr('text-anchor', 'end')\n            .attr(\"dy\", \"-5px\")\n            .attr(\"dx\", \"-5px\")\n            .text(d=>d.id)\n    }\n\n    updateGradientArrows() {\n\n        var data = this.config.payoffCoeffs.map((coeff, i)=>{\n\n            let l = this.config.gradientArrowLength * coeff;\n            let offset = this.config.gradientArrowOffset * coeff;\n\n            let d = {\n                x1: this.plot.width/2,\n                y1: this.plot.height/2,\n            };\n\n            if(i==0){\n                d.x1 += offset;\n                d.x2 = d.x1 + l;\n                d.y2 = d.y1\n            }else{\n                d.y1 -= offset;\n                d.x2 = d.x1;\n                d.y2 = d.y1 - l\n            }\n\n            return d\n        });\n\n        let self = this;\n        var arrowsContainerClass = this.prefixClass(\"gradient-arrows-container\");\n        var arrowsContainerSelector = \"g.\" + arrowsContainerClass;\n        var arrowsContainer = self.svgG.selectOrInsert(arrowsContainerSelector, \".\" + self.dotsContainerClass);\n\n        let arrowClass = this.prefixClass(\"gradient-arrow\");\n        var arrows = arrowsContainer.selectAll(\".\"+arrowClass).data(data);\n        arrows.exit().remove();\n        var arrowsEnter = arrows.enter().append('g')\n            .attr('class', arrowClass);\n\n        arrowsEnter.append(\"line\").attr(\"marker-end\", \"url(#triangle)\");\n        var arrowsMerge =arrowsEnter.merge(arrows);\n\n        arrowsMerge.select(\"line\")\n            .attr(\"x1\", d=>d.x1)\n            .attr(\"y1\", d=>d.y1)\n            .attr(\"x2\", d=>d.x2)\n            .attr(\"y2\", d=>d.y2);\n\n        Tooltip.attach(arrowsMerge, (d, i)=>{\n            return i18n.t('leagueTable.plot.tooltip.gradientArrow' + (i + 1), { name: this.config.payoffNames[i]});\n        });\n    }\n\n    emphasize(row, emphasize=true){\n        this.emphasizeDot(this.svg.selectAll('#'+this.config.dotId(row)), emphasize);\n    }\n\n    emphasizeDot(selection, emphasize){\n        selection\n            .classed('sd-emphasized', emphasize)\n            .transition()\n            .attr('r', emphasize ? this.config.emphasizedDotRadius : this.config.dotRadius)\n    }\n    updateDots(){\n        var self = this;\n        super.updateDots();\n        var dotsContainer = this.svgG.select(\"g.\" + this.dotsContainerClass);\n        dotsContainer.selectAll('.' + this.dotClass)\n            .on(\"mouseover.emphasize\", function(d){ self.emphasizeDot(d3.select(this), true) })\n            .on(\"mouseout.emphasize\", function(d){ self.emphasizeDot(d3.select(this), false) })\n    }\n\n    updateLegend() {\n        super.updateLegend();\n        var plot = this.plot;\n\n        let container = plot.legend.container.selectOrAppend(\"g.sd-additional-items\")\n        let legendCells = plot.legend.container.select(\".legendCells\");\n        let margin = 20;\n\n        let texts = [\n            i18n.t(\"leagueTable.plot.legend.dominatedRegion\"),\n            i18n.t(\"leagueTable.plot.legend.gradientArrows\")\n        ];\n\n        container.attr(\"transform\", \"translate(0, \"+(legendCells.node().getBBox().height+margin)+\")\");\n\n        container.selectAll(\"text\").data(texts)\n            .enter().append(\"text\")\n            .text(d=>d)\n            .attr('dy', \"0\")\n            .attr('x', \"0\");\n\n        container.selectAll(\"text\").call(wrap, d=>d, this.config.legend.width);\n\n        function wrap(text, getTextData, width) {\n            text.each(function(d) {\n\n                var text = d3.select(this),\n                    words = getTextData(d).split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1.1, // ems\n                    y = text.attr('y'),\n                    dy = parseFloat(text.attr('dy')),\n                    tspan = text.text(null).append('tspan')\n                        .attr('x', 0).attr('y', y).attr('dy', dy + 'em');\n\n                if(this.previousSibling){\n                    text.attr('y', this.previousSibling.getBBox().height+10)\n                }\n\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n                        line = [word];\n                        tspan = text.append('tspan')\n                            .attr('x', 0).attr('y', y)\n                            .attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n","import {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTableConfig {\n    onRowSelected = (row) => {\n    };\n    extendedPolicyDescription = true;\n    onRowHover = (d, i) => {};\n    onRowHoverOut = (d, i) => {};\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class LeagueTable {\n\n    constructor(container, config, dataModel) {\n        this.container = container;\n        this.config = new LeagueTableConfig(config);\n        this.dataModel = dataModel;\n        this.init();\n    }\n\n    init() {\n        this.resultTable = this.container.selectOrAppend(\"table.sd-league-table\");\n        this.resultTableHead = this.resultTable.selectOrAppend(\"thead\");\n        this.resultTableBody = this.resultTable.selectOrAppend(\"tbody\");\n        this.resultTableFoot = this.resultTable.selectOrAppend(\"tfoot\");\n    }\n\n    setData(jobResult, dataModel) {\n        this.jobResult = jobResult;\n        this.dataModel = dataModel;\n        this.drawHeaders([\n            i18n.t('leagueTable.headers.policyNo'),\n            i18n.t('leagueTable.headers.policy'),\n            dataModel.payoffNames[0],\n            dataModel.payoffNames[1],\n            i18n.t('leagueTable.headers.comment')\n        ]);\n        this.drawRows(jobResult.rows)\n    }\n\n    drawHeaders(headerData) {\n        var headers = this.resultTableHead.selectOrAppend(\"tr\").selectAll(\"th\").data(headerData);\n        var headersEnter = headers.enter().append(\"th\");\n        var headersMerge = headersEnter.merge(headers);\n        headers.exit().remove();\n\n        headersMerge.text(d=>d);\n    }\n\n    drawRows(rowsData) {\n        var self = this;\n\n        let data = rowsData.reduce((prev, d)=> {\n            let r = prev;\n            d.policies.forEach((policy, i)=> {\n                if (!i) {\n                    r.push({\n                        row: d,\n                        policy: policy,\n                        cells: [\n                            {\n                                data: d.id,\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                                rowspan: 1\n                            },\n                            {\n                                data: d.payoffs[0],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: d.payoffs[1],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: this.getRowComment(d),\n                                rowspan: d.policies.length\n                            },\n                        ]\n                    });\n                    return;\n                }\n\n                r.push({\n                    row: d,\n                    policy: policy,\n                    cells: [{\n                        data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                        rowspan: 1\n                    }]\n                });\n\n            });\n\n            return r;\n        }, []);\n\n        var rows = this.resultTableBody.selectAll(\"tr\").data(data);\n\n        var rowsEnter = rows.enter().append(\"tr\");\n        var rowsMerge = rowsEnter.merge(rows);\n        rowsMerge\n            .on('click', function (d, i) {\n                // d3.select(this).classed('sd-selected', true);\n                self.config.onRowSelected(d, i)\n            })\n            .classed('sd-highlighted', d=>d.row.optimal)\n            .classed('sd-highlighted-default', d=>d.row.optimalForDefaultWeight)\n            .attr('id', d => 'sd-league-table-row-'+d.row.id);\n\n        rowsMerge.on(\"mouseover.onRowHover\", this.config.onRowHover);\n        rowsMerge.on(\"mouseout.onRowHoverOut\", this.config.onRowHoverOut);\n\n        rows.exit().remove();\n\n        var cells = rowsMerge.selectAll(\"td\").data(d=>d.cells);\n        var cellsEnter = cells.enter().append(\"td\");\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.text(d=>d.data);\n        cellsMerge.attr('rowspan', d=>d.rowspan);\n        cells.exit().remove();\n\n    }\n\n    clear() {\n        this.clearSelection();\n    }\n\n    show(show = true) {\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide() {\n        this.show(false);\n    }\n\n    clearSelection() {\n        this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n    getRowComment(row) {\n        if(row.incratio !== null){\n            return i18n.t('leagueTable.comment.incratio', {incratio: row.incratio});\n        }\n        if(row.dominatedBy !== null){\n            return i18n.t('leagueTable.comment.dominatedBy', {policy: row.dominatedBy});\n        }\n        if(row.extendedDominatedBy !== null){\n            return i18n.t('leagueTable.comment.extendedDominatedBy', {policy1: row.extendedDominatedBy[0], policy2: row.extendedDominatedBy[1]});\n        }\n        return '';\n    }\n\n\n    emphasize(row, emphasize=true){\n        this.resultTableBody.selectAll('#sd-league-table-row-'+row.id).classed('sd-emphasized', emphasize);\n    }\n}\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\n\nimport {Utils} from 'sd-utils'\nimport {Templates} from \"./templates\";\n\nexport class LoadingIndicator{\n    static show(message=''){\n        var html = Templates.get('loadingIndicator');\n\n        var g = d3.select('body').selectOrAppend('div.sd-loading-indicator-container').html(html).select('.sd-loading-indicator').classed('visible', true).style('display', 'block')\n    }\n\n    static hide(){\n        let select = d3.select('.sd-loading-indicator');\n        select.classed('visible', false);\n        setTimeout(function(){\n            select.style('display', 'none')\n        }, 500)\n\n    }\n}\n","import {Utils, log} from 'sd-utils';\nimport {i18n} from \"./i18n/i18n\";\nvar jQuery = require('jquery');\nUtils.getGlobalObject().jQuery = jQuery; //FIXME\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/scroll-parent');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/sortable');\nrequire('pivottable');\n\n\n// pivot show zero hack start\nvar numberFormat = jQuery.pivotUtilities.numberFormat;\ntry{\n    jQuery.pivotUtilities.numberFormat = function(opts){\n        if(!opts){\n            opts = {};\n        }\n        opts.showZero = true;\n        return numberFormat(opts);\n    };\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting');\n\n    try{\n        jQuery.pivotUtilities.numberFormat = numberFormat;\n    }catch (e){\n\n    }\n}\n\nrequire('pivottable/dist/pivot.it');\nrequire('pivottable/dist/pivot.de');\nrequire('pivottable/dist/pivot.fr');\nrequire('pivottable/dist/pivot.pl');\n\n// pivot show zero hack continuation\ntry{\n    var origAggregators = {};\n    Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n        origAggregators[key] = value;\n        object[key] = function(){\n            var args1 = arguments;\n            try{\n                let res1 = value.apply(this, args1);\n                return function(){\n                    var res = res1(...arguments);\n                    var format_ = res.format;\n                    res.format = function(x){\n                        var origX = x;\n                        if(x===0){\n                            x =  \"0\";\n                        }\n                        try{\n                            return format_(x);\n                        }catch (e){\n                            log.error('Error when performing pivottable \"show zero\" hack (format func call), reverting', e);\n                            if(format_){\n                                return format_(origX);\n                            }\n                            revertAggregators();\n                        }\n                    };\n                    return res;\n                };\n            }catch(e){\n                log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n                revertAggregators();\n                return origAggregators[key](...args1)\n            }\n        }\n    });\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n    revertAggregators();\n}\n\nfunction revertAggregators(){\n    try {\n        Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n            let origAggregator = origAggregators[key];\n            if(origAggregator){\n                object[key] = origAggregator\n            }\n\n        });\n    }catch(e){\n        log.error('Error when reverting aggregators', e)\n    }\n}\n\n///////////////////// hack end\n\nexport class PivotTable{\n\n    container;\n\n\n    constructor(container, options, data){\n        this.container =container;\n        this.options = options;\n        this.data=data;\n        if(data){\n            this.update(data, options);\n        }\n    }\n\n    update(data, options){\n        this.data = data;\n        this.options = options;\n        jQuery(this.container.node()).pivotUI(data, options, true, i18n.language)\n    }\n\n    clear(){\n        jQuery(this.container.node()).pivotUI([], null, true)\n    }\n\n\n\n    getAggregatorName(name){\n        return i18n.t(\"jobResultTable.pivot.aggregators.\"+name.toLowerCase());\n    }\n\n    getRendererName(name){\n        return i18n.t(\"jobResultTable.pivot.renderers.\"+name.toLowerCase());\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {PayoffInputValidator} from \"./validation/payoff-input-validator\";\nimport {ProbabilityInputValidator} from \"./validation/probability-input-validator\";\nimport {Templates} from \"./templates\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {InputField} from \"./form/input-field\";\nimport {PathValueAccessor} from \"./form/path-value-accessor\";\nimport {NumberInputValidator} from \"./validation/number-input-validator\";\nimport {RequiredInputValidator} from \"./validation/required-input-validator\";\nimport {McdmWeightValueValidator} from \"sd-computations/src/validation/mcdm-weight-value-validator\";\n\nexport class Sidebar {\n\n    app;\n    container;\n    dispatch = d3.dispatch(\"recomputed\", \"object-updated\", \"multi-criteria-updated\");\n\n\n    constructor(container, app) {\n        this.app = app;\n        this.container = container;\n\n        this.initLayoutOptions();\n        this.initDiagramDetails();\n        this.initDefinitions();\n        this.initMultipleCriteria();\n        var self = this;\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app) {\n                self.dispatch.call(\"recomputed\");\n            }\n        });\n\n        self.dispatch.on(\"object-updated\", Utils.debounce((object, fieldName)=> self.app.onObjectUpdated(object, fieldName), 350));\n        self.dispatch.on(\"multi-criteria-updated\", Utils.debounce((fieldName)=> self.app.onMultiCriteriaUpdated(fieldName), 350));\n\n    }\n\n    initLayoutOptions() {\n        var self = this;\n        this.layoutOptionsContainer = this.container.select('#layout-options');\n        this.autoLayoutOptionsGroup = this.layoutOptionsContainer.select('#auto-layout-options');\n        this.gridWidth = this.layoutOptionsContainer.select('input#grid-width').on('change', function () {\n            self.app.treeDesigner.layout.setGridWidth(parseInt(this.value));\n\n        });\n\n        this.gridHeight = this.layoutOptionsContainer.select('input#grid-height').on('change', function () {\n            self.app.treeDesigner.layout.setGridHeight(parseInt(this.value));\n        });\n\n        this.nodeSize = this.layoutOptionsContainer.select('input#node-size').on('change', function () {\n            self.app.treeDesigner.layout.setNodeSize(parseInt(this.value));\n        });\n\n        this.edgeSlantWidthMax = this.layoutOptionsContainer.select('input#edge-slant-width-max').on('change', function () {\n            self.app.treeDesigner.layout.setEdgeSlantWidthMax(parseInt(this.value));\n        });\n\n        this.marginHorizontal = this.layoutOptionsContainer.select('input#margin-horizontal').on('change', function () {\n            var m = {};\n            m.left = m.right = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n        this.marginVertical = this.layoutOptionsContainer.select('input#margin-vertical').on('change', function () {\n            var m = {};\n            m.top = m.bottom = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.updateLayoutOptions());\n\n        this.layoutOptionsContainer.select('.toggle-button').on('click', () => {\n            this.layoutOptionsContainer.classed('sd-extended', !this.layoutOptionsContainer.classed('sd-extended'));\n        });\n\n        this.updateLayoutOptions();\n    }\n\n    updateLayoutOptions() {\n        this.nodeSize.node().value = this.app.treeDesigner.config.layout.nodeSize;\n        this.edgeSlantWidthMax.node().value = this.app.treeDesigner.config.layout.edgeSlantWidthMax;\n        this.marginHorizontal.node().value = this.app.treeDesigner.config.margin.left;\n        this.marginVertical.node().value = this.app.treeDesigner.config.margin.top;\n        this.gridWidth.node().value = this.app.treeDesigner.config.layout.gridWidth;\n        this.gridHeight.node().value = this.app.treeDesigner.config.layout.gridHeight;\n        this.autoLayoutOptionsGroup.classed('visible', !this.app.treeDesigner.layout.isManualLayout());\n    }\n\n    initDiagramDetails() {\n        var self = this;\n        this.diagramDetailsContainer = this.container.select('#diagram-details-box');\n        this.diagramDetailsContainer.classed('sd-hidden', !this.app.config.showDetails);\n\n        this.diagramDetailsContainer.select('.toggle-button').on('click', () => {\n            this.diagramDetailsContainer.classed('sd-extended', !this.diagramDetailsContainer.classed('sd-extended'));\n            this.updateDiagramDetails();\n        });\n\n        this.diagramTitle = this.diagramDetailsContainer.select('input#diagram-title').on('change', function () {\n            self.app.setDiagramTitle(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.diagramDescription = this.diagramDetailsContainer.select('textarea#diagram-description').on('change', function () {\n            self.app.setDiagramDescription(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        AppUtils.elasticTextarea(this.diagramDescription);\n\n        this.updateDiagramDetails();\n    }\n\n    initDefinitions() {\n        var self = this;\n        this.definitionsContainer = this.container.select('#sd-sidebar-definitions');\n        this.definitionsContainer.classed('sd-hidden', !this.app.config.showDefinitions);\n        this.onDefinitionsCodeChanged = null;\n        this.definitionsContainer.select('.toggle-button').on('click', () => {\n            this.definitionsContainer.classed('sd-extended', !this.definitionsContainer.classed('sd-extended'));\n            AppUtils.updateInputClass(this.definitionsCode);\n            AppUtils.autoResizeTextarea(this.definitionsCode.node())\n        });\n\n        this.definitionsScopeLabel = this.definitionsContainer.select('.sd-variables-scope-value');\n\n        this.definitionsCode = this.definitionsContainer.select('textarea#sd-sidebar-definitions-code').on('change', function () {\n            if (self.onDefinitionsCodeChanged) {\n                self.onDefinitionsCodeChanged(this.value)\n            }\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        Tooltip.attach(this.definitionsCode, (d)=>{\n            return self.definitionsCode.attr('data-error-msg');\n\n        }, 15, 50);\n\n\n        this.definitionsEvaluatedValuesContainer = this.container.select(\"#sd-sidebar-definitions-evaluated-values\");\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-open-dialog-button').on('click', () => {\n            this.app.openDefinitionsDialog();\n        });\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-recalculate-button').on('click', () => {\n            this.app.recompute();\n        });\n\n        AppUtils.elasticTextarea(this.definitionsCode);\n    }\n\n    initMultipleCriteria() {\n        var self = this;\n        this.multipleCriteriaContainer = this.container.select('#sd-multiple-criteria');\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        this.multipleCriteriaContainer.select('.toggle-button').on('click', () => {\n            this.multipleCriteriaContainer.classed('sd-extended', !this.multipleCriteriaContainer.classed('sd-extended'));\n        });\n\n\n        this.showLeagueTableButton = this.multipleCriteriaContainer.select('#sd-show-league-table-button').on('click', () => {\n            this.app.showLeagueTable();\n        });\n\n        this.flipCriteriaButton = this.multipleCriteriaContainer.select('#sd-flip-criteria-button').on('click', () => {\n            this.app.flipCriteria();\n        });\n\n         let weightParser = (w) => {\n             return parseFloat(w) === Infinity ? Infinity : w;\n        };\n\n\n\n        this.multipleCriteriaFields = [];\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion1', 'nameOfCriterion1', 'text', i18n.t('multipleCriteria.nameOfCriterion1'), new PathValueAccessor(self.app.dataModel, 'payoffNames[0]'), new RequiredInputValidator()));\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion2', 'nameOfCriterion2', 'text', i18n.t('multipleCriteria.nameOfCriterion2'), new PathValueAccessor(self.app.dataModel, 'payoffNames[1]'), new RequiredInputValidator()));\n        let lowerBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightLowerBound');\n        let upperBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightUpperBound');\n        let weightValueValidator = new McdmWeightValueValidator();\n        var ee = this.app.expressionEngine.constructor;\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightLowerBound', 'weightLowerBound', 'text', i18n.t('multipleCriteria.weightLowerBound'), lowerBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                return weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-defaultCriterion1Weight', 'defaultCriterion1Weight', 'text', i18n.t('multipleCriteria.defaultCriterion1Weight'),\n            new PathValueAccessor(self.app.dataModel, 'defaultCriterion1Weight'),\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                let lower = lowerBoundValueAccessor.get();\n                return (weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true) && (weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true)\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightUpperBound', 'weightUpperBound', 'text', i18n.t('multipleCriteria.weightUpperBound'), upperBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let lower = lowerBoundValueAccessor.get();\n                return weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true\n            }), null, weightParser));\n\n        this.updateMultipleCriteria();\n    }\n\n\n    updateMultipleCriteria(updateInputs = true){ //TODO refactor\n        var ee = this.app.expressionEngine;\n\n        var self = this;\n        var temp = {};\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        let leagueTableAvailable = this.app.isLeagueTableAvailable();\n        this.showLeagueTableButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.flipCriteriaButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.multipleCriteriaContainer.classed('sd-invalid-league-table-params', !leagueTableAvailable);\n\n        if(!updateInputs){\n            return;\n        }\n\n        var inputGroups = this.multipleCriteriaContainer.select(\".sd-multiple-criteria-properties\").selectAll('div.input-group').data(this.multipleCriteriaFields);\n        inputGroups.exit().remove();\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n        inputGroupsEnter.merge(inputGroups).select('.sd-input').on('change input', function (d, i) {\n            var prevValue = d.getValue();\n\n            var isValid = !d.validator || d.validator.validate(this.value);\n\n            let selection = d3.select(this);\n            selection.classed('invalid', !isValid);\n            if(d.styleClass){\n                selection.classed(d.styleClass, true);\n            }\n\n            if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                if (d.onChange) {\n                    d.onChange(object, this.value, temp[i].pristineVal);\n                }\n            }\n\n            if((prevValue+\"\")==this.value){\n                return;\n            }\n\n            AppUtils.updateInputClass(selection);\n            d.setValue(d.parse(this.value));\n            self.dispatch.call(\"multi-criteria-updated\", self, d.name);\n\n        })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                let value = d.getValue();\n\n                this.value = value;\n                temp[i] = {};\n                d3.select(this).classed('invalid', d.validator && !d.validator.validate(this.value));\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n    }\n\n    updateDefinitions(definitionsSourceObject, readOnly, changeCallback) {\n        this.definitionsContainer.classed('sd-read-only', readOnly);\n        this.onDefinitionsCodeChanged = changeCallback;\n\n\n        let scopeType = 'global';\n        if (definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node'\n        }\n\n        this.definitionsScopeLabel.text(i18n.t(\"sidebarDefinitions.scope.\"+scopeType));\n\n        this.definitionsCode.node().value = definitionsSourceObject.code;\n        this.definitionsCode.classed('invalid', !!definitionsSourceObject.$codeError);\n        this.definitionsCode.attr('data-error-msg', definitionsSourceObject.$codeError);\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(definitionsSourceObject.expressionScope)});\n        this.definitionsEvaluatedValuesContainer.html(html);\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node())\n    }\n\n    updateDiagramDetails() {\n        this.diagramTitle.node().value = this.app.config.title;\n        AppUtils.updateInputClass(this.diagramTitle);\n        this.diagramDescription.node().value = this.app.config.description;\n        AppUtils.updateInputClass(this.diagramDescription);\n        AppUtils.autoResizeTextarea(this.diagramDescription.node())\n    }\n\n    displayObjectProperties(object) {\n        this.updateObjectPropertiesView(object);\n    }\n\n    hideObjectProperties() {\n\n        this.container.select('#object-properties').classed('visible', false);\n        this.container.selectAll('div.child-object').remove();\n\n    }\n\n    updateObjectPropertiesView(object) {\n        this.dispatch.on(\".recomputed\", null); //remove all callbacks for recomputed event\n        if (!object) {\n            this.hideObjectProperties();\n            return;\n        }\n\n        var objectProps = this.objectProps = this.container.select('#object-properties').classed('visible', true);\n        var headerText = Sidebar.getHeaderTextForObject(object);\n        objectProps.select('.header').html(headerText);\n\n        var fieldList = this.getFieldListForObject(object);\n        this.updateObjectFields(object, fieldList, objectProps.select('.content .main-properties'));\n\n\n        this.updateObjectChildrenProperties(object);\n\n    }\n\n    updateObjectChildrenProperties(object) {\n        var self = this;\n        var childObjects = this.getChildObjectList(object);\n        var objectType = Sidebar.getObjectType(object);\n\n        var childPropsSelector = this.objectProps.select('.content .children-properties');\n\n        childPropsSelector.classed('visible', childObjects.length);\n\n        childPropsSelector.select('.children-properties-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.header'));\n        var childrenContent = childPropsSelector.select('.children-properties-content');\n        var children = childrenContent.selectAll('div.child-object').data(childObjects, (d, i)=> d.$id || i);\n        var childrenEnter = children.enter().appendSelector('div.child-object');\n        var childrenMerge = childrenEnter.merge(children);\n\n        childrenMerge.each(updateChildObjectProperties);\n\n        children.exit().remove();\n\n        function updateChildObjectProperties(child, i) {\n            var container = d3.select(this);\n            container.selectOrAppend('div.child-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.child.header', {number: i + 1}));\n\n            var fieldList = self.getFieldListForObject(child);\n            self.updateObjectFields(child, fieldList, container.selectOrAppend('div.field-list'))\n        }\n    }\n\n    static getObjectType(object) {\n        if (object instanceof model.Node) {\n            return 'node';\n        }\n        if (object instanceof model.Edge) {\n            return 'edge';\n        }\n        if (object instanceof model.Text) {\n            return 'text';\n        }\n        return '';\n    }\n\n    static getHeaderTextForObject(object) {\n        if (object instanceof model.Node) {\n            return i18n.t('objectProperties.header.node.' + object.type);\n        }\n        if (object instanceof model.Edge) {\n            return i18n.t('objectProperties.header.edge');\n        }\n        if (object instanceof model.Text) {\n            return i18n.t('objectProperties.header.text');\n        }\n        return '';\n    }\n\n    getChildObjectList(object) {\n        if (object instanceof model.Node) {\n            return object.childEdges.sort((a, b)=>a.childNode.location.y - b.childNode.location.y);\n        }\n        if (object instanceof model.Edge) {\n            return [];\n        }\n        return [];\n    }\n\n    getFieldListForObject(object) {\n        var self = this;\n\n        if (object instanceof model.Node) {\n            return [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                })\n            ]\n        }\n        if (object instanceof model.Edge) {\n            let multipleCriteria = this.app.isMultipleCriteria();\n            var list = [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                }),\n                new ObjectInputField(object, {\n                    name: 'payoff',\n                    path: 'payoff[' + (self.app.currentViewMode.payoffIndex || 0) + ']',\n                    label: multipleCriteria ? self.app.dataModel.payoffNames[0] : undefined,\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                })\n\n\n            ];\n\n            if(multipleCriteria) {\n                list.push(new ObjectInputField(object, {\n                    name: 'payoff2',\n                    path: 'payoff[1]',\n                    label: self.app.dataModel.payoffNames[1],\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                }));\n            }\n\n            if (object.parentNode instanceof model.ChanceNode) {\n                list.push(new ObjectInputField(object, {\n                    name: 'probability',\n                    type: 'text',\n                    validator: new ProbabilityInputValidator(self.app.expressionEngine)\n                }))\n            }\n            return list;\n\n        }\n        if (object instanceof model.Text) {\n            return [new ObjectInputField(object, {\n                name: 'value',\n                type: 'textarea'\n            })]\n        }\n\n        return [];\n    }\n\n    updateObjectFields(object, fieldList, container) {\n        var self = this;\n\n        var fields = container.selectAll('div.object-field').data(fieldList);\n        var temp = {};\n        var fieldsEnter = fields.enter().appendSelector('div.object-field');\n        var fieldsMerge = fieldsEnter.merge(fields);\n\n        fieldsMerge.each(function (d, i) {\n            var fieldSelection = d3.select(this);\n            fieldSelection.html(\"\");\n\n            var input;\n            if (d.type == 'textarea') {\n                input = fieldSelection.append('textarea').attr('rows', 1);\n            } else {\n                input = fieldSelection.append('input');\n            }\n            input.classed('sd-input', true);\n\n            fieldSelection.appendSelector('span.bar');\n            fieldSelection.append('label');\n            fieldSelection.classed('input-group', true);\n        });\n\n        fieldsMerge.select('label')\n            .attr('for', d=>d.id)\n            .html(d=>d.label);\n        fieldsMerge.select('.sd-input')\n            .attr('type', d=>d.type == 'textarea' ? undefined : d.type)\n            .attr('name', d=>d.name)\n            .attr('id', d=>d.id)\n            .on('change keyup', function (d, i) {\n                var prevValue = d.getValue();\n                var isValid = !d.validator || d.validator.validate(this.value, object, d.path);\n                object.setSyntaxValidity(d.path, isValid);\n\n                d3.select(this).classed('invalid', !object.isFieldValid(d.path));\n\n                if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                    self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                    if (d.onChange) {\n                        d.onChange(object, this.value, temp[i].pristineVal);\n                    }\n                }\n\n                if((prevValue+\"\")==this.value){\n                    return;\n                }\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.customOnInput) {\n                    d.customOnInput(object, this.value, temp[i].pristineVal)\n                } else {\n                    d.setValue(this.value);\n                    self.dispatch.call(\"object-updated\", self, object, d.path);\n                }\n            })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                this.value = d.getValue();\n                temp[i] = {};\n                if (d.validator && !d.validator.validate(this.value, object, d.path)) {\n                    d3.select(this).classed('invalid', true);\n                    object.setSyntaxValidity(d.path, false);\n                }else{\n                    object.setSyntaxValidity(d.path, true);\n                }\n\n                var _this = this;\n                var checkFieldStatus = () => {\n                    d3.select(_this).classed('invalid', !object.isFieldValid(d.path));\n                };\n                checkFieldStatus();\n\n                self.dispatch.on(\"recomputed.\"+object.$id+\".\"+d.path, checkFieldStatus);\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n\n        fields.exit().remove();\n    }\n}\n\nclass ObjectInputField extends InputField{\n    //config object with fields: name, path, type, validator, options\n    constructor(object, config) {\n        super('object-' + object.$id + '-field-' + config.name, config.name, config.type, config.label ? config.label : i18n.t(Sidebar.getObjectType(object) + '.' + config.name),\n            new PathValueAccessor(object, config.path || config.name), config.validator, config.options);\n        this.path = config.path || config.name;\n        this.onChange = config.onChange;\n    }\n}\n\n","import {Templates as TdTemplates} from \"sd-tree-designer\";\nimport {i18n} from './i18n/i18n'\nimport {Utils, log} from \"sd-utils\";\n\nexport class Templates extends TdTemplates{\n\n    //TODO automate\n    static about_de = require('./templates/about/de.html');\n    static about_en = require('./templates/about/en.html');\n    static about_fr = require('./templates/about/fr.html');\n    static about_it = require('./templates/about/it.html');\n    static about_pl = require('./templates/about/pl.html');\n\n    static toolbar = require('./templates/toolbar.html');\n    static layoutOptions = require('./templates/sidebar/layout_options.html');\n    static objectProperties = require('./templates/sidebar/object_properties.html');\n    static diagramDetailsBox = require('./templates/sidebar/diagram_details_box.html');\n    static evaluatedVariables = require('./templates/evaluated_variables.html');\n    static definitions = require('./templates/sidebar/definitions.html');\n    static multipleCriteria = require('./templates/sidebar/multiple_criteria.html');\n    static sidebar = require('./templates/sidebar/sidebar.html');\n    static settingsDialog = require('./templates/settings_dialog.html');\n    static settingsDialogFormGroup = require('./templates/settings_dialog_form_group.html');\n    static inputGroup = require('./templates/input_group.html');\n    static selectInputGroup = require('./templates/select_input_group.html');\n    static help = require('./templates/help.html');\n    static aboutDialog = require('./templates/about_dialog.html');\n    static definitionsDialog = require('./templates/definitions_dialog.html');\n    static sensitivityAnalysisDialog = require('./templates/sensitivity_analysis_dialog.html');\n    static jobParametersBuilder = require('./templates/jobs/job_parameters_builder.html');\n    static jobParameter = require('./templates/jobs/job_parameter.html');\n    static leagueTableDialog = require('./templates/league_table_dialog.html');\n    static loadingIndicator = require('./templates/loading_indicator.html');\n    static fullscreenPopup = require('./templates/fullscreen_popup.html');\n    static warningMessage = require('./templates/warning_message.html');\n    static main = require('./templates/main.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n}\n\n\n\n\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (gebaut <%= buildTimestamp%>)</strong><br/>Open Source Entscheidungsbaum Software.\\n</p>\\n<p>\\n<strong>Zitierung:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Projektteam:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (Projektleiter)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (Stellvertretender Projektleiter)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (Designer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (Entwickler)</li>\\n        <li>Anna Wiertlewska (Projekt Unterstützung)</li>\\n        <li>Marcin Czupryna (Tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Das Projekt wird von Decision Support and Analysis Division, Warsaw School of Economics entwickelt.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions ist ein gemeinschaftsgetriebenes Projekt. Sollten Sie es für Ihre Untericht, Forschung oder jede andere Aktivität, die Sie mit uns teilen möchten verwenden, wir würden uns freuen, einen Link zu Ihren Aktivitäten zu der <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Gemeinschaft</a> Seite hinzufügen zu können.\\n</p>\\n<p>\\n    Software wird als Teil von <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Projekt entwickelt. Dieses Projekt hat      Mittel aus dem Horizon 2020 (Forschungs- und Innovationsprogramm der Europäischen Union) im Rahmen der Finanzhilfevereinbarung Nr 645860 erhalten. Ziel dieses Projektes ist es, eine transparente Kommunikation zwischen der öffentlichen Verwaltung und den Bürgern über das Thema, öffentliche Daten und Entscheidungsprozesse zu unterstützen. \\n</p>\\n<p>\\n    Alle Quelldateien werden unter den Bedingungen der GNU Lesser General Public License Version 3 lizenziert.\\n</p>\\n<p>\\n    Für weitere Informationen besuchen Sie bitte, unsere Website unter <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>A free and open source decision tree software.\\n</p>\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Project team:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (deputy project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentalist)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    The project is developed at Decision Support and Analysis Division, Warsaw School of Economics.<br/>\\n    Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions is a community-driven project, so if you use it for teaching, research or any other activity that you would be willing to share please let us know. We would be glad to add a link to your activities on <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a> page.\\n</p>\\n<p>\\n    Software is developed as a part of <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Project that has\\n    received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No\\n    645860. Its aim is to allow a transparent communication between public administration and citizens regarding public\\n    data about decision making processes performed by public administration.\\n</p>\\n<p>\\n    All the source files are licensed under the terms of the GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    For more information visit our website at <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>Un logiciel libre et open source pour faire son propre arbre de décision.\\n</p>\\n\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Equipe du projet:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (chef de projet)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (chef de projet adjoint)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (développeur)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentaliste)</li>\\n\\t<li>Marcin Czupryna (testeur)</li>\\n    </ul>\\n</p>\\n<p>\\n    Le projet est conçu et développé par la Division de l'aide à la décision et de l'analyse, à l'École d'économie de Varsovie. <br/>Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions est un projet communautaire, donc si vous l'utilisez pour l'enseignement, la recherche ou toute autre activité que vous aimeriez partager, \\n    faites-le nous savoir. Nous serions heureux d'ajouter un lien vers vos activités sur le site web de \\n    <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>  \\n    Le logiciel est développé dans le cadre du projet <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a>, \\n    financé par le programme de recherche et d'innovation Horizon 2020 de l'Union Européenne dans le cadre de l'accord de subvention n° 645860. \\n    Son objectif est permettre une communication transparente entre l'administration publique et les citoyens \\n    concernant les données publiques (Open Data) et la prise de décision des administrations.  \\n</p>\\n<p>\\n    Tous les fichiers source sont sous licence GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    Pour plus d'informations, visitez notre site web à <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (construzione <%= buildTimestamp%>)</strong><br/>\\n    Un Software Open Source Free per gestire alberi di decisione.\\n</p>\\n\\n<p>\\n<strong>Citazione:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Team di progetto:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (vice project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (sviluppo)</li>\\n        <li>Marcin Czupryna (test)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (tester)</li>\\n        <li>Anna Wiertlewska (documentazione)</li>\\n    </ul>\\n</p>\\n<p>\\n    Il progetto è sviluppato presso la Divisione “Supporto alla decisione ed Analisi” della Scuola di Economia dell’Università di Varsavia. <br/>Contatto:\\n    silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\nSilverDecision è un Progetto basato su di una Comunità di sviluppo, se lo utilizzi a scopo di insegnamento, ricerca o altra attività che vorresti rendere nota tienici informati. Saremmo lieti di aggiungere un <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">link</a> alla tua attività.\\n</p>\\n<p>\\n    Il software è sviluppato nell’ambito del progetto <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> \\n    finanziato dal programma di ricerca ed innovazione H2020 dell’ Unione Europea (contratto n. 645860). \\n    Scopo del progetto è quello di permettere una comunicazione trasparente tra Pubblica Amministrazione e cittadini \\n    riguardo ai dati pubblici ed ai processi di decisione portati avanti dalla stessa Pubblica Amministrazione.    \\n</p>\\n<p>\\n    Tutti i codici sorgente sono rilasciati secondo i termini della licenza “GNU Lesser General Public License version 3\\\".\\n</p>\\n<p>\\n    Per maggiori informazioni visita il sito <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>\\n    Oprogramowanie do analizy drzew decyzyjnych typu Free Open Source.\\n</p>\\n\\n<p>\\n<strong>Cytowanie:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Zespół projektowy:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (manager projektu)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (zastępca managera projektu)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (projektant)</li>\\n        <li>Anna Wiertlewska (dokumentalistka)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Projekt jest realizowany w Zakładzie Wspomagania i Analizy Decyzji w Szkole Głównej Handlowej w Warszawie.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    Rozwój SilverDecisions zależy od potrzeb użytkowników. W związku z tym jeśli wykorzystujesz je do nauczania, badań lub innych aktywności, o których zechcesz na powiedzieć prosimy o kontakt. Byłoby nam bardzo miło, jeśli moglibyśmy dodać informację o Twoich aktywnościach na stronie <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>\\n<p>\\n    Oprogramowanie jest rozwijane w ramach projektu <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> (<em>Raising\\n    Open and User-friendly Transparency-Enabling Technologies for Public Administrations</em>),\\n    który jest finansowany ze środków Europejskiego Programu w Zakresie Badań Naukowych i Innowacji Horizon 2020 na\\n    podstawie umowy o dotację nr 645860. Celem projektu ROUTE-TO-PA jest umożliwienie przejrzystej komunikacji pomiędzy\\n    administracją publiczną a mieszkańcami w zakresie publicznych danych dotyczących procesu podejmowania przez\\n    administracje publiczne decyzji.\\n</p>\\n<p>\\n    Wszystkie pliki źródłowe są licencjonowane zgodnie ze słabszą powszechną licencją publiczną GNU (GNU Lesser General Public License version 3).\\n</p>\\n<p>\\n    Więcej informacji można znaleźć na stronie internetowej: <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<div id=\\\"sd-about-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"aboutDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <% if ( [\\\"de\\\", \\\"en\\\", \\\"fr\\\", \\\"it\\\", \\\"pl\\\"].indexOf(lng) !== -1) { %>\\n                <%= include('about_'+lng, variables) %>\\n            <% } else { %>\\n                <%= include('about_en', variables) %>\\n            <% } %>\\n\\n            <%= include('help', variables) %>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-definitions-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"definitionsDialog.title\\\")%>: <span class=\\\"sd-definitions-dialog-scope-label\\\"></span></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"definitions-form\\\">\\n                <div class=\\\"input-group\\\">\\n                    <textarea id=\\\"sd-definitions-dialog-definitions-code\\\" name=\\\"sd-definitions-code\\\"></textarea>\\n                    <span class=\\\"bar\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"evaluated-variables-preview\\\">\\n                <h3><%= i18n.t('definitionsDialog.evaluatedVariables')%>:</h3>\\n                <div id=\\\"sd-definitions-dialog-variable-values\\\"></div>\\n            </div>\\n            <div class=\\\"action-buttons\\\">\\n                <button id=\\\"sd-definitions-dialog-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('definitionsDialog.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<table class=\\\"sd-evaluated-variables\\\">\\n    <% for(i=0; i<scopeVariables.length; ++i) { %>\\n    <tr>\\n        <td><%= scopeVariables[i].key %></td>\\n        <td>=</td>\\n        <td><%= scopeVariables[i].value %></td>\\n    </tr>\\n    <% } %>\\n</table>\\n\";\n","module.exports = \"<div class=\\\"sd-fullscreen-popup\\\">\\n    <div class=\\\"sd-popup-header\\\">\\n        <span class=\\\"sd-close-popup\\\"><i class=\\\"material-icons\\\">close</i></span>\\n        <h2><%= title %></h2>\\n    </div>\\n\\n    <div class=\\\"sd-popup-body\\\">\\n        <%= body %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div>\\n    <h3><%= i18n.t(\\\"help.header\\\")%></h3>\\n    <p>\\n        <%= i18n.t(\\\"help.mouse.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.mouse.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.3\\\")%></li>\\n        </ul>\\n    </p>\\n    <p>\\n        <%= i18n.t(\\\"help.keyboard.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.keyboard.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.3\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.4\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.5\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.6\\\")%></li>\\n        </ul>\\n    </p>\\n    <p><%= i18n.t(\\\"help.docs\\\")%></p>\\n</div>\\n\";\n","module.exports = \"<input id=\\\"<%= id %>\\\" type=\\\"<%= type %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"\\n\";\n","module.exports = \"<div class=\\\"sd-job-parameters-builder\\\">\\n\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-league-table-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"leagueTableDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-league-table-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-league-table-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-league-table-action-buttons\\\">\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('leagueTableDialog.buttons.downloadCsv')%></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-loading-indicator\\\">\\n    <div></div>\\n    <div class=\\\"sd-spinner\\\" title=\\\"loading...\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"silver-decisions\\\" tabindex=\\\"0\\\">\\n    <%= include('toolbar', variables) %>\\n    <div id=\\\"main-region\\\">\\n        <%= include('sidebar', variables) %>\\n        <div id=\\\"tree-designer-container\\\"></div>\\n    </div>\\n    <input type=\\\"file\\\" style=\\\"display:none\\\" id=\\\"sd-file-input\\\" accept=\\\".json\\\"/>\\n    <%= include('settingsDialog', variables) %>\\n    <%= include('aboutDialog', variables) %>\\n    <%= include('definitionsDialog', variables) %>\\n    <%= include('sensitivityAnalysisDialog', variables) %>\\n    <%= include('leagueTableDialog', variables) %>\\n</div>\\n\";\n","module.exports = \"<select id=\\\"<%= id %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n    <% for(i=0; i<options.length; ++i) { %>\\n    <option value=\\\"<% if (options[i].value !== undefined){ %><%= options[i].value %><%} else { %><%= options[i] %><%}%>\\\"><% if (options[i].label !== undefined){ %><%= options[i].label %><%} else { %><%= options[i] %><%}%></option>\\n    <% } %>\\n</select>\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-sensitivity-analysis-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"sensitivityAnalysisDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-sensitivity-analysis-job-configuration\\\">\\n                <div class=\\\"sd-job-select-input-group input-group\\\"></div>\\n                <%= include('jobParametersBuilder', variables) %>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-sensitivity-analysis-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-action-buttons\\\">\\n                <button class=\\\"sd-terminate-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.terminateJob')%></button>\\n                <button class=\\\"sd-stop-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.stopJob')%></button>\\n                <button class=\\\"sd-resume-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.resumeJob')%></button>\\n                <button class=\\\"sd-back-button  sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.back')%></button>\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.downloadCsv')%></button>\\n                <button class=\\\"sd-clear-button \\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.clear')%></button>\\n                <button class=\\\"sd-run-job-button\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.runJob')%></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-settings-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"settingsDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <form id=\\\"sd-settings-form\\\">\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"header\\\">\\n    <h4><%= i18n.t(\\\"settingsDialog.\\\"+name+\\\".title\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </h4>\\n</div>\\n<div class=\\\"sd-form-group-content\\\">\\n    <div class=\\\"sd-form-group-inputs\\\"></div>\\n    <div class=\\\"sd-form-group-child-groups\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar-definitions\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"sidebarDefinitions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-variables-scope\\\">\\n            <div class=\\\"sd-variables-scope-label\\\"><%= i18n.t('sidebarDefinitions.scope.label')%></div>\\n            <div class=\\\"sd-variables-scope-value\\\"></div>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea rows=\\\"1\\\" id=\\\"sd-sidebar-definitions-code\\\" type=\\\"text\\\" name=\\\"sidebar-definitions-code\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"sd-sidebar-definitions-code\\\"><%= i18n.t(\\\"sidebarDefinitions.code\\\") %></label>\\n        </div>\\n        <div class=\\\"evaluated-variables-preview\\\">\\n            <div class=\\\"evaluated-variables-preview-header\\\">\\n                <%= i18n.t('sidebarDefinitions.evaluatedVariables')%>\\n            </div>\\n            <div id=\\\"sd-sidebar-definitions-evaluated-values\\\"></div>\\n        </div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-sidebar-definitions-open-dialog-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.openDialog')%>\\\"><i class=\\\"material-icons\\\">open_in_new</i></button>\\n            <button id=\\\"sd-sidebar-definitions-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"diagram-details-box\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"diagramDetails.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"diagram-title\\\" type=\\\"text\\\" name=\\\"diagram-title\\\">\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-title\\\"><%= i18n.t(\\\"diagramDetails.title\\\") %></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea id=\\\"diagram-description\\\" name=\\\"diagram-description\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-description\\\"><%= i18n.t(\\\"diagramDetails.description\\\") %></label>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"layout-options\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"layoutOptions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-horizontal\\\" name=\\\"margin-horizontal\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-horizontal\\\"><%= i18n.t(\\\"layoutOptions.marginHorizontal\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-vertical\\\" name=\\\"margin-vertical\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-vertical\\\"><%= i18n.t(\\\"layoutOptions.marginVertical\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"node-size\\\" name=\\\"node-size\\\" type=\\\"range\\\" min=\\\"20\\\" max=\\\"60\\\" step=\\\"5\\\"/>\\n            <label for=\\\"node-size\\\"><%= i18n.t(\\\"layoutOptions.nodeSize\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"edge-slant-width-max\\\" name=\\\"edge-slant-width-max\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"edge-slant-width-max\\\"><%= i18n.t(\\\"layoutOptions.edgeSlantWidthMax\\\")%></label>\\n        </div>\\n        <div id=\\\"auto-layout-options\\\">\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-width\\\" name=\\\"grid-width\\\" type=\\\"range\\\" min=\\\"105\\\" max=\\\"300\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-width\\\"><%= i18n.t(\\\"layoutOptions.gridWidth\\\")%></label>\\n            </div>\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-height\\\" name=\\\"grid-height\\\" type=\\\"range\\\" min=\\\"55\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-height\\\"><%= i18n.t(\\\"layoutOptions.gridHeight\\\")%></label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-multiple-criteria\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"multipleCriteria.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-multiple-criteria-properties\\\"></div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-show-league-table-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.showLeagueTable')%>\\\"><i class=\\\"material-icons\\\">assignment</i></button>\\n            <button id=\\\"sd-flip-criteria-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.flip')%>\\\"><i class=\\\"material-icons\\\">swap_vert</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"object-properties\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"main-properties\\\"></div>\\n        <div class=\\\"children-properties\\\">\\n            <div class=\\\"children-properties-header\\\"></div>\\n            <div class=\\\"children-properties-content\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar\\\">\\n    <div id=\\\"sd-sidebar-inner\\\">\\n        <%= include('layoutOptions', variables) %>\\n        <%= include('diagramDetailsBox', variables) %>\\n        <%= include('definitions', variables) %>\\n        <%= include('multipleCriteria', variables) %>\\n        <%= include('objectProperties', variables) %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-toolbar\\\">\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"new-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.newDiagram')%>\\\"><i class=\\\"material-icons\\\">insert_drive_file</i></button>\\n        <button id=\\\"open-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.openDiagram')%>\\\"><i class=\\\"material-icons\\\">folder_open</i></button>\\n        <button id=\\\"save-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.saveDiagram')%>\\\"><i class=\\\"material-icons\\\">save</i></button>\\n    </div>\\n    <div id=\\\"export-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.export.label\\\")%></label>\\n        <button id=\\\"saveButton\\\"><%= i18n.t(\\\"toolbar.export.png\\\")%></button>\\n        <button id=\\\"saveButtonSvg\\\"><%= i18n.t(\\\"toolbar.export.svg\\\")%></button>\\n        <button id=\\\"saveButtonPdf\\\"><%= i18n.t(\\\"toolbar.export.pdf\\\")%></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.layout.label\\\")%></label>\\n        <button id=\\\"manualLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.manual\\\")%></button>\\n        <button id=\\\"treeAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.tree\\\")%></button>\\n        <button id=\\\"clusterAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.cluster\\\")%></button>\\n    </div>\\n    <div id=\\\"view-mode-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"view-mode-select\\\"><%= i18n.t(\\\"toolbar.viewMode.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"view-mode-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div id=\\\"objective-rule-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"objective-rule-select\\\"><%= i18n.t(\\\"toolbar.objectiveRule.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"objective-rule-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"undoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.undo')%>\\\"><i class=\\\"material-icons\\\">undo</i></button>\\n        <button id=\\\"redoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.redo')%>\\\"><i class=\\\"material-icons\\\">redo</i></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"sensitivity-analysis-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.sensitivityAnalysis')%>\\\"><i class=\\\"material-icons\\\">assessment</i></button>\\n        <button id=\\\"recompute-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.recompute')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        <button id=\\\"settings-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.settings')%>\\\"><i class=\\\"material-icons\\\">settings</i></button>\\n        <button id=\\\"about-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.about')%>\\\"><i class=\\\"material-icons\\\">info_outline</i></button>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-warning-message\\\">\\n    <i class=\\\"material-icons sd-icon\\\">warning</i>\\n    <div class=\\\"sd-warning-message-text\\\">\\n       <%= message %>\\n    </div>\\n</div>\\n\";\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\nimport {AppUtils} from './app-utils'\nimport {Exporter} from './exporter'\nimport {FileLoader} from './file-loader'\n\nexport class Toolbar{\n\n    app;\n    container;\n    hiddenClass = 'sd-hidden';\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n        this.initDiagramButtons();\n        this.initExportToolbarGroup();\n        this.initLayoutButtons();\n        this.initUndoRedoButtons();\n        this.initSettingsButton();\n        this.initAboutButton();\n        this.initSensitivityAnalysisButton();\n        this.initRecomputeButton();\n        this.initViewModeToolbarGroup();\n        this.initObjectiveRuleToolbarGroup();\n    }\n\n    initDiagramButtons(){\n\n\n        this.newDiagramButton = this.container.select('#new-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.newDiagram'))){\n                return;\n            }\n            this.app.newDiagram();\n        });\n        this.newDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.new);\n        this.openDiagramButton = this.container.select('#open-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.openDiagram'))){\n                return;\n            }\n            FileLoader.openFile(model=>{\n                this.app.openDiagram(model);\n            });\n\n\n        });\n        this.openDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.open);\n        this.saveDiagramButton = this.container.select('#save-diagram-button').on('click', ()=>{\n            this.app.saveToFile();\n        });\n        this.saveDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.save);\n    }\n\n\n\n    initLayoutButtons() {\n        var self = this;\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.onLayoutChanged(layout));\n        this.layoutButtons={};\n        this.layoutButtons['manual'] = this.container.select('#manualLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='manual'){\n                return;\n            }\n            self.app.treeDesigner.layout.disableAutoLayout();\n        });\n        this.layoutButtons['tree'] = this.container.select('#treeAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='tree'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('tree');\n        });\n        this.layoutButtons['cluster'] = this.container.select('#clusterAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='cluster'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('cluster');\n        });\n\n        this.updateLayoutButtons();\n    }\n\n    updateLayoutButtons() {\n        this.onLayoutChanged(this.app.treeDesigner.config.layout.type)\n    }\n\n    initSettingsButton(){\n        this.settingsButton = this.container.select('#settings-button').on('click', ()=>{\n            this.app.settingsDialog.open();\n        });\n    }\n\n    initAboutButton(){\n        this.aboutButton = this.container.select('#about-button').on('click', ()=>{\n            this.app.aboutDialog.open();\n        });\n    }\n\n    initRecomputeButton(){\n        this.recomputeButton = this.container.select('#recompute-button').on('click', ()=>{\n            this.app.recompute();\n        });\n    }\n\n    initSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton = this.container.select('#sensitivity-analysis-button').on('click', ()=>{\n            this.app.openSensitivityAnalysis();\n        });\n    }\n\n    updateSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton.attr(\"disabled\", this.app.isSensitivityAnalysisAvailable() ? null : 'disabled');\n    }\n\n\n    onLayoutChanged(layout){\n        Object.getOwnPropertyNames(this.layoutButtons).forEach(l=>{\n            this.layoutButtons[l].classed('active', false);\n        });\n        var button = this.layoutButtons[layout];\n        if(button){\n            button.classed('active', true);\n        }\n    }\n\n    initUndoRedoButtons() {\n        var self = this;\n        self.app.dataModel.undoRedoStateChangedCallback = ()=>this.onUndoRedoChanged();\n        this.undoButton = this.container.select('#undoButton').on('click', function () {\n            self.app.undo();\n        });\n        this.redoButton = this.container.select('#redoButton').on('click', function () {\n            self.app.redo();\n        });\n    }\n\n    onUndoRedoChanged() {\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n    }\n    updateUndoRedoButtons(){\n        this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n        this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n    }\n\n    update(){\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n        this.updateLayoutButtons();\n        this.updateViewModeValue();\n        this.updateObjectiveRuleOptions();\n        this.updateObjectiveRuleValue();\n    }\n\n    initExportToolbarGroup() {\n        this.container.select('#export-toolbar-group').classed(this.hiddenClass, !this.app.config.exports.show);\n        if(!this.app.config.exports.show){\n            return;\n        }\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initExportPdfButton();\n\n    }\n    initExportToPngButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButton')\n            .on('click', () => Exporter.saveAsPng(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPng)\n    }\n\n    initExportSvgButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonSvg')\n            .on('click', () => Exporter.saveAsSvg(svg))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToSvg)\n    }\n\n    initExportPdfButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonPdf')\n            .on('click', () => Exporter.saveAsPdf(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPdf)\n    }\n\n    initObjectiveRuleToolbarGroup() {\n        var self = this;\n        this.objectiveRuleSelect = this.container.select('#objective-rule-select');\n\n        this.updateObjectiveRuleOptions()\n        this.updateObjectiveRuleValue();\n\n        this.objectiveRuleSelect.on('change', function(){\n            self.app.setObjectiveRule(this.value);\n        })\n    }\n\n    updateObjectiveRuleOptions(){\n        var rules = this.app.getObjectiveRules();\n        var options = this.objectiveRuleSelect.selectAll('option').data(rules);\n        options.exit().remove();\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.objectiveRule.options.'+d.name));\n    }\n\n    updateObjectiveRuleValue(){\n        this.objectiveRuleSelect.node().value = this.app.getCurrentObjectiveRule().name;\n    }\n\n    initViewModeToolbarGroup() {\n        var self = this;\n        this.viewModeSelect = this.container.select('#view-mode-select');\n        var rules = this.app.getViewModes();\n        var options = this.viewModeSelect.selectAll('option').data(rules);\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.viewMode.options.'+d.name));\n\n        this.updateViewModeValue();\n\n        this.viewModeSelect.on('change', function(){\n            self.app.setViewModeByName(this.value);\n        })\n    }\n\n    updateViewModeValue(){\n        this.viewModeSelect.node().value = this.app.getCurrentViewMode().name;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class NumberInputValidator {\n\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        if (!value.trim()) {\n            return false;\n        }\n\n        value = parseFloat(value);\n\n        if (!Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (this.min !== undefined && value < this.min) {\n            return false;\n        }\n\n        return !(this.max !== undefined && value > this.max);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PayoffInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        return this.expressionEngine.validate(value);\n    }\n\n}\n","export class ProbabilityInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n\n        if(this.expressionEngine.constructor.isHash(value)){\n            return true;\n        }\n\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        var scope = edge.parentNode.expressionScope;\n        return this.expressionEngine.validate(value, scope);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class RequiredInputValidator {\n\n    constructor() {\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        return !!value.trim();\n    }\n\n}\n","module.exports = {\"buildTimestamp\":1510788974947}\n"]}