{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d/auto-bind.js","node_modules/d/index.js","node_modules/es5-ext/array/#/clear.js","node_modules/es5-ext/array/#/e-index-of.js","node_modules/es5-ext/array/from/index.js","node_modules/es5-ext/array/from/is-implemented.js","node_modules/es5-ext/array/from/shim.js","node_modules/es5-ext/function/is-arguments.js","node_modules/es5-ext/function/is-function.js","node_modules/es5-ext/function/noop.js","node_modules/es5-ext/global.js","node_modules/es5-ext/math/sign/index.js","node_modules/es5-ext/math/sign/is-implemented.js","node_modules/es5-ext/math/sign/shim.js","node_modules/es5-ext/number/is-nan/index.js","node_modules/es5-ext/number/is-nan/is-implemented.js","node_modules/es5-ext/number/is-nan/shim.js","node_modules/es5-ext/number/to-integer.js","node_modules/es5-ext/number/to-pos-integer.js","node_modules/es5-ext/object/_iterate.js","node_modules/es5-ext/object/assign/index.js","node_modules/es5-ext/object/assign/is-implemented.js","node_modules/es5-ext/object/assign/shim.js","node_modules/es5-ext/object/copy.js","node_modules/es5-ext/object/create.js","node_modules/es5-ext/object/for-each.js","node_modules/es5-ext/object/is-callable.js","node_modules/es5-ext/object/is-object.js","node_modules/es5-ext/object/is-value.js","node_modules/es5-ext/object/keys/index.js","node_modules/es5-ext/object/keys/is-implemented.js","node_modules/es5-ext/object/keys/shim.js","node_modules/es5-ext/object/map.js","node_modules/es5-ext/object/normalize-options.js","node_modules/es5-ext/object/set-prototype-of/index.js","node_modules/es5-ext/object/set-prototype-of/is-implemented.js","node_modules/es5-ext/object/set-prototype-of/shim.js","node_modules/es5-ext/object/valid-callable.js","node_modules/es5-ext/object/valid-value.js","node_modules/es5-ext/string/#/contains/index.js","node_modules/es5-ext/string/#/contains/is-implemented.js","node_modules/es5-ext/string/#/contains/shim.js","node_modules/es5-ext/string/is-string.js","node_modules/es6-iterator/array.js","node_modules/es6-iterator/for-of.js","node_modules/es6-iterator/get.js","node_modules/es6-iterator/index.js","node_modules/es6-iterator/is-iterable.js","node_modules/es6-iterator/string.js","node_modules/es6-iterator/valid-iterable.js","node_modules/es6-set/implement.js","node_modules/es6-set/is-implemented.js","node_modules/es6-set/is-native-implemented.js","node_modules/es6-set/lib/iterator.js","node_modules/es6-set/polyfill.js","node_modules/es6-symbol/index.js","node_modules/es6-symbol/is-implemented.js","node_modules/es6-symbol/is-symbol.js","node_modules/es6-symbol/polyfill.js","node_modules/es6-symbol/validate-symbol.js","node_modules/event-emitter/index.js","node_modules/jquery-ui/ui/data.js","node_modules/sd-tree-designer/index.js","node_modules/sd-tree-designer/src/app-utils.js","node_modules/sd-tree-designer/src/context-menu/context-menu.js","node_modules/sd-tree-designer/src/context-menu/edge-context-menu.js","node_modules/sd-tree-designer/src/context-menu/main-context-menu.js","node_modules/sd-tree-designer/src/context-menu/node-context-menu.js","node_modules/sd-tree-designer/src/context-menu/text-context-menu.js","node_modules/sd-tree-designer/src/d3-extensions.js","node_modules/sd-tree-designer/src/d3.js","node_modules/sd-tree-designer/src/i18n/de.json","node_modules/sd-tree-designer/src/i18n/en.json","node_modules/sd-tree-designer/src/i18n/fr.json","node_modules/sd-tree-designer/src/i18n/i18n.js","node_modules/sd-tree-designer/src/i18n/it.json","node_modules/sd-tree-designer/src/i18n/pl.json","node_modules/sd-tree-designer/src/index.js","node_modules/sd-tree-designer/src/layout.js","node_modules/sd-tree-designer/src/node-drag-handler.js","node_modules/sd-tree-designer/src/symbols/circle.js","node_modules/sd-tree-designer/src/symbols/triangle.js","node_modules/sd-tree-designer/src/templates.js","node_modules/sd-tree-designer/src/templates/growl_message.html","node_modules/sd-tree-designer/src/text-drag-handler.js","node_modules/sd-tree-designer/src/tooltip.js","node_modules/sd-tree-designer/src/tree-designer.js","package.json","src/app-utils.js","src/app.js","src/autocomplete.js","src/d3.js","src/dialogs/about-dialog.js","src/dialogs/definitions-dialog.js","src/dialogs/dialog.js","src/dialogs/sensitivity-analysis-dialog.js","src/dialogs/settings-dialog.js","src/exporter.js","src/file-loader.js","src/form/input-field.js","src/form/path-value-accessor.js","src/i18n/de.json","src/i18n/en.json","src/i18n/fr.json","src/i18n/i18n.js","src/i18n/it.json","src/i18n/pl.json","src/index.js","src/jobs/job-parameters-builder.js","src/jobs/job-result-table.js","src/jobs/probabilistic-sensitivity-analysis-result-table.js","src/jobs/sensitivity-analysis-result-table.js","src/jobs/spider-plot.js","src/jobs/tornado-diagram-plot.js","src/league-table/league-table-dialog.js","src/league-table/league-table-plot.js","src/league-table/league-table.js","src/loading-indicator.js","src/pivot-table.js","src/sidebar.js","src/templates.js","src/templates/about/de.html","src/templates/about/en.html","src/templates/about/fr.html","src/templates/about/it.html","src/templates/about/pl.html","src/templates/about_dialog.html","src/templates/definitions_dialog.html","src/templates/evaluated_variables.html","src/templates/fullscreen_popup.html","src/templates/help.html","src/templates/input_group.html","src/templates/jobs/job_parameter.html","src/templates/jobs/job_parameters_builder.html","src/templates/league_table_dialog.html","src/templates/loading_indicator.html","src/templates/main.html","src/templates/select_input_group.html","src/templates/sensitivity_analysis_dialog.html","src/templates/settings_dialog.html","src/templates/settings_dialog_form_group.html","src/templates/sidebar/definitions.html","src/templates/sidebar/diagram_details_box.html","src/templates/sidebar/layout_options.html","src/templates/sidebar/multiple_criteria.html","src/templates/sidebar/object_properties.html","src/templates/sidebar/sidebar.html","src/templates/toolbar.html","src/templates/warning_message.html","src/toolbar.js","src/validation/number-input-validator.js","src/validation/payoff-input-validator.js","src/validation/probability-input-validator.js","src/validation/required-input-validator.js","tmp/build-config.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","copy","normalizeOptions","ensureCallable","map","callable","validValue","bind","Function","prototype","defineProperty","Object","hasOwnProperty","name","desc","options","dgs","value","writable","get","overwriteDefinition","resolveContext","props","arguments","assign","normalizeOpts","isCallable","contains","dscr","c","w","configurable","enumerable","gs","set","undefined","numberIsNaN","toPosInt","indexOf","Array","objHasOwnProperty","abs","Math","floor","searchElement","fromIndex","val","apply","isNaN","from","arr","result","Boolean","iteratorSymbol","iterator","isArguments","isFunction","isValue","isString","isArray","arrayLike","Context","j","getIterator","mapFn","thisArg","next","done","charCodeAt","objToString","toString","id","sign","Number","NaN","isFinite","toInteger","max","keys","objPropertyIsEnumerable","propertyIsEnumerable","method","defVal","obj","cb","list","compareFn","sort","key","index","foo","bar","trzy","dest","src","error","forEach","aFrom","propertyNames","propertyName","ensure","shim","create","nullObject","polyProps","level","getOwnPropertyNames","defineProperties","function","object","_undefined","targetObj","opts1","process","setPrototypeOf","getPrototypeOf","plainObject","customCreate","validate","isObject","objIsPrototypeOf","isPrototypeOf","nullDesc","TypeError","status","fn","__proto__","isNullBase","nullPolyfill","tmpObj1","tmpObj2","getOwnPropertyDescriptor","ignore","String","searchString","ArrayIterator","d","Symbol","Iterator","kind","constructor","_resolve","__kind__","__list__","toStringTag","some","iterable","mode","doBreak","broken","char","StringIterator","clear","autoBind","context","__context__","__nextIndex__","on","_onAdd","_onDelete","_onClear","_next","__redo__","shift","_unBind","_createResult","off","redo","push","splice","str","__length__","isIterable","Set","size","add","delete","entries","has","values","SetIterator","toStringTagSymbol","__setData__","SetPoly","getValues","NativeSet","eIndexOf","ee","forOf","isNative","emit","validTypes","symbol","toPrimitive","x","NativeSymbol","SymbolPolyfill","HiddenSymbol","isNativeSafe","validateSymbol","objPrototype","globalSymbols","generateName","created","ie11BugWorkaround","postfix","description","__description__","__name__","for","keyFor","hasInstance","isConcatSpreadable","match","replace","search","species","split","unscopables","valueOf","isSymbol","once","methods","descriptors","base","descriptor","type","listener","data","__ee__","__eeOnceListener__","listeners","candidate","args","slice","factory","jQuery","$","extend","expr","createPseudo","dataName","elem","_index","d3","_templates","_i18n","_sdUtils","AppUtils","textD3Obj","textString","width","textObj","node","textContent","getComputedTextLength","getSubStringLength","substring","tooltip","placeTextWithEllipsis","transition","duration","style","html","event","pageX","pageY","element","getComputedStyle","getPropertyValue","transform","document","createElementNS","setAttributeNS","matrix","baseVal","consolidate","pathNode","point","distance2","p","dx","dy","y","best","bestLength","scan","scanDistance","pathLength","getTotalLength","precision","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","sqrt","message","position","time","Templates","select","selectOrAppend","append","setTimeout","remove","tag","attribs","parent","el","createElement","deepExtend","appendChild","parentNode","removeChild","text","createTextNode","div","innerHTML","evt","createEvent","initEvent","dispatchEvent","fireEvent","CustomEvent","detail","initCustomEvent","Utils","i18n","selection","classed","_show","exact","display","offsetParent","url","callback","xhr","XMLHttpRequest","open","responseType","onload","response","send","sanitizeHeight","height","container","parseInt","sanitizeWidth","availableHeight","margin","top","bottom","availableWidth","left","right","ContextMenu","menu","opts","_classCallCheck","openCallback","onOpen","closeCallback","onClose","selectAll","enter","attr","elm","preventDefault","stopPropagation","ret","divider","disabled","action","title","console","_contextMenu","EdgeContextMenu","treeDesigner","_this","_possibleConstructorReturn","injectDecisionNode","injectChanceNode","_sdModel","MainContextMenu","mousePosition","newNode","domain","DecisionNode","addNode","ChanceNode","newText","Text","addText","pasteToNewLocation","copiedNodes","selectAllNodes","clearSelection","Point","mouse","svg","move","getMainGroupTranslation","NodeContextMenu","operationsForObject","copyMenuItem","selectNode","isNodeSelected","copySelectedNodes","cutMenuItem","cutSelectedNodes","pasteMenuItem","pasteToNode","folded","deleteMenuItem","removeSelectedNodes","TerminalNode","$TYPE","addNodeConversionOptions","addDecisionNode","addChanceNode","addTerminalNode","selectSubTree","foldSubtree","operations","op","performOperation","canPerform","conversionOptions","getNodeConversionOptions","allAllowedTypes","childEdges","$parent","filter","getNodeConversionOption","typeToConvertTo","convertNode","TextContextMenu","selectText","removeSelectedTexts","D3Extensions","insertSelector","selector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","empty","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","contextMenu","main","paste","cut","convert","decision","chance","terminal","selectSubtree","fold","unfold","flipSubtree","edge","validation","incompletePath","probabilityDoNotSumUpTo1","invalidProbability","invalidPayoff","growl","brushDisabled","brushEnabled","payoff","default","named","aggregatedPayoff","probabilityToEnter","probability","en","pl","it","de","fr","lng","language","resources","translation","$instance","_i18next2","createInstance","fallbackLng","err","opt","_treeDesigner","_appUtils","_tooltip","_d3Extensions","Layout","config","nodeTypeToSymbol","symbolSquare","_circle2","_triangle2","onAutoLayoutChanged","nodeTypeOrder","treeMargin","targetSymbolSize","nodeSeparation","b","nodeSymbolSize","childNode","location","isManualLayout","autoLayout","moveNodeToEmptyPlace","redraw","MANUAL_LAYOUT_NAME","getNodeMinX","getNodeMinY","gridWidth","$linePoints","findCollidingNode","find","nodesSortedByX","nodeSize","redrawIfChanged","nodes","colidingNode","stepX","stepY","changed","newLocation","moveTo","_fireOnAutoLayoutChangedCallbacks","path","nodeSymbol","$id","each","box","getBBox","min","setHangingPosition","fontSize","getFontSize","items","displayValue","aggregatedPayoffs","line","dX","slantStartXOffset","slantWidth","edgeSlantWidthMax","point1","point2","point3","point4","datum","len","previousSibling","childNodes","minX","bb","getTextD3Selection","minY","MAX_SAFE_INTEGER","getMinMarginBetweenNodes","$hidden","withoutStateSaving","saveState","onUndo","setGridWidth","onRedo","update","gridHeight","setGridHeight","setNodeSize","fitNodesInPlottingRegion","getRoots","setEdgeSlantWidthMax","newLayout","currentLayout","prevTreeMaxY","root","hierarchy","layout","cluster","tree","separation","maxY","pivot","limit","limitNodePositioning","backupNodeLocation","maxX","getNodeMaxX","revertX","$location","updateNodePosition","texts","limitTextPositioning","getTextMinX","getTextMaxX","getTextMinY","updateTextPosition","isHidden","NodeDragHandler","drag","subject","getTranslation","dragStarted","onDrag","dragEnded","ignoreDrag","ignoredDrag","hide","selectedNodes","getSelectedNodes","prevDragEvent","dragEventCount","draggedNode","moveNodes","redrawEdges","updatePlottingRegionSize","pi","PI","draw","dist","bezierCurveTo","lineTo","closePath","templateName","variables","compiled","template","imports","include","v","styleProp","styleName","variableName","clazz","treeDesignerSelector","treeDesignerStyles","styleRule","nodeSelector","edgeSelector","TextDragHandler","draggedText","moveTexts","Tooltip","xOffset","yOffset","getContainer","updatePosition","target","htmlOrFn","show","_mainContextMenu","_nodeContextMenu","_layout","_nodeDragHandler","_textDragHandler","_textContextMenu","_edgeContextMenu","Hammer","TreeDesignerConfig","custom","scale","fontFamily","fontWeight","fontStyle","strokeWidth","optimal","stroke","label","color","negativeColor","fill","selected","readOnly","disableAnimations","forceFullEdgeRedraw","hideLabels","hidePayoffs","hideProbabilities","raw","payoffNumberFormatter","probabilityNumberFormatter","onNodeSelected","onEdgeSelected","onTextSelected","onSelectionCleared","payoffNames","maxPayoffsToDisplay","TreeDesigner","dataModel","setConfig","initContainer","init","updateCustomStyles","initSvg","initLayout","initI18n","initBrush","initEdgeMarkers","initMainContextMenu","initNodeContextMenu","initEdgeContextMenu","initNodeDragHandler","initTextDragHandler","initTextContextMenu","nodeDragHandler","textDragHandler","withTransitions","redrawDiagramTitle","redrawDiagramDescription","updateScale","updateMargin","transitionPrev","redrawNodes","redrawFloatingTexts","updateValidationMessages","computeAvailableSpace","wrapperGroup","mainGroup","mc","Manager","touchAction","Press","pointerType","Pinch","disableBrush","waitForFinalEvent","enableBrush","group","topMargin","diagramTitle","diagramDescription","getTitleGroupHeight","clone","setMargin","setScale","containerIdOrElem","trim","startsWith","_parents","svgWidth","svgHeight","mainGroupBox","newSvgWidth","newSvgHeight","updateBrushExtent","exit","nodesEnter","labelEnter","payoffEnter","indicatorEnter","aggregatedPayoffEnter","probabilityToEnterEnter","nodesMerge","merge","isOptimal","nodesMergeT","drawNodeSymbol","nodeLabelPosition","labelMergeT","updateTextLines","payoffTspans","item","payoffTspansM","attachPayoffTooltip","payoffT","nodePayoffPosition","aggregatedPayoffTspans","aggregatedPayoffTspansM","aggregatedPayoffT","nodeAggregatedPayoffPosition","attach","probabilityToEnterT","nodeProbabilityToEnterPosition","indicator","nodeIndicatorPosition","nodeContextMenu","cancelDrag","button","nodeUnfoldButtonPosition","payoffFiledName","number","lines","reverse","tspans","edgesContainer","edges","edgesEnter","probabilityEnter","edgesMerge","edgesMergeT","edgeLineD","selectEdge","edgeLabelPosition","_","displayPayoff","payoffTextT","edgePayoffPosition","displayProbability","probabilityMerge","probabilityMergeT","edgeProbabilityPosition","raise","edgeContextMenu","POINTER_TOUCH","textsEnter","textsMerge","textsMergeT","replaceUrls","escapeHtml","textContextMenu","_this2","validationResults","validationResult","isValid","objectIdToError","errors","nodeSelection","getNodeD3SelectionById","tooltipHtml","getValidationMessage","initArrowMarker","brush","extent","brushContainer","hoveredEdge","mainGroupTranslation","offset","m","mgt","closest","cp","closestPoint","invert","mainContextMenu","getNewChildLocation","injectNode","getInjectedNodeLocation","removeNode","removeNodes","selectedTexts","getSelectedTexts","removeTexts","notClearPrevSelection","cloneSubtree","copyNode","selectedRoots","findSubtreeRoots","copyNodes","_this3","_this4","nodesToAttach","toAttach","attached","attachSubtree","getAllDescendantNodes","_this5","perform","getAllDescendantEdges","_this6","updateVisibility","getNodeD3Selection","getTextD3SelectionById","_this7","visibleOnly","selectedVisible","allSelected","_toConsumableArray","descendants","_this8","clearSelectionBeforeSelect","skipCallback","_this9","titleValue","titleContainer","marginTop","descriptionValue","withMargins","h","version","scripts","test","repository","author","license","bugs","homepage","browserify","presets","plugins","spec","globals","devDependencies","babel-plugin-transform-builtin-extend","babel-plugin-transform-class-properties","babel-plugin-transform-es2015-spread","babel-plugin-transform-object-assign","babel-plugin-transform-object-rest-spread","babel-preset-es2015","babelify","browser-sync","browserify-resolutions","browserify-shim","chalk","del","es6-set","gulp","gulp-concat","gulp-filelist","gulp-html2js","gulp-load-plugins","gulp-minify-css","gulp-plumber","gulp-rename","gulp-replace","gulp-sass","gulp-sourcemaps","gulp-strip-debug","gulp-template","gulp-uglify","gulp-util","jasmine","jasmine-jquery","karma","karma-browserify","karma-chrome-launcher","karma-intl-shim","karma-jasmine","merge-stream","odc-d3","run-sequence","stringify","svg2pdf.js","vinyl-buffer","vinyl-source-stream","yargs","dependencies","autosize","blueimp-canvas-to-blob","d3-array","d3-dispatch","d3-drag","d3-scale","d3-selection","d3-time-format","file-saver","hammerjs","i18next","jquery","jquery-ui","pivottable","sd-computations","sd-model","sd-utils","sd-tree-designer","_interopRequireWildcard","_sdTreeDesigner","_TdUtils","getBoundingClientRect","form","mergeDeep","body","submit","removeElement","popup","model","_sidebar","_toolbar","_settingsDialog","_aboutDialog","_exporter","_definitionsDialog","_sdComputations","_sensitivityAnalysisDialog","_loadingIndicator","_leagueTableDialog","buildConfig","AppConfig","logLevel","workerUrl","jobRepositoryType","clearRepository","buttons","showDetails","showDefinitions","jsonFileDownload","rule","format","leagueTable","diagramData","viewModes","payoffsMaximization","Promise","resolve","initViewModes","initDataModel","initComputationsManager","initProbabilityNumberFormat","initPayoffNumberFormat","initTreeDesigner","initSidebar","initSettingsDialog","initAboutDialog","initDefinitionsDialog","initSensitivityAnalysisDialog","initLeagueTableDialog","initOnBeforeUnload","initKeyCodes","then","initToolbar","openDiagram","updateView","catch","setLogLevel","setLevel","buildTimestamp","DataModel","nodeAddedCallback","nodeRemovedCallback","onNodeAddedOrRemoved","textAddedCallback","onTextAdded","textRemovedCallback","onTextRemoved","computationsManager","ComputationsManager","ruleName","expressionEngine","checkValidityAndRecomputeObjective","sidebar","Sidebar","settingsDialog","SettingsDialog","aboutDialog","AboutDialog","definitionsDialog","DefinitionsDialog","onClosed","recompute","leagueTableDialog","LeagueTableDialog","isMultipleCriteria","validateParams","sensitivityAnalysisDialog","SensitivityAnalysisDialog","getGlobalVariableNames","toolbar","Toolbar","payoffNumberFormat","Intl","NumberFormat","locales","payoff1","payoff2","probabilityNumberFormat","getTreeDesignerInitialConfig","container2","onObjectSelected","prefix","currentViewMode","multiCriteria","charAt","payoffIndex","selectedObject","updateObjectPropertiesView","updateVariableDefinitions","hideObjectProperties","Node","Edge","definitionsSourceObject","getCurrentVariableDefinitionsSourceObject","updateDefinitions","updateLayoutOptions","updateDiagramDetails","updateMultipleCriteria","undo","findById","fieldName","evalCode","evalNumeric","getCurrentRule","setCurrentRuleByName","currentRule","payoffCoeffs","maximization","tmp","flipCriteria","getObjectiveRules","setViewMode","objectiveRulesManager","setPayoffIndex","rules","newRule","_this10","every","setObjectiveRule","isSensitivityAnalysisAvailable","dataDTO","originalDataModelSnapshot","createStateSnapshot","loadFromDTO","getJsonReviver","updateDisplayValues","svgString","Exporter","getSVGString","showFullScreenPopup","_setNewState","policy","displayPolicy","debounce","forceWhenAutoIsDisabled","debouncedRecompute","_this11","isAutoRecalculationEnabled","allRules","_this13","setDiagramTitle","setDiagramDescription","JSON","parse","dataModelObject","isValidVersionString","compareVersionNumbers","expressionScope","trees","isRuleName","viewMode","setViewModeByName","setDefaultViewModeForRule","getObjectiveRuleByName","load","sensitivityAnalysis","loadSavedParamValues","updateNumberFormats","filterLocation","filterComputed","filterPrivate","isoFormat","Date","serialize","_this15","jobNameToParamValues","getJsonReplacer","json","_this16","blob","Blob","saveAs","getExportFileName","addEventListener","isUndoAvailable","isRedoAvailable","dialogText","returnValue","prevValue","setConfigParam","_this17","updateDiagramTitle","_this18","updateDiagramDescription","srcElement","nodeName","toUpperCase","keyCode","ctrlKey","altKey","_this19","selectedNode","_selectedNode","utils","appUtils","global$","getGlobalObject","widget","wrapper","addClass","insertAfter","_createAutocomplete","_createShowAllButton","children","input","appendTo","autocomplete","proxy","_on","ui","option","_trigger","inputD3","dispatchHtmlEvent","wasOpen","is","trigger","request","matcher","RegExp","escapeRegex","term","Autocomplete","combobox","_dialog","_Dialog","app","definitionsScopeLabel","definitionsCode","updateInputClass","changeCallback","recalculateButton","variableValuesContainer","elasticTextarea","isVisible","scopeType","labelSuffix","autoResizeTextarea","$codeError","printError","printVariables","scope","scopeVariables","getVariablesAsList","Dialog","close","shrink","fullScreen","onResized","setFullScreen","_jobParametersBuilder","_sensitivityAnalysisResultTable","_probabilisticSensitivityAnalysisResultTable","_policy","_tornadoDiagramPlot","_spiderPlot","jobConfigurations","jobConfigurationContainer","parameterBuilderContainer","jobParametersBuilder","JobParametersBuilder","onJobParametersChanged","progressBarContainer","progressBar","jobResultsContainer","jobResultPlotContainer","debouncedCheckWarnings","checkWarnings","initButtons","initJobConfigurations","jobSelect","initJobSelect","payoffConf","cloneDeep","useGrouping","jobInstanceManager","terminate","jobConfig","clearWarnings","selectedJobConfig","jobName","job","getJobByName","jobParamsValues","setJobParamsValues","deleteId","refreshSelectedJobConfig","jobParameters","createJobParameters","setJobParameters","customParamsConfig","ExpressionEngine","customVariablesValidator","isValidArray","names","isVariableInGlobalScope","valid","largeScenariosNumberWarning","reduce","variable","toFloat","divide","subtract","isValidNameArray","randomMenuList","warnings","warnConf","check","addWarning","msg","msgHTML","guid","onJobSelected","rows","indexes","onResultRowSelected","resultTable","setClassName","SensitivityAnalysisJobResultTable","setData","ProbabilisticSensitivityAnalysisJobResultTable","disable","runJobButton","disableActionButtonsAndShowLoadingIndicator","runJobWithInstanceManager","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","resumeJobButton","resume","stopJobButton","stop","terminateJobButton","terminateJob","backButton","downloadCsvButtons","downloadCSV","clearButton","clearParams","clearAllParams","clearResults","setProgress","markAsError","forOwn","globalVariableNames","paramValues","resultPlots","destroy","progress","displayResult","debug","initResultTable","initResultPlots","initTornadoResultPlots","initSpiderResultPlots","policies","plot","maxWidth","resultPlot","TornadoDiagramPlot","SpiderPlot","errorMessage","msgKey","percents","current","total","policyIndexes","policyIndex","Policy","toPolicyString","row","variableNames","showPolicyPreview","saveAsCSV","getRows","params","extendedPolicyDescription","jobResultToCsvRows","_inputField","_pathValueAccessor","formGroups","FormGroup","addField","addSelectField","fontWeightOptions","fontStyleOptions","payoffGroup","updatePayoffNumberFormat","currency","minimumFractionDigits","maximumFractionDigits","payoff2Group","updateProbabilityNumberFormat","nodeGroup","addGroup","edgeGroup","titleGroup","leagueTableGroup","otherGroup","onRawOptionChanged","initView","temp","formGroupsEnter","formGroupsMerge","inputGroups","fields","checked","validator","valueAccessor","valueUpdateCallback","pristineVal","initFormGroups","groups","fieldConfig","_addField","fieldId","configInputField","ConfigInputField","_InputField","sourceObject","PathValueAccessor","_blueimpCanvasToBlob","_fileSaver","svgNode","appendInlineStyles","source","parentCs","targetChildren","tagName","cssStyleText","cs","propertyValue","exportedStyles","svgProperties","setAttribute","removeAttribute","toRemove","_i","svgClone","cloneNode","removeIds","getSvgCloneWithInlineStyles","serializeSvgNode","sanitizeSVG","XMLSerializer","serializeToString","DOMParser","parseFromString","documentElement","imgsrc","encodeURIComponent","canvas","getContext","image","Image","drawImage","toBlob","filesize","round","ext","timeFormat","clientSide","png","fallback","serverSide","detectIE","pngWidth","pngHeight","svgString2Image","dataBlob","warn","info","exportPngServerSide","serverUrl","doc","jsPDF","dummy","firstChild","save","filename","successCallback","failCallback","setRequestHeader","getResponseHeader","onreadystatechange","oEvent","readyState","postAndSave","noDownload","LoadingIndicator","clientSidePdfExportAvailable","isClientSidePdfExportAvailable","pdf","svgElement","exportPdfClientSide","exportPdfServerSide","svg2pdf","sanitized","csvRows","escapeCsvField","join","csvString","field","dataURLtoBlob","FileLoader","getElementById","onchange","file","FileReader","files","readAsText","click","InputField","parser","styleClass","newDiagram","saveDiagram","export","manual","criterion1","criterion2","twoCriteria","objectiveRule","expected-value-maximization","expected-value-minimization","maxi-min","maxi-max","mini-min","mini-max","min-max","max-min","min-min","max-max","settings","about","downloadCsv","headers","policyNo","comment","dominatedBy","extendedDominatedBy","incratio","highlighted","highlighted-default","extended-dominated","dominated","gradientArrow1","gradientArrow2","dominatedRegion","legend","gradientArrows","runJob","stopJob","resumeJob","back","removeParameterValue","addParameterValue","jobResultTable","multiplePoliciesInCell","aggregators","maximum","minimum","renderers","heatmap","policyPreview","sensitivity-analysis","param","step","computations","largeScenariosNumber","largeParametersNumber","tornado-diagram","defaultValue","low","high","xAxisTitle","probabilistic-sensitivity-analysis","numberOfRuns","formula","help","param-computation","spider-plot","percentageChangeRange","yAxisTitle","league-table","generic","general","numberFormatLocale","currencyDisplay","highlightedColor","highlightedDefaultColor","extendedDominatedColor","dominatedColor","defaultColor","other","header","2","3","keyboard","4","5","6","docs","recalculate","evaluatedVariables","sidebarDefinitions","openDialog","multipleCriteria","defaultMaximizedCriterionName","defaultMinimizedCriterionName","nameOfCriterion1","nameOfCriterion2","defaultCriterion1Weight","weightLowerBound","weightUpperBound","showLeagueTable","flip","layoutOptions","marginHorizontal","marginVertical","diagramDetails","objectProperties","childrenProperties","child","confirm","beforeunload","jsonParse","fileApiNotSupported","inputFilesProperty","notSilverDecisionsFile","incorrectVersionFormat","fileVersionNewerThanApplicationVersion","objectiveComputationFailure","diagramDrawingFailure","malformedData","pngExportNotSupported","pngExportNotSupportedIE","svgExportNotSupported","pdfExportNotSupported","incorrectPayoffNumberFormatOptions","incorrectProbabilityNumberFormatOptions","incorrectNumberFormatOptions","jsPDFisNotIncluded","serverSideExportRequestFailure","_app","_package","_jobParameterDefinition","_autocomplete","i18nPrefix","onChange","paramTypeToInputType","paramTypeToInputAttrs","PARAMETER_TYPE","BOOLEAN","DATE","INTEGER","NUMBER","STRING","clean","build","definitions","pristine","customValidators","strictValidation","checkCustomValidators","enabled","jobParameterDefinitions","parentValueObject","parentPath","onInput","paramsEnter","paramSelection","repeating","maxOccurs","vi","minOccurs","getEmptyValue","getParamNameI18n","valuesContainer","addButton","callbacks","onValueRemoved","buildParameterValues","buildParameterSingleValue","paramDefinition","checkCustomValidator","allValid","customValidator","indexToSelection","validateSingleValue","paramValuesEnter","paramValuesMerge","updateDerivedValues","updater","derivedValueUpdaters","COMPOSITE","nestedParameters","derivedValuesConfigs","derivedValueConfig","buildDerivedValue","removeButton","inputId","paramValue","getParamHelpI18n","helpContainer","inputType","additionalInputAttrs","concat","getInput","parseInput","_value","parameterType","parseFloat","_pivotTable","JobResultTableConfig","onRowSelected","className","JobResultTable","pivotTable","PivotTable","filters","pivotData","selectedIndexes","selectedRows","forEachMatchingRecord","record","pivotOptions","pivotUtilities","derivers","vals","cols","getAggregatorName","clickCallback","scaleLinear","range","getRendererName","aggregatorName","_jobResultTable","_JobResultTable","jobResult","expectedValues","medians","standardDeviations","policyIsBestProbabilities","trace","attributeArray","rowKey","colKey","roundVariables","csvDAta","totalInColNum","_totalInColNum","_lineChart","SpiderPlotConfig","_LineChartConfig","showLegend","guides","series","dotRadius","_LineChart","placeholderSelector","percentageRangeValues","rangeVal","payoffs","baseContainer","_divergingStackedBarChart","TornadoDiagramPlotConfig","_DivergingStackedBarC","forceLegend","categoryNames","colorRange","middleValue","showBarValues","_DivergingStackedBarC2","defaultPayoff","varExtent","variableExtents","extents","extentVariableValues","_leagueTable","_leagueTablePlot","emphasize","LeagueTable","defaultWeight","groupConf","optimalForDefaultWeight","groupKey","LeagueTablePlot","initJobParams","initResultPlot","_scatterplot","LeagueTablePlotConfig","_ScatterPlotConfig","gradientArrowLength","gradientArrowOffset","emphasizedDotRadius","dotId","_ScatterPlot","checkOrdering","groupOrdering","getOrdering","newData","updateIcerLines","updateDominatedRegion","updateGradientArrows","updateDotLabels","linesContainerSelector","linesContainerClass","prefixClass","linesContainer","svgG","dotsContainerClass","clipPathId","highlightedPoints","groupValue","highlightedDefaultPoints","dominatedRegionPoints","minPoint","maxPoint","lowPoint","highPoint","xAxisExtent","infLowY","infLowPoint","infHighPoint","_x","defaultPoint","defLowPoint","defHighPoint","_x2","unshift","dominatedRegionContainerSelector","dominatedRegionContainer","worstPoint","prev","curr","area","y0","labelsContainerSelector","labels","coeff","x1","x2","y2","y1","arrowsContainerSelector","arrowsContainer","arrowClass","arrows","arrowsEnter","arrowsMerge","_emphasize","emphasizeDot","dotClass","legendCells","getTextData","word","words","lineNumber","tspan","pop","LeagueTableConfig","onRowHover","onRowHoverOut","resultTableHead","resultTableBody","resultTableFoot","drawHeaders","drawRows","headerData","headersMerge","rowsData","getRowComment","rowsMerge","cells","cellsMerge","rowspan","policy1","policy2","revertAggregators","origAggregator","origAggregators","numberFormat","showZero","args1","res1","res","format_","origX","pivotUI","toLowerCase","_payoffInputValidator","_probabilityInputValidator","_requiredInputValidator","_mcdmWeightValueValidator","dispatch","initLayoutOptions","initDiagramDetails","initDefinitions","initMultipleCriteria","onObjectUpdated","onMultiCriteriaUpdated","layoutOptionsContainer","autoLayoutOptionsGroup","diagramDetailsContainer","definitionsContainer","onDefinitionsCodeChanged","definitionsEvaluatedValuesContainer","openDefinitionsDialog","multipleCriteriaContainer","showLeagueTableButton","flipCriteriaButton","weightParser","multipleCriteriaFields","RequiredInputValidator","lowerBoundValueAccessor","upperBoundValueAccessor","weightValueValidator","McdmWeightValueValidator","upper","compare","lower","updateInputs","leagueTableAvailable","isLeagueTableAvailable","getValue","saveStateFromSnapshot","pristineStateSnapshot","setValue","objectProps","headerText","getHeaderTextForObject","fieldList","getFieldListForObject","updateObjectFields","updateObjectChildrenProperties","childObjects","getChildObjectList","objectType","getObjectType","childPropsSelector","ObjectInputField","PayoffInputValidator","ProbabilityInputValidator","fieldsMerge","fieldSelection","setSyntaxValidity","isFieldValid","customOnInput","checkFieldStatus","_TdTemplates","about_de","about_en","about_fr","about_it","about_pl","diagramDetailsBox","settingsDialogFormGroup","inputGroup","selectInputGroup","jobParameter","loadingIndicator","fullscreenPopup","warningMessage","_fileLoader","hiddenClass","initDiagramButtons","initExportToolbarGroup","initLayoutButtons","initUndoRedoButtons","initSettingsButton","initAboutButton","initSensitivityAnalysisButton","initRecomputeButton","initViewModeToolbarGroup","initObjectiveRuleToolbarGroup","newDiagramButton","new","openDiagramButton","openFile","saveDiagramButton","saveToFile","onLayoutChanged","layoutButtons","disableAutoLayout","updateLayoutButtons","settingsButton","aboutButton","recomputeButton","sensitivityAnalysisButton","openSensitivityAnalysis","undoRedoStateChangedCallback","onUndoRedoChanged","undoButton","redoButton","updateUndoRedoButtons","updateSensitivityAnalysisButton","updateViewModeValue","updateObjectiveRuleOptions","updateObjectiveRuleValue","initExportToPngButton","initExportSvgButton","initExportPdfButton","saveAsPng","exportToPng","saveAsSvg","exportToSvg","saveAsPdf","exportToPdf","objectiveRuleSelect","getCurrentObjectiveRule","viewModeSelect","getViewModes","getCurrentViewMode","NumberInputValidator","isNumber","hasAssignmentExpression","isHash"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar copy             = require('es5-ext/object/copy')\n  , normalizeOptions = require('es5-ext/object/normalize-options')\n  , ensureCallable   = require('es5-ext/object/valid-callable')\n  , map              = require('es5-ext/object/map')\n  , callable         = require('es5-ext/object/valid-callable')\n  , validValue       = require('es5-ext/object/valid-value')\n\n  , bind = Function.prototype.bind, defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = validValue(desc) && callable(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (options.resolveContext != null) ensureCallable(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement /*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Array.from\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === \"dwa\"));\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity\nmodule.exports = function (arrayLike /*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(length = arrayLike.length);\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call(\n\t(function () {\n\t\treturn arguments;\n\t})()\n);\n\nmodule.exports = function (value) {\n\treturn objToString.call(value) === id;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(require(\"./noop\"));\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && objToString.call(value) === id;\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","/* eslint strict: \"off\" */\n\nmodule.exports = (function () {\n\treturn this;\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Math.sign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn (sign(10) === 1) && (sign(-20) === -1);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Number.isNaN\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar numberIsNaN = Number.isNaN;\n\tif (typeof numberIsNaN !== \"function\") return false;\n\treturn !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\t// eslint-disable-next-line no-self-compare\n\treturn value !== value;\n};\n","\"use strict\";\n\nvar sign = require(\"../math/sign\")\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n\n  , max = Math.max;\n\nmodule.exports = function (value) {\n return max(0, toInteger(value));\n};\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb /*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.assign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn (obj.foo + obj.bar + obj.trzy) === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src /*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: true,\n\t\tvalue: undefined\n\t};\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","// Deprecated\n\n\"use strict\";\n\nmodule.exports = function (obj) {\n return typeof obj === \"function\";\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) {\n\treturn (isValue(value) && map[typeof value]) || false;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) {\n return (val !== _undefined) && (val !== null);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.keys\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n return false;\n}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(isValue(object) ? Object(object) : object);\n};\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb /*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1 /*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.setPrototypeOf\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject        = require(\"../is-object\")\n  , value           = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty  = Object.defineProperty\n  , nullDesc        = {\n\tconfigurable: true,\n\tenumerable: false,\n\twritable: true,\n\tvalue: undefined\n}\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n}(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n));\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? String.prototype.contains\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn (str.contains(\"dwa\") === true) && (str.contains(\"foo\") === false);\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","'use strict';\n\nif (!require('./is-implemented')()) {\n\tObject.defineProperty(require('es5-ext/global'), 'Set',\n\t\t{ value: require('./polyfill'), configurable: true, enumerable: false,\n\t\t\twritable: true });\n}\n","'use strict';\n\nmodule.exports = function () {\n\tvar set, iterator, result;\n\tif (typeof Set !== 'function') return false;\n\tset = new Set(['raz', 'dwa', 'trzy']);\n\tif (String(set) !== '[object Set]') return false;\n\tif (set.size !== 3) return false;\n\tif (typeof set.add !== 'function') return false;\n\tif (typeof set.clear !== 'function') return false;\n\tif (typeof set.delete !== 'function') return false;\n\tif (typeof set.entries !== 'function') return false;\n\tif (typeof set.forEach !== 'function') return false;\n\tif (typeof set.has !== 'function') return false;\n\tif (typeof set.keys !== 'function') return false;\n\tif (typeof set.values !== 'function') return false;\n\n\titerator = set.values();\n\tresult = iterator.next();\n\tif (result.done !== false) return false;\n\tif (result.value !== 'raz') return false;\n\n\treturn true;\n};\n","// Exports true if environment provides native `Set` implementation,\n// whatever that is.\n\n'use strict';\n\nmodule.exports = (function () {\n\tif (typeof Set === 'undefined') return false;\n\treturn (Object.prototype.toString.call(Set.prototype) === '[object Set]');\n}());\n","'use strict';\n\nvar setPrototypeOf    = require('es5-ext/object/set-prototype-of')\n  , contains          = require('es5-ext/string/#/contains')\n  , d                 = require('d')\n  , Iterator          = require('es6-iterator')\n  , toStringTagSymbol = require('es6-symbol').toStringTag\n\n  , defineProperty = Object.defineProperty\n  , SetIterator;\n\nSetIterator = module.exports = function (set, kind) {\n\tif (!(this instanceof SetIterator)) return new SetIterator(set, kind);\n\tIterator.call(this, set.__setData__, set);\n\tif (!kind) kind = 'value';\n\telse if (contains.call(kind, 'key+value')) kind = 'key+value';\n\telse kind = 'value';\n\tdefineProperty(this, '__kind__', d('', kind));\n};\nif (setPrototypeOf) setPrototypeOf(SetIterator, Iterator);\n\nSetIterator.prototype = Object.create(Iterator.prototype, {\n\tconstructor: d(SetIterator),\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === 'value') return this.__list__[i];\n\t\treturn [this.__list__[i], this.__list__[i]];\n\t}),\n\ttoString: d(function () { return '[object Set Iterator]'; })\n});\ndefineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));\n","'use strict';\n\nvar clear          = require('es5-ext/array/#/clear')\n  , eIndexOf       = require('es5-ext/array/#/e-index-of')\n  , setPrototypeOf = require('es5-ext/object/set-prototype-of')\n  , callable       = require('es5-ext/object/valid-callable')\n  , d              = require('d')\n  , ee             = require('event-emitter')\n  , Symbol         = require('es6-symbol')\n  , iterator       = require('es6-iterator/valid-iterable')\n  , forOf          = require('es6-iterator/for-of')\n  , Iterator       = require('./lib/iterator')\n  , isNative       = require('./is-native-implemented')\n\n  , call = Function.prototype.call\n  , defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf\n  , SetPoly, getValues, NativeSet;\n\nif (isNative) NativeSet = Set;\n\nmodule.exports = SetPoly = function Set(/*iterable*/) {\n\tvar iterable = arguments[0], self;\n\tif (!(this instanceof SetPoly)) throw new TypeError('Constructor requires \\'new\\'');\n\tif (isNative && setPrototypeOf) self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));\n\telse self = this;\n\tif (iterable != null) iterator(iterable);\n\tdefineProperty(self, '__setData__', d('c', []));\n\tif (!iterable) return self;\n\tforOf(iterable, function (value) {\n\t\tif (eIndexOf.call(this, value) !== -1) return;\n\t\tthis.push(value);\n\t}, self.__setData__);\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(SetPoly, NativeSet);\n\tSetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });\n}\n\nee(Object.defineProperties(SetPoly.prototype, {\n\tadd: d(function (value) {\n\t\tif (this.has(value)) return this;\n\t\tthis.emit('_add', this.__setData__.push(value) - 1, value);\n\t\treturn this;\n\t}),\n\tclear: d(function () {\n\t\tif (!this.__setData__.length) return;\n\t\tclear.call(this.__setData__);\n\t\tthis.emit('_clear');\n\t}),\n\tdelete: d(function (value) {\n\t\tvar index = eIndexOf.call(this.__setData__, value);\n\t\tif (index === -1) return false;\n\t\tthis.__setData__.splice(index, 1);\n\t\tthis.emit('_delete', index, value);\n\t\treturn true;\n\t}),\n\tentries: d(function () { return new Iterator(this, 'key+value'); }),\n\tforEach: d(function (cb/*, thisArg*/) {\n\t\tvar thisArg = arguments[1], iterator, result, value;\n\t\tcallable(cb);\n\t\titerator = this.values();\n\t\tresult = iterator._next();\n\t\twhile (result !== undefined) {\n\t\t\tvalue = iterator._resolve(result);\n\t\t\tcall.call(cb, thisArg, value, value, this);\n\t\t\tresult = iterator._next();\n\t\t}\n\t}),\n\thas: d(function (value) {\n\t\treturn (eIndexOf.call(this.__setData__, value) !== -1);\n\t}),\n\tkeys: d(getValues = function () { return this.values(); }),\n\tsize: d.gs(function () { return this.__setData__.length; }),\n\tvalues: d(function () { return new Iterator(this); }),\n\ttoString: d(function () { return '[object Set]'; })\n}));\ndefineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));\ndefineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));\n","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","/*!\n * jQuery UI :data 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.extend( $.expr[ \":\" ], {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} ) );\n","export * from './src/index'\n","import * as d3 from \"./d3\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\n\nexport class AppUtils {\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, AppUtils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, AppUtils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width) {\n        var textObj = textD3Obj.node();\n        textObj.textContent = textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength() > width + margin) {\n            for (var x = textString.length - 3; x > 0; x -= 1) {\n                if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                    textObj.textContent = textString.substring(0, x) + \"...\";\n                    return true;\n                }\n            }\n            textObj.textContent = \"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n        var ellipsisPlaced = AppUtils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if (ellipsisPlaced && tooltip) {\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element) {\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static getTranslation(transform) {\n        // Create a dummy g for calculation purposes only. This will never\n        // be appended to the DOM and will be discarded once this function\n        // returns.\n        var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        // Set the transform attribute to the provided string value.\n        g.setAttributeNS(null, \"transform\", transform);\n\n        // consolidate the SVGTransformList containing all transformations\n        // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n        // its SVGMatrix.\n        var matrix = g.transform.baseVal.consolidate().matrix;\n\n        // As per definition values e and f are the ones for the translation.\n        return [matrix.e, matrix.f];\n    }\n\n\n    static closestPoint(pathNode, point) {\n        var pathLength = pathNode.getTotalLength(),\n            precision = 8,\n            best,\n            bestLength,\n            bestDistance = Infinity;\n\n        // linear scan for coarse approximation\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n                best = scan, bestLength = scanLength, bestDistance = scanDistance;\n            }\n        }\n\n        // binary search for precise estimate\n        precision /= 2;\n        while (precision > 0.5) {\n            var before,\n                after,\n                beforeLength,\n                afterLength,\n                beforeDistance,\n                afterDistance;\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n                best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n                best = after, bestLength = afterLength, bestDistance = afterDistance;\n            } else {\n                precision /= 2;\n            }\n        }\n\n        best = [best.x, best.y];\n        best.distance = Math.sqrt(bestDistance);\n        return best;\n\n        function distance2(p) {\n            var dx = p.x - point[0],\n                dy = p.y - point[1];\n            return dx * dx + dy * dy;\n        }\n    }\n\n    static growl(message, type='info', position='right', time = 2000){\n        var html = Templates.get('growl', {message:message, type:type})\n\n        var g = d3.select('body').selectOrAppend('div.sd-growl-list.'+position).append('div').html(html);\n        setTimeout(function(){\n            g.remove();\n        }, time)\n    }\n\n\n    static createElement(tag, attribs, parent) {\n        var el = document.createElement(tag);\n\n        if (attribs) {\n            AppUtils.deepExtend(el, attribs);\n        }\n        if (parent) {\n            parent.appendChild(el);\n        }\n        return el;\n    };\n\n    static removeElement(element) {\n        element.parentNode.removeChild(element);\n    }\n\n    static replaceUrls(text){\n        if(!text){\n            return text;\n        }\n        var urlRegexp = /((ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/\n\n        return text.replace(urlRegexp, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n\n    static escapeHtml(html)\n    {\n        var text = document.createTextNode(html);\n        var div = document.createElement('div');\n        div.appendChild(text);\n        return div.innerHTML;\n    }\n\n    static dispatchHtmlEvent(element, name){\n        if (\"createEvent\" in document) {\n            var evt = document.createEvent(\"HTMLEvents\");\n            evt.initEvent(name, false, true);\n            element.dispatchEvent(evt);\n        }\n        else\n            element.fireEvent(\"on\"+name);\n    }\n\n    static dispatchEvent(name, data){\n        var event;\n        try{\n            event = new  CustomEvent(name,{ 'detail': data });\n        }catch (e){ //IE\n            event = document.createEvent('CustomEvent');\n            event.initCustomEvent(name, false, false, data);\n        }\n        document.dispatchEvent(event);\n    }\n\n    static getValidationMessage(error){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var key = 'validation.' + error.name;\n        return i18n.t(key, error.data);\n    }\n\n    static hide(selection){\n        selection.classed('sd-hidden', true);\n    }\n\n    static show(selection, show=true){\n        selection.classed('sd-hidden', !show);\n    }\n\n\n\n    static isHidden(el, exact = true) {\n        if(!el){\n            return true;\n        }\n        if(exact){\n            var style = window.getComputedStyle(el);\n            return (style.display === 'none')\n        }\n        return (el.offsetParent === null)\n    }\n\n    static getJSON(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('get', url, true);\n        xhr.responseType = 'json';\n        xhr.onload = function () {\n            var status = xhr.status;\n            if (status == 200) {\n                callback(xhr.response, null);\n            } else {\n                callback(null, status);\n            }\n        };\n        xhr.send();\n    }\n}\n","import * as d3 from '../d3'\n\n/*based on:\n * github.com/patorjk/d3-context-menu */\n\nexport class ContextMenu {\n    openCallback;\n    closeCallback;\n\n    constructor(menu, opts) {\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1])\n            .enter()\n            .append('div')\n            .attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu')\n                .on('contextmenu', function (d) {\n                    d3.select('.d3-context-menu').style('display', 'none');\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                })\n                .append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n                .append('li')\n                .attr('class', function (d) {\n                    var ret = '';\n                    if (d.divider) {\n                        ret += ' is-divider';\n                    }\n                    if (d.disabled) {\n                        ret += ' is-disabled';\n                    }\n                    if (!d.action) {\n                        ret += ' is-header';\n                    }\n                    return ret;\n                })\n                .html(function (d) {\n                    if (d.divider) {\n                        return '<hr>';\n                    }\n                    if (!d.title) {\n                        console.error('No title attribute set. Check the spelling of your options.');\n                    }\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\n                })\n                .on('click', function (d, i) {\n                    if (d.disabled) return; // do nothing if disabled\n                    if (!d.action) return; // headers have no \"action\"\n                    d.action(elm, data, index);\n                    d3.select('.d3-context-menu').style('display', 'none');\n\n                    if (self.closeCallback) {\n                        self.closeCallback();\n                    }\n                });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu')\n                .style('left', (d3.event.pageX - 2) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n                .style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    };\n\n    static hide() {\n        d3.select('.d3-context-menu').style('display', 'none');\n    }\n\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class EdgeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n            var menu = [];\n\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectDecisionNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectDecisionNode(d)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectChanceNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectChanceNode(d)\n                }\n            });\n\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport * as d3 from '../d3'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class MainContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var mousePosition = null;\n        var menu = function (d) {\n\n            var menu = [];\n            menu.push({\n                title: i18n.t('contextMenu.main.addDecisionNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.DecisionNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.main.addChanceNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.ChanceNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.addText'),\n                action: function (elm, d, i) {\n                    var newText = new model.Text(mousePosition);\n                    treeDesigner.addText(newText);\n                },\n\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNewLocation(mousePosition);\n                },\n                disabled: !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            });\n            menu.push({divider: true});\n\n            menu.push({\n                title: i18n.t('contextMenu.main.selectAllNodes'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectAllNodes();\n                }\n            });\n            return menu;\n        };\n\n        super(menu, {onOpen: () => {\n            treeDesigner.clearSelection();\n            mousePosition = new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true));\n\n        }});\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class NodeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner, operationsForObject) {\n        var menu = function (d) {\n\n            var copyMenuItem = {\n                title: i18n.t('contextMenu.node.copy'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.copySelectedNodes();\n                }\n            };\n            var cutMenuItem = {\n                title: i18n.t('contextMenu.node.cut'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.cutSelectedNodes();\n                }\n            };\n            var pasteMenuItem = {\n                title: i18n.t('contextMenu.node.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNode(d);\n                },\n                disabled: d.folded || !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            };\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.node.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.removeSelectedNodes();\n\n                }\n            };\n\n            var menu = [];\n            if (d.type == model.TerminalNode.$TYPE) {\n                menu = [copyMenuItem, cutMenuItem, deleteMenuItem];\n                NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n                return menu;\n            }\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.addDecisionNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addDecisionNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addChanceNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addChanceNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addTerminalNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addTerminalNode(d)\n                    }\n                });\n                menu.push({divider: true});\n            }\n\n            menu.push(copyMenuItem);\n            menu.push(cutMenuItem);\n            menu.push(pasteMenuItem);\n            menu.push(deleteMenuItem);\n\n            NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.node.selectSubtree'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectSubTree(d, true);\n                }\n            });\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.fold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d);\n                    }\n                });\n            }else{\n                menu.push({\n                    title: i18n.t('contextMenu.node.unfold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d, false);\n                    }\n                });\n            }\n\n            if(operationsForObject){\n                var operations = operationsForObject(d);\n                if(operations.length) {\n                    menu.push({divider: true});\n                    operations.forEach(op=>{\n                        menu.push({\n                            title: i18n.t('contextMenu.node.'+op.name),\n                            action: function (elm, d, i) {\n                                treeDesigner.performOperation(d, op);\n                            },\n                            disabled: !op.canPerform(d)\n                        });\n                    })\n                }\n            }\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n\n    static addNodeConversionOptions(d, menu, treeDesigner){\n        var conversionOptions = NodeContextMenu.getNodeConversionOptions(d, treeDesigner);\n        if(conversionOptions.length){\n            menu.push({divider: true});\n            conversionOptions.forEach(o=>menu.push(o));\n\n        }\n    }\n\n    static getNodeConversionOptions(d, treeDesigner){\n        var options = [];\n\n        if(d.folded){\n            return [];\n        }\n\n        var allAllowedTypes = [model.DecisionNode.$TYPE, model.ChanceNode.$TYPE, model.TerminalNode.$TYPE];\n\n        if(!d.childEdges.length && d.$parent){\n            allAllowedTypes.filter(t=>t!==d.type).forEach(type=>{\n                options.push(NodeContextMenu.getNodeConversionOption(type, treeDesigner))\n            })\n        }else{\n            if(d instanceof model.DecisionNode){\n                options.push(NodeContextMenu.getNodeConversionOption(model.ChanceNode.$TYPE, treeDesigner))\n            }else{\n                options.push(NodeContextMenu.getNodeConversionOption(model.DecisionNode.$TYPE, treeDesigner))\n            }\n        }\n        return options;\n    }\n\n    static getNodeConversionOption(typeToConvertTo, treeDesigner){\n        return {\n            title: i18n.t('contextMenu.node.convert.'+typeToConvertTo),\n            action: function (elm, d, i) {\n                treeDesigner.convertNode(d, typeToConvertTo);\n            },\n        }\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class TextContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.text.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectText(d, true, true);\n                    treeDesigner.removeSelectedTexts()\n\n                }\n            };\n            var menu = [];\n            menu.push(deleteMenuItem);\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addText\": \"Text hinzufügen \",\n            \"paste\": \"Einfügen\",\n            \"selectAllNodes\": \"Alle Knoten auswählen\"\n        },\n        \"node\":{\n            \"copy\": \"Kopieren\",\n            \"cut\": \"Ausschneiden\",\n            \"paste\": \"Einfügen\",\n            \"delete\": \"Löschen\",\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addTerminalNode\": \"Endknotten hinzufügen\",\n            \"convert\":{\n                \"decision\": \"Als Entscheidungsknoten\",\n                \"chance\": \"Als Zufall Knoten\",\n                \"terminal\": \"Als Endknoten\"\n            },\n            \"selectSubtree\": \"Teilbaum wählen\",\n            \"fold\": \"Teilbaum falten\",\n            \"unfold\": \"Teilbaum entfalten\",\n\t\t\t\n            \"flipSubtree\": \"Teilbaum umdrehen\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Entscheidungsknoten Injizieren\",\n            \"injectChanceNode\": \"Zufall Knoten Injizieren\"\n        },\n        \"text\":{\n            \"delete\": \"Löschen\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Pfad, der nicht mit dem Endknoten endet\",\n        \"probabilityDoNotSumUpTo1\": \"Die Summe der Wahrscheinlichkeiten ist nicht gleich 1\",\n        \"invalidProbability\": \"Ungültige Wahrscheinlichkeit im Zweig #{{number}}\",\n        \"invalidPayoff\": \"Ungültige Auszahlung in Zweig #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Auswahlbürste deaktiviert\",\n        \"brushEnabled\": \"Auswahlbürste aktiviert\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregierte Auszahlung {{number}}\",\n                \"named\": \"Aggregierte {{name}}\"\n            },\n            \"probabilityToEnter\": \"Wahrscheinlichkeit\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Wahrscheinlichkeit: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addText\": \"Add Text\",\n            \"paste\": \"Paste\",\n            \"selectAllNodes\": \"Select all nodes\"\n        },\n        \"node\":{\n            \"copy\": \"Copy\",\n            \"cut\": \"Cut\",\n            \"paste\": \"Paste\",\n            \"delete\": \"Delete\",\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addTerminalNode\": \"Add Terminal Node\",\n            \"convert\":{\n                \"decision\": \"As Decision Node\",\n                \"chance\": \"As Chance Node\",\n                \"terminal\": \"As Terminal Node\"\n            },\n            \"selectSubtree\": \"Select subtree\",\n            \"fold\": \"Fold subtree\",\n            \"unfold\": \"Unfold subtree\",\n            \"flipSubtree\": \"Flip subtree\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inject Decision Node\",\n            \"injectChanceNode\": \"Inject Chance Node\"\n        },\n        \"text\":{\n            \"delete\": \"Delete\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Path not ending with terminal node\",\n        \"probabilityDoNotSumUpTo1\": \"Probabilities do not sum up to 1\",\n        \"invalidProbability\": \"Invalid probability in edge #{{number}}\",\n        \"invalidPayoff\": \"Invalid payoff in edge #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selection brush disabled\",\n        \"brushEnabled\": \"Selection brush enabled\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregated Payoff {{number}}\",\n                \"named\": \"Aggregated {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probability to enter\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probability: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addText\": \"Ajouter du texte\",\n            \"paste\": \"Coller\",\n            \"selectAllNodes\": \"Sélectionner tous les nouds\"\n        },\n        \"node\":{\n            \"copy\": \"Copie\",\n            \"cut\": \"Couper\",\n            \"paste\": \"Coller\",\n            \"delete\": \"Effacer\",\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addTerminalNode\": \"Ajouter un noeud terminal\",\n            \"convert\":{\n                \"decision\": \"Comme noud de décision\",\n                \"chance\": \"Comme noud aléatoire\",\n                \"terminal\": \"Comme un noeud terminal\"\n            },\n            \"selectSubtree\": \"Sélectionner une sous-arborescence\",\n            \"fold\": \"Plier sous-arbre\",\n            \"unfold\": \"Déplier arbre sous-arbre\",\n            \"flipSubtree\": \"Basculer sous-arbre\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Injecter un noeud de décision\",\n            \"injectChanceNode\": \"Injecter un noeud de chance\"\n        },\n        \"text\":{\n            \"delete\": \"Effacer\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Parcours non terminé par noeud terminal\",\n        \"probabilityDoNotSumUpTo1\": \"La somme des probabilités n'est pas 1 ou plus\",\n        \"invalidProbability\": \"Probabilité invalide - le bord #{{number}}\",\n        \"invalidPayoff\": \"Avantage invalide - le bord #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Brosse de sélection désactivée\",\n        \"brushEnabled\": \"Brosse de sélection activée\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Avantage agrégé {{number}}\",\n                \"named\": \"Agrégé  {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilité d'entrée\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilité: {{value}}\"\n        }\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        let resources = {\n            en: {\n                translation: en\n            },\n            pl: {\n                translation: pl\n            },\n            it: {\n                translation: it\n            },\n            de: {\n                translation: de\n            },\n            fr: {\n                translation: fr\n            }\n        };\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: resources\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addText\": \"Aggiungi testo\",\n            \"paste\": \"Incolla\",\n            \"selectAllNodes\": \"Seleziona tutti i nodi\"\n        },\n        \"node\":{\n            \"copy\": \"Copia\",\n            \"cut\": \"Taglia\",\n            \"paste\": \"Incolla\",\n            \"delete\": \"Cancella\",\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addTerminalNode\": \"Aggiungi un nodo terminale\",\n            \"convert\":{\n                \"decision\": \"Come Decision Node\",\n                \"chance\": \"Come Chance Node\",\n                \"terminal\": \"Come Terminal Node\"\n            },\n            \"selectSubtree\": \"Seleziona Sotto-albero\",\n            \"fold\": \"Piega sotto-albero\",\n            \"unfold\": \"Dispiegarsi sotto-albero\",\t\t\t\n            \"flipSubtree\": \"Ribalta sotto-albero\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inietta nodo di decisione\",\n            \"injectChanceNode\": \"Inietta nodo opportunità\"\n        },\n        \"text\":{\n            \"delete\": \"Cancella\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Percorso senza nodo terminale\",\n        \"probabilityDoNotSumUpTo1\": \"La somma delle probabilità è diversa da 1\",\n        \"invalidProbability\": \"Probabilità non valida - bordo #{{number}}\",\n        \"invalidPayoff\": \"Saldo non valido - bordo #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selezione pennello disabilitata\",\n        \"brushEnabled\": \"Selezione pennello abilitata\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Saldo aggregato {{number}}\",\n                \"named\": \"Aggregato {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilità da inserire\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilità: {{value}}\"\n        }\n    }\n}\n","module.exports={\n\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addText\": \"Dodaj Tekst\",\n            \"paste\": \"Wklej\",\n            \"selectAllNodes\": \"Zaznacz wszystkie węzły\"\n        },\n        \"node\":{\n            \"copy\": \"Kopiuj\",\n            \"cut\": \"Wytnij\",\n            \"paste\": \"Wklej\",\n            \"delete\": \"Usuń\",\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addTerminalNode\": \"Dodaj Węzeł Końcowy\",\n            \"convert\":{\n                \"decision\": \"Jako Węzeł Decyzyjny\",\n                \"chance\": \"Jako Węzeł Losowy\",\n                \"terminal\": \"Jako Węzeł Końcowy\"\n            },\n            \"selectSubtree\": \"Zaznacz poddrzewo\",\n            \"fold\": \"Zwiń poddrzewo\",\n            \"unfold\": \"Rozwiń poddrzewo\",\n            \"flipSubtree\": \"Przewróć poddrzewo\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Wstrzyknij Węzeł Decyzyjny\",\n            \"injectChanceNode\": \"Wstrzyknij Węzeł Losowy\"\n        },\n        \"text\":{\n            \"delete\": \"Usuń\"\n        }\n    },\n\n    \"validation\":{\n        \"incompletePath\": \"Ostatnim węzłem w ścieżce powinien być Węzeł Końcowy\",\n        \"probabilityDoNotSumUpTo1\": \"Prawdopodobieństwa nie sumują sie do 1\",\n        \"invalidProbability\": \"Niepoprawne prawdopodobieństwo na krawędzi #{{number}}\",\n        \"invalidPayoff\": \"Niepoprawna wypłata na krawędzi #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Zaznaczanie wyłączone\",\n        \"brushEnabled\": \"Zaznaczanie włączone\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Zagregowana wypłata {{number}}\",\n                \"named\": \"Zagregowana {{name}}\"\n            },\n            \"probabilityToEnter\": \"Prawdopodobieństwo wejścia\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Prawdopodobieństwo: {{value}}\"\n        }\n    }\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport * from './tree-designer'\nexport * from './app-utils'\nexport * from './templates'\nexport * from './tooltip'\nexport * from './d3-extensions'\nexport {default as d3} from './d3'\n\n\n","import {Utils} from 'sd-utils'\nimport {domain as model} from 'sd-model'\nimport * as d3 from './d3'\nimport circleSymbol from './symbols/circle'\nimport triangleSymbol from './symbols/triangle'\nimport {AppUtils} from \"./app-utils\";\n\n/*Tree layout manager*/\nexport class Layout{\n\n    treeDesigner;\n    data;\n    config;\n\n    nodeTypeToSymbol = {\n        'decision': d3.symbolSquare,\n        'chance': circleSymbol,\n        \"terminal\": triangleSymbol\n    };\n\n    static MANUAL_LAYOUT_NAME = 'manual';\n\n\n    onAutoLayoutChanged=[];\n\n    nodeTypeOrder = {\n        'decision' : 0,\n        'chance': 0,\n        'terminal': 1\n    };\n\n    treeMargin = 50;\n    targetSymbolSize={};\n    nodeSeparation = (a, b) => a.parent === b.parent ? 1 : 1.2\n\n    constructor(treeDesigner, data, config){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n        this.config = config;\n\n    }\n\n    update(node){\n        if(node && node.$parent){\n            node.$parent.childEdges.sort((a,b)=>a.childNode.location.y - b.childNode.location.y)\n        }\n        if(!this.isManualLayout()){\n            return this.autoLayout(this.config.type, true);\n        }\n        if(node){\n            this.moveNodeToEmptyPlace(node);\n        }else{\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    isManualLayout(){\n        return this.config.type === Layout.MANUAL_LAYOUT_NAME;\n    }\n\n    getNewChildLocation(parent){\n        if(!parent){\n            return new model.Point(this.getNodeMinX(), this.getNodeMinY())\n        }\n        var x = parent.location.x + this.config.gridWidth;\n        var y = parent.location.y;\n        if(parent.childEdges.length){\n            y = parent.childEdges[parent.childEdges.length-1].childNode.location.y+1;\n        }\n\n        return new model.Point(x, y)\n    }\n\n    getInjectedNodeLocation(edge){\n\n        var p = edge.$linePoints[2];\n\n        return new model.Point(p[0], p[1])\n    }\n\n    moveNodeToEmptyPlace(node, redrawIfChanged=true){\n        var positionMap = {};\n        var self = this;\n        node.location.x = Math.max(this.getNodeMinX(node), node.location.x);\n        node.location.y = Math.max(this.getNodeMinY(node), node.location.y);\n\n\n        this.nodesSortedByX = this.data.nodes.slice();\n        this.nodesSortedByX.sort((a,b)=>a.location.x - b.location.x);\n\n        function findCollidingNode(node, location){\n            return Utils.find(self.nodesSortedByX, n=>{\n                if(node == n){\n                    return false;\n                }\n\n                var margin = self.config.nodeSize/3;\n                var x = n.location.x;\n                var y = n.location.y;\n\n                return (location.x - margin <= x && location.x + margin >= x\n                    && location.y - margin <= y && location.y + margin >= y)\n            });\n        }\n\n        var stepX = this.config.nodeSize/2;\n        var stepY = this.config.nodeSize+10;\n        var stepXsameParent = 0;\n        var stepYsameParent = 75;\n        var changed = false;\n        var colidingNode;\n        var newLocation = new model.Point(node.location);\n        while(colidingNode = findCollidingNode(node, newLocation)){\n            changed=true;\n            var sameParent = node.$parent && colidingNode.$parent && node.$parent===colidingNode.$parent;\n            if(sameParent){\n                newLocation.move(stepXsameParent, stepYsameParent);\n            }else{\n                newLocation.move(stepX, stepY);\n            }\n        }\n        if(changed){\n            node.moveTo(newLocation.x,newLocation.y, true);\n            if(redrawIfChanged){\n                this.treeDesigner.redraw(true);\n            }\n        }\n    }\n\n    disableAutoLayout(){\n        this.config.type = Layout.MANUAL_LAYOUT_NAME;\n        this._fireOnAutoLayoutChangedCallbacks();\n    }\n\n\n    nodeSymbolSize = {};\n    drawNodeSymbol(path, transition){\n\n        var self = this;\n        var nodeSize = this.config.nodeSize;\n        this.nodeSymbol = d3.symbol().type(d=> self.nodeTypeToSymbol[d.type])\n            .size(d=>self.nodeSymbolSize[d.$id] ? Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", 64) : 64);\n\n        path\n            .each(function (d) {\n                var path = d3.select(this);\n                var prev = path.attr(\"d\");\n                if(!prev){\n                    path.attr(\"d\", self.nodeSymbol);\n                }\n                var size = Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\");\n                if(!size){\n                    var box = path.node().getBBox();\n                    var error = Math.min(nodeSize / box.width, nodeSize / box.height);\n                    size = error * error * (self.nodeSymbolSize[d.$id]||64);\n                    Utils.set(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", size);\n                }\n                if(transition){\n                    path =  path.transition();\n\n                }else{\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n                path.attr(\"d\", self.nodeSymbol);\n                if(transition){\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n            });\n    }\n\n    nodeLabelPosition(selection) {\n        return selection\n            .attr('x', 0)\n            .attr('y', -this.config.nodeSize / 2 - 7)\n    }\n\n    nodePayoffPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', 0)\n            .attr('y', this.config.nodeSize / 2 + 7)\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeAggregatedPayoffPosition(selection) {\n        var x = this.config.nodeSize / 2 + 7;\n        var self = this;\n        selection\n            .attr('x', x)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let items = d.displayValue('aggregatedPayoff');\n                let number = Utils.isArray(items) ? items.filter(it=>it !== undefined).length : 1;\n                if(number>1){\n                    return -this.getBBox().height/2 + fontSize/2;\n                }\n                return -Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            });\n\n        selection.selectAll('tspan').attr('x', x);\n        return selection;\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'hanging')\n    }\n\n    nodeProbabilityToEnterPosition(selection) {\n        var self = this;\n\n        return Layout.setHangingPosition(selection)\n            .attr('x', this.config.nodeSize / 2 + 7)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let aggregatedPayoffs = d.displayValue('aggregatedPayoff');\n                let aggregatedPayoffsNumber = Utils.isArray(aggregatedPayoffs) ? aggregatedPayoffs.filter(it=>it !== undefined).length : 1;\n                if(aggregatedPayoffsNumber>1){\n\n                    return fontSize*0.6\n                }\n\n                return Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            })\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'central')\n    }\n\n    nodeIndicatorPosition(selection) {\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 8)\n            .attr('y', - this.config.nodeSize/2)\n            .attr('dominant-baseline', 'central')\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeUnfoldButtonPosition(selection) {\n\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 5)\n            .attr('y', 0)\n            .attr('dominant-baseline', 'central')\n    }\n\n    edgeLineD(edge){\n        var line = d3.line()\n            .x(d=> d[0])\n            .y(d=> d[1]);\n        // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n        var parentNode = edge.parentNode;\n        var childNode = edge.childNode;\n\n        var dX = childNode.location.x - parentNode.location.x;\n        var dY = childNode.location.y - parentNode.location.y;\n\n        var sign = dX>=0 ? 1 : -1;\n\n        var slantStartXOffset = Math.min(dX/2, this.config.nodeSize/2+10);\n        var slantWidth = Math.min(this.config.edgeSlantWidthMax, Math.max(dX/2 - slantStartXOffset, 0));\n\n        var point1 = [parentNode.location.x +this.config.nodeSize/2 + 1, parentNode.location.y];\n        var point2 = [Math.max(parentNode.location.x+slantStartXOffset, point1[0]), parentNode.location.y];\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.nodeSize/2+8, dX/2)))), childNode.location.y];\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n        edge.$linePoints = [point1, point2, point3, point4];\n        return line(edge.$linePoints);\n    }\n\n    edgePayoffPosition(selection) {\n        Layout.setHangingPosition(selection)\n            .attr('x', d=>d.$linePoints[2][0] + 2)\n            .attr('y', d=>d.$linePoints[2][1] + 7);\n\n        selection.selectAll('tspan').attr('x', function(d){\n            return d3.select(this.parentNode).datum().$linePoints[2][0] + 2\n        });\n        return selection;\n\n    }\n\n    edgeLabelPosition(selection) {\n        return selection\n            .attr('transform', d=>'translate('+(d.$linePoints[2][0] + 2)+','+(d.$linePoints[2][1] - 7)+')')\n            // .attr('x', d=>d.$linePoints[2][0] + 2)\n            // .attr('y', d=>d.$linePoints[2][1] - 7)\n\n    }\n\n    edgeProbabilityPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', function (d) {\n                var len = this.getComputedTextLength();\n                var min = d.$linePoints[2][0] + 2 + this.previousSibling.childNodes[0].getComputedTextLength() + 7 + len;\n                return Math.max(min, d.$linePoints[3][0] - 8);\n            })\n            .attr('y', d=>d.$linePoints[2][1] + 7)\n    }\n\n    getMinMarginBetweenNodes(){\n      return this.config.nodeSize + 30;\n    }\n\n    getTextMinX(d){\n        let minX = 0;\n        if(d){\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\n            if (bb.x < 0) {\n                minX -= bb.x;\n            }\n        }\n        return minX;\n    }\n\n    getTextMinY(d){\n        let minY = 0;\n        if(d){\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\n            if (bb.y < 0) {\n                minY -= bb.y;\n            }\n        }\n        return minY;\n    }\n\n    getTextMaxX(d){\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n\n    getNodeMinX(d){\n        var self = this;\n        if(d && d.$parent){// && !self.isNodeSelected(d.$parent)\n            return d.$parent.location.x + self.getMinMarginBetweenNodes();\n        }\n        return self.config.nodeSize/2;\n    }\n\n    getNodeMinY(d){\n        return this.config.nodeSize/2;\n    }\n\n    getNodeMaxX(d){\n        var self = this;\n\n        if(d && d.childEdges.length){\n            return d3.min(d.childEdges, e=>!e.childNode.$hidden ? e.childNode.location.x : 9999999)-self.getMinMarginBetweenNodes();\n        }\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n    setGridWidth(width, withoutStateSaving){\n        var self=this;\n        if(this.config.gridWidth===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridWidth: self.config.gridWidth\n                },\n                onUndo: (data)=> {\n                    self.setGridWidth(data.gridWidth, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridWidth(width, true);\n                }\n            });\n        }\n\n        this.config.gridWidth=width;\n        this.update();\n    }\n\n    setGridHeight(gridHeight, withoutStateSaving){\n        var self=this;\n        if(this.config.gridHeight===gridHeight){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridHeight: self.config.gridHeight\n                },\n                onUndo: (data)=> {\n                    self.setGridHeight(data.gridHeight, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridHeight(gridHeight, true);\n                }\n            });\n        }\n\n        this.config.gridHeight=gridHeight;\n        this.update();\n    }\n\n    setNodeSize(nodeSize, withoutStateSaving){\n        var self=this;\n        if(this.config.nodeSize===nodeSize){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    nodeSize: self.config.nodeSize\n                },\n                onUndo: (data)=> {\n                    self.setNodeSize(data.nodeSize, true);\n                },\n                onRedo: (data)=> {\n                    self.setNodeSize(nodeSize, true);\n                }\n            });\n        }\n\n        this.config.nodeSize=nodeSize;\n        this.update();\n        if(this.isManualLayout()){\n            this.fitNodesInPlottingRegion(self.data.getRoots());\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    setEdgeSlantWidthMax(width, withoutStateSaving){\n        var self=this;\n        if(this.config.edgeSlantWidthMax===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    edgeSlantWidthMax: self.config.edgeSlantWidthMax\n                },\n                onUndo: (data)=> {\n                    self.setEdgeSlantWidthMax(data.edgeSlantWidthMax, true);\n                },\n                onRedo: (data)=> {\n                    self.setEdgeSlantWidthMax(width, true);\n                }\n            });\n        }\n\n        this.config.edgeSlantWidthMax=width;\n        this.treeDesigner.redraw(true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        var self=this;\n\n\n\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    newLayout: type,\n                    currentLayout: self.config.type\n                },\n                onUndo: (data)=> {\n                    self.config.type = data.currentLayout;\n                    self._fireOnAutoLayoutChangedCallbacks();\n                },\n                onRedo: (data)=> {\n                    self.autoLayout(data.newLayout, true);\n                }\n            });\n        }\n        this.config.type = type;\n        if(!this.data.nodes.length){\n            this._fireOnAutoLayoutChangedCallbacks();\n            return;\n        }\n\n        var prevTreeMaxY = self.getNodeMinY();\n        this.data.getRoots().forEach(r=>{\n            var root = d3.hierarchy(r, d=>{\n                return d.childEdges.filter(e=>!e.$hidden).map(e=>e.childNode);\n            });\n\n            // root.sort((a,b)=>self.nodeTypeOrder[a.data.type]-self.nodeTypeOrder[b.data.type]);\n            root.sort((a,b)=>a.data.location.y - b.data.location.y);\n\n\n            var layout;\n            if(type==='cluster'){\n                layout = d3.cluster();\n            }else{\n                layout = d3.tree();\n            }\n            layout.nodeSize([self.config.gridHeight, self.config.gridWidth]);\n            layout.separation(self.nodeSeparation);\n\n            layout(root);\n            var minY = 999999999;\n            root.each(d=>{\n                minY = Math.min(minY, d.x);\n            });\n\n            var dy = root.x - minY + prevTreeMaxY;\n            var dx = self.getNodeMinX();\n            var maxY=0;\n            root.each(d=>{\n                d.data.location.x = d.y + dx;\n                d.data.location.y = d.x + dy;\n\n                maxY = Math.max(maxY, d.data.location.y);\n            });\n\n            prevTreeMaxY = maxY + self.config.nodeSize+self.treeMargin;\n        });\n\n\n        // this.transition = true;\n        this.treeDesigner.redraw(true);\n        // this.transition = false;\n\n        this._fireOnAutoLayoutChangedCallbacks();\n        return this;\n    }\n\n    fitNodesInPlottingRegion(nodes){\n        var self = this;\n        var topY = d3.min(nodes, n=>n.location.y);\n        var minY = self.getNodeMinY();\n        var dy = topY - minY;\n\n        var minX = d3.min(nodes, n=>n.location.x);\n        var dx = minX - self.getNodeMinX();\n\n        if(dy<0 ||  dx<0){\n            nodes.forEach(n=>n.move(-dx, -dy));\n        }\n    }\n\n    moveNodes(nodes, dx, dy, pivot){\n        var self = this;\n        var limit = self.config.limitNodePositioning;\n        if(limit){\n            if(dx<0){\n                nodes.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                nodes.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n        var minY = d3.min(nodes, d=>d.location.y);\n        if(minY + dy < self.getNodeMinY()){\n            dy = self.getNodeMinY() - minY;\n        }\n\n        nodes.forEach(d=>{\n            if(limit){\n                Layout.backupNodeLocation(d);\n                var minX = self.getNodeMinX(d);\n                var maxX = self.getNodeMaxX(d);\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y += dy;\n            }else{\n                d.location.x +=dx;\n                d.location.y += dy;\n            }\n\n        });\n\n\n        var revertX = pivot && self.config.limitNodePositioning && (pivot.location.x === pivot.$location.x);\n\n        nodes.forEach(d=>{\n            if(revertX){\n                d.location.x = d.$location.x;\n            }\n            self.treeDesigner.updateNodePosition(d);\n        });\n\n\n    }\n\n    moveTexts(texts, dx, dy){\n        let self = this;\n        let limit = self.config.limitTextPositioning;\n        if(limit){\n            if(dx<0){\n                texts.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                texts.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n\n        texts.forEach(d=>{\n\n\n\n\n            if(limit){\n                let minX = self.getTextMinX(d);\n                let maxX = self.getTextMaxX(d);\n                let minY = self.getTextMinY(d);\n\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y = Math.max(d.location.y+dy, minY);\n\n            }else{\n                d.location.move(dx, dy);\n            }\n            self.treeDesigner.updateTextPosition(d);\n\n        });\n\n    }\n\n    static backupNodeLocation(node) {\n        node.$location = new model.Point(node.location);\n    }\n\n    _fireOnAutoLayoutChangedCallbacks(){\n        this.onAutoLayoutChanged.forEach(c=>c(this.config.type));\n    }\n\n    static setHangingPosition(selection){\n        // window.setTimeout(function(){\n        //     selection.each(function(){\n        //         var h =  this.getBBox().height;\n        //         d3.select(this).attr('dy', h);\n        //     });\n        // },0);\n\n        if(AppUtils.isHidden(selection.node())){ // setting hanging position of hidden elements fails on firefox\n            return selection;\n        }\n\n\n        selection.each(function(){\n            var h =  this.getBBox().height;\n            d3.select(this).attr('dy', '0.75em');\n        });\n\n        return selection;\n    }\n\n}\n\n\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class NodeDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        if(self.ignoreDrag){\n            self.ignoreDrag=false;\n            self.ignoredDrag=true;\n            return;\n        }\n        self.ignoredDrag=false;\n\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var node = d3.select(this);\n        if(!node.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectNode(d);\n        node.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes(true);\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedNode, self){\n        if(self.ignoredDrag){\n            return;\n        }\n\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n        if(self.selectedNodes.length>5 && self.dragEventCount%2!=1){\n            return;\n        }\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n        self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\n\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.redrawEdges();\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n        var node = d3.select(this).classed(\"dragging\", false);\n        if(self.ignoredDrag){\n            return;\n        }\n        self.treeDesigner.layout.update(draggedNode)\n    }\n\n    cancelDrag(){\n        this.ignoreDrag = true;\n    }\n\n}\n\n\n","var epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nexport default {\n    /*draw: function(context, size) {\n        var r = Math.sqrt(size / pi);\n        context.moveTo(r, 0);\n        context.arc(0, 0, r, 0, tau);\n    }*/\n    draw: function(context, size) {\n\n        var r = Math.sqrt(size / pi);\n        var dist =0.552284749831 * r;\n\n        context.moveTo(-r, 0)\n        // context.lineTo(2*r, 2*r)\n        // context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n        context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n\n        context.bezierCurveTo(dist, -r, r, -dist, r,0);\n\n        context.bezierCurveTo(r, dist, dist, r, 0, r);\n\n        context.bezierCurveTo(-dist, r, -r, dist, -r, 0);\n    }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n    draw: function(context, size) {\n        var r = Math.sqrt(size / Math.PI);\n        context.moveTo(-r, 0);\n        context.lineTo(0.9*r, -r);\n        context.lineTo(0.9*r, r);\n        context.closePath();\n    }\n};\n","import {Utils} from \"sd-utils\";\nimport {i18n} from './i18n/i18n'\n\nexport class Templates{\n\n    static growl = require('./templates/growl_message.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n    static styleRule(selector, props){\n        var s = selector+ '{';\n        props.forEach(p=> s+=Templates.styleProp(p[0], p[1]));\n        s+='} ';\n        return s;\n    }\n    static styleProp(styleName, variableName){\n        return  styleName+': <%= '+variableName+' %>; '\n    }\n\n    static treeDesignerSelector = 'svg.sd-tree-designer';\n    static nodeSelector(type, clazz){\n        var s = Templates.treeDesignerSelector+' .node';\n        if(type){\n            s+='.'+type+'-node';\n        }\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n    static edgeSelector(clazz){\n        var s = Templates.treeDesignerSelector+' .edge';\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n\n    static treeDesignerStyles =\n\n        Templates.styleRule(Templates.treeDesignerSelector,[\n            ['font-size', 'fontSize'],\n            ['font-family', 'fontFamily'],\n            ['font-weight', 'fontWeight'],\n            ['font-style', 'fontStyle']\n        ])+\n        //   node\n        Templates.styleRule(Templates.nodeSelector()+' path',[\n            ['fill', 'node.fill'],\n            ['stroke-width', 'node.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'optimal')+' path, '+Templates.nodeSelector('chance', 'optimal')+' path,' +Templates.nodeSelector('terminal', 'optimal')+' path',[\n            ['stroke', 'node.optimal.stroke'],\n            ['stroke-width', 'node.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .label',[\n            ['font-size', 'node.label.fontSize'],\n            ['fill', 'node.label.color']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff',[\n            ['font-size', 'node.payoff.fontSize'],\n            ['fill', 'node.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff.negative',[\n            ['fill', 'node.payoff.negativeColor'],\n        ])+\n\n        //    decision node\n        Templates.styleRule(Templates.nodeSelector('decision')+' path',[\n            ['fill', 'node.decision.fill'],\n            ['stroke', 'node.decision.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'selected')+' path',[\n            ['fill', 'node.decision.selected.fill']\n        ])+\n\n        //    chance node\n        Templates.styleRule(Templates.nodeSelector('chance')+' path',[\n            ['fill', 'node.chance.fill'],\n            ['stroke', 'node.chance.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('chance', 'selected')+' path',[\n            ['fill', 'node.chance.selected.fill']\n        ])+\n\n        //    terminal node\n        Templates.styleRule(Templates.nodeSelector('terminal')+' path',[\n            ['fill', 'node.terminal.fill'],\n            ['stroke', 'node.terminal.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal', 'selected')+' path',[\n            ['fill', 'node.terminal.selected.fill']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff',[\n            ['font-size', 'node.terminal.payoff.fontSize'],\n            ['fill', 'node.terminal.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff.negative',[\n            ['fill', 'node.terminal.payoff.negativeColor'],\n        ])+\n\n\n        //probability\n        Templates.styleRule(Templates.treeDesignerSelector+' .node .probability-to-enter, '+Templates.treeDesignerSelector+' .edge .probability',[\n            ['font-size', 'probability.fontSize'],\n            ['fill', 'probability.color']\n        ])+\n\n        //edge\n        Templates.styleRule(Templates.edgeSelector()+' path',[\n            ['stroke', 'edge.stroke'],\n            ['stroke-width', 'edge.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow path',[\n            ['fill', 'edge.stroke'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector('optimal')+' path',[\n            ['stroke', 'edge.optimal.stroke'],\n            ['stroke-width', 'edge.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-optimal path',[\n            ['fill', 'edge.optimal.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector('selected')+' path',[\n            ['stroke', 'edge.selected.stroke'],\n            ['stroke-width', 'edge.selected.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-selected path',[\n            ['fill', 'edge.selected.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .label',[\n            ['font-size', 'edge.label.fontSize'],\n            ['fill', 'edge.label.color']\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .payoff',[\n            ['font-size', 'edge.payoff.fontSize'],\n            ['fill', 'edge.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector()+' .payoff.negative',[\n            ['fill', 'edge.payoff.negativeColor'],\n        ])+\n\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-title',[\n            ['font-size', 'title.fontSize'],\n            ['font-weight', 'title.fontWeight'],\n            ['font-style', 'title.fontStyle'],\n            ['fill', 'title.color']\n        ]) +\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-description',[\n            ['font-size', 'description.fontSize'],\n            ['font-weight', 'description.fontWeight'],\n            ['font-style', 'description.fontStyle'],\n            ['fill', 'description.color']\n        ])\n}\n\n\n\n\n","module.exports = \"<div class=\\\"sd-growl-message <%=type%>\\\">\\n    <div class=\\\"sd-growl-message-text\\\">\\n        <%= message %>\\n    </div>\\n</div>\\n\";\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class TextDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var text = d3.select(this);\n        if(!text.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectText(d);\n        text.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes();\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedText, self){\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n\n        self.treeDesigner.layout.moveTexts([draggedText], dx, dy);\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n         d3.select(this).classed(\"dragging\", false);\n    }\n\n}\n\n\n","import * as d3 from './d3'\nimport {Utils} from 'sd-utils'\n\nexport class Tooltip {\n    static getContainer(){\n        return d3.select(\"body\").selectOrAppend('div.sd-tooltip');\n    }\n\n    static show(html, xOffset = 5, yOffset = 28, event, duration=null) {\n        var container = Tooltip.getContainer()\n            .style(\"opacity\", 0);\n        container.transition()\n            .duration(200)\n            .style(\"opacity\", .98);\n        container.html(html);\n        Tooltip.updatePosition(xOffset, yOffset, event);\n        if(duration){\n            setTimeout(function(){\n                Tooltip.hide();\n            }, duration)\n        }\n    }\n\n    static updatePosition(xOffset = 5, yOffset = 28, event) {\n        event = event || d3.event;\n        Tooltip.getContainer()\n            .style(\"left\", (event.pageX + xOffset) + \"px\")\n            .style(\"top\", (event.pageY - yOffset) + \"px\");\n    }\n\n    static hide(duration = 500) {\n        var t = Tooltip.getContainer();\n        if(duration){\n            t = t.transition().duration(duration)\n        }\n        t.style(\"opacity\", 0);\n    }\n\n    static attach(target, htmlOrFn, xOffset, yOffset) {\n        target.on('mouseover', function (d, i) {\n            var html = null;\n            if (Utils.isFunction(htmlOrFn)) {\n                html = htmlOrFn(d, i);\n            } else {\n                html = htmlOrFn;\n            }\n\n            if (html !== null && html !== undefined && html !== '') {\n                Tooltip.show(html, xOffset, yOffset);\n            }else{\n                Tooltip.hide(0);\n            }\n\n        }).on('mousemove', function (d) {\n            Tooltip.updatePosition(xOffset, yOffset);\n        }).on(\"mouseout\", function (d) {\n            Tooltip.hide();\n        });\n    }\n}\n","import * as d3 from \"./d3\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {ContextMenu} from \"./context-menu/context-menu\";\nimport {MainContextMenu} from \"./context-menu/main-context-menu\";\nimport {NodeContextMenu} from \"./context-menu/node-context-menu\";\nimport {Layout} from \"./layout\";\nimport {NodeDragHandler} from \"./node-drag-handler\";\nimport {Tooltip} from \"./tooltip\";\nimport {Templates} from \"./templates\";\nimport {TextDragHandler} from \"./text-drag-handler\";\nimport {TextContextMenu} from \"./context-menu/text-context-menu\";\nimport {EdgeContextMenu} from \"./context-menu/edge-context-menu\";\nimport * as Hammer from \"hammerjs\";\nimport {i18n} from \"./i18n/i18n\";\n\n\nexport class TreeDesignerConfig {\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    scale = 1;\n    lng = 'en';\n    layout= {\n        type: 'tree',\n        nodeSize: 40,\n        limitNodePositioning: true,\n        limitTextPositioning: true,\n        gridHeight: 75,\n        gridWidth: 150,\n        edgeSlantWidthMax: 20\n    };\n    fontFamily = 'sans-serif';\n    fontSize = '12px';\n    fontWeight = 'normal';\n    fontStyle = 'normal';\n    node = {\n        strokeWidth: '1px',\n        optimal: {\n            stroke: '#006f00',\n            strokeWidth: '1.5px',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'black'\n        },\n        payoff: {\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        },\n        decision: {\n            fill: '#ff7777',\n            stroke: '#660000',\n\n            selected: {\n                fill: '#aa3333',\n                // stroke: '#666600'\n            }\n        },\n        chance: {\n            fill: '#ffff44',\n            stroke: '#666600',\n\n            selected: {\n                fill: '#aaaa00',\n                // stroke: '#666600'\n            }\n        },\n        terminal:{\n            fill: '#44ff44',\n            stroke: 'black',\n            selected: {\n                fill: '#00aa00',\n                // stroke: 'black'\n            },\n            payoff: {\n                fontSize: '1em',\n                color: 'black',\n                negativeColor: '#b60000'\n            },\n        }\n    };\n    edge={\n        stroke: '#424242',\n        strokeWidth: '1.5',\n        optimal:{\n            stroke: '#006f00',\n            strokeWidth: '2.4',\n        },\n        selected:{\n            stroke: '#045ad1',\n            strokeWidth: '3.5',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'back'\n        },\n        payoff:{\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        }\n\n    };\n    probability = {\n        fontSize: '1em',\n        color: '#0000d7'\n    };\n    title = {\n        fontSize: '16px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 15,\n            bottom: 10\n        }\n    };\n    description = {\n        show: true,\n        fontSize: '12px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 5,\n            bottom: 10\n        }\n    };\n\n    readOnly= false;\n    disableAnimations=false;\n    forceFullEdgeRedraw=false;\n    hideLabels=false;\n    hidePayoffs=false;\n    hideProbabilities=false;\n    raw=false;\n\n\n    payoffNumberFormatter = (v, i)=> v;\n    probabilityNumberFormatter  = (v)=> v;\n\n    onNodeSelected = (node) => {};\n    onEdgeSelected = (edge) => {};\n    onTextSelected = (text) => {};\n    onSelectionCleared = () => {};\n\n    operationsForObject = (o) => [];\n\n    payoffNames = [null, null];\n    maxPayoffsToDisplay = 1;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n\nexport class TreeDesigner {\n\n    config;\n    container;\n    data; //data model manager\n    svg;\n\n    constructor(container, dataModel, config){\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    }\n\n    setConfig(config) {\n        this.config = new TreeDesignerConfig(config);\n        if(this.layout){\n            this.layout.config=this.config.layout;\n        }\n        this.updateCustomStyles();\n        return this;\n    }\n\n    init(){\n\n        this.initSvg();\n        this.initLayout();\n        this.initI18n();\n        this.initBrush();\n        this.initEdgeMarkers();\n\n        this.updateCustomStyles();\n        if(!this.config.readOnly){\n            this.initMainContextMenu();\n            this.initNodeContextMenu();\n            this.initEdgeContextMenu();\n            this.initNodeDragHandler();\n            this.initTextDragHandler();\n            this.initTextContextMenu();\n        }\n        this.redraw();\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n\n    updateCustomStyles(){\n        d3.select('head').selectOrAppend('style#sd-tree-designer-style').html(Templates.get('treeDesignerStyles', this.config));\n        return this;\n    }\n\n    initLayout(){\n        this.layout = new Layout(this, this.data, this.config.layout);\n    }\n\n    initNodeDragHandler(){\n        this.nodeDragHandler = new NodeDragHandler(this, this.data);\n    }\n\n    initTextDragHandler(){\n        this.textDragHandler = new TextDragHandler(this, this.data);\n    }\n\n    redraw(withTransitions=false){\n\n        var self = this;\n        withTransitions = !self.config.disableAnimations && withTransitions;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateScale(withTransitions);\n        this.updateMargin(withTransitions);\n        if(withTransitions){\n            self.transitionPrev = self.transition;\n            self.transition = true;\n        }\n        this.redrawNodes();\n        this.redrawEdges();\n        this.redrawFloatingTexts();\n        this.updateValidationMessages();\n        if(withTransitions){\n            self.transition =  self.transitionPrev;\n        }\n        setTimeout(function(){\n            self.updatePlottingRegionSize();\n        },10);\n\n        return this;\n    }\n\n    computeAvailableSpace(){\n        this.availableHeight = AppUtils.sanitizeHeight(this.config.height, this.container, this.config.margin);\n        this.availableWidth = AppUtils.sanitizeWidth(this.config.width, this.container, this.config.margin);\n    }\n\n    initSvg() {\n        var c = this;\n        var self = this;\n        this.computeAvailableSpace();\n        this.svg = this.container.selectOrAppend('svg.sd-tree-designer');\n        this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\n\n        this.wrapperGroup = this.svg.selectOrAppend('g.sd-wrapper-group');\n        this.mainGroup = this.wrapperGroup.selectOrAppend('g.main-group');\n        this.updateScale();\n        this.updateMargin();\n\n\n        if (!this.config.width) {\n            d3.select(window)\n                .on(\"resize.tree-designer\", function () {\n                    self.updatePlottingRegionSize();\n                    self.redrawDiagramTitle();\n                });\n        }\n\n        var mc = new Hammer.Manager(this.svg.node(), {touchAction : 'auto'});\n        mc.add(new Hammer.Press({\n            pointerType: 'touch'\n        }));\n\n        mc.add(new Hammer.Pinch({\n            pointerType: 'touch'\n        }));\n\n        var cancel;\n        mc.on('pinchstart', function(){\n            self.disableBrush();\n        })\n        mc.on('pinch', function(){\n            cancel = Utils.waitForFinalEvent(()=>self.enableBrush(), 'pinchend', 5000)\n        })\n    }\n\n    updateMargin(withTransitions){\n        var self = this;\n        var margin = this.config.margin;\n        var group = this.mainGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        this.topMargin = margin.top;\n        if(this.diagramTitle||this.diagramDescription){\n            this.topMargin = parseInt(this.diagramTitle ? this.config.title.margin.top : 0) + this.getTitleGroupHeight()\n                +  Math.max(this.topMargin, parseInt(this.config.title.margin.bottom));\n        }\n\n        group.attr(\"transform\", \"translate(\" + margin.left + \",\" + this.topMargin + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setMargin(margin, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    margin: Utils.clone(self.config.margin)\n                },\n                onUndo: (data)=> {\n                    self.setMargin(data.margin, true);\n                },\n                onRedo: (data)=> {\n                    self.setMargin(margin, true);\n                }\n            });\n        }\n        Utils.deepExtend(this.config.margin, margin);\n        this.redrawDiagramTitle();\n        this.updateMargin(true);\n    }\n\n\n    updateScale(withTransitions){\n        var self = this;\n        var scale = this.config.scale;\n        var group = this.wrapperGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        group.attr(\"transform\", \"scale(\" + scale + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setScale(scale, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    scale: Utils.clone(self.config.scale)\n                },\n                onUndo: (data)=> {\n                    self.setScale(data.scale, true);\n                },\n                onRedo: (data)=> {\n                    self.setScale(scale, true);\n                }\n            });\n        }\n        this.config.scale = scale;\n        this.updateScale(true);\n    }\n\n    initContainer(containerIdOrElem) {\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else if(containerIdOrElem._parents){\n            this.container = containerIdOrElem\n        }else{\n            this.container = d3.select(containerIdOrElem);\n        }\n    }\n\n    updatePlottingRegionSize() {\n        var changed = false;\n        this.computeAvailableSpace();\n        var margin = this.config.margin;\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        var mainGroupBox = this.mainGroup.node().getBBox();\n        let boxWidth = mainGroupBox.width;\n        var newSvgWidth = boxWidth+mainGroupBox.x+margin.left+margin.right;\n        newSvgWidth  *= this.config.scale;\n        this.container.classed('with-overflow-x', newSvgWidth>=this.availableWidth);\n        newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\n        if(svgWidth!=newSvgWidth){\n            changed = true;\n            this.svg.attr('width', newSvgWidth);\n        }\n        let boxHeight = mainGroupBox.height;\n        var newSvgHeight = boxHeight+mainGroupBox.y+this.topMargin+margin.bottom;\n        newSvgHeight *= this.config.scale;\n        this.container.classed('with-overflow-y', newSvgHeight>=this.availableHeight);\n        newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\n        if(svgHeight!=newSvgHeight){\n            changed=true;\n            this.svg.attr('height', newSvgHeight);\n        }\n        if(changed){\n            this.updateBrushExtent()\n        }\n\n\n    }\n\n    redrawNodes() {\n        var self = this;\n\n\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes.filter(d=>!d.$hidden), (d,i)=> d.$id);\n        nodes.exit().remove();\n        var nodesEnter = nodes.enter().append('g')\n            .attr('id', d=>'node-'+d.$id)\n            .attr('class', d=>d.type+'-node node')\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n        nodesEnter.append('path');\n\n        var labelEnter = nodesEnter.append('text').attr('class', 'label');\n        var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\n        var indicatorEnter = nodesEnter.append('text').attr('class', 'error-indicator').text('!!');\n        var aggregatedPayoffEnter = nodesEnter.append('text').attr('class', 'aggregated-payoff');\n        var probabilityToEnterEnter = nodesEnter.append('text').attr('class', 'probability-to-enter');\n\n        var nodesMerge = nodesEnter.merge(nodes);\n        nodesMerge.classed('optimal', (d)=>self.isOptimal(d));\n\n        var nodesMergeT = nodesMerge;\n        if(this.transition){\n            nodesMergeT = nodesMerge.transition();\n            nodesMergeT.on('end', ()=> self.updatePlottingRegionSize())\n        }\n        nodesMergeT\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')')\n\n        var path = nodesMerge.select('path');\n        this.layout.drawNodeSymbol(path,this.transition);\n\n        /*path\n            .style('fill', d=> {\n                // if(self.isNodeSelected(d)){\n                //     return self.config.node[d.type].selected.fill\n                // }\n                return self.config.node[d.type].fill\n            })\n            .style('stroke', d=> self.config.node[d.type].stroke)\n            .style('stroke-width', d=> {\n                if(self.config.node[d.type].strokeWidth!==undefined){\n                    return self.config.node[d.type].strokeWidth;\n                }\n                return self.config.node.strokeWidth;\n            });\n        */\n        this.layout.nodeLabelPosition(labelEnter);\n        var labelMerge = nodesMerge.select('text.label');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = nodesMergeT.select('text.label');\n        labelMergeT.each(this.updateTextLines);\n        this.layout.nodeLabelPosition(labelMergeT)\n            .attr('text-anchor', 'middle')\n\n        var payoff = nodesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('childrenPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n            // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0')\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((d, i)=> {\n                var val = d\n\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n        this.attachPayoffTooltip(payoffTspansM);\n\n\n        var payoffT = payoff;\n        if(this.transition){\n            payoffT = payoff.transition();\n        }\n\n        this.layout.nodePayoffPosition(payoffEnter);\n        this.layout.nodePayoffPosition(payoffT);\n\n        var aggregatedPayoff = nodesMerge.select('text.aggregated-payoff');\n        var aggregatedPayoffTspans = aggregatedPayoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('aggregatedPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        aggregatedPayoffTspans.exit().remove();\n        var aggregatedPayoffTspansM = aggregatedPayoffTspans.enter().append('tspan').merge(aggregatedPayoffTspans)\n            .attr('dy', (d,i)=>i>0 ? '0.95em': undefined)\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((val, i)=> {\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n\n        this.attachPayoffTooltip(aggregatedPayoffTspansM, 'aggregatedPayoff');\n\n        var aggregatedPayoffT = aggregatedPayoff;\n        if(this.transition){\n            aggregatedPayoffT = aggregatedPayoff.transition();\n        }\n\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffEnter);\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffT);\n\n        var probabilityToEnter = nodesMerge.select('text.probability-to-enter')\n            .text(d=>{\n                var val = d.displayValue('probabilityToEnter');\n                return val!==null ? (isNaN(val) ? val : self.config.probabilityNumberFormatter(val)): ''\n            })\n            .classed('sd-hidden', this.config.hideProbabilities || this.config.raw);\n        Tooltip.attach(probabilityToEnter, i18n.t('tooltip.node.probabilityToEnter'));\n\n\n        var probabilityToEnterT = probabilityToEnter;\n        if(this.transition){\n            probabilityToEnterT = probabilityToEnter.transition();\n        }\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterEnter);\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterT);\n\n\n        var indicator = nodesMerge.select('text.error-indicator');\n        indicator.classed('sd-hidden', this.config.raw)\n        this.layout.nodeIndicatorPosition(indicatorEnter);\n        this.layout.nodeIndicatorPosition(indicator);\n\n        if(this.nodeDragHandler){\n            nodesMerge.call(this.nodeDragHandler.drag);\n        }\n\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\n        nodesMerge.on('dblclick', this.nodeContextMenu)\n        nodesMerge.each(function(d, i){\n            var nodeElem = this;\n            var mc = new Hammer.Manager(nodeElem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n            mc.on('press', function(e){\n                if(e.pointerType=='touch'){\n                    self.nodeDragHandler.cancelDrag();\n                }\n            })\n\n\n            if(d.folded){\n                let button = d3.select(nodeElem).selectOrAppend('text.sd-unfold-button')\n                    .text(\"[+]\")\n                    .on('click dbclick mousedown', ()=>self.foldSubtree(d, false)); //firefox detects only mousedown event - related to drag handler\n\n                self.layout.nodeUnfoldButtonPosition(button);\n                Tooltip.attach(button, i18n.t('contextMenu.node.unfold'));\n            }else{\n                d3.select(nodeElem).select('.sd-unfold-button').remove();\n            }\n\n        })\n    }\n\n    attachPayoffTooltip(selection, payoffFiledName = 'payoff', object='node'){\n        var self = this;\n        Tooltip.attach(selection, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.named',{value: d.payoff, number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.default',{value: d.payoff, number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n    }\n\n    updateTextLines(d){ //helper method for splitting text to tspans\n        var lines = d.name ? d.name.split('\\n') : [];\n        lines.reverse();\n        var tspans = d3.select(this).selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .text(l=>l)\n            .attr('dy', (d,i)=>i>0 ? '-1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n    }\n\n    isOptimal(d){\n        return d.displayValue('optimal');\n    }\n\n    redrawEdges() {\n        var self = this;\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n        if(self.config.forceFullEdgeRedraw){\n            edgesContainer.selectAll(\"*\").remove();\n        }\n\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges.filter(e=>!e.$hidden), (d,i)=> d.$id);\n        edges.exit().remove();\n        var edgesEnter = edges.enter().append('g')\n            .attr('id', d=>'edge-'+d.$id)\n            .attr('class', 'edge');\n\n\n        edgesEnter.append('path');\n        var labelEnter = edgesEnter.appendSelector('g.label-group');\n        labelEnter.append('text').attr('class', 'label');\n        var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\n        var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\n\n\n        var edgesMerge = edgesEnter.merge(edges);\n\n\n        var optimalClassName = 'optimal';\n        edgesMerge.classed(optimalClassName, (d)=>self.isOptimal(d));\n\n        var edgesMergeT = edgesMerge;\n        if(this.transition){\n            edgesMergeT = edgesMerge.transition();\n        }\n\n        edgesMergeT.select('path')\n            .attr('d', d=> this.layout.edgeLineD(d))\n            // .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\")\n            .attr(\"marker-end\", function(d) {\n                var suffix = d3.select(this.parentNode).classed('selected') ? '-selected' : (self.isOptimal(d)?'-optimal':'');\n                return \"url(#arrow\"+ suffix+\")\"\n            });\n            // .attr(\"shape-rendering\", \"optimizeQuality\")\n\n\n        edgesMerge.on('click', d=>{\n            self.selectEdge(d, true)\n        });\n\n        this.layout.edgeLabelPosition(labelEnter);\n        edgesMergeT.select('text.label').each(this.updateTextLines);\n        var labelMerge = edgesMerge.select('g.label-group');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = edgesMergeT.select('g.label-group');\n        this.layout.edgeLabelPosition(labelMergeT);\n            // .text(d=>d.name);\n\n        var payoff = edgesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d => {\n            let item = d.displayValue('payoff');\n            return Utils.isArray(item) ? item.slice(0, Math.min(item.length, self.config.maxPayoffsToDisplay)).map(_=>d) : [d];\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n        // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            // .attr('x', '0')\n\n            // .attr('dominant-baseline', 'hanging')\n            .classed('negative', (d, i)=> {\n                var val = d.displayPayoff(undefined, i);\n                return val!==null && val<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs)\n            // .text(d=> isNaN(d.payoff) ? d.payoff : self.config.payoffNumberFormatter(d.payoff))\n            .text((d, i)=>{\n                if(this.config.raw){\n                    return d.payoff[i];\n                }\n\n                let item = d.displayValue('payoff');\n                let items = Utils.isArray(item) ? item : [item];\n\n                let val = items[i];\n                if (val !== null) {\n                    if (!isNaN(val)) {\n                        return self.config.payoffNumberFormatter(val, i);\n                    }\n                    if (Utils.isString(val)) {\n                        return val;\n                    }\n                }\n\n                if (d.payoff[i] !== null && !isNaN(d.payoff[i]))\n                    return self.config.payoffNumberFormatter(d.payoff[i], i);\n\n                return d.payoff[i];\n\n            });\n\n        Tooltip.attach(payoffTspansM, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.edge.payoff.named',{value: d.payoff[i], number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.edge.payoff.default',{value: d.payoff[i], number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n\n        var payoffTextT = payoff;\n        if(this.transition){\n            payoffTextT = payoff.transition();\n        }\n        this.layout.edgePayoffPosition(payoffEnter);\n        this.layout.edgePayoffPosition(payoffTextT);\n\n        Tooltip.attach(edgesMerge.select('text.probability'), d=>i18n.t('tooltip.edge.probability',{value: d.probability=== undefined ? d.displayProbability() : d.probability}));\n\n        edgesMerge.select('text.probability')\n            .classed('sd-hidden', this.config.hideProbabilities);\n        var probabilityMerge = edgesMerge.select('text.probability');\n        probabilityMerge\n            .attr('text-anchor', 'end')\n            .text(d=>{\n                if(this.config.raw){\n                    return d.probability;\n                }\n                var val = d.displayProbability();\n\n                if(val!==null){\n                    if(!isNaN(val)){\n                        return self.config.probabilityNumberFormatter(val);\n                    }\n                    if(Utils.isString(val)){\n                        return val;\n                    }\n                }\n\n                if(d.probability!==null && !isNaN(d.probability))\n                    return self.config.probabilityNumberFormatter(d.probability);\n\n                return d.probability;\n            });\n        var probabilityMergeT = probabilityMerge;\n        if(this.transition){\n            probabilityMergeT = probabilityMerge.transition();\n        }\n\n        this.layout.edgeProbabilityPosition(probabilityEnter);\n        this.layout.edgeProbabilityPosition(probabilityMergeT);\n\n\n        edgesContainer.selectAll('.edge.'+optimalClassName).raise();\n\n        edgesMerge.on('contextmenu', this.edgeContextMenu);\n        edgesMerge.on('dblclick', this.edgeContextMenu);\n        edgesMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: Hammer.POINTER_TOUCH\n            }));\n        })\n    }\n\n    redrawFloatingTexts() {\n        var self = this;\n\n\n        var textsContainer = this.mainGroup.selectOrAppend('g.floating-texts');\n        var texts = textsContainer.selectAll('.floating-text').data(this.data.texts, (d,i)=> d.$id);\n        texts.exit().remove();\n        var textsEnter = texts.enter().appendSelector('g.floating-text')\n            .attr('id', d=>'text-'+d.$id);\n\n\n        var rectWidth = 40;\n        var rectHeight = 20;\n\n        textsEnter.append('rect').attr('x', -5).attr('y', -16).attr('fill-opacity', 0);\n        textsEnter.append('text');\n\n        var textsMerge = textsEnter.merge(texts);\n        var textsMergeT = textsMerge;\n        if(this.transition){\n            textsMergeT = textsMerge.transition();\n        }\n\n        textsMergeT.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n\n        var tspans = textsMerge.select('text').selectAll('tspan').data(d=>d.value ? d.value.split('\\n') : []);\n\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        textsMerge.classed('sd-empty', d=>!d.value || !d.value.trim());\n        textsMerge.select('rect').attr('width', rectWidth).attr('height', rectHeight);\n\n        textsMerge.each(function(d){\n            if(!d.value){\n                return;\n            }\n            var bb = d3.select(this).select('text').node().getBBox();\n           d3.select(this).select('rect')\n               .attr('y', bb.y-5)\n               .attr('width', Math.max(bb.width+10, rectWidth))\n               .attr('height', Math.max(bb.height+10, rectHeight))\n        });\n\n        if(this.textDragHandler){\n            textsMerge.call(this.textDragHandler.drag);\n        }\n        textsMerge.on('contextmenu', this.textContextMenu);\n        textsMerge.on('dblclick', this.textContextMenu);\n        textsMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n        })\n\n    }\n\n    updateValidationMessages() {\n        var nodes = this.mainGroup.selectAll('.node');\n        nodes.classed('error', false);\n\n        this.data.validationResults.forEach(validationResult=>{\n            if(validationResult.isValid()){\n                return;\n            }\n\n            Object.getOwnPropertyNames(validationResult.objectIdToError).forEach(id=>{\n                var errors = validationResult.objectIdToError[id];\n                var nodeSelection = this.getNodeD3SelectionById(id);\n                nodeSelection.classed('error', true);\n                var tooltipHtml = '';\n                errors.forEach(e=>{\n                    if(tooltipHtml){\n                        tooltipHtml+='<br/>'\n                    }\n                    tooltipHtml+=AppUtils.getValidationMessage(e);\n                });\n\n                Tooltip.attach(nodeSelection.select('.error-indicator'), tooltipHtml);\n\n\n            })\n        });\n    }\n\n\n    initEdgeMarkers() {\n        var defs = this.svg.append(\"svg:defs\");\n\n        this.initArrowMarker(\"arrow\");\n        this.initArrowMarker(\"arrow-optimal\");\n        this.initArrowMarker(\"arrow-selected\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.select(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    updateBrushExtent() {\n        var self =this;\n        this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\n        this.brushContainer.call(this.brush);\n    }\n    initBrush() {\n        var self = this;\n\n        var brushContainer = self.brushContainer = this.brushContainer= this.wrapperGroup.selectOrInsert(\"g.brush\", \":first-child\")\n            .attr(\"class\", \"brush\");\n\n        var brush = this.brush = d3.brush()\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n\n\n        this.updateBrushExtent();\n\n        brushContainer.select('.overlay').on(\"mousemove.edgeSelection\", mousemoved);\n        function mousemoved() {\n            var m = d3.mouse(this);\n            var mgt = self.getMainGroupTranslation();\n            var margin = 10;\n\n            var closest = [null, 999999999];\n            var closeEdges = [];\n            self.mainGroup.selectAll('.edge').each(function(d){\n                var selection = d3.select(this);\n                selection.classed('sd-hover', false);\n                var pathNode = selection.select('path').node();\n                var b = pathNode.getBBox();\n                if(b.x+mgt[0] <=m[0] && b.x+b.width+mgt[0] >= m[0] &&\n                   b.y+mgt[1]-margin <=m[1] && b.y+b.height+mgt[1]+margin >= m[1]){\n\n                    var cp = AppUtils.closestPoint(pathNode, [m[0]-mgt[0], m[1]-mgt[1]]);\n                    if(cp.distance < margin && cp.distance<closest[1]){\n                        closest = [selection, cp.distance];\n                    }\n                }\n\n            });\n\n            self.hoveredEdge = null;\n            if(closest[0]){\n                closest[0].classed('sd-hover', true);\n                self.hoveredEdge = closest[0];\n            }\n\n        }\n\n        function brushstart() {\n            if (!d3.event.selection) return;\n            if(self.hoveredEdge){\n                self.selectEdge(self.hoveredEdge.datum(), true)\n            }else{\n                self.clearSelection();\n            }\n            ContextMenu.hide();\n        }\n\n        // Highlight the selected nodes.\n        function brushmove() {\n            var s = d3.event.selection;\n            if(!s)return;\n\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n                var mainGroupTranslation = self.getMainGroupTranslation();\n                var x = d.location.x+mainGroupTranslation[0];\n                var y = d.location.y+mainGroupTranslation[1];\n                var nodeSize = self.config.layout.nodeSize;\n                var offset = nodeSize*0.25;\n                return s[0][0] <= x+offset && x-offset <= s[1][0]\n                    && s[0][1] <= y+offset && y-offset <= s[1][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) return;\n            brush.move(brushContainer, null);\n\n            var selectedNodes = self.getSelectedNodes();\n            if(selectedNodes && selectedNodes.length === 1){\n                self.selectNode(selectedNodes[0]);\n            }\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n        }\n    }\n\n    disableBrush(){\n        if(!this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushDisabled'), 'info', 'left')\n        }\n        this.brushDisabled = true;\n        this.brushContainer.remove();\n    }\n\n    enableBrush(){\n        if(this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushEnabled'), 'info', 'left')\n            this.initBrush();\n            this.brushDisabled = false;\n        }\n\n\n    }\n\n    getMainGroupTranslation(invert) {\n        var translation = AppUtils.getTranslation(this.mainGroup.attr(\"transform\"));\n        if(invert){\n            translation[0] = -translation[0];\n            translation[1] = -translation[1]\n        }\n        return translation;\n    }\n\n    initNodeContextMenu() {\n        this.nodeContextMenu = new NodeContextMenu(this, this.config.operationsForObject);\n    }\n\n    initEdgeContextMenu() {\n        this.edgeContextMenu = new EdgeContextMenu(this);\n    }\n\n    initTextContextMenu() {\n        this.textContextMenu = new TextContextMenu(this);\n    }\n\n\n\n    initMainContextMenu() {\n        this.mainContextMenu = new MainContextMenu(this);\n        this.svg.on('contextmenu',this.mainContextMenu);\n        this.svg.on('dblclick',this.mainContextMenu);\n    }\n\n    addText(text){\n        this.data.saveState();\n        this.data.addText(text);\n        this.redraw();\n        this.selectText(text);\n    }\n\n    addNode(node, parent, redraw=false){\n        this.data.saveState();\n        this.data.addNode(node, parent);\n        this.redraw(true);\n        this.layout.update(node);\n        return node;\n    }\n\n    addDecisionNode(parent){\n        var newNode = new model.DecisionNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addChanceNode(parent){\n        var newNode = new model.ChanceNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addTerminalNode(parent){\n        var newNode = new model.TerminalNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n\n    injectNode(node, edge){\n        this.data.saveState();\n        this.data.injectNode(node, edge);\n        this.redraw();\n        this.layout.update(node);\n        return node;\n    }\n\n    injectDecisionNode(edge){\n        var newNode = new model.DecisionNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n\n    }\n\n    injectChanceNode(edge){\n        var newNode = new model.ChanceNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n    }\n\n    removeNode(node) {\n        this.data.saveState();\n        this.data.removeNode(node);\n\n\n        if(!this.layout.isManualLayout()){\n            this.layout.update();\n        }else{\n            this.redraw();\n        }\n    }\n\n    removeSelectedNodes() {\n        var selectedNodes = this.getSelectedNodes();\n        if(!selectedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeNodes(selectedNodes);\n        this.clearSelection();\n        this.redraw();\n        this.layout.update();\n    }\n\n    removeSelectedTexts(){\n        var selectedTexts = this.getSelectedTexts();\n\n        if(!selectedTexts.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeTexts(selectedTexts);\n        this.clearSelection();\n        this.redraw();\n    }\n\n    copyNode(d, notClearPrevSelection) {\n        var clone = this.data.cloneSubtree(d);\n        if(notClearPrevSelection){\n            if(!this.copiedNodes){\n                this.copiedNodes=[];\n            }\n            this.copiedNodes.push(clone);\n        }else{\n            this.copiedNodes = [clone];\n        }\n\n    }\n\n    cutNode(d) {\n        this.copyNode(d);\n        this.removeNode(d);\n    }\n\n    cutSelectedNodes(){\n        var selectedNodes = this.getSelectedNodes();\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n        this.removeSelectedNodes();\n    }\n\n    copySelectedNodes() {\n        var self;\n        var selectedNodes = this.getSelectedNodes();\n\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n\n\n    }\n\n    copyNodes(nodes){\n        this.copiedNodes = nodes.map(d=>this.data.cloneSubtree(d));\n    }\n\n\n\n    pasteToNode(node) {\n        if(!this.copiedNodes || !this.copiedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=>{\n            var attached = this.data.attachSubtree(toAttach, node).childNode;\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            var location = self.layout.getNewChildLocation(node);\n            attached.moveTo(location.x, location.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        if(node.folded){\n            self.foldSubtree(node, node.folded, false);\n        }\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    pasteToNewLocation(point) {\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=> {\n            var attached = this.data.attachSubtree(toAttach);\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            attached.moveTo(point.x, point.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    convertNode(node, typeToConvertTo){\n        var self = this;\n        this.data.saveState();\n        this.data.convertNode(node, typeToConvertTo);\n        setTimeout(function(){\n            self.redraw(true);\n        },10)\n    }\n\n    performOperation(object, operation){\n        var self = this;\n        this.data.saveState();\n        operation.perform(object);\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    foldSubtree(node, fold = true, redraw=true){\n        let self = this;\n        node.folded = fold;\n\n        this.data.getAllDescendantNodes(node).forEach(n=>{\n            n.$hidden = fold;\n            n.folded = false;\n        });\n        this.data.getAllDescendantEdges(node).forEach(e=>e.$hidden = fold);\n\n        if(!redraw){\n            return;\n        }\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    updateVisibility(node = null){\n        if(!node){\n            this.data.getRoots().forEach(n=>this.updateVisibility(n));\n            return;\n        }\n\n        if(node.folded){\n            this.foldSubtree(node, true, false);\n            return;\n        }\n\n        node.childEdges.forEach(e => this.updateVisibility(e.childNode));\n\n    }\n\n    moveNodeTo(x,y){\n\n    }\n\n    updateNodePosition(node) {\n        this.getNodeD3Selection(node).raise().attr('transform', 'translate('+node.location.x+' '+node.location.y+')');\n    }\n\n    updateTextPosition(text) {\n        this.getTextD3Selection(text).raise().attr('transform', 'translate('+text.location.x+' '+text.location.y+')');\n    }\n\n    getNodeD3Selection(node){\n        return this.getNodeD3SelectionById(node.$id);\n    }\n\n    getNodeD3SelectionById(id){\n        return this.mainGroup.select('#node-'+id);\n    }\n    getTextD3Selection(text){\n        return this.getTextD3SelectionById(text.$id);\n    }\n    getTextD3SelectionById(id){\n        return this.mainGroup.select('#text-'+id);\n    }\n\n    getSelectedNodes(visibleOnly = false) {\n        let selectedVisible = this.mainGroup.selectAll(\".node.selected\").data();\n        if(visibleOnly){\n            return selectedVisible;\n        }\n\n        let allSelected  = [];\n        allSelected.push(...selectedVisible);\n\n        selectedVisible.forEach(n=>{\n            if(n.folded){\n                let descendants = this.data.getAllDescendantNodes(n);\n                if(descendants){\n                    allSelected.push(...descendants);\n                }\n            }\n        });\n\n        return allSelected;\n    }\n\n    getSelectedTexts(){\n        return this.mainGroup.selectAll(\".floating-text.selected\").data();\n    }\n\n    clearSelection(){\n        this.mainGroup.selectAll(\".edge.selected\").select('path').attr(\"marker-end\", d => \"url(#arrow\"+(this.isOptimal(d)?'-optimal':'')+\")\")\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\n        this.config.onSelectionCleared();\n    }\n\n    selectEdge(edge, clearSelectionBeforeSelect){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.config.onEdgeSelected(edge);\n        this.mainGroup.select('#edge-'+edge.$id)\n            .classed('selected', true)\n            .select('path')\n            .attr(\"marker-end\", d => \"url(#arrow-selected)\")\n    }\n\n    isNodeSelected(node){\n        return this.getNodeD3Selection(node).classed('selected');\n    }\n\n    selectNode(node, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onNodeSelected(node);\n        }\n\n        this.getNodeD3SelectionById(node.$id).classed('selected', true);\n    }\n\n    selectText(text, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onTextSelected(text)\n        }\n\n        this.getTextD3SelectionById(text.$id).classed('selected', true);\n    }\n\n    selectSubTree(node, clearSelectionBeforeSelect,skipCallback) {\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.selectNode(node, false, skipCallback);\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode, false, true));\n    }\n\n    selectAllNodes() {\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        this.layout.autoLayout(type, withoutStateSaving);\n    }\n\n    updateDiagramTitle(titleValue){\n        if(!titleValue){\n            titleValue = '';\n        }\n        this.diagramTitle = titleValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n    redrawDiagramTitle(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n        title.text(this.diagramTitle);\n        Layout.setHangingPosition(title);\n\n        var marginTop = parseInt(this.config.title.margin.top);\n        this.titleContainer.attr('transform', 'translate('+(svgWidth/2)+','+( marginTop)+')');\n    }\n    redrawDiagramDescription(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var desc = this.titleContainer.selectOrAppend('text.sd-description');\n\n        if(!this.config.description.show){\n            desc.remove();\n            return;\n        }\n\n        var lines = this.diagramDescription ? this.diagramDescription.split('\\n') : [];\n        var tspans = desc.selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        Layout.setHangingPosition(desc);\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n\n        var marginTop = 0;\n        if(this.diagramTitle){\n            marginTop += title.node().getBBox().height;\n            marginTop+= Math.max(parseInt(this.config.description.margin.top), 0);\n        }\n\n\n        desc.attr('transform', 'translate(0,'+( marginTop)+')');\n    }\n\n    updateDiagramDescription(descriptionValue){\n        if(!descriptionValue){\n            descriptionValue = '';\n        }\n        this.diagramDescription = descriptionValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n\n    getTitleGroupHeight(withMargins){\n        if(!this.titleContainer){\n            return 0;\n        }\n        var h = this.titleContainer.node().getBBox().height;\n        if(withMargins){\n            h+= parseInt(this.config.title.margin.bottom);\n            h+= parseInt(this.config.title.margin.top);\n        }\n        return h;\n    }\n\n}\n","module.exports={\n  \"name\": \"silver-decisions\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Software for creating and analyzing decision trees.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/SilverDecisions/SilverDecisions.git\"\n  },\n  \"author\": \"Michał Wasiluk, Bogumił Kamiński, Przemysław Szufel\",\n  \"license\": \"LGPL-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/SilverDecisions/SilverDecisions/issues\"\n  },\n  \"homepage\": \"https://github.com/SilverDecisions/SilverDecisions#readme\",\n  \"browserify\": {\n    \"transform\": [\n      [\n        \"babelify\",\n        {\n          \"presets\": [\n            \"es2015\"\n          ],\n          \"plugins\": [\n            [\n              \"transform-class-properties\",\n              {\n                \"spec\": true\n              }\n            ],\n            \"transform-object-assign\",\n            \"transform-es2015-spread\",\n            \"transform-object-rest-spread\",\n            [\n              \"babel-plugin-transform-builtin-extend\",\n              {\n                \"globals\": [\n                  \"Error\"\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    ]\n  },\n  \"devDependencies\": {\n    \"babel-plugin-transform-builtin-extend\": \"^1.1.2\",\n    \"babel-plugin-transform-class-properties\": \"^6.11.5\",\n    \"babel-plugin-transform-es2015-spread\": \"^6.22.0\",\n    \"babel-plugin-transform-object-assign\": \"^6.8.0\",\n    \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.14.0\",\n    \"babelify\": \"^7.3.0\",\n    \"browser-sync\": \"^2.13.0\",\n    \"browserify\": \"^14.5.0\",\n    \"browserify-resolutions\": \"^1.1.0\",\n    \"browserify-shim\": \"^3.8.13\",\n    \"chalk\": \"^2.3.0\",\n    \"del\": \"^3.0.0\",\n    \"es6-set\": \"^0.1.5\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-concat\": \"^2.6.0\",\n    \"gulp-filelist\": \"^1.0.0\",\n    \"gulp-html2js\": \"^0.4.2\",\n    \"gulp-load-plugins\": \"^1.2.4\",\n    \"gulp-minify-css\": \"^1.2.4\",\n    \"gulp-plumber\": \"^1.1.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-replace\": \"^0.6.1\",\n    \"gulp-sass\": \"^3.1.0\",\n    \"gulp-sourcemaps\": \"^2.6.1\",\n    \"gulp-strip-debug\": \"^1.1.0\",\n    \"gulp-template\": \"^4.0.0\",\n    \"gulp-uglify\": \"^3.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"jasmine\": \"^2.5.2\",\n    \"jasmine-jquery\": \"^2.1.1\",\n    \"karma\": \"^1.7.0\",\n    \"karma-browserify\": \"^5.1.1\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-intl-shim\": \"^1.0.3\",\n    \"karma-jasmine\": \"^1.0.2\",\n    \"merge-stream\": \"^1.0.0\",\n    \"odc-d3\": \"^1.1.6\",\n    \"run-sequence\": \"^2.0.0\",\n    \"stringify\": \"^5.1.0\",\n    \"svg2pdf.js\": \"^1.1.1\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"yargs\": \"^10.0.3\"\n  },\n  \"dependencies\": {\n    \"autosize\": \"^4.0.0\",\n    \"blueimp-canvas-to-blob\": \"^3.3.0\",\n    \"d3-array\": \"^1.0.1\",\n    \"d3-dispatch\": \"^1.0.1\",\n    \"d3-drag\": \"^1.0.1\",\n    \"d3-scale\": \"^1.0.3\",\n    \"d3-selection\": \"^1.0.2\",\n    \"d3-time-format\": \"^2.0.2\",\n    \"file-saver\": \"^1.3.2\",\n    \"hammerjs\": \"^2.0.8\",\n    \"i18next\": \"^10.0.3\",\n    \"jquery\": \"^3.1.1\",\n    \"jquery-ui\": \"^1.12.1\",\n    \"pivottable\": \"^2.11.0\",\n    \"sd-computations\": \"0.3.5\",\n    \"sd-model\": \"0.2.6\",\n    \"sd-utils\": \"0.1.10\",\n    \"sd-tree-designer\": \"0.1.11\"\n  }\n}\n","import * as d3 from \"./d3\";\nimport * as autosize from \"autosize\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils as TdUtils} from \"sd-tree-designer\";\n\nexport class AppUtils extends TdUtils{\n\n\n\n    static updateInputClass(selection){\n        var value = selection.node().value;\n        selection.classed('empty', value!==0 && !value);\n        return selection;\n    }\n\n    static autoResizeTextarea(element){\n        setTimeout(function(){\n            element.style.width = \"\";\n            var width = element.getBoundingClientRect().width;\n            if(width){\n                element.style.width = width+'px';\n            }\n            autosize.update(element);\n        }, 10);\n    }\n\n    static elasticTextarea(selection){\n        setTimeout(function(){\n            selection.style('width',undefined);\n            var width = selection.node().getBoundingClientRect().width;\n            if(width){\n                selection.style('width', width+'px')\n            }\n            autosize.default(selection.node());\n        },10)\n    }\n\n    static postByForm(url, data) {\n        var name,\n            form;\n\n        // create the form\n        form = AppUtils.createElement('form', AppUtils.mergeDeep({\n            method: 'post',\n            action: url,\n            enctype: 'multipart/form-data'\n        }), document.body);\n\n        for (name in data) {\n            if(data.hasOwnProperty(name)){\n                AppUtils.createElement('input', {\n                    type: 'hidden',\n                    name: name,\n                    value: data[name]\n                }, form);\n            }\n        }\n\n        form.submit();\n\n        AppUtils.removeElement(form);\n    };\n\n    static showFullScreenPopup(title, html, closeCallback){\n        var popup = d3.select(\"body\").selectOrAppend(\"div.sd-full-screen-popup-container\").html(Templates.get('fullscreenPopup', {title:title,body:html}));\n        popup.select('.sd-close-popup').on('click', ()=>{\n            popup.remove();\n            if(closeCallback) {\n                closeCallback()\n            }\n        })\n\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport * as model from \"sd-model\";\nimport {TreeDesigner} from \"sd-tree-designer\";\nimport {Templates} from \"./templates\";\nimport {Sidebar} from \"./sidebar\";\nimport {Toolbar} from \"./toolbar\";\nimport {SettingsDialog} from \"./dialogs/settings-dialog\";\nimport {AboutDialog} from \"./dialogs/about-dialog\";\nimport {Exporter} from \"./exporter\";\nimport {DefinitionsDialog} from \"./dialogs/definitions-dialog\";\nimport {ComputationsManager} from \"sd-computations\";\nimport {SensitivityAnalysisDialog} from \"./dialogs/sensitivity-analysis-dialog\";\nimport {LoadingIndicator} from \"./loading-indicator\";\nimport {LeagueTableDialog} from \"./league-table/league-table-dialog\";\n\nvar buildConfig = require('../tmp/build-config.js');\n\nexport class AppConfig {\n    readOnly = false;\n    logLevel = 'warn';\n    workerUrl = null;\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n    buttons = {\n        new: true,\n        save: true,\n        open: true,\n        exportToPng: true,\n        exportToSvg: true,\n        exportToPdf: true\n    };\n    exports = {\n        show: true,\n        serverUrl: 'http://export.highcharts.com', //url of the export server\n        pdf: {\n            mode: 'server', // available options: 'client', 'server', 'fallback',\n        },\n        png: {\n            mode: 'fallback', // available options: 'client', 'server', 'fallback',\n        }\n    };\n    showDetails = true;\n    showDefinitions = true;\n    jsonFileDownload = true;\n    width = undefined;\n    height = undefined;\n    rule = \"expected-value-maximization\";\n    lng = 'en';\n    format = {// NumberFormat  options\n        locales: 'en',\n        payoff1: {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        payoff2: {\n            style: 'decimal',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        probability: { // NumberFormat  options\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 3,\n            useGrouping: true\n        }\n    };\n    title = '';\n    description = '';\n    treeDesigner = {};\n    leagueTable = {\n        plot: {\n            maxWidth: \"800px\",\n            groups: {\n                'highlighted': {\n                    color: '#008000'\n                },\n                'highlighted-default': {\n                    color: '#00bd00'\n                },\n                'extended-dominated': {\n                    color: '#ffa500'\n                },\n                'dominated': {\n                    color: '#ff0000'\n                },\n                'default': {\n                    color: '#000000'\n                }\n            }\n        }\n    };\n\n    //https://github.com/d3/d3-format/blob/master/README.md#format\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class App {\n    static version = ''; // version is set from package.json\n    static buildTimestamp = buildConfig.buildTimestamp;\n    static utils = Utils;\n    static appUtils = AppUtils;\n    static d3 = d3;\n\n    config;\n    container;\n    dataModel; //Data model manager\n    expressionEngine;\n    computationsManager;\n    treeDesigner;\n    toolbar;\n    sidebar;\n    viewModes = [];\n    currentViewMode;\n\n    payoffsMaximization=[true, false];\n\n    constructor(containerIdOrElem, config, diagramData) {\n        var p = Promise.resolve();\n        this.setConfig(config);\n        this.initI18n();\n        this.initContainer(containerIdOrElem);\n        this.initViewModes();\n        this.initDataModel();\n        p = this.initComputationsManager();\n        this.initProbabilityNumberFormat();\n        this.initPayoffNumberFormat();\n        this.initTreeDesigner();\n        this.initSidebar();\n        this.initSettingsDialog();\n        this.initAboutDialog();\n        this.initDefinitionsDialog();\n        this.initSensitivityAnalysisDialog();\n        this.initLeagueTableDialog();\n        this.initOnBeforeUnload();\n        this.initKeyCodes();\n        p.then(()=> {\n            this.initToolbar();\n            if (diagramData) {\n                this.openDiagram(diagramData);\n            } else {\n                this.updateView();\n            }\n        }).catch(e=> {\n            log.error(e);\n        });\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new AppConfig();\n        } else {\n            this.config = new AppConfig(config);\n        }\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    static growl() {\n        return AppUtils.growl(arguments)\n    }\n\n    setLogLevel(level) {\n        log.setLevel(level)\n    }\n\n    initContainer(containerIdOrElem) {\n\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else {\n            this.container = d3.select(containerIdOrElem);\n        }\n        var self = this;\n\n        let html = Templates.get('main', {\n            version: App.version,\n            buildTimestamp: App.buildTimestamp,\n            'lng': self.config.lng\n        });\n        this.container.html(html);\n\n        this.container.select('#silver-decisions').classed('sd-read-only', this.config.readOnly);\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n    initDataModel() {\n        var self = this;\n        this.dataModel = new model.DataModel();\n        // this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = ()=>self.onNodeAddedOrRemoved();\n        this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = (node)=> Utils.waitForFinalEvent(()=>this.onNodeAddedOrRemoved(), 'onNodeAddedOrRemoved', 5);\n\n        this.dataModel.textAddedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextAdded(text), 'onTextAdded');\n        this.dataModel.textRemovedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextRemoved(text), 'onTextAdded');\n    }\n\n    initComputationsManager() {\n        this.computationsManager = new ComputationsManager({\n            ruleName: this.config.ruleName,\n            worker: {\n                url: this.config.workerUrl,\n            },\n            jobRepositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        }, this.dataModel);\n        this.expressionEngine = this.computationsManager.expressionEngine;\n        return this.checkValidityAndRecomputeObjective(false, false, false, true);\n\n    }\n\n    initSidebar() {\n        this.sidebar = new Sidebar(this.container.select('#sd-sidebar'), this);\n\n    }\n\n    initSettingsDialog() {\n        this.settingsDialog = new SettingsDialog(this);\n    }\n\n    initAboutDialog() {\n        this.aboutDialog = new AboutDialog(this);\n    }\n\n    initDefinitionsDialog() {\n        this.definitionsDialog = new DefinitionsDialog(this);\n        this.definitionsDialog.onClosed = ()=> this.recompute(true, true);\n\n    }\n\n    initLeagueTableDialog() {\n        this.leagueTableDialog = new LeagueTableDialog(this);\n    }\n\n    isLeagueTableAvailable() {\n        return this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.leagueTableDialog.validateParams();\n    }\n\n    initSensitivityAnalysisDialog() {\n        this.sensitivityAnalysisDialog = new SensitivityAnalysisDialog(this);\n\n    }\n\n    isSensitivityAnalysisAvailable() {\n        return !this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.dataModel.getGlobalVariableNames(true).length;\n    }\n\n    initToolbar() {\n        this.toolbar = new Toolbar(this.container.select('#sd-toolbar'), this);\n\n    }\n\n    initPayoffNumberFormat() {\n\n        this.payoffNumberFormat = [\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff1),\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff2)\n        ]\n\n    }\n\n    initProbabilityNumberFormat() {\n        this.probabilityNumberFormat = new Intl.NumberFormat(this.config.format.locales, this.config.format.probability);\n    }\n\n    initTreeDesigner() {\n        var self = this;\n        var config = this.getTreeDesignerInitialConfig();\n        let container2 = this.container.select('#tree-designer-container');\n\n        this.treeDesigner = new TreeDesigner(container2, this.dataModel, config);\n    }\n\n    getTreeDesignerInitialConfig() {\n        var self = this;\n\n        return Utils.deepExtend({\n            lng: self.config.lng,\n            readOnly: self.config.readOnly,\n            onNodeSelected: function (node) {\n                self.onObjectSelected(node);\n            },\n            onEdgeSelected: function (edge) {\n                self.onObjectSelected(edge);\n            },\n            onTextSelected: function (text) {\n                self.onObjectSelected(text);\n            },\n            onSelectionCleared: function () {\n                self.onSelectionCleared();\n            },\n            payoffNumberFormatter: (v, i) => {\n                let prefix = '';\n                if(self.currentViewMode.multiCriteria){\n                    prefix =  self.dataModel.payoffNames[i].charAt(0) + ': ';\n                }\n\n                return prefix + self.payoffNumberFormat[i || self.currentViewMode.payoffIndex || 0].format(v)\n            },\n            probabilityNumberFormatter: (v) => self.probabilityNumberFormat.format(v),\n            operationsForObject: (o) => self.computationsManager.operationsForObject(o)\n        }, self.config.treeDesigner);\n    }\n\n    onObjectSelected(object) {\n        var self = this;\n        if (this.selectedObject === object) {\n            return;\n        }\n        this.selectedObject = object;\n        setTimeout(function () {\n            self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10)\n    }\n\n    onSelectionCleared() {\n        var self = this;\n        this.selectedObject = null;\n        this.sidebar.hideObjectProperties();\n        setTimeout(function () {\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10);\n        // console.log();\n    }\n\n    getCurrentVariableDefinitionsSourceObject() {\n        if (this.selectedObject) {\n            if (this.selectedObject instanceof model.domain.Node) {\n                return this.selectedObject;\n            }\n            if (this.selectedObject instanceof model.domain.Edge) {\n                return this.selectedObject.parentNode;\n            }\n        }\n        return this.dataModel;\n    }\n\n    updateVariableDefinitions() {\n        var self = this;\n        var definitionsSourceObject = self.getCurrentVariableDefinitionsSourceObject();\n        var readOnly = (this.selectedObject instanceof model.domain.Edge) || (this.selectedObject instanceof model.domain.TerminalNode);\n        self.sidebar.updateDefinitions(definitionsSourceObject, readOnly, (code)=> {\n            self.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            self.recompute(true, true)\n        });\n\n    }\n\n    openDefinitionsDialog() {\n        var definitionsSourceObject = this.getCurrentVariableDefinitionsSourceObject();\n        this.definitionsDialog.open(definitionsSourceObject, (code)=> {\n            this.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            this.recompute(true, true);\n        });\n    }\n\n    updateView(withTransitions = true) {\n        // console.log('_updateView');\n        this.treeDesigner.redraw(withTransitions);\n        this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        this.updateVariableDefinitions();\n        this.toolbar.update();\n        this.sidebar.updateLayoutOptions();\n        this.sidebar.updateDiagramDetails();\n        this.sidebar.updateMultipleCriteria();\n    }\n\n    undo() {\n        var self = this;\n        self.dataModel.undo();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n\n    }\n\n    redo() {\n        var self = this;\n        self.dataModel.redo();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n    }\n\n    onNodeAddedOrRemoved() {\n        var self = this;\n        return this.checkValidityAndRecomputeObjective().then(()=> {\n            self.updateView();\n        });\n\n    }\n\n    onTextAdded(text) {\n        return this.onObjectSelected(text);\n    }\n\n    onTextRemoved(text) {\n        this.updateView();\n    }\n\n    onObjectUpdated(object, fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (!(object instanceof model.domain.Text) && fieldName !== 'name') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        // this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n            }, 1);\n        });\n    }\n\n    onMultiCriteriaUpdated(fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (fieldName === 'defaultCriterion1Weight') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        this.sidebar.updateMultipleCriteria();\n\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n                self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            }, 1);\n        });\n    }\n\n    setObjectiveRule(ruleName, evalCode = false, evalNumeric = false, updateView = true, recompute = true) {\n        let prevRule = this.computationsManager.getCurrentRule();\n        this.computationsManager.setCurrentRuleByName(ruleName);\n        let currentRule = this.computationsManager.getCurrentRule();\n        let multiCriteria = currentRule.multiCriteria;\n        this.treeDesigner.config.maxPayoffsToDisplay = multiCriteria ? 2 : 1;\n\n        if (multiCriteria) {\n            this.payoffsMaximization = currentRule.payoffCoeffs.map(c=>c>0);\n\n            if (!this.dataModel.payoffNames.length) {\n                this.dataModel.payoffNames.push(null, null);\n                this.dataModel.payoffNames[0] = i18n.t('multipleCriteria.defaultMinimizedCriterionName');\n                this.dataModel.payoffNames[1] = i18n.t('multipleCriteria.defaultMaximizedCriterionName');\n            }\n            this.treeDesigner.config.payoffNames = this.dataModel.payoffNames;\n        } else {\n            this.payoffsMaximization[this.currentViewMode.payoffIndex] = currentRule.maximization;\n            this.treeDesigner.config.payoffNames = [null, null];\n        }\n        if (!recompute) {\n            return Promise.resolve();\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, evalCode, evalNumeric).then(()=> {\n            if (updateView) {\n                this.updateView(false);\n            }\n        });\n\n    }\n\n    isMultipleCriteria() {\n        return this.computationsManager.getCurrentRule().multiCriteria;\n    }\n\n    flipCriteria() {\n        let tmp = this.config.format.payoff1;\n        this.config.format.payoff1 = this.config.format.payoff2;\n        this.config.format.payoff2 = tmp;\n        this.initPayoffNumberFormat();\n\n        this.computationsManager.flipCriteria().then(()=> {\n            this.updateView(false);\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n\n    getCurrentObjectiveRule() {\n        return this.computationsManager.getCurrentRule();\n    }\n\n    getObjectiveRules() {\n        return this.computationsManager.getObjectiveRules().filter(rule=>rule.multiCriteria === this.currentViewMode.multiCriteria);\n    }\n\n\n    initViewModes() {\n        this.viewModes.push({\n            name: \"criterion1\",\n            multiCriteria: false,\n            payoffIndex: 0,\n        });\n\n        this.viewModes.push({\n            name: \"criterion2\",\n            multiCriteria: false,\n            payoffIndex: 1,\n        });\n\n        this.viewModes.push({\n            name: \"twoCriteria\",\n            multiCriteria: true,\n            payoffIndex: null,\n        });\n        this.currentViewMode = this.viewModes[0];\n    }\n\n    getCurrentViewMode() {\n        return this.currentViewMode;\n    }\n\n    setViewModeByName(name, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.name === name), recompute, updateView)\n    }\n\n    setViewMode(mode, recompute = true, updateView = true) {\n        let prevMode = this.currentViewMode;\n        this.currentViewMode = mode;\n\n        this.computationsManager.objectiveRulesManager.setPayoffIndex(this.currentViewMode.payoffIndex);\n\n\n        if (!recompute) {\n            return Promise.resolve();\n        }\n        let rules = this.getObjectiveRules();\n        let prevRule = this.computationsManager.getCurrentRule();\n        let newRule = rules[0];\n\n\n        if(this.currentViewMode.payoffIndex !== null){\n            newRule = Utils.find(rules, r => r.maximization == this.payoffsMaximization[this.currentViewMode.payoffIndex])\n        }else{\n            newRule = Utils.find(rules, r => r.payoffCoeffs.map(c=>c>0).every((max, i)=> this.payoffsMaximization[i] === max))\n        }\n\n        this.setObjectiveRule(newRule.name, false, false, updateView, recompute)\n    }\n\n    setDefaultViewModeForRule(rule, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.multiCriteria === rule.multiCriteria), recompute, updateView)\n    }\n\n    getViewModes() {\n        return this.viewModes;\n    }\n\n    showLeagueTable() {\n        this.leagueTableDialog.open();\n    }\n\n    openSensitivityAnalysis() {\n        let self = this;\n        setTimeout(function(){\n            if(!self.isSensitivityAnalysisAvailable()){\n                return;\n            }\n            self.sensitivityAnalysisDialog.open();\n        }, 200);\n\n    }\n\n    showTreePreview(dataDTO, closeCallback, autoLayout = true) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.dataModel.loadFromDTO(dataDTO, this.computationsManager.expressionEngine.getJsonReviver());\n        this.computationsManager.updateDisplayValues(this.dataModel);\n        this.updateView(false);\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node());\n                AppUtils.showFullScreenPopup('', svgString, ()=> {\n                    if (closeCallback) {\n                        self.dataModel._setNewState(self.originalDataModelSnapshot);\n                        self.updateView(false);\n\n                        closeCallback();\n                        setTimeout(function () {\n                            self.updateView(false);\n                        }, 1)\n                    }\n                });\n            }, 300);\n        }, 1)\n\n    }\n\n    showPolicyPreview(title, policy, closeCallback) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.computationsManager.displayPolicy(policy);\n        this.updateView(false);\n        AppUtils.showFullScreenPopup(title, '');\n        LoadingIndicator.show();\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node(), true);\n                LoadingIndicator.hide();\n                AppUtils.showFullScreenPopup(title, svgString, ()=> {\n\n                    self.dataModel._setNewState(self.originalDataModelSnapshot);\n\n                    // self.computationsManager.updateDisplayValues(self.dataModel);\n                    self.updateView(false);\n                    if (closeCallback) {\n                        closeCallback();\n                    }\n                    setTimeout(function () {\n                        self.updateView(false);\n                    }, 1)\n                });\n            }, 500);\n        }, 1)\n    }\n\n\n    recompute(updateView = true, debounce = false, forceWhenAutoIsDisabled=true) {\n        if (debounce) {\n            if (!this.debouncedRecompute) {\n                this.debouncedRecompute = Utils.debounce((updateView)=>this.recompute(updateView, false), 200);\n            }\n            this.debouncedRecompute(updateView);\n            return;\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, true, true, forceWhenAutoIsDisabled).then(()=> {\n            if (updateView) {\n                this.updateView();\n            }\n        });\n\n    }\n\n    onRawOptionChanged(){\n        if(this.isAutoRecalculationEnabled()){\n            return this.checkValidityAndRecomputeObjective(false, false).then(()=> {\n                this.updateView();\n            })\n        }\n    }\n\n    isAutoRecalculationEnabled(){\n        return !this.treeDesigner.config.raw;\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true, forceWhenAutoIsDisabled=false) {\n        if(!forceWhenAutoIsDisabled && !this.isAutoRecalculationEnabled()){\n            return Promise.resolve();\n        }\n\n        return this.computationsManager.checkValidityAndRecomputeObjective(allRules, evalCode, evalNumeric).then(()=> {\n            this.updateValidationMessages();\n            AppUtils.dispatchEvent('SilverDecisionsRecomputedEvent', this);\n        }).catch(e=> {\n            log.error(e);\n        });\n\n    }\n\n    updateValidationMessages() {\n        var self = this;\n        setTimeout(function () {\n            self.treeDesigner.updateValidationMessages();\n        }, 1);\n    }\n\n    newDiagram() {\n        this.clear();\n        this.updateView();\n    }\n\n    clear() {\n        this.dataModel.clear();\n        this.currentViewMode = this.viewModes[0];\n        this.computationsManager.setCurrentRuleByName(this.computationsManager.getObjectiveRules()[0].name);\n        this.setDiagramTitle('', true);\n        this.setDiagramDescription('', true);\n        this.treeDesigner.setConfig(Utils.deepExtend(this.getTreeDesignerInitialConfig()));\n        this.onSelectionCleared();\n        this.sensitivityAnalysisDialog.clear(true, true)\n\n    }\n\n    openDiagram(diagramData) {\n\n        var self = this;\n        var errors = [];\n\n        if (Utils.isString(diagramData)) {\n            try {\n                diagramData = JSON.parse(diagramData, self.computationsManager.expressionEngine.getJsonReviver());\n            } catch (e) {\n                errors.push('error.jsonParse');\n                alert(i18n.t('error.jsonParse'));\n                log.error(e);\n                return Promise.resolve(errors);\n            }\n        }\n\n        var dataModelObject = diagramData.data;\n\n        this.clear();\n        if (!diagramData.SilverDecisions) {\n            errors.push('error.notSilverDecisionsFile');\n            alert(i18n.t('error.notSilverDecisionsFile'));\n            return Promise.resolve(errors);\n        }\n\n        if (!Utils.isValidVersionString(diagramData.SilverDecisions)) {\n            errors.push('error.incorrectVersionFormat');\n            alert(i18n.t('error.incorrectVersionFormat'));\n        } else {\n            //Check if version in file is newer than version of application\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, App.version) > 0) {\n                errors.push('error.fileVersionNewerThanApplicationVersion');\n                alert(i18n.t('error.fileVersionNewerThanApplicationVersion'));\n            }\n\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, \"0.7.0\") < 0) {\n                dataModelObject = {\n                    code: diagramData.code,\n                    expressionScope: diagramData.expressionScope,\n                    trees: diagramData.trees,\n                    texts: diagramData.texts\n                }\n            }\n        }\n\n        try {\n            if (diagramData.lng) {\n                this.config.lng = diagramData.lng;\n            }\n\n            if (diagramData.rule) {\n                if (this.computationsManager.isRuleName(diagramData.rule)) {\n                    this.config.rule = diagramData.rule;\n                } else {\n                    delete this.config.rule;\n                }\n            }\n\n            if (diagramData.viewMode) {\n                this.setViewModeByName(diagramData.viewMode)\n            } else {\n                this.setDefaultViewModeForRule(this.computationsManager.getObjectiveRuleByName(this.config.rule), false, false);\n            }\n\n            if (diagramData.format) {\n                this.config.format = diagramData.format;\n            }\n\n            this.setConfig(this.config);\n            this.dataModel.load(dataModelObject);\n\n            if (diagramData.treeDesigner) {\n                this.treeDesigner.setConfig(Utils.deepExtend(self.getTreeDesignerInitialConfig(), diagramData.treeDesigner));\n            }\n            this.treeDesigner.updateVisibility();\n\n            this.setDiagramTitle(diagramData.title || '', true);\n            this.setDiagramDescription(diagramData.description || '', true);\n\n            if (diagramData.sensitivityAnalysis) {\n                this.sensitivityAnalysisDialog.loadSavedParamValues(diagramData.sensitivityAnalysis);\n            }\n\n        } catch (e) {\n            errors.push('error.malformedData');\n            alert(i18n.t('error.malformedData'));\n            this.clear();\n            log.error('malformedData', e);\n            return Promise.resolve(errors);\n\n        }\n        try {\n            this.updateNumberFormats(false);\n        } catch (e) {\n            log.error('incorrectNumberFormatOptions', e);\n            errors.push('error.incorrectNumberFormatOptions');\n            alert(i18n.t('error.incorrectNumberFormatOptions'));\n            delete this.config.format;\n            this.setConfig(this.config);\n            this.updateNumberFormats(false);\n        }\n        return this.setObjectiveRule(this.config.rule, false, true, false).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            return errors\n        }).then(()=> {\n            this.updateView(false);\n            return errors;\n        }).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            this.updateView(false);\n            return errors\n        });\n    }\n\n    serialize(filterLocation = false, filterComputed = false, filterPrivate = true) {\n        var self = this;\n        return self.checkValidityAndRecomputeObjective(true, false, false, true).then(()=> {\n            var obj = {\n                SilverDecisions: App.version,\n                buildTimestamp: App.buildTimestamp,\n                savetime: d3.isoFormat(new Date()),\n                lng: self.config.lng,\n                viewMode: self.currentViewMode.name,\n                rule: self.computationsManager.getCurrentRule().name,\n                title: self.config.title,\n                description: self.config.description,\n                format: self.config.format,\n                treeDesigner: self.treeDesigner.config,\n                data: self.dataModel.serialize(false),\n                sensitivityAnalysis: this.sensitivityAnalysisDialog.jobNameToParamValues\n            };\n\n            return Utils.stringify(obj, self.dataModel.getJsonReplacer(filterLocation, filterComputed, self.computationsManager.expressionEngine.getJsonReplacer(), filterPrivate), filterPrivate ? ['$'] : []);\n        });\n    }\n\n    saveToFile(filterLocation = false, filterComputed = false, filterPrivate = true){\n        this.serialize(filterLocation, filterComputed, filterPrivate).then((json)=>{\n            AppUtils.dispatchEvent('SilverDecisionsSaveEvent', json);\n            if(this.config.jsonFileDownload){\n                var blob = new Blob([json], {type: \"application/json\"});\n                Exporter.saveAs(blob, Exporter.getExportFileName('json'));\n            }\n        });\n    }\n\n    updateNumberFormats(updateView = true) {\n        this.initPayoffNumberFormat();\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    updatePayoffNumberFormat(updateView = true) {\n        this.initPayoffNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n\n    }\n\n    updateProbabilityNumberFormat(updateView = true) {\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    initOnBeforeUnload() {\n        var self = this;\n        window.addEventListener(\"beforeunload\", function (e) {\n            if (!(self.dataModel.isUndoAvailable() || self.dataModel.isRedoAvailable())) {\n                return;\n            }\n\n            var dialogText = i18n.t('confirm.beforeunload');\n            e.returnValue = dialogText;\n            return dialogText;\n        });\n    }\n\n    setConfigParam(path, value, withoutStateSaving, callback) {\n        var self = this;\n        var prevValue = Utils.get(this.config, path);\n\n        if (prevValue == value) {\n            return;\n        }\n        if (!withoutStateSaving) {\n            this.dataModel.saveState({\n                data: {\n                    prevValue: prevValue\n                },\n                onUndo: (data)=> {\n                    self.setConfigParam(path, data.prevValue, true, callback);\n                },\n                onRedo: (data)=> {\n                    self.setConfigParam(path, value, true, callback);\n                }\n            });\n        }\n        Utils.set(this.config, path, value);\n        if (callback) {\n            callback(value);\n        }\n    }\n\n\n    setDiagramTitle(title, withoutStateSaving) {\n        this.setConfigParam('title', title, withoutStateSaving, (v) => this.treeDesigner.updateDiagramTitle(v));\n    }\n\n    setDiagramDescription(description, withoutStateSaving) {\n        this.setConfigParam('description', description, withoutStateSaving, (v) => this.treeDesigner.updateDiagramDescription(v));\n    }\n\n    initKeyCodes() {\n\n        this.container.on(\"keyup\", (d)=> {\n            let srcElement = d3.event.target || d3.event.srcElement;\n\n            if (srcElement && ['INPUT', 'TEXTAREA'].indexOf(srcElement.nodeName.toUpperCase()) > -1) { //ignore events from input and textarea elements\n                return;\n            }\n\n            var key = d3.event.keyCode;\n            if (key == 46) {//delete\n                this.treeDesigner.removeSelectedNodes();\n                this.treeDesigner.removeSelectedTexts();\n                return;\n            }\n            if (!d3.event.ctrlKey) {\n                return;\n            }\n\n\n            if (d3.event.altKey) {\n                if (this.selectedObject instanceof model.domain.Node) {\n                    let selectedNode = this.selectedObject;\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.addDecisionNode(selectedNode);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.addChanceNode(selectedNode);\n                    } else if (key == 84) { // ctrl + alt + t\n                        this.treeDesigner.addTerminalNode(selectedNode);\n                    }\n                    return;\n                } else if (this.selectedObject instanceof model.domain.Edge) {\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.injectDecisionNode(this.selectedObject);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.injectChanceNode(this.selectedObject);\n                    }\n                }\n\n            }\n\n\n            if (key == 90) {//ctrl + z\n                this.undo();\n                return;\n            }\n            if (key == 89) {//ctrl + y\n                this.redo();\n                return;\n            }\n\n            /*if(key==65){//ctrl + a\n             if(selectedNodes.length==1){\n             this.treeDesigner.selectSubTree(selectedNodes[0])\n             }else{\n             this.treeDesigner.selectAllNodes();\n             }\n             // d3.event.preventDefault()\n             return;\n             }*/\n            var selectedNodes = this.treeDesigner.getSelectedNodes();\n            if (key == 86) {//ctrl + v\n                if (selectedNodes.length == 1) {\n                    let selectedNode = selectedNodes[0];\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    this.treeDesigner.pasteToNode(selectedNode)\n                } else if (selectedNodes.length == 0) {\n\n                }\n                return;\n            }\n\n            if (!selectedNodes.length) {\n                return;\n            }\n\n            if (key == 88) {//ctrl + x\n                this.treeDesigner.cutSelectedNodes();\n\n            } else if (key == 67) {//ctrl + c\n                this.treeDesigner.copySelectedNodes();\n\n            }\n\n        });\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nvar $ = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = $;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/button');\nrequire('jquery-ui/ui/widgets/menu');\nrequire('jquery-ui/ui/unique-id');\nrequire('jquery-ui/ui/position');\nrequire('jquery-ui/ui/keycode');\nrequire('jquery-ui/ui/safe-active-element');\nrequire('jquery-ui/ui/widgets/autocomplete');\nUtils.getGlobalObject().jQuery = global$;\n\nimport * as d3 from './d3'\n\n$( function() {\n    $.widget( \"sd.combobox\", {\n        _create: function() {\n            this.wrapper = $( \"<span>\" )\n                .addClass( \"sd-combobox\" )\n                .insertAfter( this.element );\n\n            this.element.hide();\n            this._createAutocomplete();\n            this._createShowAllButton();\n        },\n\n        _createAutocomplete: function() {\n            var selected = this.element.children( \":selected\" ),\n                value = selected.val() ? selected.text() : \"\";\n\n            this.input = $( \"<input>\" )\n                .appendTo( this.wrapper )\n                .val( value )\n                .attr( \"title\", \"\" )\n                .attr( \"type\", \"text\" )\n                .addClass( \"sd-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\n                .autocomplete({\n                    delay: 0,\n                    minLength: 0,\n                    source: $.proxy( this, \"_source\" ),\n                    classes: {\n                        \"ui-autocomplete\": \"sd-combobox-autocomplete\"\n                    }\n                });\n            $( \"<span class='bar'>\" ).appendTo( this.wrapper )\n\n            var input = this.input;\n            this._on( this.input, {\n                autocompleteselect: function( event, ui ) {\n                    ui.item.option.selected = true;\n                    this._trigger( \"select\", event, {\n                        item: ui.item.option\n                    });\n\n                },\n\n                autocompletechange: function(){\n                    let inputD3 = d3.select($(input).get(0));\n                    AppUtils.dispatchHtmlEvent(inputD3.node(), \"change\");\n                }\n            });\n        },\n\n        _createShowAllButton: function() {\n            var input = this.input,\n                wasOpen = false;\n\n            $( \"<button>\" )\n                .attr( \"tabIndex\", -1 )\n                .attr( \"type\", \"button\" )\n                .html('<i class=\"material-icons\">arrow_drop_down</i>')\n                .appendTo( this.wrapper )\n                .addClass( \"sd-combobox-toggle ui-corner-right\" )\n                .on( \"mousedown\", function() {\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\n                })\n                .on( \"click\", function() {\n                    input.trigger( \"focus\" );\n                    // Close if already visible\n                    if ( wasOpen ) {\n                        return;\n                    }\n\n                    // Pass empty string as value to search for, displaying all results\n                    input.autocomplete( \"search\", \"\" );\n                });\n        },\n\n        _source: function( request, response ) {\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n            response( this.element.children( \"option\" ).map(function() {\n                var text = $( this ).text();\n                if ( this.value && ( !request.term || matcher.test(text) ) )\n                    return {\n                        label: text,\n                        value: text,\n                        option: this\n                    };\n            }) );\n        },\n\n        _destroy: function() {\n            this.wrapper.remove();\n            this.element.show();\n        },\n\n        input_element: function(){\n            return this.input;\n        }\n    });\n} );\n\nexport class Autocomplete{\n\n\n    constructor(container){\n        this.container= container;\n        this.combobox = $( this.container.node() ).combobox();\n    }\n\n    getInput(){\n        return d3.select($(this.combobox).combobox('input_element').get(0))\n    }\n\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","import {Dialog} from './dialog'\n\nexport class AboutDialog extends Dialog{\n\n    constructor(app){\n        super(app.container.select('#sd-about-dialog'), app);\n    }\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {Templates} from \"../templates\";\nimport {domain as model} from \"sd-model\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class DefinitionsDialog extends Dialog {\n    changeCallback;\n\n    constructor(app) {\n        super(app.container.select('#sd-definitions-dialog'), app);\n        var self = this;\n\n        this.definitionsScopeLabel = this.container.select(\".sd-definitions-dialog-scope-label\");\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('input', function () {\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('change', function () {\n            if (self.changeCallback) {\n                self.changeCallback(this.value)\n            }\n        });\n\n        this.recalculateButton = this.container.select('button#sd-definitions-dialog-recalculate-button').on('click', function () {\n            self.app.recompute();\n        });\n\n        this.variableValuesContainer = this.container.select(\"#sd-definitions-dialog-variable-values\");\n        AppUtils.elasticTextarea(this.definitionsCode);\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.update();\n            }\n        });\n    }\n\n\n    open(definitionsSourceObject, changeCallback) {\n        super.open();\n        this.changeCallback = changeCallback;\n        this.definitionsSourceObject = definitionsSourceObject;\n        this.update();\n    }\n\n    update(force = false) {\n        if (!force && !this.isVisible()) {\n            return;\n        }\n\n        let scopeType = 'global';\n        let labelSuffix=\"\";\n        if (this.definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node';\n            let name =  this.definitionsSourceObject.name;\n            if(name){\n                labelSuffix += \" (\"+name+\")\"\n            }\n        }\n        this.definitionsScopeLabel.text(i18n.t(\"definitionsDialog.scope.\"+scopeType)+labelSuffix);\n\n        this.definitionsCode.node().value = this.definitionsSourceObject.code;\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node());\n        this.definitionsCode.classed('invalid', !!this.definitionsSourceObject.$codeError);\n        if(this.definitionsSourceObject.$codeError){\n            this.printError(this.definitionsSourceObject.$codeError);\n        }else{\n            this.printVariables(this.definitionsSourceObject.expressionScope);\n        }\n\n    }\n\n    printError(error) {\n        var html = error;\n        this.variableValuesContainer.html(html);\n    }\n\n    printVariables(scope) {\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(scope)});\n        this.variableValuesContainer.html(html);\n    }\n\n\n}\n","\nexport class Dialog{\n\n    app;\n\n    container;\n\n    constructor(container,app){\n        this.app = app;\n        this.container=container;\n        this.container.select('.sd-close-modal').on('click', ()=>this.close());\n        this.container.select('.sd-extend-modal').on('click', ()=>this.extend());\n        this.container.select('.sd-shrink-modal').on('click', ()=>this.shrink());\n    }\n\n    open(){\n        this.onOpen();\n        this.container.classed('open', true);\n    }\n    close(){\n        this.container.classed('open', false);\n        this.onClosed();\n    }\n\n    setFullScreen(fullScreen=true){\n        let self = this;\n        this.container.classed('sd-full-screen', fullScreen);\n        setTimeout(function(){ self.onResized() }, 10)\n    }\n\n    extend(){\n        this.setFullScreen();\n    }\n\n    shrink(){\n        this.setFullScreen(false);\n    }\n\n    isVisible(){\n        return this.container.classed('open');\n    }\n\n    onClosed(){\n\n    }\n\n    onOpen(){\n\n    }\n\n    onResized(){\n\n    }\n}\n","import {Dialog} from \"./dialog\";\nimport {JobParametersBuilder} from \"../jobs/job-parameters-builder\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {SensitivityAnalysisJobResultTable} from \"../jobs/sensitivity-analysis-result-table\";\nimport {ProbabilisticSensitivityAnalysisJobResultTable} from \"../jobs/probabilistic-sensitivity-analysis-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {TornadoDiagramPlot} from \"../jobs/tornado-diagram-plot\";\nimport {SpiderPlot} from \"../jobs/spider-plot\";\n\nexport class SensitivityAnalysisDialog extends Dialog {\n    computationsManager;\n    jobConfigurationContainer;\n\n    jobConfigurations = [];\n    jobInstanceManager;\n    jobNameToParamValues = {};\n\n    constructor(app) {\n        super(app.container.select('.sd-sensitivity-analysis-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        // this.initJobConfigurations();\n\n        this.jobConfigurationContainer = this.container.select(\".sd-sensitivity-analysis-job-configuration\");\n        this.parameterBuilderContainer = this.jobConfigurationContainer.select(\".sd-job-parameters-builder\");\n        this.jobParametersBuilder = new JobParametersBuilder(this.parameterBuilderContainer, 'job', () => this.onJobParametersChanged());\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-sensitivity-analysis-job-results\");\n        this.jobResultPlotContainer = this.jobResultsContainer.select(\".sd-job-result-plot-container\");\n\n        this.debouncedCheckWarnings = Utils.debounce(()=>this.checkWarnings(), 200);\n\n        this.initButtons();\n        let self = this;\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.onOpen();\n            }\n        });\n    }\n\n    onOpen() {\n\n        this.initJobConfigurations();\n        if (!this.jobSelect) {\n            this.initJobSelect();\n        }\n\n        let payoffConf = Utils.cloneDeep(this.app.config.format.payoff1);\n        payoffConf.style = 'decimal';\n        payoffConf.useGrouping = false;\n        this.payoffNumberFormat = new Intl.NumberFormat('en', payoffConf);\n        // this.payoffNumberFormat = {\n        //     format: v => this.app.computationsManager.expressionEngine.constructor.toFloat(v, payoffConf.maximumFractionDigits)\n        // }\n\n        this.clear();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n\n\n    onJobSelected(jobConfig) {\n\n        this.clearWarnings();\n        this.selectedJobConfig = jobConfig;\n        if (!jobConfig) {\n            return;\n        }\n        this.jobSelect.node().value = jobConfig.jobName;\n        let jobName = this.selectedJobConfig.jobName;\n        this.job = this.computationsManager.getJobByName(jobName);\n\n        var jobParamsValues = this.jobNameToParamValues[jobName] || {};\n\n        this.setJobParamsValues(jobParamsValues)\n    }\n\n    refreshSelectedJobConfig() {\n        if (this.selectedJobConfig) {\n            this.selectedJobConfig = Utils.find(this.jobConfigurations, (c)=>c.jobName === this.selectedJobConfig.jobName);\n        }\n    }\n\n    setJobParamsValues(jobParamsValues, deleteId = true) {\n        if(!this.job){\n            return;\n        }\n        this.refreshSelectedJobConfig();\n\n        if(deleteId){\n            delete jobParamsValues.id;\n        }\n        this.jobParameters = this.job.createJobParameters(jobParamsValues);\n\n        this.jobNameToParamValues[this.job.name] = this.jobParameters.values;\n\n        this.jobParametersBuilder.setJobParameters(this.job.name, this.jobParameters, this.selectedJobConfig.customParamsConfig);\n    }\n\n    onJobParametersChanged() {\n        this.debouncedCheckWarnings();\n\n    }\n\n    getGlobalVariableNames() {\n        return this.app.dataModel.getGlobalVariableNames(true);\n    }\n\n    initJobConfigurations() {\n        let self = this;\n        this.jobConfigurations.length = 0;\n        let ExpressionEngine = this.app.expressionEngine.constructor;\n        let customVariablesValidator = values => {\n            var isValidArray = [];\n\n            var names = [];\n            values.forEach((v, i)=>{\n                let isVariableInGlobalScope = self.app.dataModel.expressionScope.hasOwnProperty(v.name);\n                var valid = names.indexOf(v.name)<0 && isVariableInGlobalScope;\n                names.push(v.name);\n                isValidArray.push(valid);\n            });\n\n            return isValidArray;\n        };\n\n        let largeScenariosNumberWarning = {\n            name: 'largeScenariosNumber',\n            data: {\n                number: 10000,\n                numberFormatted: \"10,000\"\n            },\n            check: function (jobParameters) { // called with this set to warning config object\n                let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a * (b || 1), 1);\n                return combinations > this.data.number\n            }\n        };\n        this.jobConfigurations.push({\n            jobName: 'sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try {\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n\n                }\n            },\n            warnings: [\n                largeScenariosNumberWarning,\n                {\n                    name: 'largeParametersNumber',\n                    data: {\n                        number: 2,\n                    },\n                    check: function (jobParameters) { // called with this set to warning config object\n                        return jobParameters.values.variables.length > this.data.number\n                    }\n                }\n            ]\n        });\n\n\n        this.jobConfigurations.push({\n            jobName: 'tornado-diagram',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        },\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: (values)=>{\n                        let isValidNameArray = customVariablesValidator(values);\n\n                        return values.map((v, i)=>{\n                            if(!isValidNameArray[i]){\n                                return false;\n                            }\n\n                            if (!v.name || v.min === undefined || v.min === null || v.max === undefined || v.max === null) {\n                                return false;\n                            }\n\n                            let defVal = self.app.dataModel.expressionScope[v.name];\n                            return v.min < defVal && v.max >  defVal;\n                        });\n                    }\n\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a + b, 0);\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'probabilistic-sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    formula:{\n                        options: ExpressionEngine.randomMenuList,\n                        optionsAutocomplete: true\n                    },\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [largeScenariosNumberWarning]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'spider-plot',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.length * jobParameters.values.variables.length;\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n    }\n\n\n    checkWarnings() {\n        this.clearWarnings();\n        if (!this.selectedJobConfig.warnings) {\n            return;\n        }\n\n        this.selectedJobConfig.warnings.forEach(warnConf=> {\n            if (warnConf.check.call(warnConf, this.jobParameters)) {\n                this.addWarning(warnConf);\n            }\n        })\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-sensitivity-analysis-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-sensitivity-analysis-warnings\").appendSelector(\"div.sd-sensitivity-analysis-warning\").html(msgHTML);\n    }\n\n    initJobSelect() {\n        var self = this;\n        this.jobSelect = this.container.select(\".sd-job-select-input-group\").html(Templates.get(\"selectInputGroup\", {\n            id: Utils.guid(),\n            label: null,\n            name: \"sd-job-select\",\n            options: this.jobConfigurations.map(c=>({\n                label: i18n.t(\"job.\" + c.jobName + \".name\"),\n                value: c.jobName\n            }))\n        })).select(\"select\").on('change input', function (d) {\n            self.onJobSelected(Utils.find(self.jobConfigurations, c=>c.jobName === this.value))\n        });\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (rows, indexes, e)=> this.onResultRowSelected(rows, indexes, e),\n            className: \"sd-\" + this.job.name\n        };\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.setClassName(\"sd-\" + this.job.name);\n            this.resultTable.hide();\n        }\n\n        if (this.job.name == \"sensitivity-analysis\") {\n            this.resultTable = new SensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n        } else if (this.job.name == \"probabilistic-sensitivity-analysis\") {\n            this.resultTable = new ProbabilisticSensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config, (v) => this.payoffNumberFormat.format(v), (v) => this.app.probabilityNumberFormat.format(v));\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n\n        }\n\n\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-sensitivity-analysis-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n    initButtons() {\n        this.runJobButton = this.container.select(\".sd-run-job-button\").on('click', ()=> {\n            if (!this.jobParametersBuilder.validate()) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.checkWarnings();\n\n            this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n                onJobStarted: this.onJobStarted,\n                onJobCompleted: this.onJobCompleted,\n                onJobFailed: this.onJobFailed,\n                onJobStopped: this.onJobStopped,\n                onJobTerminated: this.onJobTerminated,\n                onProgress: this.onProgress,\n                callbacksThisArg: this\n            }).then(jobInstanceManager=> {\n                this.jobInstanceManager = jobInstanceManager;\n            }).catch(e=> {\n                log.error(e);\n            }).then(()=> {\n                this.disableActionButtonsAndShowLoadingIndicator(false);\n            })\n\n        });\n\n        this.resumeJobButton = this.container.select(\".sd-resume-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.resume();\n        });\n\n        this.stopJobButton = this.container.select(\".sd-stop-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.stop();\n        });\n\n        this.terminateJobButton = this.container.select(\".sd-terminate-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.terminateJob();\n        });\n\n        this.backButton = this.container.select(\".sd-back-button \").on('click', ()=> {\n            if (this.jobInstanceManager) {\n                this.jobInstanceManager.terminate();\n            }\n\n        });\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    loadSavedParamValues(jobNameToParamValues){\n        this.jobNameToParamValues = jobNameToParamValues;\n        this.selectedJobConfig = null;\n        this.jobParameters = null;\n    }\n\n\n    clear(clearParams = false, clearAllParams = false) {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        if (!this.selectedJobConfig) {\n            this.onJobSelected(this.jobConfigurations[0]);\n        }\n\n        if(clearAllParams){\n            Utils.forOwn(this.jobNameToParamValues, (value, key)=> this.jobNameToParamValues[key] = {})\n        }\n\n        let globalVariableNames = this.getGlobalVariableNames();\n        Utils.forOwn(this.jobNameToParamValues, (value, key)=> {\n            let paramValues = value;\n            if(clearAllParams){\n                paramValues = {}\n            }else if(paramValues.variables){\n                paramValues.variables = paramValues.variables.filter(v=>globalVariableNames.indexOf(v.name)!==-1);\n                if(!paramValues.variables.length){\n                    paramValues.variables.push({})\n                }\n            }\n\n            this.jobNameToParamValues[key] = paramValues;\n        });\n\n        if (this.job) {\n            if (clearParams) {\n                this.jobNameToParamValues[this.job.name] = {};\n                this.setJobParamsValues({});\n            } else {\n                this.jobParameters.values.ruleName = this.computationsManager.getCurrentRule().name;\n                this.setJobParamsValues(this.jobParameters.values);\n            }\n        }\n\n\n        AppUtils.show(this.jobConfigurationContainer);\n        AppUtils.show(this.runJobButton);\n        AppUtils.show(this.clearButton);\n\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.jobResultsContainer);\n        AppUtils.hide(this.backButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n        if(this.resultPlots){\n            this.resultPlots.forEach(p=>p.destroy())\n            this.jobResultPlotContainer.selectAll(\"*\").remove();\n        }\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.jobConfigurationContainer);\n        AppUtils.hide(this.runJobButton);\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.clearButton);\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n        AppUtils.show(this.stopJobButton);\n        AppUtils.show(this.terminateJobButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.backButton);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.clearButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlots(result);\n\n\n\n    }\n\n    initResultPlots(result) {\n\n\n        if (this.job.name === \"tornado-diagram\") {\n            this.initTornadoResultPlots(result);\n        } else if (this.job.name === \"spider-plot\") {\n            this.initSpiderResultPlots(result);\n        }\n\n\n\n    }\n\n    initTornadoResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new TornadoDiagramPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    initSpiderResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new SpiderPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    onResized() {\n        if (this.resultPlots) {\n            this.resultPlots.forEach(p=>p.init());\n\n        }\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.clearButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(rows, indexes, event) {\n\n        if (!rows.length) {\n            return;\n        }\n\n        let policyIndexes = rows.map(r=>r.policyIndex).filter((value, index, self)=>self.indexOf(value) === index);\n\n        if (policyIndexes.length > 1) {\n            Tooltip.show(i18n.t('jobResultTable.tooltip.multiplePoliciesInCell', {number: policyIndexes.length}), 5, 28, event, 2000);\n            return;\n        }\n\n\n        let policy = this.result.policies[policyIndexes[0]];\n        let title = Policy.toPolicyString(policy, false);\n\n        if(rows.length==1){\n\n            let row = rows[0];\n            if(row.variables){\n                title = '';\n                this.result.variableNames.forEach((v, i)=>{\n                    if(i){\n                        title += \"; \"\n                    }\n                    title += v + \" = \" + row.variables[i];\n                });\n            }\n        }\n\n        this.app.showPolicyPreview(title, policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows())\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {i18n} from \"../i18n/i18n\";\nimport {Templates} from \"../templates\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {InputField} from \"../form/input-field\";\nimport {PathValueAccessor} from \"../form/path-value-accessor\";\n\nexport class SettingsDialog extends Dialog{\n\n    formGroups=[];\n\n    static fontWeightOptions = ['normal', 'bold', 'lighter', 'bolder'];\n    static fontStyleOptions = ['normal', 'italic', 'oblique'];\n\n    constructor(app){\n        super(app.container.select('#sd-settings-dialog'), app);\n\n        var group = new FormGroup('general', ()=> {\n            app.treeDesigner.updateCustomStyles();\n            app.updateNumberFormats();\n        });\n        group\n            .addField('fontFamily', 'text', app.treeDesigner, 'config.fontFamily')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('numberFormatLocale', 'text', app, 'config.format.locales', {validate: (v)=>{try{new Intl.NumberFormat(v); return true;}catch (e){return false}}});\n        this.formGroups.push(group);\n\n\n        var payoffGroup = new FormGroup('payoff1', ()=>app.updatePayoffNumberFormat());\n        payoffGroup\n            .addSelectField('style', app, 'config.format.payoff1.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff1.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff1.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff1.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff1.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff1.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff1.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff1.useGrouping')\n\n        this.formGroups.push(payoffGroup);\n\n        var payoff2Group = new FormGroup('payoff2', ()=>app.updatePayoffNumberFormat());\n        payoff2Group\n            .addSelectField('style', app, 'config.format.payoff2.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff2.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff2.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff2.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff2.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff2.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff2.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff2.useGrouping')\n\n        this.formGroups.push(payoff2Group);\n\n\n        group = new FormGroup('probability', ()=>{\n            app.updateProbabilityNumberFormat();\n            app.treeDesigner.updateCustomStyles().redraw();\n        });\n        group\n            .addSelectField('style', app, 'config.format.probability.style', ['decimal', 'percent'])\n            .addField('minimumFractionDigits', 'number', app, 'config.format.probability.minimumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.probability.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.probability.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.probability.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('fontSize', 'text', app.treeDesigner, 'config.probability.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.probability.color');\n        this.formGroups.push(group);\n\n\n        var nodeGroup = new FormGroup('node', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        nodeGroup\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.strokeWidth');\n\n        nodeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.optimal.stroke');\n\n        nodeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.label.color');\n\n        nodeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.node.payoff.negativeColor');\n\n        this.formGroups.push(nodeGroup);\n\n        nodeGroup.addGroup('decision')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.decision.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.decision.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.decision.selected.fill');\n\n\n        nodeGroup.addGroup('chance')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.chance.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.chance.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.chance.selected.fill');\n\n        nodeGroup.addGroup('terminal')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.terminal.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.terminal.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.terminal.selected.fill')\n            .addGroup('payoff')\n                .addField('fontSize', 'text', app.treeDesigner, 'config.node.terminal.payoff.fontSize')\n                .addField('color', 'color', app.treeDesigner, 'config.node.terminal.payoff.color')\n                .addField('negativeColor', 'color', app.treeDesigner, 'config.node.terminal.payoff.negativeColor');\n\n\n\n        var edgeGroup = new FormGroup('edge', ()=>app.treeDesigner.updateCustomStyles().redraw())\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.stroke')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.strokeWidth');\n\n        edgeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.optimal.stroke');\n\n        edgeGroup.addGroup('selected')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.selected.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.selected.stroke');\n\n        edgeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.label.color');\n\n        edgeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.edge.payoff.negativeColor');\n        this.formGroups.push(edgeGroup);\n\n\n        var titleGroup = new FormGroup('diagramTitle', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        titleGroup\n            .addField('fontSize', 'text', app.treeDesigner, 'config.title.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.title.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.title.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.title.color')\n\n        .addGroup('margin')\n            .addField('top', 'number', app.treeDesigner, 'config.title.margin.top')\n            .addField('bottom', 'number', app.treeDesigner, 'config.title.margin.bottom');\n\n        titleGroup\n            .addGroup('description')\n            .addField('show', 'checkbox', app.treeDesigner, 'config.description.show')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.description.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.description.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.description.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.description.color')\n            .addField('marginTop', 'number', app.treeDesigner, 'config.description.margin.top');\n\n        this.formGroups.push(titleGroup);\n\n\n\n        var leagueTableGroup = new FormGroup('leagueTable');\n        leagueTableGroup\n            .addGroup('plot')\n            .addField('maxWidth', 'text', app, 'config.leagueTable.plot.maxWidth')\n            .addField('highlightedColor', 'color', app, 'config.leagueTable.plot.groups.highlighted.color')\n            .addField('highlightedDefaultColor', 'color', app, 'config.leagueTable.plot.groups.highlighted-default.color')\n            .addField('extendedDominatedColor', 'color', app, 'config.leagueTable.plot.groups.extended-dominated.color')\n            .addField('dominatedColor', 'color', app, 'config.leagueTable.plot.groups.dominated.color')\n            .addField('defaultColor', 'color', app, 'config.leagueTable.plot.groups.default.color');\n\n        this.formGroups.push(leagueTableGroup);\n\n\n\n        var otherGroup = new FormGroup('other', ()=>app.treeDesigner.redraw());\n        otherGroup\n            .addField('disableAnimations', 'checkbox', app.treeDesigner, 'config.disableAnimations')\n            .addField('forceFullEdgeRedraw', 'checkbox', app.treeDesigner, 'config.forceFullEdgeRedraw')\n            .addField('hideLabels', 'checkbox', app.treeDesigner, 'config.hideLabels')\n            .addField('hidePayoffs', 'checkbox', app.treeDesigner, 'config.hidePayoffs')\n            .addField('hideProbabilities', 'checkbox', app.treeDesigner, 'config.hideProbabilities')\n            .addField({\n                name: 'raw',\n                type: 'checkbox',\n                config: app.treeDesigner,\n                path: 'config.raw',\n                valueUpdateCallback: ()=>app.onRawOptionChanged()\n            });\n\n        this.formGroups.push(otherGroup);\n\n        this.initView();\n\n    }\n\n    initFormGroups(container, data){\n        var self = this;\n        var temp = {};\n        var formGroups = container.selectAll('div.sd-form-group').filter(function(d) { return this.parentNode==container.node(); }).data(data);\n        var formGroupsEnter = formGroups.enter().appendSelector('div.sd-form-group').attr('id', d=>d.id).html(d=>Templates.get('settingsDialogFormGroup', d));\n        formGroupsEnter.select('.toggle-button').on('click', (d) => {\n            var g = container.select('#'+d.id);\n            g.classed('sd-extended', !g.classed('sd-extended'));\n        });\n\n        var formGroupsMerge = formGroupsEnter.merge(formGroups);\n        var inputGroups = formGroupsMerge.select('  .sd-form-group-content > .sd-form-group-inputs').selectAll('div.input-group').data(d=>d.fields);\n\n\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n\n\n        inputGroupsEnter.merge(inputGroups).select('input, select').on('change input', function(d,i){\n            var value = this.value;\n            if(d.type=='checkbox'){\n                value = this.checked\n            }\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n                if(d3.event.type=='change'){\n                    this.value = d.valueAccessor.get();\n                }\n                return;\n            }\n            d3.select(this).classed('invalid', false);\n\n            d.valueAccessor.set(value);\n            if(d.valueUpdateCallback){\n                d.valueUpdateCallback();\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n\n        }).each(function(d, i){\n            var value = d.valueAccessor.get();\n            if(d.type=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n        });\n\n        formGroupsMerge.each(function(d){\n            self.initFormGroups(d3.select(this).select('.sd-form-group-content > .sd-form-group-child-groups'), d.groups);\n        });\n    }\n\n    initView() {\n        var temp = {};\n        this.initFormGroups(this.container.select('form#sd-settings-form'), this.formGroups);\n\n    }\n\n    onOpen(){\n        this.initView();\n    }\n\n}\n\nexport class FormGroup{\n    id;\n    name;\n    fields=[];\n    groups=[];\n    valueUpdateCallback;\n\n    constructor(name, valueUpdateCallback){\n        this.id = 'sd-form-group-'+name.replace(/\\./g, '-');\n        this.name = name;\n        this.valueUpdateCallback = valueUpdateCallback;\n    }\n\n    addSelectField(name, config, path, options) {\n        this.addField(name, 'select', config, path, null, options);\n        return this;\n    }\n\n    addField(fieldConfig){\n        if(arguments.length>1){\n            return this._addField(...arguments);\n        }\n\n        return this._addField(fieldConfig['name'], fieldConfig['type'], fieldConfig['config'], fieldConfig['path'], fieldConfig['validator'],\n                                fieldConfig['options'], fieldConfig['valueUpdateCallback'])\n    }\n\n    _addField(name, type, config, path, validator, options, valueUpdateCallback){\n        var fieldId = this.name+\"-\"+name;\n        var label = i18n.t(\"settingsDialog.\"+this.name+\".\"+name);\n        var configInputField = new ConfigInputField(fieldId,fieldId, type,label, config, path, validator, options);\n        if(valueUpdateCallback){\n            configInputField.valueUpdateCallback =  ()=>{\n                this.valueUpdateCallback();\n                valueUpdateCallback();\n            };\n        }else{\n            configInputField.valueUpdateCallback =  this.valueUpdateCallback;\n        }\n\n        this.fields.push(configInputField);\n        return this;\n    }\n\n    addGroup(name){\n        var groupName = this.name+'.'+name;\n        var group = new FormGroup(groupName, this.valueUpdateCallback);\n        this.groups.push(group);\n        return group;\n    }\n}\n\n\nclass ConfigInputField extends InputField{\n    constructor(id, name, type, label, sourceObject, path, validator, options){\n        super(id, name, type, label, new PathValueAccessor(sourceObject, path), validator, options);\n    }\n}\n\n","import {dataURLtoBlob} from \"blueimp-canvas-to-blob\";\nimport {saveAs} from \"file-saver\";\nimport * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {LoadingIndicator} from \"./loading-indicator\";\n\nexport class Exporter {\n    static saveAs = saveAs;\n    static dataURLtoBlob = dataURLtoBlob;\n    static exportedStyles = [/^font/, /^color/, /^opacity$/];\n    static svgProperties = [/^stroke/, /^fill/, /^text/];\n\n// Below are the function that handle actual exporting:\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n    static getSvgCloneWithInlineStyles(svgNode) {\n        var svgClone = svgNode.cloneNode(true);\n        appendInlineStyles(svgNode, svgClone);\n\n        function appendInlineStyles(source, target, parentCs) {\n            if (!source) {\n                log.error('Exporter.appendInlineStyles - undefined source!');\n                return false;\n            }\n            var children = source.children;\n            var targetChildren = target.children;\n            if (!source.children) {\n                children = source.childNodes;\n                targetChildren = target.childNodes;\n            }\n\n            if (source.tagName === 'text') {\n                /*\n                 var bBox = source.getBBox();\n                 console.log(source, bBox);\n                 target.setAttribute('y', bBox.y)*/\n            }\n\n\n            var cssStyleText = '';\n            var cs = getComputedStyle(source);\n            if (!cs) {\n                return true;\n            }\n            if (cs.display === 'none') {\n                return false;\n            }\n\n\n            for (let i = 0; i < cs.length; i++) {\n                var styleName = cs.item(i);\n                if (Utils.startsWith(styleName, '-')) {\n                    continue;\n                }\n\n                var propertyValue = cs.getPropertyValue(styleName);\n                if (parentCs) {\n                    if (propertyValue === parentCs.getPropertyValue(styleName)) {\n                        continue;\n                    }\n                }\n\n                if (Exporter.exportedStyles.some(s=>s.test(styleName))) {\n                    cssStyleText += '; ' + styleName + ': ' + propertyValue;\n                } else if (Exporter.svgProperties.some(s=>s.test(styleName))) {\n                    target.setAttribute(styleName, propertyValue);\n                }\n\n            }\n            if (cssStyleText.length) {\n                target.setAttribute(\"style\", cssStyleText);\n            } else {\n                target.removeAttribute(\"style\")\n            }\n\n\n            var toRemove = [];\n            for (let i = 0; i < children.length; i++) {\n                var node = children[i];\n                if (!appendInlineStyles(node, targetChildren[i], cs)) {\n                    toRemove.push(targetChildren[i]);\n                }\n            }\n            toRemove.forEach(n=> {\n                target.removeChild(n)\n            });\n            return true;\n        }\n\n        /*var textElements = svgNode.getElementsByTagName('text')\n         _.each(textElements, function (el) {\n\n\n         var textBBox = el.getBBox();\n         console.log(el,textBBox, el.getBoundingClientRect());\n         _.each(el.getElementsByTagName('tspan'), tspan=>{\n         var tspanBBox = tspan.getBBox();\n         console.log(tspan,tspanBBox, tspan.getBoundingClientRect());\n         })\n\n         // el.style['font-family'] = el.style['font-family'] && el.style['font-family'].split(' ').splice(-1);\n         });*/\n\n\n        svgClone.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        return svgClone;\n    }\n\n\n    static getSVGString(svgNode, removeIds=false) {\n        // svgNode = svgNode.cloneNode(true);\n        var svgClone = Exporter.getSvgCloneWithInlineStyles(svgNode);\n\n        var svgString = Exporter.serializeSvgNode(svgClone);\n        // svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\n        // svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\n        svgString = Exporter.sanitizeSVG(svgString, removeIds);\n\n        return svgString;\n    }\n\n    static serializeSvgNode(svgNode) {\n        var serializer = new XMLSerializer();\n        return serializer.serializeToString(svgNode);\n    }\n\n    static validateSvgNode(svgNode) {\n        var svgString = Exporter.serializeSvgNode(svgNode);\n        var oParser = new DOMParser();\n        var doc = oParser.parseFromString(svgString, 'image/svg+xml');\n        return doc.documentElement.nodeName.indexOf('parsererror') === -1;\n    }\n\n    static svgString2Image(svgString, width, height, format, callback) {\n        var format = format ? format : 'png';\n        var imgsrc = 'data:image/svg+xml,' + (encodeURIComponent(svgString)); // Convert SVG string to dataurl\n\n        // var canvas = document.createElement(\"canvas\");\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n\n        var image = new Image;\n        image.width = width;\n        image.height = height;\n        var target = new Image;\n        target.width = width;\n        target.height = height;\n\n\n        image.onload = function () {\n            // context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            canvas.toBlob(function (blob) {\n                var filesize = Math.round(blob.length / 1024) + ' KB';\n                if (callback) callback(blob, filesize);\n            });\n\n        };\n\n        image.src = imgsrc;\n    }\n\n    //decisiontree@yyyy.mm.dd_hh.mm.ss\n    static getExportFileName(ext, name='decisiontree') {\n        var format = d3.timeFormat(\"%Y.%m.%d_%H.%M.%S\");\n        var date = new Date();\n        name += '@' + format(date);\n        if (ext) {\n            name += '.' + ext\n        }\n        return name;\n    }\n\n    static saveAsPng(svg, options) {\n\n        var clientSide = options.png.mode === 'client';\n        var fallback = options.png.mode === 'fallback';\n        var serverSide = options.png.mode === 'server';\n        if (Utils.detectIE()) {\n            if (clientSide) {\n                alert(i18n.t('error.pngExportNotSupportedIE'));\n                return;\n            }\n\n            if (fallback) {\n                fallback = false;\n                serverSide = true;\n            }\n        }\n        LoadingIndicator.show();\n\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n            var svgWidth = svg.attr('width');\n            var svgHeight = svg.attr('height');\n\n            var pngWidth = 4 * svgWidth;\n            var pngHeight = 4 * svgHeight;\n            if (clientSide || fallback) {\n                Exporter.svgString2Image(svgString, pngWidth, pngHeight, 'png', save); // passes Blob and filesize String to the callback\n\n                function save(dataBlob, filesize) {\n                    try {\n                        Exporter.saveAs(dataBlob, Exporter.getExportFileName('png'));\n                        LoadingIndicator.hide();\n                    } catch (e) {\n                        log.warn('client side png rendering failed!');\n                        if (fallback) {\n                            log.info('performing server side fallback.');\n                            Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n                        } else {\n                            throw e;\n                        }\n                    }\n\n                }\n            } else if (serverSide) {\n                Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n            }\n\n\n        } catch (e) {\n            alert(i18n.t('error.pngExportNotSupported'));\n            LoadingIndicator.hide();\n            log.error('pngExportNotSupported', e);\n        }\n    }\n\n\n    static saveAsSvg(svg) {\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\n            Exporter.saveAs(blob, Exporter.getExportFileName('svg'));\n        } catch (e) {\n            alert(i18n.t('error.svgExportNotSupported'));\n            log.error('svgExportNotSupported', e);\n        }\n    }\n\n    static exportPdfClientSide(svgString, width, height) {\n        var doc = new jsPDF('l', 'pt', [width, height]);\n        var dummy = document.createElement('svg');\n        dummy.innerHTML = svgString;\n        svg2pdf(dummy.firstChild, doc, {\n            xOffset: 0,\n            yOffset: 0,\n            scale: 1\n        });\n        doc.save(Exporter.getExportFileName('pdf'));\n        LoadingIndicator.hide();\n\n    }\n\n    static postAndSave(url, data, filename, successCallback, failCallback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('post', url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function () {\n            var status = xhr.status;\n            log.debug(status);\n            var type = xhr.getResponseHeader('Content-Type');\n            if (status == 200) {\n                var blob = new Blob([this.response], {type: type});\n                Exporter.saveAs(blob, filename);\n                if (successCallback) {\n                    successCallback();\n                }\n            } else {\n                if (failCallback) {\n                    failCallback();\n                }\n            }\n        };\n        xhr.onreadystatechange = function (oEvent) {\n            if (xhr.readyState === 4) {\n                if (xhr.status !== 200) {\n                    failCallback();\n                }\n            }\n        };\n\n\n        xhr.send(JSON.stringify(data));\n    }\n\n    static exportPdfServerSide(svgString, url) {\n        var filename = Exporter.getExportFileName('pdf');\n        var data = {svg: svgString, type: 'pdf', noDownload: true};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        // Utils.postByForm(url, {\n        //     filename: filename,\n        //     type: 'pdf',\n        //     // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n        //     // scale: options.scale,\n        //     svg: svgString\n        // });\n\n    }\n\n    static exportPngServerSide(svgString, url, pngWidth, pngHeight) {\n        var filename = Exporter.getExportFileName('png');\n        var data = {svg: svgString, type: 'png', noDownload: true, width: pngWidth};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        /*Utils.postByForm(url, {\n         filename: filename,\n         type: 'pdf',\n         // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n         // scale: options.scale,\n         svg: svgString\n         });*/\n\n    }\n\n    static saveAsPdf(svg, options) {\n        var clientSidePdfExportAvailable = Exporter.isClientSidePdfExportAvailable();\n        if (options.pdf.mode === 'client') {\n            if (!clientSidePdfExportAvailable) {\n                alert(i18n.t('error.jsPDFisNotIncluded'));\n                return;\n            }\n        }\n        LoadingIndicator.show();\n        var margin = 20;\n        var svgElement = svg.node();\n        var width = svgElement.width.baseVal.value + 2 * margin,\n            height = svgElement.height.baseVal.value + 2 * margin;\n        try {\n            var svgString = Exporter.getSVGString(svgElement);\n\n            var fallback = options.pdf.mode === 'fallback';\n            if (options.pdf.mode === 'client' || fallback) {\n                try {\n                    Exporter.exportPdfClientSide(svgString, width, height);\n                } catch (e) {\n                    log.error('client side pdf rendering failed!');\n                    if (fallback) {\n                        log.info('performing server side fallback.');\n                        Exporter.exportPdfServerSide(svgString, options.serverUrl);\n                    } else {\n                        throw e;\n                    }\n                }\n            } else if (options.pdf.mode === 'server') {\n                Exporter.exportPdfServerSide(svgString, options.serverUrl);\n            }\n        } catch (e) {\n            log.error('pdfExportNotSupported', e);\n            LoadingIndicator.hide();\n            alert(i18n.t('error.pdfExportNotSupported'));\n\n        }\n\n    }\n\n    static isClientSidePdfExportAvailable() {\n        return typeof jsPDF !== 'undefined' && typeof svg2pdf !== 'undefined'\n    }\n\n\n    static sanitizeSVG(svg, removeIds=false) {\n        let sanitized = svg\n            .replace(/zIndex=\"[^\"]+\"/g, '')\n            .replace(/isShadow=\"[^\"]+\"/g, '')\n            .replace(/symbolName=\"[^\"]+\"/g, '')\n            .replace(/jQuery[0-9]+=\"[^\"]+\"/g, '')\n            .replace(/url\\((\"|&quot;)(\\S+)(\"|&quot;)\\)/g, 'url($2)')\n            .replace(/url\\([^#]+#/g, 'url(#')\n            .replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ')\n            .replace(/ (NS[0-9]+\\:)?href=/g, ' xlink:href=')\n            .replace(/\\n/, ' ')\n            .replace(/<\\/svg>.*?$/, '</svg>')\n            .replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"')\n            .replace(/&nbsp;/g, '\\u00A0')\n            .replace(/&shy;/g, '\\u00AD');\n\n        if(removeIds){\n            return sanitized.replace(/id=\"[^\"]+\"/g, '')\n        }\n\n        return sanitized;\n\n    }\n\n    static saveAsCSV(rows, name='decisiontree') {\n        var csvRows = [];\n        rows.forEach(row => {\n            csvRows.push(row.map(r=>Exporter.escapeCsvField(r)).join(','))\n        });\n        var csvString = csvRows.join(\"\\r\\n\");\n\n        var blob = new Blob([csvString], {type: \"text/csv\"});\n        Exporter.saveAs(blob, Exporter.getExportFileName('csv', name));\n\n    }\n\n    static escapeCsvField(field){\n        if(Utils.isString(field)){\n            return '\"'+field.replace(/\"/g, '\"\"')+'\"'\n        }\n        return field;\n    }\n}\n","import {i18n} from './i18n/i18n'\n\nexport class FileLoader{\n\n    static openFile(callback){\n        var input =  document.getElementById('sd-file-input');\n        input.onchange = loadFile;\n\n        input.click();\n\n        function loadFile() {\n\n             var file, fr;\n\n\n            if (typeof window.FileReader !== 'function') {\n                alert(i18n.t('error.fileApiNotSupported'));\n                return;\n            }\n            input =  document.getElementById('sd-file-input');\n            if (!input.files) {\n                alert(i18n.t('error.inputFilesProperty'));\n                return;\n            }\n\n            if (!input.files[0]) {\n                return;\n            }\n\n            file = input.files[0];\n            fr = new FileReader();\n            fr.onload = receivedText;\n            fr.readAsText(file);\n\n\n            function receivedText(e) {\n                callback(e.target.result);\n                input.value = null;\n            }\n        }\n    }\n\n}\n","export class InputField{\n    name;\n    type;\n    validator;\n    valueAccessor;\n\n    id;\n    label;\n    valueUpdateCallback;\n\n    constructor(id, name, type, label, valueAccessor, validator, options, parser, styleClass){\n        this.name = name;\n        this.type = type;\n        this.valueAccessor = valueAccessor;\n        this.validator = validator;\n        this.id=id;\n        this.label = label;\n        this.options = options;\n        this.parser = parser;\n        this.styleClass = styleClass;\n    }\n\n    getValue(){\n        return this.valueAccessor.get();\n    }\n\n    setValue(val){\n        return this.valueAccessor.set(val);\n    }\n\n    parse(val){\n        if(this.parser){\n            return this.parser(val)\n        }\n        return val;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PathValueAccessor {\n    sourceObject;\n    path;\n    constructor(sourceObject, path){\n        this.sourceObject=sourceObject;\n        this.path = path;\n    }\n\n    get(){\n        return Utils.get(this.sourceObject, this.path);\n    }\n\n    set(v){\n        return Utils.set(this.sourceObject, this.path, v);\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Neues Diagramm\",\n        \"openDiagram\": \"Diagramm öffnen\",\n        \"saveDiagram\": \"Aktuelles Diagramm speichern\",\n        \"export\":{\n            \"label\": \"Exportieren nach\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Baum\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"Aussicht\",\n            \"options\": {\n                \"criterion1\":\"Kriterium 1\",\n                \"criterion2\":\"Kriterium 2\",\n                \"twoCriteria\":\"Zwei Kriterien\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regel\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Rückgängig machen\",\n        \"redo\": \"Wiederholen\",\n        \"settings\": \"Einstellungen\",\n        \"about\": \"Über\",\n        \"sensitivityAnalysis\": \"Sensitivitätsanalyse\",\n        \"recompute\": \"Neu Berechnen\"\n    },\n    \"node\":{\n        \"name\": \"Beschreibung\"\n    },\n    \"edge\":{\n        \"name\": \"Beschreibung\",\n        \"payoff\": \"Auszahlung\",\n        \"probability\": \"Wahrscheinlichkeit\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Rangliste\",\n        \"buttons\": {\n            \"downloadCsv\": \"CSV Herunterladen\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regel #\",\n            \"policy\": \"Regel\",\n            \"comment\": \"Kommentar\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominiert (durch#{{policy}})\",\n            \"extendedDominatedBy\": \"Erweitert-dominiert (durch #{{policy1}} und #{{policy2}})\",\n            \"incratio\": \"Inkrementelles Verhältnis={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Markiert\",\n                \"highlighted-default\": \"Empfohlen (für Standard-WTP)\",\n                \"extended-dominated\" : \"Erweitert-dominiert\",\n                \"dominated\": \"Dominiert\",\n                \"default\": \"Andere\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Richtung von{{name}} Optimierung\",\n                \"gradientArrow2\": \"Richtung von {{name}} Optimierung\",\n                \"dominatedRegion\": \"Dominierte Region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Graumarkiert Bereich stellt dominierte Region dar\",\n                \"gradientArrows\": \"Pfeile zeigen Verbesserungsrichtung an\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivitätsanalyse\",\n        \"buttons\": {\n            \"runJob\": \"Lauf\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Beenden\",\n            \"resumeJob\": \"Fortsetzen\",\n            \"downloadCsv\": \"CSV Herunterladen\",\n            \"back\": \"Zurück\",\n            \"clear\": \"Löschen\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Entfernen\",\n            \"addParameterValue\": \"Hinzufügen\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} Grundregeln\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Wärmekarte\"\n            }\n        },\n        \"policyPreview\": \"Grundregel Vorschau\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-Wege-Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado-diagramm\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Verringerung\",\n                    \"high\": \"Erhöhung\"\n                },\n                \"xAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistische Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"numberOfRuns\": {\n                    \"label\": \"Anzahl der Läufe\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formel\",\n                        \"help\": \"Wählen Sie die Formelvorlage aus dem Menü aus oder schreiben Sie benutzerdefinierten Code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\",\n                \"param-computation\": \"Fehler beim Berechnen von Parameterwerten:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Netzdiagramm\",\n            \"param\": {\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- prozentuale Veränderung zum Berücksichtigen\"\n                },\n                \"length\": {\n                    \"label\": \"Anzahl der zu testenden Werte\",\n                    \"help\": \"Anzahl der zu testenden Werte (an einer Seite des Bereichs)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Prozentuale Veränderung\",\n                \"yAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Rangliste\"\n        },\n        \"errors\":{\n            \"generic\": \"Fehler bei der Sensitivitätsanalyse: {{message}}\",\n            \"params\": \"Inkorrekte {{jobName}} Parametern\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Einstellungen\",\n        \"general\":{\n            \"title\": \"Allgemein\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontFamily\": \"Schriftfamilie\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"numberFormatLocale\": \"Zahlenformat Gebietsschema\"\n        },\n        \"payoff1\":{\n            \"title\": \"Auszahlung 1 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"payoff2\":{\n            \"title\": \"Auszahlung 2 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"probability\":{\n            \"title\": \"Wahrscheinlichkeit Zahlenformat\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"fontSize\": \"Schriftgröße\",\n            \"color\": \"Farbe\"\n        },\n        \"node\":{\n            \"title\": \"Knoten\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Beschreibung Schriftgröße\",\n                \"color\": \"Beschreibungsfarbe\"\n            },\n            \"payoff\": {\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            },\n            \"decision\": {\n                \"title\": \"Entscheidungsknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Zufall Knoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Endknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                },\n                \"payoff\": {\n                    \"title\": \"Auszahlung\",\n                    \"fontSize\": \"Schriftgröße\",\n                    \"color\": \"Farbe\",\n                    \"negativeColor\": \"Negative Farbe\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \" Zweig\",\n            \"stroke\": \"Farbe\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"selected\":{\n                \"title\": \"Ausgewählt\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\"\n            },\n            \"payoff\":{\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagrammtitel\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"color\": \"Farbe\",\n            \"margin\":{\n                \"title\": \"Rand\",\n                \"top\": \"Oben\",\n                \"bottom\": \"Unten\"\n            },\n            \"description\":{\n                \"title\": \"Untertitel (Diagrammbeschreibung)\",\n                \"show\": \"Anzeigen\",\n                \"fontSize\": \"Schriftgröße\",\n                \"fontWeight\": \"Schriftgewicht\",\n                \"fontStyle\": \"Schriftstil\",\n                \"color\": \"Farbe\",\n                \"marginTop\": \"Rand Oben\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Rangliste\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max Breite\",\n                \"highlightedColor\": \"Farbe der markierten Regel\",\n                \"highlightedDefaultColor\": \"Empfohlene Regel(für Standard-WTP) Farbe\",\n                \"extendedDominatedColor\": \"Farbe der erweitert-dominierten Regel\",\n                \"dominatedColor\": \"Farbe der dominierten Regel\",\n                \"defaultColor\": \"Farbe der anderen Regeln\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Weitere\",\n            \"disableAnimations\": \"Animationen Deaktivieren\",\n            \"forceFullEdgeRedraw\": \"Erzwingt vollständige Neuzeichnung der Zweige\",\n            \"hideLabels\": \"Verstecke Beschreibung\",\n            \"hidePayoffs\": \"Verstecke Auszahlungen\",\n            \"hideProbabilities\": \"Verstecke Wahrscheinlichkeiten\",\n            \"raw\": \"Rau\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Über\"\n    },\n    \"help\":{\n        \"header\": \"Hilfe\",\n        \"mouse\": {\n            \"header\":\"Mausaktionen:\",\n            \"list\":{\n                \"1\": \"Linke Maustaste: Knoten/Zweig Auswahl\",\n                \"2\": \"Rechte Maustaste: Kontextmenü (Hinzufügen / Manipulieren von Knoten)\",\n                \"3\": \"Linke Maus Doppelklick: Kontextmenü\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Tastatur:\",\n            \"list\":{\n                \"1\": \"Del: ausgewählte Knoten Löschen\",\n                \"2\": \"Ctrl-C/X: ausgewählte Knoten Kopieren/Ausschneiden\",\n                \"3\": \"Ctrl-V: kopierte Knoten als Teilbaum ausgewähltes Knotens einfügen\",\n                \"4\": \"Ctrl-Y/Z: Rückgängig/Wiederholen\",\n                \"5\": \"Ctrl-Alt-D/C/T: Neue Entscheidungs/Zufall/Endsknoten als Unterknoten von <strong>ausgewähltem Knoten</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Neue Entscheidungs/Zufall Knoten in <strong>ausgewählten Zweig </strong> Injizieren\"\n            }\n        },\n        \"docs\": \"Die Dokumentation von SilverDecisions ist unter <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a> verfügbar\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variablendefinitionen\",\n        \"scope\": {\n            \"global\": \"Globaler Anwendungsbereich\",\n            \"node\": \"Gewählten Knoten und Teilbaum Anwendungsbereich\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variabel Anwendungsbereich:\",\n            \"global\": \"Globaler\",\n            \"node\": \"Gewählten Knoten und Teilbaum\"\n        },\n        \"header\": \"Variablen\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Dialog Öffnen\",\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Mehrere Kriterien\",\n        \"defaultMaximizedCriterionName\": \"Effekt\",\n        \"defaultMinimizedCriterionName\": \"Kosten\",\n        \"nameOfCriterion1\": \"Name des Kriteriums 1\",\n        \"nameOfCriterion2\": \"Name des Kriteriums 2\",\n        \"defaultCriterion1Weight\": \"Default 1. Kriterium Gewicht\",\n        \"weightLowerBound\": \"Gewicht untere Grenze\",\n        \"weightUpperBound\": \"Gewicht obere Grenze\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Rangliste anzeigen\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontaler Rand\",\n        \"marginVertical\": \"Vertikaler Rand\",\n        \"nodeSize\": \"Knotengröße\",\n        \"edgeSlantWidthMax\": \"Kantenschräge (max)\",\n        \"gridWidth\": \"Breite\",\n        \"gridHeight\": \"Höhe\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Einzelheiten\",\n        \"title\" : \"Titel\",\n        \"description\" : \"Beschreibung\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Entscheidungsknoten\",\n                \"chance\":\"Zufall Knoten\",\n                \"terminal\":\"Endknoten\"\n            },\n            \"edge\": \"Zweig\",\n            \"text\": \"Schwimmender Text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Verbindungen\",\n                \"child\": {\n                    \"header\": \"Zweig #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Möchten Sie das aktuelle Diagramm wirklich löschen? Alle nicht gespeicherten Daten werden verloren.\",\n        \"openDiagram\": \"Sind Sie sicher? Alle nicht gespeicherten Diagrammdaten werden verloren.\",\n        \"beforeunload\": \"Sind Sie sicher, dass Sie SilverDecisions schließen möchten? Alle nicht gespeicherten Diagrammdaten werden verloren.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Fehler beim Analysieren der Datei!\",\n        \"fileApiNotSupported\":\"Die Datei-API wird in diesem Browser noch nicht unterstützt.\",\n        \"inputFilesProperty\":\"Ihr Browser scheint die `files`-Eigenschaft der Dateieingaben nicht zu unterstützen.\",\n        \"notSilverDecisionsFile\":\"Keine SilverDecisions-Datei!\",\n        \"incorrectVersionFormat\": \"Falsches Format der Versionszeichenfolge!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version der Datei ist neuer als Version des Softwares. Einige Funktionen möglicherweise fehlen.\",\n        \"objectiveComputationFailure\": \"Fehler beim Berechnen von Objektiven!\",\n        \"diagramDrawingFailure\": \"Fehler beim Zeichnen des Diagramms!\",\n        \"malformedData\":\"Fehler beim Lesen der Baumdaten!\",\n        \"pngExportNotSupported\": \"Der Export nach PNG wird in Ihrem Browser nicht unterstützt.\",\n        \"pngExportNotSupportedIE\": \"Der Export nach PNG wird in Internet Explorer nicht unterstützt.\",\n        \"svgExportNotSupported\": \"Der Export nach SVG wird in Ihrem Browser nicht unterstützt.\",\n        \"pdfExportNotSupported\": \"Der Export nach PDF wird in Ihrem Browser nicht unterstützt.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Falsche Auszahlungsformat Optionen\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Falsche Wahrscheinlichkeitsformat Optionen\",\n        \"incorrectNumberFormatOptions\": \"Falsche Zahlenformat, die Standardeinstellungen angewendet.\",\n        \"jsPDFisNotIncluded\": \"jsPDF ist nicht enthalten!\",\n        \"serverSideExportRequestFailure\": \"Export Server Anfrage fehlgeschlagen!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"New diagram\",\n        \"openDiagram\": \"Open existing diagram\",\n        \"saveDiagram\": \"Save current diagram\",\n        \"export\":{\n            \"label\": \"Export to\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Tree\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"View\",\n            \"options\": {\n                \"criterion1\":\"Criterion 1\",\n                \"criterion2\":\"Criterion 2\",\n                \"twoCriteria\":\"Two criteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Rule\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Undo\",\n        \"redo\": \"Redo\",\n        \"settings\": \"Settings\",\n        \"about\": \"About\",\n        \"sensitivityAnalysis\": \"Sensitivity analysis\",\n        \"recompute\": \"Recompute\"\n    },\n    \"node\":{\n        \"name\": \"Label\"\n    },\n    \"edge\":{\n        \"name\": \"Label\",\n        \"payoff\": \"Payoff\",\n        \"probability\": \"Probability\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"League table\",\n        \"buttons\": {\n            \"downloadCsv\": \"Download CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Policy #\",\n            \"policy\": \"Policy\",\n            \"comment\": \"Comment\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominated (by #{{policy}})\",\n            \"extendedDominatedBy\": \"extended-dominated (by #{{policy1}} and #{{policy2}})\",\n            \"incratio\": \"incremental ratio={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Recommended (for some WTP in range)\",\n                \"highlighted-default\": \"Recommended (for default WTP)\",\n                \"extended-dominated\" : \"Extended-dominated\",\n                \"dominated\": \"Dominated\",\n                \"default\": \"Other\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direction of {{name}} optimization\",\n                \"gradientArrow2\": \"Direction of {{name}} optimization\",\n                \"dominatedRegion\": \"Not recommended region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Grey area highlights not recommended region\",\n                \"gradientArrows\": \"Arrows indicate improvement direction\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivity analysis\",\n        \"buttons\": {\n            \"runJob\": \"Run\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Terminate\",\n            \"resumeJob\": \"Resume\",\n            \"downloadCsv\": \"Download CSV\",\n            \"back\": \"Back\",\n            \"clear\": \"Clear\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Remove\",\n            \"addParameterValue\": \"Add\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} policies\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Heatmap\"\n            }\n        },\n        \"policyPreview\": \"policy preview\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-way sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado diagram\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decrease\",\n                    \"high\": \"Increase\"\n                },\n                \"xAxisTitle\": \"Payoff\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistic sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"numberOfRuns\": {\n                    \"label\": \"Number of runs\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Select formula template from the menu or write custom code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\",\n                \"param-computation\": \"Error computing parameter values:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Spider plot\",\n            \"param\": {\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- percentage change to consider\"\n                },\n                \"length\": {\n                    \"label\": \"Number of values to test\",\n                    \"help\": \"Number of values to test (in one side of range)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Percentage change\",\n                \"yAxisTitle\": \"Payoff\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"League table\"\n        },\n        \"errors\":{\n            \"generic\": \"Error in {{jobName}} computations: {{message}}\",\n            \"params\": \"Incorrect {{jobName}} parameters\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Settings\",\n        \"general\":{\n            \"title\": \"General\",\n            \"fontSize\": \"Font size\",\n            \"fontFamily\": \"Font family\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"numberFormatLocale\": \"Number format locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Payoff 1 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"payoff2\":{\n            \"title\": \"Payoff 2 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"probability\":{\n            \"title\": \"Probability number format\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"fontSize\": \"Font size\",\n            \"color\": \"Color\"\n        },\n        \"node\":{\n            \"title\": \"Node\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Label font size\",\n                \"color\": \"Label color\"\n            },\n            \"payoff\": {\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            },\n            \"decision\": {\n                \"title\": \"Decision Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Chance Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Terminal Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                },\n                \"payoff\": {\n                    \"title\": \"Payoff\",\n                    \"fontSize\": \"Font size\",\n                    \"color\": \"Color\",\n                    \"negativeColor\": \"Negative color\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Edge\",\n            \"stroke\": \"Color\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"selected\":{\n                \"title\": \"Selected\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\"\n            },\n            \"payoff\":{\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagram title\",\n            \"fontSize\": \"Font size\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"color\": \"Color\",\n            \"margin\":{\n                \"title\": \"Margin\",\n                \"top\": \"Top\",\n                \"bottom\": \"Bottom\"\n            },\n            \"description\":{\n                \"title\": \"Subtitle (diagram description)\",\n                \"show\": \"Show\",\n                \"fontSize\": \"Font size\",\n                \"fontWeight\": \"Font weight\",\n                \"fontStyle\": \"Font style\",\n                \"color\": \"Color\",\n                \"marginTop\": \"Margin top\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"League Table\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max width\",\n                \"highlightedColor\": \"Recommended (for some WTP in range) policy color\",\n                \"highlightedDefaultColor\": \"Recommended (for default WTP) policy color\",\n                \"extendedDominatedColor\": \"Extended dominated policy color\",\n                \"dominatedColor\": \"Dominated policy color\",\n                \"defaultColor\": \"Other policies color\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Other\",\n            \"disableAnimations\": \"Disable animations\",\n            \"forceFullEdgeRedraw\": \"Force full redraw of edges\",\n            \"hideLabels\": \"Hide labels\",\n            \"hidePayoffs\": \"Hide payoffs\",\n            \"hideProbabilities\": \"Hide probabilities\",\n            \"raw\": \"Raw\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"About\"\n    },\n    \"help\":{\n        \"header\": \"Help\",\n        \"mouse\": {\n            \"header\":\"Mouse actions:\",\n            \"list\":{\n                \"1\": \"left mouse button: node/edge selection\",\n                \"2\": \"right mouse button: context menu (adding/manipulating nodes)\",\n                \"3\": \"left mouse dbclick: context menu\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Keyboard:\",\n            \"list\":{\n                \"1\": \"Del: delete selected nodes\",\n                \"2\": \"Ctrl-C/X: copy/cut selected nodes\",\n                \"3\": \"Ctrl-V: paste copied nodes as a subtree of a selected node\",\n                \"4\": \"Ctrl-Y/Z: undo/redo\",\n                \"5\": \"Ctrl-Alt-D/C/T: add new Decision/Chance/Terminal subnode of a <strong>selected node</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inject new Decision/Chance node into a <strong>selected edge</strong>\"\n            }\n        },\n        \"docs\": \"Documentation of SilverDecisions is available <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variable definitions\",\n        \"scope\": {\n            \"global\": \"global scope\",\n            \"node\": \"selected node and subtree scope\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variable scope:\",\n            \"global\": \"global\",\n            \"node\": \"selected node and subtree\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Open dialog\",\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Multiple criteria\",\n        \"defaultMaximizedCriterionName\": \"Effect\",\n        \"defaultMinimizedCriterionName\": \"Cost\",\n        \"nameOfCriterion1\": \"Name for criterion 1\",\n        \"nameOfCriterion2\": \"Name for criterion 2\",\n        \"defaultCriterion1Weight\": \"Default 1st criterion weight\",\n        \"weightLowerBound\": \"Weight lower bound\",\n        \"weightUpperBound\": \"Weight upper bound\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Show league table\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontal Margin\",\n        \"marginVertical\": \"Vertical Margin\",\n        \"nodeSize\": \"Node size\",\n        \"edgeSlantWidthMax\": \"Edge slant (max)\",\n        \"gridWidth\": \"Width\",\n        \"gridHeight\": \"Height\",\n        \"scale\": \"Scale\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Details\",\n        \"title\" : \"Title\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Decision Node\",\n                \"chance\":\"Chance Node\",\n                \"terminal\":\"Terminal Node\"\n            },\n            \"edge\": \"Edge\",\n            \"text\": \"Floating text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connections\",\n                \"child\": {\n                    \"header\": \"Edge #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Do you really want to clear current diagram? All unsaved data will be lost.\",\n        \"openDiagram\": \"Are you sure? All unsaved diagram data will be lost.\",\n        \"beforeunload\": \"Are you sure you want to close SilverDecisions? All unsaved diagram data will be lost.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Error parsing file!\",\n        \"fileApiNotSupported\":\"The file API isn't supported on this browser yet.\",\n        \"inputFilesProperty\":\"Your browser doesn't seem to support the `files` property of file inputs.\",\n        \"notSilverDecisionsFile\":\"Not a SilverDecisions file!\",\n        \"incorrectVersionFormat\": \"Incorrect format of version string!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version in file is newer than version of the application. Some features may be missing.\",\n        \"objectiveComputationFailure\": \"Error while computing objective!\",\n        \"diagramDrawingFailure\": \"Error while drawing diagram!\",\n        \"malformedData\":\"Error reading tree data!\",\n        \"pngExportNotSupported\": \"Export to PNG is not supported in your browser.\",\n        \"pngExportNotSupportedIE\": \"Export to PNG not supported in Internet Explorer.\",\n        \"svgExportNotSupported\": \"Export to SVG is not supported in your browser.\",\n        \"pdfExportNotSupported\": \"Export to PDF is not supported in your browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Incorrect payoff number format options\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Incorrect probability number format options\",\n        \"incorrectNumberFormatOptions\": \"Incorrect number format options, using default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF is not included!\",\n        \"serverSideExportRequestFailure\": \"Export Server request failed!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nouveau diagramme\",\n        \"openDiagram\": \"Ouvrir le diagramme existant\",\n        \"saveDiagram\": \"Enregistrer le diagramme actuel\",\n        \"export\":{\n            \"label\": \"Exporter vers\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposition\",\n            \"manual\": \"Manuel\",\n            \"tree\": \"Arbre\",\n            \"cluster\": \"Grappe\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vue\",\n            \"options\": {\n                \"criterion1\":\"Critère 1\",\n                \"criterion2\":\"Critère 2\",\n                \"twoCriteria\":\"Deux critères\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regle\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Annuler\",\n        \"redo\": \"Refaire\",\n        \"settings\": \"Parametres\",\n        \"about\": \"A propos\",\n        \"sensitivityAnalysis\": \"Analyse de sensibilité\",\n        \"recompute\": \"Recalculer\"\n    },\n    \"node\":{\n        \"name\": \"Étiquette\"\n    },\n    \"edge\":{\n        \"name\": \"Étiquette\",\n        \"payoff\": \"Avantage\",\n        \"probability\": \"Probabilité\"\n    },\n    \"text\":{\n        \"value\": \"Texte\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classement\",\n        \"buttons\": {\n            \"downloadCsv\": \"Télécharger CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Règle #\",\n            \"policy\": \"Règle\",\n            \"comment\": \"Commentaire\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominé (par #{{policy}})\",\n            \"extendedDominatedBy\": \"Étendu-dominé (par #{{policy1}} et #{{policy2}})\",\n            \"incratio\": \"Ratio incrémental={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Surligné\",\n                \"highlighted-default\": \"Recommandée (pour WTP par défaut)\",\n                \"extended-dominated\" : \"Étendu-dominé\",\n                \"dominated\": \"Dominé\",\n                \"default\": \"Autre\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"La direction de {{name}} optimisation\",\n                \"gradientArrow2\": \"La direction de {{name}} optimisation\",\n                \"dominatedRegion\": \"Région dominée\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"La région grise surligne la région dominée\",\n                \"gradientArrows\": \"Les flèches indiquent une direction d'amélioration\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analyse de sensibilité\",\n        \"buttons\": {\n            \"runJob\": \"Exécuter\",\n            \"stopJob\": \"Arrêter\",\n            \"terminateJob\": \"Terminer\",\n            \"resumeJob\": \"Reprendre\",\n            \"downloadCsv\": \"Télécharger CSV\",\n            \"back\": \"Retourner\",\n            \"clear\": \"Effacer\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Effacer\",\n            \"addParameterValue\": \"Ajouter\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} règles\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Carte de chaleur\"\n            }\n        },\n        \"policyPreview\": \"Aperçu de la règle\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité multivariée\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Graphique en tornade\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Diminuer\",\n                    \"high\": \"Augmenter\"\n                },\n                \"xAxisTitle\": \"Avantage\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité probabiliste\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"numberOfRuns\": {\n                    \"label\": \"Nombre d'essais\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formule\",\n                        \"help\": \"Sélectionner le modèle de la formule dans le menu ou écrire un code personnalisé.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\",\n                \"param-computation\": \"Erreur de calcul des valeurs de paramètres:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Graphique en radar\",\n            \"param\": {\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- changement de pourcentage à considérer\"\n                },\n                \"length\": {\n                    \"label\": \"Nombre de valeurs à tester\",\n                    \"help\": \"Nombre de valeurs à tester (dans une partie de gamme)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Nom\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Changement de pourcentage\",\n                \"yAxisTitle\": \"Avantage\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classement\"\n        },\n        \"errors\":{\n            \"generic\": \"Erreur de calcul d'analyse de sensibilité: {{message}}\",\n            \"params\": \"Paramètres du {{jobName}} sont incorrect\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Parametres\",\n        \"general\":{\n            \"title\": \"Général\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontFamily\": \"Famille de police\",\n            \"fontWeight\": \"Poid de la police\",\n            \"fontStyle\": \"Style de police\",\n            \"numberFormatLocale\": \"format local de numérotation\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format de la numérotation des avantages 1\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format de la numérotation des avantages 2\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"probability\":{\n            \"title\": \"Format de la numérotatio des probabilités\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"fontSize\": \"Taille de police\",\n            \"color\": \"Couleur\"\n        },\n        \"node\":{\n            \"title\": \"Noud\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police de l'étiquette\",\n                \"color\": \"Couleur de l'étiquette\"\n            },\n            \"payoff\": {\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            },\n            \"decision\": {\n                \"title\": \"Noeud décisionnel\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de trait\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionnée\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Noud aléatoire\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Noeud terminal\",\n                \"fill\": \"Couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                },\n                \"payoff\": {\n                    \"title\": \"Avantage\",\n                    \"fontSize\": \"Taille de la police\",\n                    \"color\": \"Couleur\",\n                    \"negativeColor\": \"Négatif couleur\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Bord\",\n            \"stroke\": \"Couleur\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"selected\":{\n                \"title\": \"Choisi\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\"\n            },\n            \"payoff\":{\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titre du diagramme\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontWeight\": \"Poids de la police\",\n            \"fontStyle\": \"Style de la police\",\n            \"color\": \"Couleur\",\n            \"margin\":{\n                \"title\": \"Marge\",\n                \"top\": \"Haut du diagramme\",\n                \"bottom\": \"Bas du diagramme\"\n            },\n            \"description\":{\n                \"title\": \"Sous-titre (description du diagramme)\",\n                \"show\": \"Afficher\",\n                \"fontSize\": \"Taille de la police\",\n                \"fontWeight\": \"Poids de la police\",\n                \"fontStyle\": \"Style de police\",\n                \"color\": \"Couleur\",\n                \"marginTop\": \"Haut du marge\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classement\",\n            \"plot\": {\n                \"title\": \"Le graphe\",\n                \"maxWidth\": \"Largeur maximale\",\n                \"highlightedColor\": \"Couleur de la règle soulignée\",\n                \"highlightedDefaultColor\": \"Couleur recommandée pour la règle (pour WTP par défaut)\",\n                \"extendedDominatedColor\": \"Couleur de la règle étendu-dominée\",\n                \"dominatedColor\": \"Couleur de la règle dominée\",\n                \"defaultColor\": \"Couleur des autres règles\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Autre\",\n            \"disableAnimations\": \"Désactiver les animations\",\n            \"forceFullEdgeRedraw\": \"Forcer le redessinage complet des bords\",\n            \"hideLabels\": \"Masquer les étiquettes\",\n            \"hidePayoffs\": \"Masquer les paiements\",\n            \"hideProbabilities\": \"Masquer les probabilités\",\n            \"raw\": \"Brut\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"A propos\"\n    },\n    \"help\":{\n        \"header\": \"Aide\",\n        \"mouse\": {\n            \"header\":\"Actions de la souris:\",\n            \"list\":{\n                \"1\": \"Bouton gauche de la souris: sélection du noud/bord\",\n                \"2\": \"Bouton droit de la souris: menu contextuel (ajout/manipulation des nouds)\",\n                \"3\": \"Double clic gauche de la souris: menu contextuel\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Raccourcis clavier:\",\n            \"list\":{\n                \"1\": \"Del: effacer les nouds sélectionnés\",\n                \"2\": \"Ctrl-C/X: copier/couper les nouds sélectionnés\",\n                \"3\": \"Ctrl-V: coller les nouds copiés comme un sous-arbre d'un noud sélectionné\",\n                \"4\": \"Ctrl-Y/Z: annuler/refaire\",\n                \"5\": \"Ctrl-Alt-D/C/T: ajouter un nouveau sous-noud de décision/aléatoire/terminal d'un <strong>noud sélectionné</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: injecter un nouveau noeud de décision/aléatoire dans un <strong>bord sélectionné</strong>\"\n            }\n        },\n        \"docs\": \"La documentation de SilverDecisions est disponible  <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">ici</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Définitions des variables\",\n        \"scope\": {\n            \"global\": \"portée mondiale\",\n            \"node\": \"la portée des nœud et sous-arborescence sélectionné\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Portée de la variable:\",\n            \"global\": \"mondial\",\n            \"node\": \"nœud et sous-arborescence sélectionné\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Ouvrir la boîte de dialogue\",\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Critères multiples\",\n        \"defaultMaximizedCriterionName\": \"Effet\",\n        \"defaultMinimizedCriterionName\": \"Coût\",\n        \"nameOfCriterion1\": \"Le nome de critère 1\",\n        \"nameOfCriterion2\": \"Le nome de critère 2\",\n        \"defaultCriterion1Weight\": \"Par défaut poid du 1er critère\",\n        \"weightLowerBound\": \"Poid de la limite inférieure\",\n        \"weightUpperBound\": \"Poid de la limite supérieure\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Montrer classement\",\n            \"flip\": \"Basculer\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposition\",\n        \"marginHorizontal\": \"Marge horizontale\",\n        \"marginVertical\": \"Marge verticale\",\n        \"nodeSize\": \"Taille du noeud\",\n        \"edgeSlantWidthMax\": \"Inclinaison du bord (max.)\",\n        \"gridWidth\": \"Largeur\",\n        \"gridHeight\": \"Taille\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Détails\",\n        \"title\" : \"Titre\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Noeud de décision\",\n                \"chance\":\"Noud aléatoire\",\n                \"terminal\":\"Noeud terminal\"\n            },\n            \"edge\": \"Bord\",\n            \"text\": \"Texte flottant\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Les connexions\",\n                \"child\": {\n                    \"header\": \"Bord #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Voulez-vous vraiment effacer le diagramme actuel? Toutes les données non enregistrées seront perdues.\",\n        \"openDiagram\": \"Etes-vous sur? Toutes les données de diagramme non enregistrées seront perdues.\",\n        \"beforeunload\": \"Voulez-vous vraiment fermer SilverDecisions? Toutes les données de diagramme non enregistrées seront perdues.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Erreur lors de l'analyse du fichier!\",\n        \"fileApiNotSupported\":\"L'API du fichier n'est pas encore prise en charge sur ce navigateur.\",\n        \"inputFilesProperty\":\"Votre navigateur ne semble pas prendre en charge la propriété `fichiers`.\",\n        \"notSilverDecisionsFile\":\"Pas de fichiers SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Format incorrect de la chaîne de version!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La version dans le fichier est plus récente que la version de l'application. Certaines fonctionnalités peuvent être manquantes.\",\n        \"objectiveComputationFailure\": \"Erreur en calculant l'objectif!\",\n        \"diagramDrawingFailure\": \"Erreur lors du dessin diagramme!\",\n        \"malformedData\":\"Erreur lors de la lecture des données arborescentes!\",\n        \"pngExportNotSupported\": \"L'exportation vers PNG n'est pas prise en charge dans votre navigateur.\",\n        \"pngExportNotSupportedIE\": \"Exporter vers PNG n'est pas pris en charge dans Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'exportation vers SVG n'est pas prise en charge par votre navigateur.\",\n        \"pdfExportNotSupported\": \"L'exportation au format PDF n'est pas prise en charge par votre navigateur.\",\n        \"incorrectPayoffNumberFormatOptions\": \"L'option de format de numérotation des avantages chiosie est incorrecte.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"L'option de format de numérotation des probabilités chiosie est incorrecte.\",\n        \"incorrectNumberFormatOptions\": \"L'option de format de numérotation choisie est incorrecte.\",\n        \"jsPDFisNotIncluded\": \"JsPDF n'est pas inclus!\",\n        \"serverSideExportRequestFailure\": \"La demande de téléchargement au serveur a échoué!\"\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: {\n                en: {\n                    translation: en\n                },\n                pl: {\n                    translation: pl\n                },\n                it: {\n                    translation: it\n                },\n                de: {\n                    translation: de\n                },\n                fr: {\n                    translation: fr\n                }\n            }\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nuovo diagramma\",\n        \"openDiagram\": \"Apri diagramma esistnte\",\n        \"saveDiagram\": \"Salva il diagramma corente\",\n        \"export\":{\n            \"label\": \"Esporta in\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposizione\",\n            \"manual\": \"Manuale\",\n            \"tree\": \"Albero\",\n            \"cluster\": \"Grappolo\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vista\",\n            \"options\": {\n                \"criterion1\":\"Criterio 1\",\n                \"criterion2\":\"Criterio 2\",\n                \"twoCriteria\":\"Due criteri\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regola\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"max-min\",\n                \"maxi-max\":\"max-max\",\n                \"mini-min\":\"min-min\",\n                \"mini-max\":\"min-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Ripristina\",\n        \"redo\": \"Ripeti\",\n        \"settings\": \"Settaggi\",\n        \"about\": \"Di\",\n        \"sensitivityAnalysis\": \"Analisi di sensibilità\",\n        \"recompute\": \"Ricalcola\"\n    },\n    \"node\":{\n        \"name\": \"Etichetta\"\n    },\n    \"edge\":{\n        \"name\": \"Etichetta\",\n        \"payoff\": \"Saldo\",\n        \"probability\": \"Probabilità\"\n    },\n    \"text\":{\n        \"value\": \"Testo\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classifica\",\n        \"buttons\": {\n            \"downloadCsv\": \"Scarica CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regola #\",\n            \"policy\": \"Regola\",\n            \"comment\": \"Commento\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominata (da #{{policy}})\",\n            \"extendedDominatedBy\": \"estesa-dominata (da #{{policy1}} e #{{policy2}})\",\n            \"incratio\": \"rapporto incrementale={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Evidenziato\",\n                \"highlighted-default\": \"Raccomandato (per default WTP)\",\n                \"extended-dominated\" : \"Estesa-dominata\",\n                \"dominated\": \"Dominata\",\n                \"default\": \"Altro\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direzione di {{name}} ottimizzazione\",\n                \"gradientArrow2\": \"Direzione di {{name}} ottimizzazione\",\n                \"dominatedRegion\": \"Regione dominata\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"L'area grigia evidenzia la regione dominata\",\n                \"gradientArrows\": \"Le frecce indicano la direzione di miglioramento\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analisi di sensibilità\",\n        \"buttons\": {\n            \"runJob\": \"Esegui\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Esci\",\n            \"resumeJob\": \"Riprendi\",\n            \"downloadCsv\": \"Scaricare CSV\",\n            \"back\": \"Indietro\",\n            \"clear\": \"Cancella\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Cancella\",\n            \"addParameterValue\": \"Aggiungi\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} politiche\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Massimo\",\n                \"minimum\": \"Minimo\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mappa di calore\"\n            }\n        },\n        \"policyPreview\": \"Anteprima della politica\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità multivariata\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagramma a tornado\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decresce\",\n                    \"high\": \"Cresce\"\n                },\n                \"xAxisTitle\": \"Saldo\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità probabilistica\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"numberOfRuns\": {\n                    \"label\": \"Numero di operazioni\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Seleziona modello di formula dal menu o scrivi un codice personalizzato.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\",\n                \"param-computation\": \"Errore di calcolo dei valori dei parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n                \"spider-plot\": {\n            \"name\": \"Diagramma di Kiviat\",\n            \"param\": {\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- variazione percentuale da considerare\"\n                },\n                \"length\": {\n                    \"label\": \"Numero di valpri da testare\",\n                    \"help\": \"Numero di valpri da testare (in una parte della gamma)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Variazione percentuale\",\n                \"yAxisTitle\": \"Saldo\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classifica\"\n        },\n        \"errors\":{\n            \"generic\": \"Errore nei calcoli di analisi di sensibilità: {{message}}\",\n            \"params\": \"{{jobName}} parameteri errati\"\n        }\n    },\n\n    \"settingsDialog\":{\n        \"title\": \"Settaggi\",\n        \"general\":{\n            \"title\": \"Generale\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontFamily\": \"Famiglia font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"numberFormatLocale\": \"Formato numero locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Formato saldo 1\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"payoff2\":{\n            \"title\": \"Formato saldo 2\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"probability\":{\n            \"title\": \"Formato probabilità\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"fontSize\": \"Dimensione font\",\n            \"color\": \"Colore\"\n        },\n        \"node\":{\n            \"title\": \"Nodo\",\n            \"strokeWidth\": \"Spessore linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Spessore linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font etichetta\",\n                \"color\": \"Colore etichetta\"\n            },\n            \"payoff\": {\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            },\n            \"decision\": {\n                \"title\": \"Nodo dicisione\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Nodo opportunità\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Nodo terminale\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                },\n                \"payoff\": {\n                    \"title\": \"Saldo\",\n                    \"fontSize\": \"Dimensione font\",\n                    \"color\": \"Colore\",\n                    \"negativeColor\": \"Colore negativo\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Ramo\",\n            \"stroke\": \"Colore\",\n            \"strokeWidth\": \"Larghezza linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"selected\":{\n                \"title\": \"Selezionato\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\"\n            },\n            \"payoff\":{\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titolo diagramma\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"color\": \"Colore\",\n            \"margin\":{\n                \"title\": \"Margine\",\n                \"top\": \"Superiore\",\n                \"bottom\": \"Inferiore\"\n            },\n            \"description\":{\n                \"title\": \"Sotto-titolo (descrizione diagramma)\",\n                \"show\": \"Mostra\",\n                \"fontSize\": \"Dimensione font\",\n                \"fontWeight\": \"Peso del font\",\n                \"fontStyle\": \"Stile font\",\n                \"color\": \"Colore\",\n                \"marginTop\": \"Margine superiore\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classifica\",\n            \"plot\": {\n                \"title\": \"Grafico\",\n                \"maxWidth\": \"Larghezza massima\",\n                \"highlightedColor\": \"Colore evidenziato della regola\",\n                \"highlightedDefaultColor\": \"Colore polizza raccomandata (per default WTP)\",\n                \"extendedDominatedColor\": \"Colori della regola dominata estesa\",\n                \"dominatedColor\": \"Colore della denominata regola\",\n                \"defaultColor\": \"Altri criteri colore\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Altro\",\n            \"disableAnimations\": \"Disabilita animazione\",\n            \"forceFullEdgeRedraw\": \"Forza ridisegno dei rami\",\n            \"hideLabels\": \"Nascondi le etichette\",\n            \"hidePayoffs\": \"Nascondi saldo\",\n            \"hideProbabilities\": \"Nascondi le probabilità\",\n            \"raw\": \"Non elaborato\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informazioni\"\n    },\n    \"help\":{\n        \"header\": \"Aiuto\",\n        \"mouse\": {\n            \"header\":\"Azioni mouse:\",\n            \"list\":{\n                \"1\": \"Bottone sinistro: selezione nodo/ramo\",\n                \"2\": \"Bottone destro: menu di contesto (aggiunta/manipolazione nodi)\",\n                \"3\": \"Doppio click bottone sinistro: menu di contesto\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Scorciatoie tastiera:\",\n            \"list\":{\n                \"1\": \"Del: cancella nodi selezionati\",\n                \"2\": \"Ctrl-C/X: copia/taglia nodi selezionati\",\n                \"3\": \"Ctrl-V: incolla nodi copiati come sotto-albero di un nodo selezionato\",\n                \"4\": \"Ctrl-Y/Z: ripristina/ripeti\",\n                \"5\": \"Ctrl-Alt-D/C/T: aggiungi nuovo sottonodo Decisione/Opportunità/Terminale di un <strong>nodo selezionato</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inietta un nuovo nodo Decisione/Opportunità in un <strong>ramo selezionato</strong>\"\n            }\n        },\n        \"docs\": \"La documentazione di SilverDecisions e disponibile <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">qui</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definizioni delle variabili\",\n        \"scope\": {\n            \"global\": \"raggio globale\",\n            \"node\": \"raggio di nodo e sotto-albero selezionati\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Raggio variabile:\",\n            \"global\": \"globale\",\n            \"node\": \"nodo e sotto-albero selezionati\"\n        },\n        \"header\": \"Variabili\",\n        \"code\": \"Codice\",\n        \"buttons\":{\n            \"openDialog\" : \"Apri il dialogo\",\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Criteri multipli\",\n        \"defaultMaximizedCriterionName\": \"Effetto\",\n        \"defaultMinimizedCriterionName\": \"Costo\",\n        \"nameOfCriterion1\": \"Nome del criterio 1\",\n        \"nameOfCriterion2\": \"Nome del criterio 2\",\n        \"defaultCriterion1Weight\": \"Predefinito 1° peso criterio\",\n        \"weightLowerBound\": \"Peso inferiore limitato\",\n        \"weightUpperBound\": \"Peso superiore del limite\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Mostra la classifica\",\n            \"flip\": \"Ribalta\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposizione\",\n        \"marginHorizontal\": \"Margine orizzontale\",\n        \"marginVertical\": \"Margine verticale\",\n        \"nodeSize\": \"Dimensione nodo\",\n        \"edgeSlantWidthMax\": \"Inclinazione nodo\",\n        \"gridWidth\": \"Larghezza\",\n        \"gridHeight\": \"Altezza\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Dettagli\",\n        \"title\" : \"Titolo\",\n        \"description\" : \"Descrizione\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Nodo decisione\",\n                \"chance\":\"Nodo opportunità\",\n                \"terminal\":\"Nodo terminale\"\n            },\n            \"edge\": \"Ramo\",\n            \"text\": \"Testo mobile\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connessioni\",\n                \"child\": {\n                    \"header\": \"Ramo #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Vuoi davvero cancellare ildiagramma corrente ? Tutti i dati non salvati saranno persi.\",\n        \"openDiagram\": \"Sei sicuro? Tutti i dati non salvati saranno persi.\",\n        \"beforeunload\": \"Sei sicuro di voler uscire da SilverDecisions ?Tutti i dati non salvati saranno persi.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Errore analizzando il file !\",\n        \"fileApiNotSupported\":\"l'API di questo file non è ancora supportata in questo browser.  \",\n        \"inputFilesProperty\":\"Il tuo browser non sembra supportare la proprieta del file di input.\",\n        \"notSilverDecisionsFile\":\"Non è un file SilverDecisions !\",\n        \"incorrectVersionFormat\": \"Formato non corretto della serie di versione!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La versione in file è più recente rispetto alla versione dell'applicazione. Alcune funzionalità possono essere indisponibili.\",\n        \"objectiveComputationFailure\": \"Errore durante il calcolo obiettivo!\",\n        \"diagramDrawingFailure\": \"Errore durante il disegno della diagramma!\",\n        \"malformedData\":\"Errore durante la lettura dei dati dell'albero !\",\n        \"pngExportNotSupported\": \"L'esport in formato PNG non è supportata nel tuo browser.\",\n        \"pngExportNotSupportedIE\": \"L'esport in formato PNG non è supportata in Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'esport in formato SVG non è supportata nel tuo browser.\",\n        \"pdfExportNotSupported\": \"L'esport in formato PDF non è supportata nel tuo browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Opzioni per il formato dei saldi non corrette.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Opzioni per il formato delle probabilità non corrette.\",\n        \"incorrectNumberFormatOptions\": \"Opzioni per il formato dei numeri non corrette, utilizzo del default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF non incluso !\",\n        \"serverSideExportRequestFailure\": \"Richiesta di export fallita lato server !\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nowy diagram\",\n        \"openDiagram\": \"Otwórz diagram\",\n        \"saveDiagram\": \"Zapisz diagram\",\n        \"export\":{\n            \"label\": \"Eksport\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Układ\",\n            \"manual\": \"Ręczny\",\n            \"tree\": \"Drzewo\",\n            \"cluster\": \"Zgrupowany\"\n        },\n        \"viewMode\": {\n            \"label\": \"Widok\",\n            \"options\": {\n                \"criterion1\":\"Kryterium 1\",\n                \"criterion2\":\"Kryterium 2\",\n                \"twoCriteria\":\"Dwa kryteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Reguła\",\n            \"options\": {\n                \"expected-value-maximization\":\"maksimum\",\n                \"expected-value-minimization\":\"minimum\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Cofnij\",\n        \"redo\": \"Ponów\",\n        \"settings\": \"Ustawienia\",\n        \"about\": \"Informacje\",\n        \"sensitivityAnalysis\": \"Analiza wrażliwości\",\n        \"recompute\": \"Przelicz\"\n    },\n    \"node\":{\n        \"name\": \"Etykieta\"\n    },\n    \"edge\":{\n        \"name\": \"Etykieta\",\n        \"payoff\": \"Wypłata\",\n        \"probability\": \"Prawdopodobieństwo\"\n    },\n    \"text\":{\n        \"value\": \"Tekst\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Tabela ligowa\",\n        \"buttons\": {\n            \"downloadCsv\": \"Pobierz CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Nr polityki\",\n            \"policy\": \"Polityka\",\n            \"comment\": \"Komentarz\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"zdominowana (przez #{{policy}})\",\n            \"extendedDominatedBy\": \"zdominowana rozszerzenie (przez #{{policy1}} i #{{policy2}})\",\n            \"incratio\": \"inkrementalny iloraz={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Rekomendowany (dla pewnej wartości WTP w zakresie)\",\n                \"highlighted-default\": \"Rekomendowany (dla domyślnej wartości WTP)\",\n                \"extended-dominated\" : \"Zdominowana rozszerzenie\",\n                \"dominated\": \"Zdominowana\",\n                \"default\": \"Inne\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Kierunek optymalizacji {{name}}\",\n                \"gradientArrow2\": \"Kierunek optymalizacji {{name}}\",\n                \"dominatedRegion\": \"Obszar zdominowany\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Szary region oznacza obszar zdominowany\",\n                \"gradientArrows\": \"Strzałki wskazują kierunek poprawy\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analiza wrażliwości\",\n        \"buttons\": {\n            \"runJob\": \"Uruchom\",\n            \"stopJob\": \"Zatrzymaj\",\n            \"terminateJob\": \"Zakończ\",\n            \"resumeJob\": \"Wznów\",\n            \"downloadCsv\": \"Pobierz CSV\",\n            \"back\": \"Wstecz\",\n            \"clear\": \"Wyczyść\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Usuń\",\n            \"addParameterValue\": \"Dodaj\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} polityk\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maksimum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mapa cieplna\"\n            }\n        },\n        \"policyPreview\": \"podgląd polityki\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analiza wrażliwości N-czynnikowa\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maksimum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagram tornado\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maximum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Zmniejszenie\",\n                    \"high\": \"Zwiększenie\"\n                },\n                \"xAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistyczna analiza wrażliwości\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"numberOfRuns\": {\n                    \"label\": \"Liczba powtórzeń\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis reguły\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formuła\",\n                        \"help\": \"Wybierz wzór formuły z menu lub wpisz własny kod\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\",\n                \"param-computation\": \"Błąd w wyliczaniu wartości parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Tabela ligowa\"\n        },\n        \"spider-plot\": {\n            \"name\": \"Wykres pajęczynowy\",\n            \"param\": {\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- zmiana procentowa do analizy\"\n                },\n                \"length\": {\n                    \"label\": \"Liczba wartości do przetestowa\",\n                    \"help\": \"Liczba wartości do przetestowa (po jednej stronie zakresu)\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Zmiana procentowa\",\n                \"yAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"errors\":{\n            \"generic\": \"Błąd w obliczeniach analizy wrażliwości: {{message}}\",\n            \"params\": \"Błędne parametry w {{jobName}}\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Ustawienia\",\n        \"general\":{\n            \"title\": \"Ogólne\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontFamily\": \"Rodzina czcionek\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"numberFormatLocale\": \"Kod lokalizacji językowej liczb\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format wypłaty 1\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format wypłaty 2\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"probability\":{\n            \"title\": \"Format prawdopodobieństwa\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"color\": \"Kolor\"\n        },\n        \"node\":{\n            \"title\": \"Węzeł\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalny\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki etykiety\",\n                \"color\": \"Kolor etykiety\"\n            },\n            \"payoff\": {\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            },\n            \"decision\": {\n                \"title\": \"Węzeł Decyzyjny\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Węzeł Losowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Węzeł Końcowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                },\n                \"payoff\": {\n                    \"title\": \"Wypłata\",\n                    \"fontSize\": \"Rozmiar czcionki\",\n                    \"color\": \"Kolor\",\n                    \"negativeColor\": \"Kolor wartości ujemnej\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Krawędź\",\n            \"stroke\": \"Kolor\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalna\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"selected\":{\n                \"title\": \"Zaznaczona\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\"\n            },\n            \"payoff\":{\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Tytuł diagramu\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"color\": \"Kolor\",\n            \"margin\":{\n                \"title\": \"Margines\",\n                \"top\": \"Górny\",\n                \"bottom\": \"Dolny\"\n            },\n            \"description\":{\n                \"title\": \"Podtytuł (opis diagramu)\",\n                \"show\": \"Wyświetl\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"fontWeight\": \"Waga czcionki\",\n                \"fontStyle\": \"Styl czcionki\",\n                \"color\": \"Kolor\",\n                \"marginTop\": \"Margines górny\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Tabela ligowa\",\n            \"plot\": {\n                \"title\": \"Wykres\",\n                \"maxWidth\": \"Maksymalna szerokość\",\n                \"highlightedColor\": \"Kolor polityki rekomendowanej (dla pewnego WTP w zakresie)\",\n                \"highlightedDefaultColor\": \"Kolor polityki rekomendowanej (dla domyślnego WTP)\",\n                \"extendedDominatedColor\": \"Kolog polityki zdominowanej rozszerzenie\",\n                \"dominatedColor\": \"Kolor polityki zdominowanej\",\n                \"defaultColor\": \"Kolor innych polityk\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Inne\",\n            \"disableAnimations\": \"Wyłącz animacje\",\n            \"forceFullEdgeRedraw\": \"Wymuś pełne przerysowywanie krawędzi\",\n            \"hideLabels\": \"Ukryj etykiety\",\n            \"hidePayoffs\": \"Ukryj wypłaty\",\n            \"hideProbabilities\": \"Ukryj prawdopodobieństwa\",\n            \"raw\": \"Surowy\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informacje\"\n    },\n    \"help\":{\n        \"header\": \"Pomoc\",\n        \"mouse\": {\n            \"header\":\"Akcje myszy:\",\n            \"list\":{\n                \"1\": \"lewy klawisz myszy: wybór węzła/krawędzi\",\n                \"2\": \"prawy klawisz myszy: menu kontekstowe (dodawanie/manipulowanie węzłami)\",\n                \"3\": \"podwójne kliknięcie lewym przyciskiem myszy: menu kontekstowe\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Skróty klawiszowe:\",\n            \"list\":{\n                \"1\": \"Del: usuwanie wybranych węzłów\",\n                \"2\": \"Ctrl-C/X: kopiowanie/wycinanie wybranych węzłów\",\n                \"3\": \"Ctrl-V: wklej skopiowane węzły jako poddrzewo wybranego węzła\",\n                \"4\": \"Ctrl-Y/Z: cofnij/ponów\",\n                \"5\": \"Ctrl-Alt-D/C/T: dodaj nowy węzeł Decyzyjny/Losowy/Końcowy jako dziecko <strong>wybranego węzła</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Wstrzyknij nowy węzeł Decyzyjny/Losowy do <strong>wybranej krawędzi</strong>\"\n            }\n        },\n        \"docs\": \"Dokumentacja SilverDecisions jest dostępna <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">tutaj</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definicje zmiennych\",\n        \"scope\": {\n            \"global\": \"zasięg globalny\",\n            \"node\": \"zasięg wybranego węzła i poddrzewa\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Zasięg zmiennej:\",\n            \"global\": \"globalny\",\n            \"node\": \"wybrany węzeł i poddrzewo\"\n        },\n        \"header\": \"Zmienne\",\n        \"code\": \"Kod\",\n        \"buttons\":{\n            \"openDialog\" : \"Otwórz okno dialogowe\",\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Wiele kryteriów\",\n        \"defaultMaximizedCriterionName\": \"Efekt\",\n        \"defaultMinimizedCriterionName\": \"Koszt\",\n        \"nameOfCriterion1\": \"Nazwa kryterium 1\",\n        \"nameOfCriterion2\": \"Nazwa kryterium 2\",\n        \"defaultCriterion1Weight\": \"Domyślna waga kryerium 1\",\n        \"weightLowerBound\": \"Dolna granica wagi\",\n        \"weightUpperBound\": \"Górna granica wagi\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Pokaż tabelę ligową\",\n            \"flip\": \"Zamień\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Układ\",\n        \"marginHorizontal\": \"Margines w poziomie\",\n        \"marginVertical\": \"Margines w pionie\",\n        \"nodeSize\": \"Rozmiar węzła\",\n        \"edgeSlantWidthMax\": \"Skos krawędzi (maksymalny)\",\n        \"gridWidth\": \"Szerokość\",\n        \"gridHeight\": \"Wysokość\",\n        \"scale\": \"Skala\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Szczegóły\",\n        \"title\" : \"Tytuł\",\n        \"description\" : \"Opis\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Węzeł Decyzyjny\",\n                \"chance\":\"Węzeł Losowy\",\n                \"terminal\":\"Węzeł Końcowy\"\n            },\n            \"edge\": \"Krawędź\",\n            \"text\": \"Pływający tekst\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Połączenia\",\n                \"child\": {\n                    \"header\": \"Krawędź #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Czy jesteś pewien, że chcesz porzucić obecny diagram? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"openDiagram\": \"Czy jesteś pewien? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"beforeunload\": \"Czy jesteś pewien, że chcesz zamknąć SilverDecisions? Wszystkie niezapisane zmiany zostaną utracone.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Błąd przetwarzania danych z pliku!\",\n        \"fileApiNotSupported\":\"Funckja 'file API' nie jest wspierana w tej przeglądarce internetowej.\",\n        \"inputFilesProperty\":\"Twoje przeglądarka nie wspiera opcji `pliki` przy otwieraniu pliku.\",\n        \"notSilverDecisionsFile\":\"Plik niezgodny z formatem SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Niepoprawny format ciągu z numerem wersji!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Wersja pliku jest nowasza niż wersja aplikacji. Niektóre funkcjonalności mogą być niedostępne.\",\n        \"objectiveComputationFailure\": \"Błąd podczas wyliczania celu!\",\n        \"diagramDrawingFailure\": \"Błąd podczas rysowania diagramu!\",\n        \"malformedData\":\"Błąd odczytu danych drzewa!\",\n        \"pngExportNotSupported\": \"Eksport do obrazu PNG nie jest wspierany w Twojej przeglądarce.\",\n        \"pngExportNotSupportedIE\": \"Eksport do obrazu PNG nie jest wspierany w przeglądarce Internet Explorer.\",\n        \"svgExportNotSupported\": \"Eksport do obrazu SVG nie jest wspierany w Twojej przeglądarce.\",\n        \"pdfExportNotSupported\": \"Eksport do PDF nie jest wspierany w Twojej przeglądarce.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu wypłaty.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu prawdopodobieństw.\",\n        \"incorrectNumberFormatOptions\": \"Niewłaściwe ustawiono formatowanie liczb. Przyjęto ustawienia domyślne.\",\n        \"jsPDFisNotIncluded\": \"Nie włączono jsPDF!\",\n        \"serverSideExportRequestFailure\": \"Nieudane zapytanie do serwera exportu!\"\n    }\n}\n","require('es6-set/implement');\nimport {D3Extensions} from 'sd-tree-designer'\nimport {App} from './app'\nimport {version} from '../package.json';\nD3Extensions.extend();\n\nApp.version = version;\nmodule.exports = App;\n\n\n\n\n\n\n","import {Templates} from \"../templates\";\nimport {PARAMETER_TYPE} from \"sd-computations/src/jobs/engine/job-parameter-definition\";\nimport {log} from 'sd-utils'\nimport * as d3 from \"../d3\";\nimport {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {Autocomplete} from \"../autocomplete\"\n\nexport class JobParametersBuilder{\n\n\n    jobParameters;\n    hiddenParams;\n    constructor(container, i18nPrefix='', onChange=()=>{}){\n        this.container=container;\n        this.i18nPrefix = i18nPrefix;\n        this.paramTypeToInputType ={};\n        this.paramTypeToInputAttrs = {};\n\n        this.paramTypeToInputType[PARAMETER_TYPE.BOOLEAN] = 'checkbox';\n        this.paramTypeToInputType[PARAMETER_TYPE.DATE] = 'date';\n        this.paramTypeToInputType[PARAMETER_TYPE.INTEGER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.INTEGER] = [{\n            name: \"step\",\n            value: \"1\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.NUMBER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.NUMBER] = [{\n            name: \"step\",\n            value: \"any\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.STRING] = 'text';\n\n        this.onChange = onChange;\n    }\n\n\n    setJobParameters(jobName, jobParameters, customParamsConfig={}){\n        this.jobName=jobName;\n        this.jobParameters = jobParameters;\n        this.customParamsConfig = customParamsConfig;\n        this.clean();\n        this.build(this.container, this.jobParameters.definitions, this.jobParameters.values, '', this.onChange);\n    }\n\n    clean() {\n        this.container.html('');\n        this.pristine = {};\n        this.customValidators = {};\n        this.strictValidation(false);\n    }\n\n    validate(strictValidation = true){\n        this.strictValidation(strictValidation);\n        this.pristine = {};\n        this.container.selectAll('.sd-pristine').classed('sd-pristine', false);\n        return this.checkCustomValidators() && this.jobParameters.validate();\n    }\n\n    checkCustomValidators(){\n        let valid = true;\n        Utils.forOwn(this.customValidators, (val, key)=>{\n            valid = valid && val();\n        });\n        return valid;\n    }\n\n    strictValidation(enabled=true){\n        this.container.classed('sd-strict-validation', enabled);\n    }\n\n\n    build(container, jobParameterDefinitions, parentValueObject,  parentPath='', onChange=()=>{}, onInput=()=>{}){\n        container.html('');\n        var self = this;\n        var params = container.selectAll(\".sd-job-parameter\").data(jobParameterDefinitions);\n        var paramsEnter = params.enter().appendSelector('div.sd-job-parameter');\n\n        paramsEnter.html(d=>Templates.get('jobParameter', d));\n\n        var paramsMerge = paramsEnter.merge(params);\n        paramsMerge.each(function(d,i){\n            var paramSelection = d3.select(this);\n            var path = parentPath;\n\n            if(path){\n                path+='.';\n\n            }\n            path += d.name;\n            paramSelection.classed('sd-hidden', Utils.get(self.customParamsConfig, path+'.hidden'));\n\n            var value = parentValueObject[d.name];\n            var repeating = d.maxOccurs>1;\n            if(value==undefined){\n                if(repeating){\n                    value = [];\n                    for(var vi=0; vi<d.minOccurs; vi++){\n                        value.push(self.getEmptyValue(d.type))\n                    }\n\n                }else{\n                    value=Utils.get(self.customParamsConfig, path+'.value', self.getEmptyValue(d.type))\n                }\n\n                parentValueObject[d.name]=value;\n            }\n\n            if(!repeating) {\n                self.buildParameterSingleValue(paramSelection, d, {\n                    get: ()=> parentValueObject[d.name],\n                    set: (v)=> parentValueObject[d.name]=v\n                }, path,onChange, onInput)\n            }else{\n                paramSelection.appendSelector(\"div.sd-job-parameter-name\").html(self.getParamNameI18n(path));\n\n                var valuesContainer = paramSelection.appendSelector(\"div.sd-job-parameter-values\");\n                var actionButtons = paramSelection.appendSelector(\"div.sd-action-buttons\");\n                var addButton = actionButtons.appendSelector('button.sd-add-job-parameter-value-button.icon-button');\n                addButton.appendSelector(\"i.material-icons\").html('add');\n\n\n                paramSelection.classed('invalid', !d.validate(value));\n                var callbacks = {};\n                callbacks.onValueRemoved = function(v,i){\n                    value.splice(i, 1);\n                    self.buildParameterValues(valuesContainer, d, value, path,callbacks)\n                    addButton.classed('sd-hidden', value.length>=d.maxOccurs)\n                    callbacks.onChange();\n                };\n                callbacks.onChange = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onChange();\n                };\n                callbacks.onInput = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onInput();\n                };\n\n                addButton\n                    .attr('title', i18n.t('jobParametersBuilder.buttons.addParameterValue'))\n                    .classed('sd-hidden', value.length>=d.maxOccurs)\n                    .on('click', ()=>{\n                        value.push(self.getEmptyValue(d.type));\n                        Utils.set(self.pristine, path+\"[\"+(value.length-1)+\"]\", true);\n                        self.buildParameterValues(valuesContainer, d, value, path, callbacks);\n                        addButton.classed('sd-hidden', value.length>=d.maxOccurs);\n                        callbacks.onChange();\n                    });\n\n\n\n\n                self.buildParameterValues(valuesContainer, d, value, path,callbacks);\n            }\n\n        });\n\n    }\n\n    buildParameterValues(container, paramDefinition, values, path, callbacks){\n        var self = this;\n        container.html(\"\");\n\n        var paramValues = container.selectAll(\".sd-job-parameter-value\").data(values);\n\n        paramValues.exit().remove();\n        var paramValuesEnter = paramValues.enter().appendSelector('div.sd-job-parameter-value');\n\n        var paramValuesMerge = paramValuesEnter.merge(paramValues);\n\n        var indexToSelection = {};\n\n        var customValidator = Utils.get(self.customParamsConfig, path+'.customValidator');\n\n        function checkCustomValidator(){\n            let allValid = true;\n            if(customValidator){\n                customValidator(values).forEach((isValid, i)=>{\n                    var selection = indexToSelection[i];\n                    let valid = paramDefinition.validateSingleValue(values[i]) && isValid;\n                    selection.classed('invalid', !valid);\n                    allValid = allValid && valid;\n                })\n            }\n\n            return allValid;\n        }\n\n        self.customValidators[path] = checkCustomValidator;\n\n        paramValuesEnter.each(function (value, i) {\n            var derivedValueUpdaters = [];\n\n            function updateDerivedValues(){\n                derivedValueUpdaters.forEach(updater=>updater(values[i]))\n            }\n\n            var selection = d3.select(this);\n            indexToSelection[i] = selection;\n\n\n            if (PARAMETER_TYPE.COMPOSITE == paramDefinition.type) {\n                var nestedParameters = selection.selectOrAppend(\"div.sd-nested-parameters\");\n                var onChange = ()=>{\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    updateDerivedValues();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                };\n                var onInput = ()=>{\n                    updateDerivedValues();\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                };\n\n                self.build(nestedParameters, paramDefinition.nestedParameters, value, path, onChange, onInput);\n                selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                selection.classed('sd-pristine', Utils.get(self.pristine, path+\"[\"+i+\"]\", false));\n            }else{\n                self.buildParameterSingleValue(selection, paramDefinition, {\n                    get: ()=> values[i],\n                    set: (v)=> values[i]=v\n                }, path, ()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                },()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                })\n\n            }\n\n\n            var derivedValuesConfigs = Utils.get(self.customParamsConfig, path+'._derivedValues');\n            if(derivedValuesConfigs){\n                derivedValuesConfigs.forEach(derivedValueConfig =>{\n                    let updater = self.buildDerivedValue(selection, derivedValueConfig, path);\n                    updater(value);\n                    derivedValueUpdaters.push(updater);\n                });\n            }\n\n\n            var actionButtons = selection.appendSelector(\"div.sd-action-buttons\");\n            var removeButton = actionButtons.appendSelector('button.sd-remove-job-parameter-value-button.icon-button');\n            removeButton.appendSelector(\"i.material-icons\").html('remove')\n            removeButton\n                .attr('title', i18n.t('jobParametersBuilder.buttons.removeParameterValue'))\n                .classed('sd-hidden', values.length<=paramDefinition.minOccurs)\n                .on('click', (d)=>callbacks.onValueRemoved(d,i))\n\n        });\n\n        checkCustomValidator();\n\n        paramValuesMerge.each(function (value, i) {\n\n        });\n\n\n    }\n\n    buildDerivedValue(container, derivedValueConfig, path){\n        var self = this;\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group.sd-derived-value');\n        var name = this.getParamNameI18n(path+'.'+derivedValueConfig.name);\n        var input = selection.append('input').attr('type', 'text').attr(\"disabled\", \"disabled\");\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(name);\n\n        return (paramValue) => {\n            input.node().value = derivedValueConfig.value(paramValue);\n            AppUtils.updateInputClass(input);\n        }\n\n    }\n\n    buildParameterSingleValue(container, paramDefinition, valueAccessor, path, onChange, onInput){\n        var self = this;\n        var temp = {};\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group');\n        selection.classed('sd-parameter-'+paramDefinition.name, true);\n        var help = this.getParamHelpI18n(path);\n        if(help) {\n            let helpContainer = container.appendSelector('div.sd-help-icon');\n            helpContainer.html('<i class=\"material-icons\">info_outline</i>');\n            Tooltip.attach(helpContainer, (d)=>{\n                return help;\n            }, 5, 15);\n        }\n\n        var options = Utils.get(self.customParamsConfig, path+'.options', null);\n\n        var inputType = this.paramTypeToInputType[paramDefinition.type];\n        var additionalInputAttrs = this.paramTypeToInputAttrs[paramDefinition.type];\n        var input;\n        if(options && options.length){\n            inputType = 'select';\n            input = selection.append('select');\n            var optionsSel = input.selectAll(\"option\").data([null].concat(options));\n            optionsSel.enter().append(\"option\").attr(\"value\", d=>d).text(d=>d);\n\n            if(Utils.get(self.customParamsConfig, path+'.optionsAutocomplete', null)){\n                let autocomplete = new Autocomplete(input);\n                input = autocomplete.getInput();\n            }\n        }else{\n            input = selection.append('input').attr('type', inputType);\n\n            if(additionalInputAttrs){\n                additionalInputAttrs.forEach(attr=>input.attr(attr.name, attr.value))\n\n            }\n        }\n\n        input.attr('id', inputId);\n\n        input.classed('sd-input', true);\n        input.on('input change', function(d, i){\n            var value = self.parseInput(this.value, paramDefinition.type);\n            if(inputType=='checkbox'){\n                value = this.checked\n            }\n            if(!paramDefinition.validateSingleValue(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n\n            valueAccessor.set(value);\n            if (d3.event.type == 'change') {\n                if (onChange) {\n                    onChange();\n                }\n            }\n\n            if (d3.event.type == 'input') {\n                if (onInput) {\n                    onInput();\n                }\n            }\n\n            AppUtils.updateInputClass(d3.select(this));\n        }).each(function(d, i){\n            var value = valueAccessor.get();\n            if(inputType=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            d3.select(this).classed('invalid', !paramDefinition.validateSingleValue(value));\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(d=>{\n                let label = this.getParamNameI18n(path);\n                return label;\n            });\n        input.node().value = valueAccessor.get();\n    }\n\n    value(path, value){\n        return this.jobParameters.value(path, value);\n    }\n\n    parseInput(value, parameterType){\n        if(parameterType===PARAMETER_TYPE.DATE){\n            return new Date(value)\n        }\n        if(parameterType===PARAMETER_TYPE.NUMBER || parameterType===PARAMETER_TYPE.INTEGER){\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    getEmptyValue(parameterType){\n        if(parameterType===PARAMETER_TYPE.COMPOSITE){\n            return {}\n        }\n\n        return null;\n    }\n\n    getParamNameI18n(path){\n        return i18n.t(this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.label')\n    }\n\n    getParamHelpI18n(path){\n        let key = this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.help';\n        let help = i18n.t(key);\n        return help === key ? null : help;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport * as d3 from \"../d3\";\nimport {PivotTable} from \"../pivot-table\";\nvar jQuery = require('jquery');\n\nexport class JobResultTableConfig {\n    onRowSelected = (rows, indexes, event) => {};\n    className = '';\n\n    pivotTable;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobResultTable {\n\n    constructor(container, config) {\n        this.container = container;\n        this.config = new JobResultTableConfig(config);\n        this.init();\n    }\n\n    init() {\n        this.pivotTable = new PivotTable(this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true));\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = []\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(data.data[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n\n    setClassName(className){\n        if(this.config.className){\n            this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, false);\n            this.config.className = className;\n        }\n        this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true)\n    }\n\n    setData(data, jobParameters, job, config) {\n        var self = this;\n        var derivers = jQuery.pivotUtilities.derivers;\n        var pivotOptions = {\n            rows: data.rows,\n            vals: data.vals,\n            cols: data.cols,\n            hiddenAttributes: ['$rowIndex'],\n            aggregatorName: this.pivotTable.getAggregatorName(\"maximum\"),\n            rendererOptions: {\n                table: {\n                    clickCallback: function (e, value, filters, pivotData) {\n                        self.clickCallback(e, value, filters, pivotData);\n                    }\n                },\n                heatmap: {\n                    colorScaleGenerator: function (values) {\n                        let extent = d3.extent(values);\n\n                    return d3.scaleLinear()\n                        .domain([extent[0], (extent[0]+extent[1])/2,extent[1]])\n                        .range([\"#4b53ff\", \"#FFF\", \"#FF0000\"])\n                    }\n                }\n            },\n            rendererName: this.pivotTable.getRendererName(\"heatmap\")\n            /*\n             rendererName: 'custom',\n             renderers: {\n             'custom': function(pivotData, options){\n             console.log(pivotData)\n             }\n             }*/\n\n        };\n\n        if(config){\n            if(config.aggregatorName){\n                pivotOptions.aggregatorName = config.aggregatorName;\n            }\n            if(config.aggregators){\n                pivotOptions.aggregators = config.aggregators;\n            }\n        }\n\n        this.pivotTable.update(data.data.map((r, i)=>r.concat(i ?  i-1 : '$rowIndex')), pivotOptions);\n\n        // this.drawHeaders(data.headers);\n        // this.drawRows(data.rows)\n    }\n\n    clear() {\n        this.clearSelection();\n        this.pivotTable.clear();\n    }\n\n    show(show=true){\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide(){\n        this.show(false);\n    }\n\n    clearSelection() {\n        // this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {log} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nvar jQuery = require('jquery');\n\n\nexport class ProbabilisticSensitivityAnalysisJobResultTable extends JobResultTable {\n\n    constructor(container, config, payoffNumberFormatter, probabilityNumberFormatter){\n        super(container, config);\n        this.payoffNumberFormatter = payoffNumberFormatter;\n        this.probabilityNumberFormatter = probabilityNumberFormatter;\n    }\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n        var data = {rows: ['policy', 'expected value', 'median', 'standard deviation', 'best probability'], cols: [], vals: ['expected value'], data: []};\n\n\n        data.data.push(['policy', 'expected value', 'median', 'standard deviation', 'best probability']);\n        jobResult.policies.forEach((policy, i)=> {\n            var row = [\n                Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                this.payoffNumberFormatter(jobResult.expectedValues[i]),\n                this.payoffNumberFormatter(jobResult.medians[i]),\n                this.payoffNumberFormatter(jobResult.standardDeviations[i]),\n                this.probabilityNumberFormatter(jobResult.policyIsBestProbabilities[i])\n            ];\n            data.data.push(row);\n        });\n\n        log.trace(data);\n        super.setData(data, jobParameters, job,{\n            aggregatorName: \"empty\",\n            aggregators:{\n                empty: (attributeArray)=>(data, rowKey, colKey)=>{\n                    return {\n                        push: function(record) {\n                        },\n                        value: function() { return 0; },\n                        format: function(x) { return i18n.t('jobResultTable.policyPreview'); },\n                        numInputs: 1\n                    };\n                }\n            }\n        })\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push({policyIndex: record['$rowIndex']});\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Utils} from \"sd-utils\"\n\n\nexport class SensitivityAnalysisJobResultTable extends JobResultTable {\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n\n        jobParameters =job.createJobParameters(Utils.cloneDeep(jobParameters.values));\n        jobParameters.values.roundVariables = true;\n        var csvDAta = job.jobResultToCsvRows(jobResult, jobParameters);\n\n        if (csvDAta.length) {\n            csvDAta[0][0] = 'policy\\nnumber'\n        }\n\n        let cols = [];\n        let totalInColNum = 1;\n\n        jobParameters.values.variables.forEach(v=>{\n            let _totalInColNum = v.length * totalInColNum;\n            if((_totalInColNum>1000)){\n                return;\n            }\n            totalInColNum=_totalInColNum;\n            cols.push(v.name);\n        });\n\n        var data = {rows: ['policy'], cols: cols, vals: ['payoff'], data: csvDAta};\n        super.setData(data)\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self = this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(self.jobResult.rows[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {LineChartConfig, LineChart} from \"odc-d3/src/line-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class SpiderPlotConfig extends LineChartConfig {\n    maxWidth = undefined;\n\n    showLegend = true;\n    policyIndex = 0;\n    guides = true;\n    margin={\n        left: 100\n    };\n    x={// X axis config\n        title: i18n.t('job.spider-plot.plot.xAxisTitle'), // axis label\n        key: 0,\n        domainMargin: 0\n    };\n    y={// Y axis config\n        title: i18n.t('job.spider-plot.plot.yAxisTitle'), // axis label,\n        key: 1,\n        domainMargin: 0.1\n    };\n    series = true;\n    dotRadius = 3;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class SpiderPlot extends LineChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new SpiderPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new SpiderPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-spider-plot', true);\n    }\n\n    setData(data){\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map(r=>{\n            return {\n                key: r.variableName,\n                values: data.percentageRangeValues.map((rangeVal, index)=>[\n                    data.percentageRangeValues[index],\n                    r.payoffs[this.config.policyIndex][index]\n                ])\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {DivergingStackedBarChartConfig, DivergingStackedBarChart} from \"odc-d3/src/diverging-stacked-bar-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class TornadoDiagramPlotConfig extends DivergingStackedBarChartConfig {\n    maxWidth = undefined;\n    margin={\n        left: 150,\n        top: 70\n    };\n\n    showLegend = true;\n    forceLegend = true;\n\n    categoryNames = [i18n.t(\"job.tornado-diagram.plot.legend.low\"), i18n.t(\"job.tornado-diagram.plot.legend.high\")];\n    colorRange = [\"#4f81bd\", \"#9bbb59\"];\n    policyIndex = 0;\n\n    guides = true;\n    middleValue = 1000;\n    showBarValues = false;\n\n    x={// X axis config\n        title: i18n.t('job.tornado-diagram.plot.xAxisTitle'), // axis label\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class TornadoDiagramPlot extends DivergingStackedBarChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new TornadoDiagramPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new TornadoDiagramPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-tornado-diagram-plot', true);\n    }\n\n    setData(data){\n        this.config.middleValue = data.defaultPayoff;\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map((r)=>{\n            let varExtent = data.variableExtents[data.variableNames.indexOf(r.variableName)];\n            return {\n                key: r.variableName+' ['+varExtent[0]+'; '+varExtent[1]+']',\n                values: [\n                    Math.max(0, data.defaultPayoff - r.extents[this.config.policyIndex][0]),\n                    Math.max(0, r.extents[this.config.policyIndex][1] - data.defaultPayoff)\n                ],\n                categories: r.extentVariableValues[this.config.policyIndex][0] <= r.extentVariableValues[this.config.policyIndex][1] ? [0, 1] : [1, 0]\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {Dialog} from \"../dialogs/dialog\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {LeagueTable} from \"./league-table\";\nimport {LeagueTablePlot} from \"./league-table-plot\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class LeagueTableDialog extends Dialog {\n    computationsManager;\n    jobInstanceManager;\n\n    constructor(app) {\n        super(app.container.select('.sd-league-table-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-league-table-job-results\");\n        this.initButtons();\n\n        this.job = this.computationsManager.getJobByName(\"league-table\");\n    }\n\n    onOpen() {\n        this.clear();\n        this.runJob();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-league-table-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-league-table-warnings\").appendSelector(\"div.sd-league-table-warning\").html(msgHTML);\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (row, i)=> this.onResultRowSelected(row, i),\n            onRowHover: (row, i)=> this.resultPlot.emphasize(row.row, true),\n            onRowHoverOut: (row, i)=> this.resultPlot.emphasize(row.row, false),\n        };\n\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n        }\n\n\n        this.resultTable = new LeagueTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n        this.resultTable.setData(result, this.app.dataModel);\n        this.resultTable.show();\n    }\n\n\n\n    initResultPlot(result) {\n        let self = this;\n        let config = {\n            maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            weightLowerBound: result.weightLowerBound,\n            defaultWeight: result.defaultWeight,\n            weightUpperBound: result.weightUpperBound,\n            payoffCoeffs: result.payoffCoeffs,\n            payoffNames: result.payoffNames,\n            x: {\n                value: (d, key) => d.payoffs[0],\n                title: result.payoffNames[0]\n            },\n            y: {\n                value: (d, key) => d.payoffs[1],\n                title: result.payoffNames[1]\n            },\n            onDotHover: (d, i) => this.resultTable.emphasize(d, true),\n            onDotHoverOut: (d, i) => this.resultTable.emphasize(d, false),\n\n\n            color: function (group) {\n                let groupsConf = self.app.config.leagueTable.plot.groups;\n                let groupConf = groupsConf[group.key];\n                if (groupConf) {\n                    return groupConf.color;\n                }\n                return 'black'\n            },\n            groupOrdering: {\n                'dominated': 0,\n                'extended-dominated': 1,\n                'highlighted': 2,\n                'highlighted-default': 3,\n                'default': 4\n\n            },\n            groups: {\n                value: function (r) {\n                    if (r.optimalForDefaultWeight) {\n                        return 'highlighted-default'\n                    } else if (r.optimal) {\n                        return 'highlighted'\n                    }  else if (r.dominatedBy !== null) {\n                        return 'dominated'\n                    } else if (r.extendedDominatedBy !== null) {\n                        return 'extended-dominated'\n                    }\n\n                    return \"default\";\n                },\n                displayValue: (groupKey) => i18n.t(\"leagueTable.plot.groups.\"+groupKey)\n            }\n        };\n\n        this.resultPlot = new LeagueTablePlot(this.jobResultsContainer.select(\".sd-job-result-plot-container\").node(), result.rows, config);\n        setTimeout(function () {\n            self.resultPlot.init()\n        }, 100)\n    }\n\n    onResized() {\n        if (this.resultPlot) {\n            this.resultPlot.init();\n        }\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-league-table-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n\n    initJobParams(){\n        this.jobParameters = this.job.createJobParameters({\n            ruleName: this.computationsManager.getCurrentRule().name,\n            weightLowerBound: this.app.dataModel.weightLowerBound,\n            defaultWeight: this.app.dataModel.defaultCriterion1Weight,\n            weightUpperBound: this.app.dataModel.weightUpperBound,\n\n        });\n    }\n\n    validateParams(){\n        this.initJobParams();\n        return this.jobParameters.validate();\n    }\n\n    runJob() {\n\n\n        this.initJobParams();\n\n        if(!this.validateParams()){\n            alert(i18n.t(\"job.errors.params\", {\"jobName\": i18n.t(\"job.league-table.name\")}))\n            return;\n        }\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n            onJobStarted: this.onJobStarted,\n            onJobCompleted: this.onJobCompleted,\n            onJobFailed: this.onJobFailed,\n            onJobStopped: this.onJobStopped,\n            onJobTerminated: this.onJobTerminated,\n            onProgress: this.onProgress,\n            callbacksThisArg: this\n        }).then(jobInstanceManager=> {\n            this.jobInstanceManager = jobInstanceManager;\n        }).catch(e=> {\n            log.error(e);\n        }).then(()=> {\n            this.disableActionButtonsAndShowLoadingIndicator(false);\n        })\n    }\n\n    initButtons() {\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    clear() {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.jobResultsContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlot(result);\n\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.downloadCsvButtons);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                e.jobName = i18n.t(\"job.league-table.name\");\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(row, index) {\n        let title = Policy.toPolicyString(row.policy, false);\n        this.app.showPolicyPreview(title, row.policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows(), 'leaguetable')\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import {ScatterPlot, ScatterPlotConfig} from \"odc-d3/src/scatterplot\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTablePlotConfig extends ScatterPlotConfig {\n    maxWidth = undefined;\n    weightLowerBound = 0;\n    weightUpperBound = Infinity;\n    gradientArrowLength = 30;\n    gradientArrowOffset = 10;\n    payoffCoeffs = [1, 1];\n    payoffNames = [];\n\n    showLegend = true;\n    forceLegend = true;\n\n    legend = {\n        width: 125,\n    };\n\n    // d3ColorCategory = false;\n\n    guides = true;\n    dotRadius = 5;\n    emphasizedDotRadius = 8;\n\n    dotId = (d, i) => 'sd-league-table-dot-'+d.id;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LeagueTablePlot extends ScatterPlot {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LeagueTablePlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new LeagueTablePlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-league-table-plot', true);\n        this.initArrowMarker(\"triangle\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.selectOrAppend(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        this.checkOrdering();\n        super.initPlot();\n    }\n\n    checkOrdering(){\n        if(this.config.groupOrdering){\n            let getOrdering  = d => {\n                let g = this.config.groups.value(d);\n                return this.config.groupOrdering[g] === undefined ? 999 : this.config.groupOrdering[g];\n            };\n            this.data.sort((a, b)=>getOrdering(a) - getOrdering(b));\n        }\n    }\n\n    update(newData) {\n        this.checkOrdering();\n        super.update(newData);\n\n        this.updateIcerLines();\n        this.updateDominatedRegion();\n        this.updateGradientArrows();\n        this.updateDotLabels();\n\n\n    };\n\n    updateIcerLines() {\n        let self = this;\n        var linesContainerClass = this.linesContainerClass = this.prefixClass(\"lines-container\");\n        var linesContainerSelector = \"g.\" + linesContainerClass;\n        var linesContainer = this.linesContainer= self.svgG.selectOrInsert(linesContainerSelector, \".\" + self.dotsContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var linesContainerClip = linesContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        linesContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        linesContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        var line = d3.line()\n            .x(this.plot.x.map)\n            .y(this.plot.y.map);\n\n\n\n\n        let linePoints = this.plot.data.filter(d=>d.incratio !== null).sort(this.plot.x.map);\n        let highlightedPoints = this.plot.data.filter(d=>[\"highlighted\", \"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1).sort((a, b) => this.plot.x.map(a) - this.plot.x.map(b));\n        let highlightedDefaultPoints = highlightedPoints.filter(d=>[\"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1);\n\n        this.dominatedRegionPoints = highlightedPoints.map(d=>[this.plot.x.map(d), this.plot.y.map(d)]);\n\n        if (!highlightedPoints.length) {\n            linesContainer.selectAll(\"*\").remove();\n            return;\n        }\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('middle-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", line(highlightedPoints));\n\n        highlightedPoints.sort((a, b) =>a.incratio - b.incratio || (this.config.payoffCoeffs[0] * (this.plot.x.map(a) - this.plot.x.map(b))));\n\n        let minPoint = highlightedPoints[0];\n        let maxPoint = highlightedPoints[highlightedPoints.length - 1];\n\n        let lowPoint;\n        let highPoint;\n\n        let xAxisExtent = [this.plot.x.scale.invert(0), this.plot.x.scale.invert(this.plot.width)];\n        let yAxisExtent = [this.plot.y.scale.invert(this.plot.height), this.plot.y.scale.invert(0)];\n\n        let sign = (this.config.payoffCoeffs[0] * this.config.payoffCoeffs[1]) > 0 ? 1 : -1;\n\n        let infLowY = this.config.payoffCoeffs[0] > 0 ? this.plot.height: 0;\n        if(sign > 0){\n            infLowY = this.config.payoffCoeffs[0] < 0 ? this.plot.height: 0;\n        }\n        let infLowPoint = [this.plot.x.map(minPoint), infLowY];\n\n        if (this.config.weightLowerBound == Infinity) {\n            lowPoint = infLowPoint\n        } else {\n            let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n            lowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.weightLowerBound * (this.plot.x.value(minPoint) - x) + this.plot.y.value(minPoint))];\n            if(Math.abs(lowPoint[1]) > 1000000){\n                lowPoint = infLowPoint\n            }\n        }\n\n        let infHighPoint =  [this.plot.x.map(maxPoint), this.config.payoffCoeffs[1] > 0 ? this.plot.height: 0];\n        if (this.config.weightUpperBound == Infinity) {\n            highPoint = infHighPoint\n        } else {\n\n            let x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n\n            if(sign > 0){\n                x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n            }\n\n            highPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.weightUpperBound * (x - this.plot.x.value(maxPoint)) + this.plot.y.value(maxPoint))];\n            // highPoint = [this.plot.x.scale(x), this.plot.y.scale(EE.toFloat(EE.multiply(-sign, EE.multiply(this.config.weightUpperBound, (x - this.plot.x.value(maxPoint))))) + this.plot.y.value(maxPoint))];\n            if(Math.abs(highPoint[1]) > 1000000){\n                highPoint = infHighPoint\n            }\n        }\n\n        if(highlightedDefaultPoints.length){\n            let defaultPoint = highlightedDefaultPoints[0];\n            let defLowPoint = infLowPoint;\n            let defHighPoint = infHighPoint;\n            if (this.config.defaultWeight !== Infinity) {\n                let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                defLowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.defaultWeight * (this.plot.x.value(defaultPoint) - x) + this.plot.y.value(defaultPoint))];\n                x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                if(sign > 0){\n                    x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n                }\n                defHighPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.defaultWeight * (x - this.plot.x.value(defaultPoint)) + this.plot.y.value(defaultPoint))];\n            }\n            linesContainer.selectOrAppend(\"path.\" + this.prefixClass('default-incratio'))\n                .attr(\"shape-rendering\", \"optimizeQuality\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", 'black')\n                .attr(\"d\", d3.line()([defLowPoint, defHighPoint]))\n        } else{\n            linesContainer.select(\"path.\" + this.prefixClass('default-incratio')).remove()\n        }\n\n\n        this.dominatedRegionPoints.unshift(lowPoint);\n        this.dominatedRegionPoints.push(highPoint);\n\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('low-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([lowPoint, [this.plot.x.map(minPoint), this.plot.y.map(minPoint)]]))\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('high-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([highPoint, [this.plot.x.map(maxPoint), this.plot.y.map(maxPoint)]]))\n\n\n\n\n    }\n\n    updateDominatedRegion(){\n        let self = this;\n        var dominatedRegionContainerClass = this.prefixClass(\"dominated-region-container\");\n        var dominatedRegionContainerSelector = \"g.\" + dominatedRegionContainerClass;\n        var dominatedRegionContainer = self.svgG.selectOrInsert(dominatedRegionContainerSelector, \".\"+this.linesContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var dominatedRegionContainerClip = dominatedRegionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        dominatedRegionContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        dominatedRegionContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        //draw dominated region\n\n        let worstPoint = [\n            this.config.payoffCoeffs[0] < 0 ? self.plot.width : 0,\n            this.config.payoffCoeffs[1] < 0 ? 0 : self.plot.height\n        ];\n\n        this.dominatedRegionPoints.push(worstPoint);\n\n        if(this.dominatedRegionPoints.some(p=>worstPoint[1] ? p[1] <=0 : p[1] >= self.plot.height)){\n            this.dominatedRegionPoints.push([worstPoint[0], worstPoint[1] ? 0 : self.plot.height]);\n        }\n\n        this.dominatedRegionPoints.sort((a, b)=> (a[0] - b[0]));\n        this.dominatedRegionPoints = this.dominatedRegionPoints.reduce((prev, curr)=>{\n            if(!prev.length){\n                return [curr]\n            }\n            var prevPoint = prev[prev.length-1];\n            if(prevPoint[0] !== curr[0]){\n                prev.push(curr)\n            }\n            if(Math.abs(worstPoint[1] - curr[1]) > Math.abs(worstPoint[1] - prev[prev.length-1][1])){\n                prev[prev.length-1] = curr;\n            }\n            return prev;\n\n        }, []);\n\n        let area = d3.area();\n        area.y0(worstPoint[1])\n        dominatedRegionContainer.selectOrInsert(\"path.\" + this.prefixClass('dominated-region'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"gray\")\n            .attr(\"stroke-width\", 0)\n            .attr(\"d\", area(this.dominatedRegionPoints));\n\n        Tooltip.attach(dominatedRegionContainer, i18n.t('leagueTable.plot.tooltip.dominatedRegion'));\n    }\n\n    updateDotLabels() {\n        var self = this;\n        var labelsContainerClass = this.prefixClass(\"dot-labels-container\");\n        var labelsContainerSelector = \"g.\" + labelsContainerClass;\n        var labelsContainer = self.svgG.selectOrAppend(labelsContainerSelector, \".\" + self.dotsContainerClass);\n\n        var labels = labelsContainer.selectAll(\"text.\" + this.prefixClass(\"dot-label\")).data(this.plot.data);\n        labels.exit().remove();\n        labels.enter().append('text')\n            .attr('class', this.prefixClass(\"dot-label\"))\n            .merge(labels)\n            .attr('x', this.plot.x.map)\n            .attr('y', this.plot.y.map)\n            .attr('text-anchor', 'end')\n            .attr(\"dy\", \"-5px\")\n            .attr(\"dx\", \"-5px\")\n            .text(d=>d.id)\n    }\n\n    updateGradientArrows() {\n\n        var data = this.config.payoffCoeffs.map((coeff, i)=>{\n\n            let l = this.config.gradientArrowLength * coeff;\n            let offset = this.config.gradientArrowOffset * coeff;\n\n            let d = {\n                x1: this.plot.width/2,\n                y1: this.plot.height/2,\n            };\n\n            if(i==0){\n                d.x1 += offset;\n                d.x2 = d.x1 + l;\n                d.y2 = d.y1\n            }else{\n                d.y1 -= offset;\n                d.x2 = d.x1;\n                d.y2 = d.y1 - l\n            }\n\n            return d\n        });\n\n        let self = this;\n        var arrowsContainerClass = this.prefixClass(\"gradient-arrows-container\");\n        var arrowsContainerSelector = \"g.\" + arrowsContainerClass;\n        var arrowsContainer = self.svgG.selectOrInsert(arrowsContainerSelector, \".\" + self.dotsContainerClass);\n\n        let arrowClass = this.prefixClass(\"gradient-arrow\");\n        var arrows = arrowsContainer.selectAll(\".\"+arrowClass).data(data);\n        arrows.exit().remove();\n        var arrowsEnter = arrows.enter().append('g')\n            .attr('class', arrowClass);\n\n        arrowsEnter.append(\"line\").attr(\"marker-end\", \"url(#triangle)\");\n        var arrowsMerge =arrowsEnter.merge(arrows);\n\n        arrowsMerge.select(\"line\")\n            .attr(\"x1\", d=>d.x1)\n            .attr(\"y1\", d=>d.y1)\n            .attr(\"x2\", d=>d.x2)\n            .attr(\"y2\", d=>d.y2);\n\n        Tooltip.attach(arrowsMerge, (d, i)=>{\n            return i18n.t('leagueTable.plot.tooltip.gradientArrow' + (i + 1), { name: this.config.payoffNames[i]});\n        });\n    }\n\n    emphasize(row, emphasize=true){\n        this.emphasizeDot(this.svg.selectAll('#'+this.config.dotId(row)), emphasize);\n    }\n\n    emphasizeDot(selection, emphasize){\n        selection\n            .classed('sd-emphasized', emphasize)\n            .transition()\n            .attr('r', emphasize ? this.config.emphasizedDotRadius : this.config.dotRadius)\n    }\n    updateDots(){\n        var self = this;\n        super.updateDots();\n        var dotsContainer = this.svgG.select(\"g.\" + this.dotsContainerClass);\n        dotsContainer.selectAll('.' + this.dotClass)\n            .on(\"mouseover.emphasize\", function(d){ self.emphasizeDot(d3.select(this), true) })\n            .on(\"mouseout.emphasize\", function(d){ self.emphasizeDot(d3.select(this), false) })\n    }\n\n    updateLegend() {\n        super.updateLegend();\n        var plot = this.plot;\n\n        let container = plot.legend.container.selectOrAppend(\"g.sd-additional-items\")\n        let legendCells = plot.legend.container.select(\".legendCells\");\n        let margin = 20;\n\n        let texts = [\n            i18n.t(\"leagueTable.plot.legend.dominatedRegion\"),\n            i18n.t(\"leagueTable.plot.legend.gradientArrows\")\n        ];\n\n        container.attr(\"transform\", \"translate(0, \"+(legendCells.node().getBBox().height+margin)+\")\");\n\n        container.selectAll(\"text\").data(texts)\n            .enter().append(\"text\")\n            .text(d=>d)\n            .attr('dy', \"0\")\n            .attr('x', \"0\");\n\n        container.selectAll(\"text\").call(wrap, d=>d, this.config.legend.width);\n\n        function wrap(text, getTextData, width) {\n            text.each(function(d) {\n\n                var text = d3.select(this),\n                    words = getTextData(d).split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1.1, // ems\n                    y = text.attr('y'),\n                    dy = parseFloat(text.attr('dy')),\n                    tspan = text.text(null).append('tspan')\n                        .attr('x', 0).attr('y', y).attr('dy', dy + 'em');\n\n                if(this.previousSibling){\n                    text.attr('y', this.previousSibling.getBBox().height+10)\n                }\n\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n                        line = [word];\n                        tspan = text.append('tspan')\n                            .attr('x', 0).attr('y', y)\n                            .attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n","import {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTableConfig {\n    onRowSelected = (row) => {\n    };\n    extendedPolicyDescription = true;\n    onRowHover = (d, i) => {};\n    onRowHoverOut = (d, i) => {};\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class LeagueTable {\n\n    constructor(container, config, dataModel) {\n        this.container = container;\n        this.config = new LeagueTableConfig(config);\n        this.dataModel = dataModel;\n        this.init();\n    }\n\n    init() {\n        this.resultTable = this.container.selectOrAppend(\"table.sd-league-table\");\n        this.resultTableHead = this.resultTable.selectOrAppend(\"thead\");\n        this.resultTableBody = this.resultTable.selectOrAppend(\"tbody\");\n        this.resultTableFoot = this.resultTable.selectOrAppend(\"tfoot\");\n    }\n\n    setData(jobResult, dataModel) {\n        this.jobResult = jobResult;\n        this.dataModel = dataModel;\n        this.drawHeaders([\n            i18n.t('leagueTable.headers.policyNo'),\n            i18n.t('leagueTable.headers.policy'),\n            dataModel.payoffNames[0],\n            dataModel.payoffNames[1],\n            i18n.t('leagueTable.headers.comment')\n        ]);\n        this.drawRows(jobResult.rows)\n    }\n\n    drawHeaders(headerData) {\n        var headers = this.resultTableHead.selectOrAppend(\"tr\").selectAll(\"th\").data(headerData);\n        var headersEnter = headers.enter().append(\"th\");\n        var headersMerge = headersEnter.merge(headers);\n        headers.exit().remove();\n\n        headersMerge.text(d=>d);\n    }\n\n    drawRows(rowsData) {\n        var self = this;\n\n        let data = rowsData.reduce((prev, d)=> {\n            let r = prev;\n            d.policies.forEach((policy, i)=> {\n                if (!i) {\n                    r.push({\n                        row: d,\n                        policy: policy,\n                        cells: [\n                            {\n                                data: d.id,\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                                rowspan: 1\n                            },\n                            {\n                                data: d.payoffs[0],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: d.payoffs[1],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: this.getRowComment(d),\n                                rowspan: d.policies.length\n                            },\n                        ]\n                    });\n                    return;\n                }\n\n                r.push({\n                    row: d,\n                    policy: policy,\n                    cells: [{\n                        data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                        rowspan: 1\n                    }]\n                });\n\n            });\n\n            return r;\n        }, []);\n\n        var rows = this.resultTableBody.selectAll(\"tr\").data(data);\n\n        var rowsEnter = rows.enter().append(\"tr\");\n        var rowsMerge = rowsEnter.merge(rows);\n        rowsMerge\n            .on('click', function (d, i) {\n                // d3.select(this).classed('sd-selected', true);\n                self.config.onRowSelected(d, i)\n            })\n            .classed('sd-highlighted', d=>d.row.optimal)\n            .classed('sd-highlighted-default', d=>d.row.optimalForDefaultWeight)\n            .attr('id', d => 'sd-league-table-row-'+d.row.id);\n\n        rowsMerge.on(\"mouseover.onRowHover\", this.config.onRowHover);\n        rowsMerge.on(\"mouseout.onRowHoverOut\", this.config.onRowHoverOut);\n\n        rows.exit().remove();\n\n        var cells = rowsMerge.selectAll(\"td\").data(d=>d.cells);\n        var cellsEnter = cells.enter().append(\"td\");\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.text(d=>d.data);\n        cellsMerge.attr('rowspan', d=>d.rowspan);\n        cells.exit().remove();\n\n    }\n\n    clear() {\n        this.clearSelection();\n    }\n\n    show(show = true) {\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide() {\n        this.show(false);\n    }\n\n    clearSelection() {\n        this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n    getRowComment(row) {\n        if(row.incratio !== null){\n            return i18n.t('leagueTable.comment.incratio', {incratio: row.incratio});\n        }\n        if(row.dominatedBy !== null){\n            return i18n.t('leagueTable.comment.dominatedBy', {policy: row.dominatedBy});\n        }\n        if(row.extendedDominatedBy !== null){\n            return i18n.t('leagueTable.comment.extendedDominatedBy', {policy1: row.extendedDominatedBy[0], policy2: row.extendedDominatedBy[1]});\n        }\n        return '';\n    }\n\n\n    emphasize(row, emphasize=true){\n        this.resultTableBody.selectAll('#sd-league-table-row-'+row.id).classed('sd-emphasized', emphasize);\n    }\n}\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\n\nimport {Utils} from 'sd-utils'\nimport {Templates} from \"./templates\";\n\nexport class LoadingIndicator{\n    static show(message=''){\n        var html = Templates.get('loadingIndicator');\n\n        var g = d3.select('body').selectOrAppend('div.sd-loading-indicator-container').html(html).select('.sd-loading-indicator').classed('visible', true).style('display', 'block')\n    }\n\n    static hide(){\n        let select = d3.select('.sd-loading-indicator');\n        select.classed('visible', false);\n        setTimeout(function(){\n            select.style('display', 'none')\n        }, 500)\n\n    }\n}\n","import {Utils, log} from 'sd-utils';\nimport {i18n} from \"./i18n/i18n\";\nvar jQuery = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = jQuery;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/scroll-parent');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/sortable');\nrequire('pivottable');\n\n\n// pivot show zero hack start\nvar numberFormat = jQuery.pivotUtilities.numberFormat;\ntry{\n    jQuery.pivotUtilities.numberFormat = function(opts){\n        if(!opts){\n            opts = {};\n        }\n        opts.showZero = true;\n        return numberFormat(opts);\n    };\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting');\n\n    try{\n        jQuery.pivotUtilities.numberFormat = numberFormat;\n    }catch (e){\n\n    }\n}\n\nrequire('pivottable/dist/pivot.it');\nrequire('pivottable/dist/pivot.de');\nrequire('pivottable/dist/pivot.fr');\nrequire('pivottable/dist/pivot.pl');\n\nUtils.getGlobalObject().jQuery = global$;\n\n// pivot show zero hack continuation\ntry{\n    var origAggregators = {};\n    Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n        origAggregators[key] = value;\n        object[key] = function(){\n            var args1 = arguments;\n            try{\n                let res1 = value.apply(this, args1);\n                return function(){\n                    var res = res1(...arguments);\n                    var format_ = res.format;\n                    res.format = function(x){\n                        var origX = x;\n                        if(x===0){\n                            x =  \"0\";\n                        }\n                        try{\n                            return format_(x);\n                        }catch (e){\n                            log.error('Error when performing pivottable \"show zero\" hack (format func call), reverting', e);\n                            if(format_){\n                                return format_(origX);\n                            }\n                            revertAggregators();\n                        }\n                    };\n                    return res;\n                };\n            }catch(e){\n                log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n                revertAggregators();\n                return origAggregators[key](...args1)\n            }\n        }\n    });\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n    revertAggregators();\n}\n\nfunction revertAggregators(){\n    try {\n        Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n            let origAggregator = origAggregators[key];\n            if(origAggregator){\n                object[key] = origAggregator\n            }\n\n        });\n    }catch(e){\n        log.error('Error when reverting aggregators', e)\n    }\n}\n\n///////////////////// hack end\n\nexport class PivotTable{\n\n    container;\n\n\n    constructor(container, options, data){\n        this.container =container;\n        this.options = options;\n        this.data=data;\n        if(data){\n            this.update(data, options);\n        }\n    }\n\n    update(data, options){\n        this.data = data;\n        this.options = options;\n        jQuery(this.container.node()).pivotUI(data, options, true, i18n.language)\n    }\n\n    clear(){\n        jQuery(this.container.node()).pivotUI([], null, true)\n    }\n\n\n\n    getAggregatorName(name){\n        return i18n.t(\"jobResultTable.pivot.aggregators.\"+name.toLowerCase());\n    }\n\n    getRendererName(name){\n        return i18n.t(\"jobResultTable.pivot.renderers.\"+name.toLowerCase());\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {PayoffInputValidator} from \"./validation/payoff-input-validator\";\nimport {ProbabilityInputValidator} from \"./validation/probability-input-validator\";\nimport {Templates} from \"./templates\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {InputField} from \"./form/input-field\";\nimport {PathValueAccessor} from \"./form/path-value-accessor\";\nimport {NumberInputValidator} from \"./validation/number-input-validator\";\nimport {RequiredInputValidator} from \"./validation/required-input-validator\";\nimport {McdmWeightValueValidator} from \"sd-computations/src/validation/mcdm-weight-value-validator\";\n\nexport class Sidebar {\n\n    app;\n    container;\n    dispatch = d3.dispatch(\"recomputed\", \"object-updated\", \"multi-criteria-updated\");\n\n\n    constructor(container, app) {\n        this.app = app;\n        this.container = container;\n\n        this.initLayoutOptions();\n        this.initDiagramDetails();\n        this.initDefinitions();\n        this.initMultipleCriteria();\n        var self = this;\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app) {\n                self.dispatch.call(\"recomputed\");\n            }\n        });\n\n        self.dispatch.on(\"object-updated\", Utils.debounce((object, fieldName)=> self.app.onObjectUpdated(object, fieldName), 350));\n        self.dispatch.on(\"multi-criteria-updated\", Utils.debounce((fieldName)=> self.app.onMultiCriteriaUpdated(fieldName), 350));\n\n    }\n\n    initLayoutOptions() {\n        var self = this;\n        this.layoutOptionsContainer = this.container.select('#layout-options');\n        this.autoLayoutOptionsGroup = this.layoutOptionsContainer.select('#auto-layout-options');\n        this.gridWidth = this.layoutOptionsContainer.select('input#grid-width').on('change', function () {\n            self.app.treeDesigner.layout.setGridWidth(parseInt(this.value));\n\n        });\n\n        this.gridHeight = this.layoutOptionsContainer.select('input#grid-height').on('change', function () {\n            self.app.treeDesigner.layout.setGridHeight(parseInt(this.value));\n        });\n\n        this.nodeSize = this.layoutOptionsContainer.select('input#node-size').on('change', function () {\n            self.app.treeDesigner.layout.setNodeSize(parseInt(this.value));\n        });\n\n        this.edgeSlantWidthMax = this.layoutOptionsContainer.select('input#edge-slant-width-max').on('change', function () {\n            self.app.treeDesigner.layout.setEdgeSlantWidthMax(parseInt(this.value));\n        });\n\n        this.marginHorizontal = this.layoutOptionsContainer.select('input#margin-horizontal').on('change', function () {\n            var m = {};\n            m.left = m.right = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n        this.marginVertical = this.layoutOptionsContainer.select('input#margin-vertical').on('change', function () {\n            var m = {};\n            m.top = m.bottom = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n\n        this.scale = this.layoutOptionsContainer.select('input#sd-svg-scale').on('change', function () {\n            self.app.treeDesigner.setScale(parseFloat(this.value));\n        });\n\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.updateLayoutOptions());\n\n        this.layoutOptionsContainer.select('.toggle-button').on('click', () => {\n            this.layoutOptionsContainer.classed('sd-extended', !this.layoutOptionsContainer.classed('sd-extended'));\n        });\n\n        this.updateLayoutOptions();\n    }\n\n    updateLayoutOptions() {\n        this.nodeSize.node().value = this.app.treeDesigner.config.layout.nodeSize;\n        this.edgeSlantWidthMax.node().value = this.app.treeDesigner.config.layout.edgeSlantWidthMax;\n        this.marginHorizontal.node().value = this.app.treeDesigner.config.margin.left;\n        this.marginVertical.node().value = this.app.treeDesigner.config.margin.top;\n        this.gridWidth.node().value = this.app.treeDesigner.config.layout.gridWidth;\n        this.gridHeight.node().value = this.app.treeDesigner.config.layout.gridHeight;\n        this.scale.node().value = this.app.treeDesigner.config.scale;\n        this.autoLayoutOptionsGroup.classed('visible', !this.app.treeDesigner.layout.isManualLayout());\n    }\n\n    initDiagramDetails() {\n        var self = this;\n        this.diagramDetailsContainer = this.container.select('#diagram-details-box');\n        this.diagramDetailsContainer.classed('sd-hidden', !this.app.config.showDetails);\n\n        this.diagramDetailsContainer.select('.toggle-button').on('click', () => {\n            this.diagramDetailsContainer.classed('sd-extended', !this.diagramDetailsContainer.classed('sd-extended'));\n            this.updateDiagramDetails();\n        });\n\n        this.diagramTitle = this.diagramDetailsContainer.select('input#diagram-title').on('change', function () {\n            self.app.setDiagramTitle(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.diagramDescription = this.diagramDetailsContainer.select('textarea#diagram-description').on('change', function () {\n            self.app.setDiagramDescription(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        AppUtils.elasticTextarea(this.diagramDescription);\n\n        this.updateDiagramDetails();\n    }\n\n    initDefinitions() {\n        var self = this;\n        this.definitionsContainer = this.container.select('#sd-sidebar-definitions');\n        this.definitionsContainer.classed('sd-hidden', !this.app.config.showDefinitions);\n        this.onDefinitionsCodeChanged = null;\n        this.definitionsContainer.select('.toggle-button').on('click', () => {\n            this.definitionsContainer.classed('sd-extended', !this.definitionsContainer.classed('sd-extended'));\n            AppUtils.updateInputClass(this.definitionsCode);\n            AppUtils.autoResizeTextarea(this.definitionsCode.node())\n        });\n\n        this.definitionsScopeLabel = this.definitionsContainer.select('.sd-variables-scope-value');\n\n        this.definitionsCode = this.definitionsContainer.select('textarea#sd-sidebar-definitions-code').on('change', function () {\n            if (self.onDefinitionsCodeChanged) {\n                self.onDefinitionsCodeChanged(this.value)\n            }\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        Tooltip.attach(this.definitionsCode, (d)=>{\n            return self.definitionsCode.attr('data-error-msg');\n\n        }, 15, 50);\n\n\n        this.definitionsEvaluatedValuesContainer = this.container.select(\"#sd-sidebar-definitions-evaluated-values\");\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-open-dialog-button').on('click', () => {\n            this.app.openDefinitionsDialog();\n        });\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-recalculate-button').on('click', () => {\n            this.app.recompute();\n        });\n\n        AppUtils.elasticTextarea(this.definitionsCode);\n    }\n\n    initMultipleCriteria() {\n        var self = this;\n        this.multipleCriteriaContainer = this.container.select('#sd-multiple-criteria');\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        this.multipleCriteriaContainer.select('.toggle-button').on('click', () => {\n            this.multipleCriteriaContainer.classed('sd-extended', !this.multipleCriteriaContainer.classed('sd-extended'));\n        });\n\n\n        this.showLeagueTableButton = this.multipleCriteriaContainer.select('#sd-show-league-table-button').on('click', () => {\n            this.app.showLeagueTable();\n        });\n\n        this.flipCriteriaButton = this.multipleCriteriaContainer.select('#sd-flip-criteria-button').on('click', () => {\n            this.app.flipCriteria();\n        });\n\n         let weightParser = (w) => {\n             return parseFloat(w) === Infinity ? Infinity : w;\n        };\n\n\n\n        this.multipleCriteriaFields = [];\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion1', 'nameOfCriterion1', 'text', i18n.t('multipleCriteria.nameOfCriterion1'), new PathValueAccessor(self.app.dataModel, 'payoffNames[0]'), new RequiredInputValidator()));\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion2', 'nameOfCriterion2', 'text', i18n.t('multipleCriteria.nameOfCriterion2'), new PathValueAccessor(self.app.dataModel, 'payoffNames[1]'), new RequiredInputValidator()));\n        let lowerBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightLowerBound');\n        let upperBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightUpperBound');\n        let weightValueValidator = new McdmWeightValueValidator();\n        var ee = this.app.expressionEngine.constructor;\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightLowerBound', 'weightLowerBound', 'text', i18n.t('multipleCriteria.weightLowerBound'), lowerBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                return weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-defaultCriterion1Weight', 'defaultCriterion1Weight', 'text', i18n.t('multipleCriteria.defaultCriterion1Weight'),\n            new PathValueAccessor(self.app.dataModel, 'defaultCriterion1Weight'),\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                let lower = lowerBoundValueAccessor.get();\n                return (weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true) && (weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true)\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightUpperBound', 'weightUpperBound', 'text', i18n.t('multipleCriteria.weightUpperBound'), upperBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let lower = lowerBoundValueAccessor.get();\n                return weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true\n            }), null, weightParser));\n\n        this.updateMultipleCriteria();\n    }\n\n\n    updateMultipleCriteria(updateInputs = true){ //TODO refactor\n        var ee = this.app.expressionEngine;\n\n        var self = this;\n        var temp = {};\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        let leagueTableAvailable = this.app.isLeagueTableAvailable();\n        this.showLeagueTableButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.flipCriteriaButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.multipleCriteriaContainer.classed('sd-invalid-league-table-params', !leagueTableAvailable);\n\n        if(!updateInputs){\n            return;\n        }\n\n        var inputGroups = this.multipleCriteriaContainer.select(\".sd-multiple-criteria-properties\").selectAll('div.input-group').data(this.multipleCriteriaFields);\n        inputGroups.exit().remove();\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n        inputGroupsEnter.merge(inputGroups).select('.sd-input').on('change input', function (d, i) {\n            var prevValue = d.getValue();\n\n            var isValid = !d.validator || d.validator.validate(this.value);\n\n            let selection = d3.select(this);\n            selection.classed('invalid', !isValid);\n            if(d.styleClass){\n                selection.classed(d.styleClass, true);\n            }\n\n            if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                if (d.onChange) {\n                    d.onChange(object, this.value, temp[i].pristineVal);\n                }\n            }\n\n            if((prevValue+\"\")==this.value){\n                return;\n            }\n\n            AppUtils.updateInputClass(selection);\n            d.setValue(d.parse(this.value));\n            self.dispatch.call(\"multi-criteria-updated\", self, d.name);\n\n        })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                let value = d.getValue();\n\n                this.value = value;\n                temp[i] = {};\n                d3.select(this).classed('invalid', d.validator && !d.validator.validate(this.value));\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n    }\n\n    updateDefinitions(definitionsSourceObject, readOnly, changeCallback) {\n        this.definitionsContainer.classed('sd-read-only', readOnly);\n        this.onDefinitionsCodeChanged = changeCallback;\n\n\n        let scopeType = 'global';\n        if (definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node'\n        }\n\n        this.definitionsScopeLabel.text(i18n.t(\"sidebarDefinitions.scope.\"+scopeType));\n\n        this.definitionsCode.node().value = definitionsSourceObject.code;\n        this.definitionsCode.classed('invalid', !!definitionsSourceObject.$codeError);\n        this.definitionsCode.attr('data-error-msg', definitionsSourceObject.$codeError);\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(definitionsSourceObject.expressionScope)});\n        this.definitionsEvaluatedValuesContainer.html(html);\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node())\n    }\n\n    updateDiagramDetails() {\n        this.diagramTitle.node().value = this.app.config.title;\n        AppUtils.updateInputClass(this.diagramTitle);\n        this.diagramDescription.node().value = this.app.config.description;\n        AppUtils.updateInputClass(this.diagramDescription);\n        AppUtils.autoResizeTextarea(this.diagramDescription.node())\n    }\n\n    displayObjectProperties(object) {\n        this.updateObjectPropertiesView(object);\n    }\n\n    hideObjectProperties() {\n\n        this.container.select('#object-properties').classed('visible', false);\n        this.container.selectAll('div.child-object').remove();\n\n    }\n\n    updateObjectPropertiesView(object) {\n        this.dispatch.on(\".recomputed\", null); //remove all callbacks for recomputed event\n        if (!object) {\n            this.hideObjectProperties();\n            return;\n        }\n\n        var objectProps = this.objectProps = this.container.select('#object-properties').classed('visible', true);\n        var headerText = Sidebar.getHeaderTextForObject(object);\n        objectProps.select('.header').html(headerText);\n\n        var fieldList = this.getFieldListForObject(object);\n        this.updateObjectFields(object, fieldList, objectProps.select('.content .main-properties'));\n\n\n        this.updateObjectChildrenProperties(object);\n\n    }\n\n    updateObjectChildrenProperties(object) {\n        var self = this;\n        var childObjects = this.getChildObjectList(object);\n        var objectType = Sidebar.getObjectType(object);\n\n        var childPropsSelector = this.objectProps.select('.content .children-properties');\n\n        childPropsSelector.classed('visible', childObjects.length);\n\n        childPropsSelector.select('.children-properties-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.header'));\n        var childrenContent = childPropsSelector.select('.children-properties-content');\n        var children = childrenContent.selectAll('div.child-object').data(childObjects, (d, i)=> d.$id || i);\n        var childrenEnter = children.enter().appendSelector('div.child-object');\n        var childrenMerge = childrenEnter.merge(children);\n\n        childrenMerge.each(updateChildObjectProperties);\n\n        children.exit().remove();\n\n        function updateChildObjectProperties(child, i) {\n            var container = d3.select(this);\n            container.selectOrAppend('div.child-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.child.header', {number: i + 1}));\n\n            var fieldList = self.getFieldListForObject(child);\n            self.updateObjectFields(child, fieldList, container.selectOrAppend('div.field-list'))\n        }\n    }\n\n    static getObjectType(object) {\n        if (object instanceof model.Node) {\n            return 'node';\n        }\n        if (object instanceof model.Edge) {\n            return 'edge';\n        }\n        if (object instanceof model.Text) {\n            return 'text';\n        }\n        return '';\n    }\n\n    static getHeaderTextForObject(object) {\n        if (object instanceof model.Node) {\n            return i18n.t('objectProperties.header.node.' + object.type);\n        }\n        if (object instanceof model.Edge) {\n            return i18n.t('objectProperties.header.edge');\n        }\n        if (object instanceof model.Text) {\n            return i18n.t('objectProperties.header.text');\n        }\n        return '';\n    }\n\n    getChildObjectList(object) {\n        if (object instanceof model.Node) {\n            return object.childEdges.sort((a, b)=>a.childNode.location.y - b.childNode.location.y);\n        }\n        if (object instanceof model.Edge) {\n            return [];\n        }\n        return [];\n    }\n\n    getFieldListForObject(object) {\n        var self = this;\n\n        if (object instanceof model.Node) {\n            return [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                })\n            ]\n        }\n        if (object instanceof model.Edge) {\n            let multipleCriteria = this.app.isMultipleCriteria();\n            var list = [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                }),\n                new ObjectInputField(object, {\n                    name: 'payoff',\n                    path: 'payoff[' + (self.app.currentViewMode.payoffIndex || 0) + ']',\n                    label: multipleCriteria ? self.app.dataModel.payoffNames[0] : undefined,\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                })\n\n\n            ];\n\n            if(multipleCriteria) {\n                list.push(new ObjectInputField(object, {\n                    name: 'payoff2',\n                    path: 'payoff[1]',\n                    label: self.app.dataModel.payoffNames[1],\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                }));\n            }\n\n            if (object.parentNode instanceof model.ChanceNode) {\n                list.push(new ObjectInputField(object, {\n                    name: 'probability',\n                    type: 'text',\n                    validator: new ProbabilityInputValidator(self.app.expressionEngine)\n                }))\n            }\n            return list;\n\n        }\n        if (object instanceof model.Text) {\n            return [new ObjectInputField(object, {\n                name: 'value',\n                type: 'textarea'\n            })]\n        }\n\n        return [];\n    }\n\n    updateObjectFields(object, fieldList, container) {\n        var self = this;\n\n        var fields = container.selectAll('div.object-field').data(fieldList);\n        var temp = {};\n        var fieldsEnter = fields.enter().appendSelector('div.object-field');\n        var fieldsMerge = fieldsEnter.merge(fields);\n\n        fieldsMerge.each(function (d, i) {\n            var fieldSelection = d3.select(this);\n            fieldSelection.html(\"\");\n\n            var input;\n            if (d.type == 'textarea') {\n                input = fieldSelection.append('textarea').attr('rows', 1);\n            } else {\n                input = fieldSelection.append('input');\n            }\n            input.classed('sd-input', true);\n\n            fieldSelection.appendSelector('span.bar');\n            fieldSelection.append('label');\n            fieldSelection.classed('input-group', true);\n        });\n\n        fieldsMerge.select('label')\n            .attr('for', d=>d.id)\n            .html(d=>d.label);\n        fieldsMerge.select('.sd-input')\n            .attr('type', d=>d.type == 'textarea' ? undefined : d.type)\n            .attr('name', d=>d.name)\n            .attr('id', d=>d.id)\n            .on('change keyup', function (d, i) {\n                var prevValue = d.getValue();\n                var isValid = !d.validator || d.validator.validate(this.value, object, d.path);\n                object.setSyntaxValidity(d.path, isValid);\n\n                d3.select(this).classed('invalid', !object.isFieldValid(d.path));\n\n                if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                    self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                    if (d.onChange) {\n                        d.onChange(object, this.value, temp[i].pristineVal);\n                    }\n                }\n\n                if((prevValue+\"\")==this.value){\n                    return;\n                }\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.customOnInput) {\n                    d.customOnInput(object, this.value, temp[i].pristineVal)\n                } else {\n                    d.setValue(this.value);\n                    self.dispatch.call(\"object-updated\", self, object, d.path);\n                }\n            })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                this.value = d.getValue();\n                temp[i] = {};\n                if (d.validator && !d.validator.validate(this.value, object, d.path)) {\n                    d3.select(this).classed('invalid', true);\n                    object.setSyntaxValidity(d.path, false);\n                }else{\n                    object.setSyntaxValidity(d.path, true);\n                }\n\n                var _this = this;\n                var checkFieldStatus = () => {\n                    d3.select(_this).classed('invalid', !object.isFieldValid(d.path));\n                };\n                checkFieldStatus();\n\n                self.dispatch.on(\"recomputed.\"+object.$id+\".\"+d.path, checkFieldStatus);\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n\n        fields.exit().remove();\n    }\n}\n\nclass ObjectInputField extends InputField{\n    //config object with fields: name, path, type, validator, options\n    constructor(object, config) {\n        super('object-' + object.$id + '-field-' + config.name, config.name, config.type, config.label ? config.label : i18n.t(Sidebar.getObjectType(object) + '.' + config.name),\n            new PathValueAccessor(object, config.path || config.name), config.validator, config.options);\n        this.path = config.path || config.name;\n        this.onChange = config.onChange;\n    }\n}\n\n","import {Templates as TdTemplates} from \"sd-tree-designer\";\nimport {i18n} from './i18n/i18n'\nimport {Utils, log} from \"sd-utils\";\n\nexport class Templates extends TdTemplates{\n\n    //TODO automate\n    static about_de = require('./templates/about/de.html');\n    static about_en = require('./templates/about/en.html');\n    static about_fr = require('./templates/about/fr.html');\n    static about_it = require('./templates/about/it.html');\n    static about_pl = require('./templates/about/pl.html');\n\n    static toolbar = require('./templates/toolbar.html');\n    static layoutOptions = require('./templates/sidebar/layout_options.html');\n    static objectProperties = require('./templates/sidebar/object_properties.html');\n    static diagramDetailsBox = require('./templates/sidebar/diagram_details_box.html');\n    static evaluatedVariables = require('./templates/evaluated_variables.html');\n    static definitions = require('./templates/sidebar/definitions.html');\n    static multipleCriteria = require('./templates/sidebar/multiple_criteria.html');\n    static sidebar = require('./templates/sidebar/sidebar.html');\n    static settingsDialog = require('./templates/settings_dialog.html');\n    static settingsDialogFormGroup = require('./templates/settings_dialog_form_group.html');\n    static inputGroup = require('./templates/input_group.html');\n    static selectInputGroup = require('./templates/select_input_group.html');\n    static help = require('./templates/help.html');\n    static aboutDialog = require('./templates/about_dialog.html');\n    static definitionsDialog = require('./templates/definitions_dialog.html');\n    static sensitivityAnalysisDialog = require('./templates/sensitivity_analysis_dialog.html');\n    static jobParametersBuilder = require('./templates/jobs/job_parameters_builder.html');\n    static jobParameter = require('./templates/jobs/job_parameter.html');\n    static leagueTableDialog = require('./templates/league_table_dialog.html');\n    static loadingIndicator = require('./templates/loading_indicator.html');\n    static fullscreenPopup = require('./templates/fullscreen_popup.html');\n    static warningMessage = require('./templates/warning_message.html');\n    static main = require('./templates/main.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n}\n\n\n\n\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (gebaut <%= buildTimestamp%>)</strong><br/>Open Source Entscheidungsbaum Software.\\n</p>\\n<p>\\n<strong>Zitierung:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Projektteam:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (Projektleiter)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (Stellvertretender Projektleiter)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (Designer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (Entwickler)</li>\\n        <li>Anna Wiertlewska (Projekt Unterstützung)</li>\\n        <li>Marcin Czupryna (Tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Das Projekt wird von Decision Support and Analysis Division, Warsaw School of Economics entwickelt.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions ist ein gemeinschaftsgetriebenes Projekt. Sollten Sie es für Ihre Untericht, Forschung oder jede andere Aktivität, die Sie mit uns teilen möchten verwenden, wir würden uns freuen, einen Link zu Ihren Aktivitäten zu der <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Gemeinschaft</a> Seite hinzufügen zu können.\\n</p>\\n<p>\\n    Software wird als Teil von <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Projekt entwickelt. Dieses Projekt hat      Mittel aus dem Horizon 2020 (Forschungs- und Innovationsprogramm der Europäischen Union) im Rahmen der Finanzhilfevereinbarung Nr 645860 erhalten. Ziel dieses Projektes ist es, eine transparente Kommunikation zwischen der öffentlichen Verwaltung und den Bürgern über das Thema, öffentliche Daten und Entscheidungsprozesse zu unterstützen. \\n</p>\\n<p>\\n    Alle Quelldateien werden unter den Bedingungen der GNU Lesser General Public License Version 3 lizenziert.\\n</p>\\n<p>\\n    Für weitere Informationen besuchen Sie bitte, unsere Website unter <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>A free and open source decision tree software.\\n</p>\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Project team:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (deputy project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentalist)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    The project is developed at Decision Support and Analysis Division, Warsaw School of Economics.<br/>\\n    Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions is a community-driven project, so if you use it for teaching, research or any other activity that you would be willing to share please let us know. We would be glad to add a link to your activities on <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a> page.\\n</p>\\n<p>\\n    Software is developed as a part of <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Project that has\\n    received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No\\n    645860. Its aim is to allow a transparent communication between public administration and citizens regarding public\\n    data about decision making processes performed by public administration.\\n</p>\\n<p>\\n    All the source files are licensed under the terms of the GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    For more information visit our website at <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>Un logiciel libre et open source pour faire son propre arbre de décision.\\n</p>\\n\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Equipe du projet:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (chef de projet)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (chef de projet adjoint)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (développeur)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentaliste)</li>\\n\\t<li>Marcin Czupryna (testeur)</li>\\n    </ul>\\n</p>\\n<p>\\n    Le projet est conçu et développé par la Division de l'aide à la décision et de l'analyse, à l'École d'économie de Varsovie. <br/>Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions est un projet communautaire, donc si vous l'utilisez pour l'enseignement, la recherche ou toute autre activité que vous aimeriez partager, \\n    faites-le nous savoir. Nous serions heureux d'ajouter un lien vers vos activités sur le site web de \\n    <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>  \\n    Le logiciel est développé dans le cadre du projet <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a>, \\n    financé par le programme de recherche et d'innovation Horizon 2020 de l'Union Européenne dans le cadre de l'accord de subvention n° 645860. \\n    Son objectif est permettre une communication transparente entre l'administration publique et les citoyens \\n    concernant les données publiques (Open Data) et la prise de décision des administrations.  \\n</p>\\n<p>\\n    Tous les fichiers source sont sous licence GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    Pour plus d'informations, visitez notre site web à <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (construzione <%= buildTimestamp%>)</strong><br/>\\n    Un Software Open Source Free per gestire alberi di decisione.\\n</p>\\n\\n<p>\\n<strong>Citazione:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Team di progetto:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (vice project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (sviluppo)</li>\\n        <li>Marcin Czupryna (test)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (tester)</li>\\n        <li>Anna Wiertlewska (documentazione)</li>\\n    </ul>\\n</p>\\n<p>\\n    Il progetto è sviluppato presso la Divisione “Supporto alla decisione ed Analisi” della Scuola di Economia dell’Università di Varsavia. <br/>Contatto:\\n    silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\nSilverDecision è un Progetto basato su di una Comunità di sviluppo, se lo utilizzi a scopo di insegnamento, ricerca o altra attività che vorresti rendere nota tienici informati. Saremmo lieti di aggiungere un <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">link</a> alla tua attività.\\n</p>\\n<p>\\n    Il software è sviluppato nell’ambito del progetto <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> \\n    finanziato dal programma di ricerca ed innovazione H2020 dell’ Unione Europea (contratto n. 645860). \\n    Scopo del progetto è quello di permettere una comunicazione trasparente tra Pubblica Amministrazione e cittadini \\n    riguardo ai dati pubblici ed ai processi di decisione portati avanti dalla stessa Pubblica Amministrazione.    \\n</p>\\n<p>\\n    Tutti i codici sorgente sono rilasciati secondo i termini della licenza “GNU Lesser General Public License version 3\\\".\\n</p>\\n<p>\\n    Per maggiori informazioni visita il sito <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>\\n    Oprogramowanie do analizy drzew decyzyjnych typu Free Open Source.\\n</p>\\n\\n<p>\\n<strong>Cytowanie:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Zespół projektowy:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (manager projektu)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (zastępca managera projektu)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (projektant)</li>\\n        <li>Anna Wiertlewska (dokumentalistka)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Projekt jest realizowany w Zakładzie Wspomagania i Analizy Decyzji w Szkole Głównej Handlowej w Warszawie.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    Rozwój SilverDecisions zależy od potrzeb użytkowników. W związku z tym jeśli wykorzystujesz je do nauczania, badań lub innych aktywności, o których zechcesz na powiedzieć prosimy o kontakt. Byłoby nam bardzo miło, jeśli moglibyśmy dodać informację o Twoich aktywnościach na stronie <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>\\n<p>\\n    Oprogramowanie jest rozwijane w ramach projektu <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> (<em>Raising\\n    Open and User-friendly Transparency-Enabling Technologies for Public Administrations</em>),\\n    który jest finansowany ze środków Europejskiego Programu w Zakresie Badań Naukowych i Innowacji Horizon 2020 na\\n    podstawie umowy o dotację nr 645860. Celem projektu ROUTE-TO-PA jest umożliwienie przejrzystej komunikacji pomiędzy\\n    administracją publiczną a mieszkańcami w zakresie publicznych danych dotyczących procesu podejmowania przez\\n    administracje publiczne decyzji.\\n</p>\\n<p>\\n    Wszystkie pliki źródłowe są licencjonowane zgodnie ze słabszą powszechną licencją publiczną GNU (GNU Lesser General Public License version 3).\\n</p>\\n<p>\\n    Więcej informacji można znaleźć na stronie internetowej: <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<div id=\\\"sd-about-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"aboutDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <% if ( [\\\"de\\\", \\\"en\\\", \\\"fr\\\", \\\"it\\\", \\\"pl\\\"].indexOf(lng) !== -1) { %>\\n                <%= include('about_'+lng, variables) %>\\n            <% } else { %>\\n                <%= include('about_en', variables) %>\\n            <% } %>\\n\\n            <%= include('help', variables) %>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-definitions-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"definitionsDialog.title\\\")%>: <span class=\\\"sd-definitions-dialog-scope-label\\\"></span></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"definitions-form\\\">\\n                <div class=\\\"input-group\\\">\\n                    <textarea id=\\\"sd-definitions-dialog-definitions-code\\\" name=\\\"sd-definitions-code\\\"></textarea>\\n                    <span class=\\\"bar\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"evaluated-variables-preview\\\">\\n                <h3><%= i18n.t('definitionsDialog.evaluatedVariables')%>:</h3>\\n                <div id=\\\"sd-definitions-dialog-variable-values\\\"></div>\\n            </div>\\n            <div class=\\\"action-buttons\\\">\\n                <button id=\\\"sd-definitions-dialog-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('definitionsDialog.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<table class=\\\"sd-evaluated-variables\\\">\\n    <% for(i=0; i<scopeVariables.length; ++i) { %>\\n    <tr>\\n        <td><%= scopeVariables[i].key %></td>\\n        <td>=</td>\\n        <td><%= scopeVariables[i].value %></td>\\n    </tr>\\n    <% } %>\\n</table>\\n\";\n","module.exports = \"<div class=\\\"sd-fullscreen-popup\\\">\\n    <div class=\\\"sd-popup-header\\\">\\n        <span class=\\\"sd-close-popup\\\"><i class=\\\"material-icons\\\">close</i></span>\\n        <h2><%= title %></h2>\\n    </div>\\n\\n    <div class=\\\"sd-popup-body\\\">\\n        <%= body %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div>\\n    <h3><%= i18n.t(\\\"help.header\\\")%></h3>\\n    <p>\\n        <%= i18n.t(\\\"help.mouse.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.mouse.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.3\\\")%></li>\\n        </ul>\\n    </p>\\n    <p>\\n        <%= i18n.t(\\\"help.keyboard.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.keyboard.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.3\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.4\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.5\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.6\\\")%></li>\\n        </ul>\\n    </p>\\n    <p><%= i18n.t(\\\"help.docs\\\")%></p>\\n</div>\\n\";\n","module.exports = \"<input id=\\\"<%= id %>\\\" type=\\\"<%= type %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"\\n\";\n","module.exports = \"<div class=\\\"sd-job-parameters-builder\\\">\\n\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-league-table-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"leagueTableDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-league-table-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-league-table-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-league-table-action-buttons\\\">\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('leagueTableDialog.buttons.downloadCsv')%></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-loading-indicator\\\">\\n    <div></div>\\n    <div class=\\\"sd-spinner\\\" title=\\\"loading...\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"silver-decisions\\\" tabindex=\\\"0\\\">\\n    <%= include('toolbar', variables) %>\\n    <div id=\\\"main-region\\\">\\n        <%= include('sidebar', variables) %>\\n        <div id=\\\"tree-designer-container\\\"></div>\\n    </div>\\n    <input type=\\\"file\\\" style=\\\"display:none\\\" id=\\\"sd-file-input\\\" accept=\\\".json\\\"/>\\n    <%= include('settingsDialog', variables) %>\\n    <%= include('aboutDialog', variables) %>\\n    <%= include('definitionsDialog', variables) %>\\n    <%= include('sensitivityAnalysisDialog', variables) %>\\n    <%= include('leagueTableDialog', variables) %>\\n</div>\\n\";\n","module.exports = \"<select id=\\\"<%= id %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n    <% for(i=0; i<options.length; ++i) { %>\\n    <option value=\\\"<% if (options[i].value !== undefined){ %><%= options[i].value %><%} else { %><%= options[i] %><%}%>\\\"><% if (options[i].label !== undefined){ %><%= options[i].label %><%} else { %><%= options[i] %><%}%></option>\\n    <% } %>\\n</select>\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-sensitivity-analysis-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"sensitivityAnalysisDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-sensitivity-analysis-job-configuration\\\">\\n                <div class=\\\"sd-job-select-input-group input-group\\\"></div>\\n                <%= include('jobParametersBuilder', variables) %>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-sensitivity-analysis-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-action-buttons\\\">\\n                <button class=\\\"sd-terminate-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.terminateJob')%></button>\\n                <button class=\\\"sd-stop-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.stopJob')%></button>\\n                <button class=\\\"sd-resume-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.resumeJob')%></button>\\n                <button class=\\\"sd-back-button  sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.back')%></button>\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.downloadCsv')%></button>\\n                <button class=\\\"sd-clear-button \\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.clear')%></button>\\n                <button class=\\\"sd-run-job-button\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.runJob')%></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-settings-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"settingsDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <form id=\\\"sd-settings-form\\\">\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"header\\\">\\n    <h4><%= i18n.t(\\\"settingsDialog.\\\"+name+\\\".title\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </h4>\\n</div>\\n<div class=\\\"sd-form-group-content\\\">\\n    <div class=\\\"sd-form-group-inputs\\\"></div>\\n    <div class=\\\"sd-form-group-child-groups\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar-definitions\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"sidebarDefinitions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-variables-scope\\\">\\n            <div class=\\\"sd-variables-scope-label\\\"><%= i18n.t('sidebarDefinitions.scope.label')%></div>\\n            <div class=\\\"sd-variables-scope-value\\\"></div>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea rows=\\\"1\\\" id=\\\"sd-sidebar-definitions-code\\\" type=\\\"text\\\" name=\\\"sidebar-definitions-code\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"sd-sidebar-definitions-code\\\"><%= i18n.t(\\\"sidebarDefinitions.code\\\") %></label>\\n        </div>\\n        <div class=\\\"evaluated-variables-preview\\\">\\n            <div class=\\\"evaluated-variables-preview-header\\\">\\n                <%= i18n.t('sidebarDefinitions.evaluatedVariables')%>\\n            </div>\\n            <div id=\\\"sd-sidebar-definitions-evaluated-values\\\"></div>\\n        </div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-sidebar-definitions-open-dialog-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.openDialog')%>\\\"><i class=\\\"material-icons\\\">open_in_new</i></button>\\n            <button id=\\\"sd-sidebar-definitions-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"diagram-details-box\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"diagramDetails.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"diagram-title\\\" type=\\\"text\\\" name=\\\"diagram-title\\\">\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-title\\\"><%= i18n.t(\\\"diagramDetails.title\\\") %></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea id=\\\"diagram-description\\\" name=\\\"diagram-description\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-description\\\"><%= i18n.t(\\\"diagramDetails.description\\\") %></label>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"layout-options\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"layoutOptions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-horizontal\\\" name=\\\"margin-horizontal\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-horizontal\\\"><%= i18n.t(\\\"layoutOptions.marginHorizontal\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-vertical\\\" name=\\\"margin-vertical\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-vertical\\\"><%= i18n.t(\\\"layoutOptions.marginVertical\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"node-size\\\" name=\\\"node-size\\\" type=\\\"range\\\" min=\\\"20\\\" max=\\\"60\\\" step=\\\"5\\\"/>\\n            <label for=\\\"node-size\\\"><%= i18n.t(\\\"layoutOptions.nodeSize\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"edge-slant-width-max\\\" name=\\\"edge-slant-width-max\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"edge-slant-width-max\\\"><%= i18n.t(\\\"layoutOptions.edgeSlantWidthMax\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"sd-svg-scale\\\" name=\\\"svg-scale\\\" type=\\\"range\\\" min=\\\"0.2\\\" max=\\\"3\\\" step=\\\"0.1\\\"/>\\n            <label for=\\\"sd-svg-scale\\\"><%= i18n.t(\\\"layoutOptions.scale\\\")%></label>\\n        </div>\\n        <div id=\\\"auto-layout-options\\\">\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-width\\\" name=\\\"grid-width\\\" type=\\\"range\\\" min=\\\"105\\\" max=\\\"300\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-width\\\"><%= i18n.t(\\\"layoutOptions.gridWidth\\\")%></label>\\n            </div>\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-height\\\" name=\\\"grid-height\\\" type=\\\"range\\\" min=\\\"55\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-height\\\"><%= i18n.t(\\\"layoutOptions.gridHeight\\\")%></label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-multiple-criteria\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"multipleCriteria.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-multiple-criteria-properties\\\"></div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-show-league-table-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.showLeagueTable')%>\\\"><i class=\\\"material-icons\\\">assignment</i></button>\\n            <button id=\\\"sd-flip-criteria-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.flip')%>\\\"><i class=\\\"material-icons\\\">swap_vert</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"object-properties\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"main-properties\\\"></div>\\n        <div class=\\\"children-properties\\\">\\n            <div class=\\\"children-properties-header\\\"></div>\\n            <div class=\\\"children-properties-content\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar\\\">\\n    <div id=\\\"sd-sidebar-inner\\\">\\n        <%= include('layoutOptions', variables) %>\\n        <%= include('diagramDetailsBox', variables) %>\\n        <%= include('definitions', variables) %>\\n        <%= include('multipleCriteria', variables) %>\\n        <%= include('objectProperties', variables) %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-toolbar\\\">\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"new-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.newDiagram')%>\\\"><i class=\\\"material-icons\\\">insert_drive_file</i></button>\\n        <button id=\\\"open-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.openDiagram')%>\\\"><i class=\\\"material-icons\\\">folder_open</i></button>\\n        <button id=\\\"save-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.saveDiagram')%>\\\"><i class=\\\"material-icons\\\">save</i></button>\\n    </div>\\n    <div id=\\\"export-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.export.label\\\")%></label>\\n        <button id=\\\"saveButton\\\"><%= i18n.t(\\\"toolbar.export.png\\\")%></button>\\n        <button id=\\\"saveButtonSvg\\\"><%= i18n.t(\\\"toolbar.export.svg\\\")%></button>\\n        <button id=\\\"saveButtonPdf\\\"><%= i18n.t(\\\"toolbar.export.pdf\\\")%></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.layout.label\\\")%></label>\\n        <button id=\\\"manualLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.manual\\\")%></button>\\n        <button id=\\\"treeAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.tree\\\")%></button>\\n        <button id=\\\"clusterAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.cluster\\\")%></button>\\n    </div>\\n    <div id=\\\"view-mode-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"view-mode-select\\\"><%= i18n.t(\\\"toolbar.viewMode.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"view-mode-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div id=\\\"objective-rule-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"objective-rule-select\\\"><%= i18n.t(\\\"toolbar.objectiveRule.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"objective-rule-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"undoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.undo')%>\\\"><i class=\\\"material-icons\\\">undo</i></button>\\n        <button id=\\\"redoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.redo')%>\\\"><i class=\\\"material-icons\\\">redo</i></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"sensitivity-analysis-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.sensitivityAnalysis')%>\\\"><i class=\\\"material-icons\\\">assessment</i></button>\\n        <button id=\\\"recompute-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.recompute')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        <button id=\\\"settings-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.settings')%>\\\"><i class=\\\"material-icons\\\">settings</i></button>\\n        <button id=\\\"about-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.about')%>\\\"><i class=\\\"material-icons\\\">info_outline</i></button>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-warning-message\\\">\\n    <i class=\\\"material-icons sd-icon\\\">warning</i>\\n    <div class=\\\"sd-warning-message-text\\\">\\n       <%= message %>\\n    </div>\\n</div>\\n\";\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\nimport {AppUtils} from './app-utils'\nimport {Exporter} from './exporter'\nimport {FileLoader} from './file-loader'\n\nexport class Toolbar{\n\n    app;\n    container;\n    hiddenClass = 'sd-hidden';\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n        this.initDiagramButtons();\n        this.initExportToolbarGroup();\n        this.initLayoutButtons();\n        this.initUndoRedoButtons();\n        this.initSettingsButton();\n        this.initAboutButton();\n        this.initSensitivityAnalysisButton();\n        this.initRecomputeButton();\n        this.initViewModeToolbarGroup();\n        this.initObjectiveRuleToolbarGroup();\n    }\n\n    initDiagramButtons(){\n\n\n        this.newDiagramButton = this.container.select('#new-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.newDiagram'))){\n                return;\n            }\n            this.app.newDiagram();\n        });\n        this.newDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.new);\n        this.openDiagramButton = this.container.select('#open-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.openDiagram'))){\n                return;\n            }\n            FileLoader.openFile(model=>{\n                this.app.openDiagram(model);\n            });\n\n\n        });\n        this.openDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.open);\n        this.saveDiagramButton = this.container.select('#save-diagram-button').on('click', ()=>{\n            this.app.saveToFile();\n        });\n        this.saveDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.save);\n    }\n\n\n\n    initLayoutButtons() {\n        var self = this;\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.onLayoutChanged(layout));\n        this.layoutButtons={};\n        this.layoutButtons['manual'] = this.container.select('#manualLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='manual'){\n                return;\n            }\n            self.app.treeDesigner.layout.disableAutoLayout();\n        });\n        this.layoutButtons['tree'] = this.container.select('#treeAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='tree'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('tree');\n        });\n        this.layoutButtons['cluster'] = this.container.select('#clusterAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='cluster'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('cluster');\n        });\n\n        this.updateLayoutButtons();\n    }\n\n    updateLayoutButtons() {\n        this.onLayoutChanged(this.app.treeDesigner.config.layout.type)\n    }\n\n    initSettingsButton(){\n        this.settingsButton = this.container.select('#settings-button').on('click', ()=>{\n            this.app.settingsDialog.open();\n        });\n    }\n\n    initAboutButton(){\n        this.aboutButton = this.container.select('#about-button').on('click', ()=>{\n            this.app.aboutDialog.open();\n        });\n    }\n\n    initRecomputeButton(){\n        this.recomputeButton = this.container.select('#recompute-button').on('click', ()=>{\n            this.app.recompute();\n        });\n    }\n\n    initSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton = this.container.select('#sensitivity-analysis-button').on('click', ()=>{\n            this.app.openSensitivityAnalysis();\n        });\n    }\n\n    updateSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton.attr(\"disabled\", this.app.isSensitivityAnalysisAvailable() ? null : 'disabled');\n    }\n\n\n    onLayoutChanged(layout){\n        Object.getOwnPropertyNames(this.layoutButtons).forEach(l=>{\n            this.layoutButtons[l].classed('active', false);\n        });\n        var button = this.layoutButtons[layout];\n        if(button){\n            button.classed('active', true);\n        }\n    }\n\n    initUndoRedoButtons() {\n        var self = this;\n        self.app.dataModel.undoRedoStateChangedCallback = ()=>this.onUndoRedoChanged();\n        this.undoButton = this.container.select('#undoButton').on('click', function () {\n            self.app.undo();\n        });\n        this.redoButton = this.container.select('#redoButton').on('click', function () {\n            self.app.redo();\n        });\n    }\n\n    onUndoRedoChanged() {\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n    }\n    updateUndoRedoButtons(){\n        this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n        this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n    }\n\n    update(){\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n        this.updateLayoutButtons();\n        this.updateViewModeValue();\n        this.updateObjectiveRuleOptions();\n        this.updateObjectiveRuleValue();\n    }\n\n    initExportToolbarGroup() {\n        this.container.select('#export-toolbar-group').classed(this.hiddenClass, !this.app.config.exports.show);\n        if(!this.app.config.exports.show){\n            return;\n        }\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initExportPdfButton();\n\n    }\n    initExportToPngButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButton')\n            .on('click', () => Exporter.saveAsPng(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPng)\n    }\n\n    initExportSvgButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonSvg')\n            .on('click', () => Exporter.saveAsSvg(svg))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToSvg)\n    }\n\n    initExportPdfButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonPdf')\n            .on('click', () => Exporter.saveAsPdf(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPdf)\n    }\n\n    initObjectiveRuleToolbarGroup() {\n        var self = this;\n        this.objectiveRuleSelect = this.container.select('#objective-rule-select');\n\n        this.updateObjectiveRuleOptions()\n        this.updateObjectiveRuleValue();\n\n        this.objectiveRuleSelect.on('change', function(){\n            self.app.setObjectiveRule(this.value);\n        })\n    }\n\n    updateObjectiveRuleOptions(){\n        var rules = this.app.getObjectiveRules();\n        var options = this.objectiveRuleSelect.selectAll('option').data(rules);\n        options.exit().remove();\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.objectiveRule.options.'+d.name));\n    }\n\n    updateObjectiveRuleValue(){\n        this.objectiveRuleSelect.node().value = this.app.getCurrentObjectiveRule().name;\n    }\n\n    initViewModeToolbarGroup() {\n        var self = this;\n        this.viewModeSelect = this.container.select('#view-mode-select');\n        var rules = this.app.getViewModes();\n        var options = this.viewModeSelect.selectAll('option').data(rules);\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.viewMode.options.'+d.name));\n\n        this.updateViewModeValue();\n\n        this.viewModeSelect.on('change', function(){\n            self.app.setViewModeByName(this.value);\n        })\n    }\n\n    updateViewModeValue(){\n        this.viewModeSelect.node().value = this.app.getCurrentViewMode().name;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class NumberInputValidator {\n\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        if (!value.trim()) {\n            return false;\n        }\n\n        value = parseFloat(value);\n\n        if (!Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (this.min !== undefined && value < this.min) {\n            return false;\n        }\n\n        return !(this.max !== undefined && value > this.max);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PayoffInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        return this.expressionEngine.validate(value);\n    }\n\n}\n","export class ProbabilityInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n\n        if(this.expressionEngine.constructor.isHash(value)){\n            return true;\n        }\n\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        var scope = edge.parentNode.expressionScope;\n        return this.expressionEngine.validate(value, scope);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class RequiredInputValidator {\n\n    constructor() {\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        return !!value.trim();\n    }\n\n}\n","module.exports = {\"buildTimestamp\":1526852828160}\n"]}