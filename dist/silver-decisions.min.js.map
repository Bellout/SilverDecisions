{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d/auto-bind.js","node_modules/d/index.js","node_modules/es5-ext/array/#/clear.js","node_modules/es5-ext/array/#/e-index-of.js","node_modules/es5-ext/array/from/index.js","node_modules/es5-ext/array/from/is-implemented.js","node_modules/es5-ext/array/from/shim.js","node_modules/es5-ext/function/is-arguments.js","node_modules/es5-ext/function/is-function.js","node_modules/es5-ext/function/noop.js","node_modules/es5-ext/global.js","node_modules/es5-ext/math/sign/index.js","node_modules/es5-ext/math/sign/is-implemented.js","node_modules/es5-ext/math/sign/shim.js","node_modules/es5-ext/number/is-nan/index.js","node_modules/es5-ext/number/is-nan/is-implemented.js","node_modules/es5-ext/number/is-nan/shim.js","node_modules/es5-ext/number/to-integer.js","node_modules/es5-ext/number/to-pos-integer.js","node_modules/es5-ext/object/_iterate.js","node_modules/es5-ext/object/assign/index.js","node_modules/es5-ext/object/assign/is-implemented.js","node_modules/es5-ext/object/assign/shim.js","node_modules/es5-ext/object/copy.js","node_modules/es5-ext/object/create.js","node_modules/es5-ext/object/for-each.js","node_modules/es5-ext/object/is-callable.js","node_modules/es5-ext/object/is-object.js","node_modules/es5-ext/object/is-value.js","node_modules/es5-ext/object/keys/index.js","node_modules/es5-ext/object/keys/is-implemented.js","node_modules/es5-ext/object/keys/shim.js","node_modules/es5-ext/object/map.js","node_modules/es5-ext/object/normalize-options.js","node_modules/es5-ext/object/set-prototype-of/index.js","node_modules/es5-ext/object/set-prototype-of/is-implemented.js","node_modules/es5-ext/object/set-prototype-of/shim.js","node_modules/es5-ext/object/valid-callable.js","node_modules/es5-ext/object/valid-value.js","node_modules/es5-ext/string/#/contains/index.js","node_modules/es5-ext/string/#/contains/is-implemented.js","node_modules/es5-ext/string/#/contains/shim.js","node_modules/es5-ext/string/is-string.js","node_modules/es6-iterator/array.js","node_modules/es6-iterator/for-of.js","node_modules/es6-iterator/get.js","node_modules/es6-iterator/index.js","node_modules/es6-iterator/is-iterable.js","node_modules/es6-iterator/string.js","node_modules/es6-iterator/valid-iterable.js","node_modules/es6-set/implement.js","node_modules/es6-set/is-implemented.js","node_modules/es6-set/is-native-implemented.js","node_modules/es6-set/lib/iterator.js","node_modules/es6-set/polyfill.js","node_modules/es6-symbol/index.js","node_modules/es6-symbol/is-implemented.js","node_modules/es6-symbol/is-symbol.js","node_modules/es6-symbol/polyfill.js","node_modules/es6-symbol/validate-symbol.js","node_modules/event-emitter/index.js","node_modules/jquery-ui/ui/data.js","node_modules/sd-tree-designer/index.js","node_modules/sd-tree-designer/src/app-utils.js","node_modules/sd-tree-designer/src/context-menu/context-menu.js","node_modules/sd-tree-designer/src/context-menu/edge-context-menu.js","node_modules/sd-tree-designer/src/context-menu/main-context-menu.js","node_modules/sd-tree-designer/src/context-menu/node-context-menu.js","node_modules/sd-tree-designer/src/context-menu/text-context-menu.js","node_modules/sd-tree-designer/src/d3-extensions.js","node_modules/sd-tree-designer/src/d3.js","node_modules/sd-tree-designer/src/i18n/de.json","node_modules/sd-tree-designer/src/i18n/en.json","node_modules/sd-tree-designer/src/i18n/fr.json","node_modules/sd-tree-designer/src/i18n/i18n.js","node_modules/sd-tree-designer/src/i18n/it.json","node_modules/sd-tree-designer/src/i18n/pl.json","node_modules/sd-tree-designer/src/index.js","node_modules/sd-tree-designer/src/layout.js","node_modules/sd-tree-designer/src/node-drag-handler.js","node_modules/sd-tree-designer/src/symbols/circle.js","node_modules/sd-tree-designer/src/symbols/triangle.js","node_modules/sd-tree-designer/src/templates.js","node_modules/sd-tree-designer/src/templates/growl_message.html","node_modules/sd-tree-designer/src/text-drag-handler.js","node_modules/sd-tree-designer/src/tooltip.js","node_modules/sd-tree-designer/src/tree-designer.js","package.json","src/app-utils.js","src/app.js","src/autocomplete.js","src/d3.js","src/dialogs/about-dialog.js","src/dialogs/definitions-dialog.js","src/dialogs/dialog.js","src/dialogs/sensitivity-analysis-dialog.js","src/dialogs/settings-dialog.js","src/exporter.js","src/file-loader.js","src/form/input-field.js","src/form/path-value-accessor.js","src/i18n/de.json","src/i18n/en.json","src/i18n/fr.json","src/i18n/i18n.js","src/i18n/it.json","src/i18n/pl.json","src/index.js","src/jobs/job-parameters-builder.js","src/jobs/job-result-table.js","src/jobs/probabilistic-sensitivity-analysis-result-table.js","src/jobs/sensitivity-analysis-result-table.js","src/jobs/spider-plot.js","src/jobs/tornado-diagram-plot.js","src/league-table/league-table-dialog.js","src/league-table/league-table-plot.js","src/league-table/league-table.js","src/loading-indicator.js","src/pivot-table.js","src/sidebar.js","src/templates.js","src/templates/about/de.html","src/templates/about/en.html","src/templates/about/fr.html","src/templates/about/it.html","src/templates/about/pl.html","src/templates/about_dialog.html","src/templates/definitions_dialog.html","src/templates/evaluated_variables.html","src/templates/fullscreen_popup.html","src/templates/help.html","src/templates/input_group.html","src/templates/jobs/job_parameter.html","src/templates/jobs/job_parameters_builder.html","src/templates/league_table_dialog.html","src/templates/loading_indicator.html","src/templates/main.html","src/templates/select_input_group.html","src/templates/sensitivity_analysis_dialog.html","src/templates/settings_dialog.html","src/templates/settings_dialog_form_group.html","src/templates/sidebar/definitions.html","src/templates/sidebar/diagram_details_box.html","src/templates/sidebar/layout_options.html","src/templates/sidebar/multiple_criteria.html","src/templates/sidebar/object_properties.html","src/templates/sidebar/sidebar.html","src/templates/toolbar.html","src/templates/warning_message.html","src/toolbar.js","src/validation/number-input-validator.js","src/validation/payoff-input-validator.js","src/validation/probability-input-validator.js","src/validation/required-input-validator.js","tmp/build-config.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","App","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","copy","normalizeOptions","ensureCallable","map","callable","validValue","bind","Function","prototype","defineProperty","Object","hasOwnProperty","name","desc","options","dgs","value","writable","get","overwriteDefinition","resolveContext","props","arguments","assign","normalizeOpts","isCallable","contains","dscr","w","configurable","enumerable","gs","set","undefined","numberIsNaN","toPosInt","indexOf","Array","objHasOwnProperty","abs","Math","floor","searchElement","fromIndex","val","apply","isNaN","from","arr","result","Boolean","iteratorSymbol","iterator","isArguments","isFunction","isValue","isString","isArray","arrayLike","Context","j","getIterator","mapFn","thisArg","next","done","charCodeAt","objToString","toString","id","sign","Number","NaN","isFinite","toInteger","max","keys","objPropertyIsEnumerable","propertyIsEnumerable","method","defVal","obj","cb","list","compareFn","sort","key","index","foo","bar","trzy","dest","src","error","forEach","aFrom","propertyNames","propertyName","ensure","shim","nullObject","polyProps","create","level","getOwnPropertyNames","defineProperties","function","object","_undefined","targetObj","opts1","process","setPrototypeOf","getPrototypeOf","plainObject","validate","status","fn","isObject","objIsPrototypeOf","isPrototypeOf","nullDesc","TypeError","tmpObj1","tmpObj2","getOwnPropertyDescriptor","ignore","__proto__","isNullBase","nullPolyfill","String","str","searchString","ArrayIterator","d","Symbol","Iterator","kind","constructor","_resolve","__kind__","__list__","toStringTag","some","iterable","mode","doBreak","broken","char","StringIterator","clear","autoBind","context","__context__","__nextIndex__","on","_onAdd","_onDelete","_onClear","_next","__redo__","shift","_unBind","_createResult","off","redo","push","splice","__length__","isIterable","Set","size","add","delete","entries","has","values","SetIterator","toStringTagSymbol","__setData__","SetPoly","getValues","NativeSet","eIndexOf","ee","forOf","isNative","emit","validTypes","symbol","toPrimitive","x","NativeSymbol","SymbolPolyfill","HiddenSymbol","isNativeSafe","validateSymbol","objPrototype","globalSymbols","created","generateName","ie11BugWorkaround","postfix","description","__description__","__name__","for","keyFor","s","hasInstance","isConcatSpreadable","match","replace","search","species","split","unscopables","valueOf","isSymbol","once","methods","descriptors","base","descriptor","type","listener","__eeOnceListener__","data","__ee__","listeners","candidate","l","args","slice","$","extend","expr","createPseudo","dataName","elem","factory","jQuery","_index","d3","_interopRequireWildcard","_templates","_i18n","_sdUtils","AppUtils","textD3Obj","textString","width","textObj","node","textContent","getComputedTextLength","getSubStringLength","substring","tooltip","placeTextWithEllipsis","transition","duration","style","html","event","pageX","pageY","element","getComputedStyle","getPropertyValue","transform","document","createElementNS","setAttributeNS","matrix","baseVal","consolidate","pathNode","point","best","bestLength","scan","scanDistance","pathLength","getTotalLength","precision","bestDistance","Infinity","scanLength","distance2","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","y","distance","sqrt","dx","dy","message","position","time","Templates","select","selectOrAppend","append","setTimeout","remove","tag","attribs","parent","el","createElement","deepExtend","appendChild","parentNode","removeChild","text","createTextNode","div","innerHTML","evt","createEvent","initEvent","dispatchEvent","fireEvent","CustomEvent","detail","initCustomEvent","Utils","i18n","selection","classed","_show","offsetParent","display","url","callback","xhr","XMLHttpRequest","open","responseType","onload","response","send","sanitizeHeight","height","container","parseInt","sanitizeWidth","availableHeight","margin","top","bottom","availableWidth","left","right","ContextMenu","menu","opts","_classCallCheck","openCallback","onOpen","closeCallback","onClose","selectAll","enter","attr","elm","preventDefault","stopPropagation","ret","divider","disabled","action","title","console","_contextMenu","EdgeContextMenu","treeDesigner","_this","_possibleConstructorReturn","_getPrototypeOf","injectDecisionNode","injectChanceNode","_sdModel","MainContextMenu","mousePosition","newNode","domain","DecisionNode","addNode","ChanceNode","newText","Text","addText","pasteToNewLocation","copiedNodes","selectAllNodes","clearSelection","Point","mouse","svg","move","getMainGroupTranslation","NodeContextMenu","operationsForObject","copyMenuItem","selectNode","isNodeSelected","copySelectedNodes","cutMenuItem","cutSelectedNodes","pasteMenuItem","pasteToNode","folded","deleteMenuItem","removeSelectedNodes","TerminalNode","$TYPE","addNodeConversionOptions","addDecisionNode","addChanceNode","addTerminalNode","selectSubTree","foldSubtree","operations","op","performOperation","canPerform","conversionOptions","getNodeConversionOptions","allAllowedTypes","childEdges","$parent","filter","getNodeConversionOption","typeToConvertTo","convertNode","TextContextMenu","selectText","removeSelectedTexts","D3Extensions","insertSelector","selector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","empty","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","contextMenu","main","paste","cut","convert","decision","chance","terminal","selectSubtree","fold","unfold","flipSubtree","edge","validation","incompletePath","probabilityDoNotSumUpTo1","invalidProbability","invalidPayoff","growl","brushDisabled","brushEnabled","payoff","default","named","aggregatedPayoff","probabilityToEnter","probability","_i18next","en","pl","it","de","fr","lng","language","resources","translation","$instance","createInstance","fallbackLng","err","opt","_d3Extensions","_exportNames","_treeDesigner","_appUtils","_tooltip","_d","_circle","_interopRequireDefault","_triangle","Layout","config","nodeTypeToSymbol","symbolSquare","onAutoLayoutChanged","nodeTypeOrder","treeMargin","targetSymbolSize","nodeSeparation","b","nodeSymbolSize","childNode","location","isManualLayout","autoLayout","moveNodeToEmptyPlace","redraw","MANUAL_LAYOUT_NAME","getNodeMinX","getNodeMinY","gridWidth","$linePoints","redrawIfChanged","findCollidingNode","find","nodesSortedByX","nodeSize","nodes","colidingNode","stepX","stepY","changed","newLocation","moveTo","_fireOnAutoLayoutChangedCallbacks","path","nodeSymbol","$id","each","box","getBBox","min","setHangingPosition","fontSize","getFontSize","items","displayValue","aggregatedPayoffs","line","dX","slantStartXOffset","slantWidth","edgeSlantWidthMax","point1","point2","point3","point4","datum","len","previousSibling","childNodes","minX","bb","getTextD3Selection","minY","MAX_SAFE_INTEGER","getMinMarginBetweenNodes","$hidden","withoutStateSaving","saveState","onUndo","setGridWidth","onRedo","update","gridHeight","setGridHeight","setNodeSize","fitNodesInPlottingRegion","getRoots","setEdgeSlantWidthMax","newLayout","currentLayout","prevTreeMaxY","layout","root","hierarchy","cluster","tree","separation","maxY","pivot","limit","limitNodePositioning","backupNodeLocation","maxX","getNodeMaxX","revertX","$location","updateNodePosition","texts","limitTextPositioning","getTextMinX","getTextMaxX","getTextMinY","updateTextPosition","isHidden","NodeDragHandler","stateSnapshot","drag","subject","getTranslation","dragStarted","onDrag","dragEnded","ignoreDrag","ignoredDrag","createStateSnapshot","hide","selectedNodes","getSelectedNodes","prevDragEvent","dragEventCount","draggedNode","saveStateFromSnapshot","moveNodes","redrawEdges","updatePlottingRegionSize","pi","PI","draw","dist","bezierCurveTo","lineTo","closePath","templateName","variables","compiled","template","imports","include","v","styleProp","styleName","variableName","clazz","treeDesignerSelector","treeDesignerStyles","styleRule","nodeSelector","edgeSelector","TextDragHandler","draggedText","moveTexts","Tooltip","xOffset","yOffset","getContainer","updatePosition","target","htmlOrFn","show","_mainContextMenu","_nodeContextMenu","_layout","_nodeDragHandler","_textDragHandler","_textContextMenu","_edgeContextMenu","Hammer","TreeDesignerConfig","custom","scale","fontFamily","fontWeight","fontStyle","strokeWidth","optimal","stroke","label","color","negativeColor","fill","selected","readOnly","disableAnimations","forceFullEdgeRedraw","hideLabels","hidePayoffs","hideProbabilities","raw","payoffNumberFormatter","probabilityNumberFormatter","onNodeSelected","onEdgeSelected","onTextSelected","onSelectionCleared","payoffNames","maxPayoffsToDisplay","TreeDesigner","dataModel","setConfig","initContainer","init","updateCustomStyles","initSvg","initLayout","initI18n","initBrush","initEdgeMarkers","initMainContextMenu","initNodeContextMenu","initEdgeContextMenu","initNodeDragHandler","initTextDragHandler","initTextContextMenu","nodeDragHandler","textDragHandler","withTransitions","redrawDiagramTitle","redrawDiagramDescription","updateScale","updateMargin","transitionPrev","redrawNodes","redrawFloatingTexts","updateValidationMessages","computeAvailableSpace","wrapperGroup","mainGroup","mc","Manager","touchAction","Press","pointerType","Pinch","disableBrush","waitForFinalEvent","enableBrush","group","topMargin","diagramTitle","diagramDescription","getTitleGroupHeight","clone","setMargin","setScale","containerIdOrElem","trim","startsWith","_parents","svgWidth","svgHeight","mainGroupBox","newSvgWidth","newSvgHeight","updateBrushExtent","exit","nodesEnter","labelEnter","payoffEnter","indicatorEnter","aggregatedPayoffEnter","probabilityToEnterEnter","nodesMerge","merge","isOptimal","nodesMergeT","drawNodeSymbol","nodeLabelPosition","labelMergeT","updateTextLines","payoffTspans","item","payoffTspansM","attachPayoffTooltip","payoffT","nodePayoffPosition","aggregatedPayoffTspans","aggregatedPayoffTspansM","aggregatedPayoffT","nodeAggregatedPayoffPosition","attach","probabilityToEnterT","nodeProbabilityToEnterPosition","indicator","nodeIndicatorPosition","nodeContextMenu","cancelDrag","button","nodeUnfoldButtonPosition","payoffFiledName","number","lines","reverse","tspans","edgesContainer","edges","edgesEnter","probabilityEnter","edgesMerge","optimalClassName","edgesMergeT","edgeLineD","selectEdge","edgeLabelPosition","_","displayPayoff","payoffTextT","edgePayoffPosition","displayProbability","probabilityMerge","probabilityMergeT","edgeProbabilityPosition","raise","edgeContextMenu","POINTER_TOUCH","textsEnter","textsMerge","textsMergeT","replaceUrls","escapeHtml","textContextMenu","_this2","validationResults","validationResult","isValid","objectIdToError","errors","nodeSelection","getNodeD3SelectionById","tooltipHtml","getValidationMessage","initArrowMarker","brush","extent","brushContainer","hoveredEdge","mainGroupTranslation","offset","m","mgt","closest","cp","closestPoint","invert","mainContextMenu","getNewChildLocation","injectNode","getInjectedNodeLocation","removeNode","removeNodes","selectedTexts","getSelectedTexts","removeTexts","notClearPrevSelection","cloneSubtree","copyNode","selectedRoots","findSubtreeRoots","copyNodes","_this3","_this4","nodesToAttach","toAttach","attached","attachSubtree","getAllDescendantNodes","_this5","perform","getAllDescendantEdges","_this6","updateVisibility","getNodeD3Selection","getTextD3SelectionById","_this7","visibleOnly","selectedVisible","allSelected","_toConsumableArray","descendants","_this8","clearSelectionBeforeSelect","skipCallback","_this9","titleValue","titleContainer","marginTop","descriptionValue","withMargins","h","version","scripts","test","repository","author","license","bugs","homepage","browserify","presets","plugins","spec","globals","devDependencies","@babel/core","@babel/plugin-proposal-object-rest-spread","@babel/preset-env","babel-plugin-transform-builtin-extend","babel-plugin-transform-class-properties","babel-plugin-transform-es2015-spread","babel-plugin-transform-object-assign","babelify","browser-sync","browserify-shim","chalk","del","es6-set","gulp","gulp-clean-css","gulp-concat","gulp-filelist","gulp-html2js","gulp-load-plugins","gulp-plumber","gulp-rename","gulp-replace","gulp-sass","gulp-sourcemaps","gulp-strip-debug","gulp-template","gulp-uglify","gulp-util","jasmine","jasmine-jquery","karma","karma-browserify","karma-chrome-launcher","karma-intl-shim","karma-jasmine","merge-stream","run-sequence","stringify","svg2pdf.js","vinyl-buffer","vinyl-source-stream","yargs","odc-d3","dependencies","autosize","blueimp-canvas-to-blob","d3-array","d3-dispatch","d3-drag","d3-scale","d3-scale-chromatic","d3-selection","d3-time-format","file-saver","hammerjs","i18next","jquery","jquery-ui","pivottable","sd-computations","sd-model","sd-utils","sd-tree-designer","_sdTreeDesigner","getBoundingClientRect","form","mergeDeep","enctype","body","submit","removeElement","popup","model","_sidebar","_toolbar","_settingsDialog","_aboutDialog","_exporter","_definitionsDialog","_sdComputations","_sensitivityAnalysisDialog","_loadingIndicator","_leagueTableDialog","AppConfig","logLevel","workerUrl","jobRepositoryType","clearRepository","buttons","new","save","exportToPng","exportToSvg","exportToPdf","serverUrl","pdf","png","showDetails","showDefinitions","jsonFileDownload","rule","format","locales","payoff1","currency","currencyDisplay","minimumFractionDigits","maximumFractionDigits","useGrouping","payoff2","leagueTable","plot","maxWidth","groups","highlighted","highlighted-default","extended-dominated","dominated","buildConfig","diagramData","viewModes","payoffsMaximization","Promise","resolve","initViewModes","initDataModel","initComputationsManager","initProbabilityNumberFormat","initPayoffNumberFormat","initTreeDesigner","initSidebar","initSettingsDialog","initAboutDialog","initDefinitionsDialog","initSensitivityAnalysisDialog","initLeagueTableDialog","initOnBeforeUnload","initKeyCodes","then","initToolbar","openDiagram","updateView","log","setLogLevel","setLevel","buildTimestamp","DataModel","nodeAddedCallback","nodeRemovedCallback","onNodeAddedOrRemoved","textAddedCallback","onTextAdded","textRemovedCallback","onTextRemoved","computationsManager","ComputationsManager","ruleName","worker","expressionEngine","checkValidityAndRecomputeObjective","sidebar","Sidebar","settingsDialog","SettingsDialog","aboutDialog","AboutDialog","definitionsDialog","DefinitionsDialog","onClosed","recompute","leagueTableDialog","LeagueTableDialog","isMultipleCriteria","validateParams","sensitivityAnalysisDialog","SensitivityAnalysisDialog","getGlobalVariableNames","toolbar","Toolbar","payoffNumberFormat","Intl","NumberFormat","probabilityNumberFormat","getTreeDesignerInitialConfig","container2","onObjectSelected","prefix","currentViewMode","multiCriteria","charAt","payoffIndex","selectedObject","updateObjectPropertiesView","updateVariableDefinitions","hideObjectProperties","Node","Edge","definitionsSourceObject","getCurrentVariableDefinitionsSourceObject","updateDefinitions","updateLayoutOptions","updateDiagramDetails","updateMultipleCriteria","undo","initPayoffNames","findById","fieldName","evalCode","evalNumeric","getCurrentRule","setCurrentRuleByName","currentRule","payoffCoeffs","maximization","tmp","flipCriteria","getObjectiveRules","setViewMode","_this10","objectiveRulesManager","setPayoffIndex","rules","newRule","every","setObjectiveRule","isSensitivityAnalysisAvailable","dataDTO","originalDataModelSnapshot","loadFromDTO","getJsonReviver","updateDisplayValues","svgString","Exporter","getSVGString","showFullScreenPopup","_setNewState","policy","displayPolicy","LoadingIndicator","_this11","forceWhenAutoIsDisabled","debouncedRecompute","debounce","_this12","isAutoRecalculationEnabled","allRules","_this13","setDiagramTitle","setDiagramDescription","_this14","JSON","parse","alert","dataModelObject","isValidVersionString","compareVersionNumbers","expressionScope","trees","isRuleName","viewMode","setViewModeByName","setDefaultViewModeForRule","getObjectiveRuleByName","load","sensitivityAnalysis","loadSavedParamValues","updateNumberFormats","_this15","filterLocation","filterComputed","filterPrivate","savetime","isoFormat","Date","serialize","jobNameToParamValues","getJsonReplacer","_this16","json","blob","Blob","saveAs","getExportFileName","addEventListener","isUndoAvailable","isRedoAvailable","dialogText","returnValue","prevValue","setConfigParam","_this17","updateDiagramTitle","_this18","updateDiagramDescription","_this19","srcElement","nodeName","toUpperCase","keyCode","ctrlKey","altKey","selectedNode","_selectedNode","utils","appUtils","global$","getGlobalObject","widget","_create","wrapper","addClass","insertAfter","_createAutocomplete","_createShowAllButton","children","input","appendTo","autocomplete","delay","minLength","source","proxy","classes","ui-autocomplete","_on","autocompleteselect","ui","option","_trigger","autocompletechange","inputD3","dispatchHtmlEvent","wasOpen","is","trigger","_source","request","matcher","RegExp","escapeRegex","term","_destroy","input_element","Autocomplete","combobox","_d3ScaleChromatic","_dialog","app","Dialog","_assertThisInitialized","definitionsScopeLabel","definitionsCode","updateInputClass","changeCallback","recalculateButton","variableValuesContainer","elasticTextarea","isVisible","_get","scopeType","labelSuffix","autoResizeTextarea","$codeError","printError","printVariables","scope","scopeVariables","getVariablesAsList","close","shrink","fullScreen","onResized","setFullScreen","_jobParametersBuilder","_sensitivityAnalysisResultTable","_probabilisticSensitivityAnalysisResultTable","_policy","_tornadoDiagramPlot","_spiderPlot","jobConfigurations","jobConfigurationContainer","parameterBuilderContainer","jobParametersBuilder","JobParametersBuilder","onJobParametersChanged","progressBarContainer","progressBar","jobResultsContainer","jobResultPlotContainer","debouncedCheckWarnings","checkWarnings","initButtons","initJobConfigurations","jobSelect","initJobSelect","payoffConf","cloneDeep","jobInstanceManager","terminate","jobConfig","clearWarnings","selectedJobConfig","jobName","job","getJobByName","jobParamsValues","setJobParamsValues","deleteId","refreshSelectedJobConfig","jobParameters","createJobParameters","setJobParameters","customParamsConfig","customVariablesValidator","isValidArray","names","isVariableInGlobalScope","valid","ExpressionEngine","largeScenariosNumberWarning","numberFormatted","check","reduce","hidden","failOnInvalidTree","_derivedValues","variable","toFloat","divide","subtract","customValidator","warnings","isValidNameArray","formula","randomMenuList","optionsAutocomplete","warnConf","addWarning","msg","msgHTML","guid","onJobSelected","onRowSelected","rows","indexes","onResultRowSelected","className","resultTable","setClassName","SensitivityAnalysisJobResultTable","setData","ProbabilisticSensitivityAnalysisJobResultTable","disable","runJobButton","disableActionButtonsAndShowLoadingIndicator","runJobWithInstanceManager","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","callbacksThisArg","resumeJobButton","resume","stopJobButton","stop","terminateJobButton","terminateJob","backButton","downloadCsvButtons","downloadCSV","clearButton","clearParams","clearAllParams","clearResults","setProgress","markAsError","forOwn","globalVariableNames","paramValues","resultPlots","destroy","progress","displayResult","debug","initResultTable","initResultPlots","initTornadoResultPlots","initSpiderResultPlots","policies","policyIndex","resultPlot","TornadoDiagramPlot","SpiderPlot","errorMessage","msgKey","percents","current","total","policyIndexes","Policy","toPolicyString","row","variableNames","showPolicyPreview","saveAsCSV","getRows","params","extendedPolicyDescription","jobResultToCsvRows","_inputField","_pathValueAccessor","formGroups","FormGroup","addField","addSelectField","fontWeightOptions","fontStyleOptions","payoffGroup","updatePayoffNumberFormat","payoff2Group","updateProbabilityNumberFormat","nodeGroup","addGroup","edgeGroup","titleGroup","leagueTableGroup","otherGroup","valueUpdateCallback","onRawOptionChanged","initView","temp","formGroupsEnter","formGroupsMerge","inputGroups","fields","checked","validator","valueAccessor","pristineVal","initFormGroups","fieldConfig","_addField","fieldId","configInputField","ConfigInputField","sourceObject","PathValueAccessor","InputField","_blueimpCanvasToBlob","_fileSaver","svgNode","svgClone","cloneNode","appendInlineStyles","parentCs","targetChildren","tagName","cssStyleText","cs","propertyValue","exportedStyles","svgProperties","setAttribute","removeAttribute","toRemove","_i","removeIds","getSvgCloneWithInlineStyles","serializeSvgNode","sanitizeSVG","XMLSerializer","serializeToString","DOMParser","parseFromString","documentElement","imgsrc","encodeURIComponent","canvas","getContext","image","Image","drawImage","toBlob","filesize","round","ext","timeFormat","clientSide","fallback","serverSide","detectIE","pngWidth","pngHeight","svgString2Image","dataBlob","warn","info","exportPngServerSide","doc","jsPDF","dummy","svg2pdf","firstChild","filename","successCallback","failCallback","setRequestHeader","getResponseHeader","onreadystatechange","oEvent","readyState","postAndSave","noDownload","clientSidePdfExportAvailable","isClientSidePdfExportAvailable","svgElement","exportPdfClientSide","exportPdfServerSide","sanitized","csvRows","escapeCsvField","join","csvString","field","dataURLtoBlob","FileLoader","getElementById","onchange","file","FileReader","files","readAsText","click","parser","styleClass","newDiagram","saveDiagram","export","manual","criterion1","criterion2","twoCriteria","objectiveRule","expected-value-maximization","expected-value-minimization","maxi-min","maxi-max","mini-min","mini-max","min-max","max-min","min-min","max-max","settings","about","downloadCsv","headers","policyNo","comment","dominatedBy","extendedDominatedBy","incratio","gradientArrow1","gradientArrow2","dominatedRegion","legend","gradientArrows","runJob","stopJob","resumeJob","back","removeParameterValue","addParameterValue","jobResultTable","multiplePoliciesInCell","aggregators","maximum","minimum","renderers","heatmap","policyPreview","sensitivity-analysis","param","step","computations","largeScenariosNumber","largeParametersNumber","tornado-diagram","defaultValue","low","high","xAxisTitle","probabilistic-sensitivity-analysis","numberOfRuns","help","param-computation","spider-plot","percentageChangeRange","yAxisTitle","league-table","generic","general","numberFormatLocale","highlightedColor","highlightedDefaultColor","extendedDominatedColor","dominatedColor","defaultColor","other","header","2","3","keyboard","4","5","6","docs","recalculate","evaluatedVariables","sidebarDefinitions","openDialog","multipleCriteria","defaultMaximizedCriterionName","defaultMinimizedCriterionName","nameOfCriterion1","nameOfCriterion2","defaultCriterion1Weight","weightLowerBound","weightUpperBound","showLeagueTable","flip","layoutOptions","marginHorizontal","marginVertical","diagramDetails","objectProperties","childrenProperties","child","confirm","beforeunload","jsonParse","fileApiNotSupported","inputFilesProperty","notSilverDecisionsFile","incorrectVersionFormat","fileVersionNewerThanApplicationVersion","objectiveComputationFailure","diagramDrawingFailure","malformedData","pngExportNotSupported","pngExportNotSupportedIE","svgExportNotSupported","pdfExportNotSupported","incorrectPayoffNumberFormatOptions","incorrectProbabilityNumberFormatOptions","incorrectNumberFormatOptions","jsPDFisNotIncluded","serverSideExportRequestFailure","_app","_package","_jobParameterDefinition","_autocomplete","i18nPrefix","onChange","paramTypeToInputType","paramTypeToInputAttrs","PARAMETER_TYPE","BOOLEAN","DATE","INTEGER","NUMBER","STRING","clean","build","definitions","pristine","customValidators","strictValidation","checkCustomValidators","enabled","jobParameterDefinitions","parentValueObject","parentPath","onInput","paramsEnter","paramSelection","repeating","maxOccurs","vi","minOccurs","getEmptyValue","getParamNameI18n","valuesContainer","addButton","callbacks","onValueRemoved","buildParameterValues","buildParameterSingleValue","paramDefinition","paramValuesEnter","paramValuesMerge","indexToSelection","checkCustomValidator","allValid","validateSingleValue","derivedValueUpdaters","updateDerivedValues","updater","COMPOSITE","nestedParameters","derivedValuesConfigs","derivedValueConfig","buildDerivedValue","removeButton","inputId","paramValue","getParamHelpI18n","helpContainer","inputType","additionalInputAttrs","concat","getInput","parseInput","_value","parameterType","parseFloat","_pivotTable","JobResultTableConfig","JobResultTable","pivotTable","PivotTable","filters","pivotData","selectedIndexes","selectedRows","forEachMatchingRecord","record","pivotOptions","pivotUtilities","derivers","vals","cols","hiddenAttributes","aggregatorName","getAggregatorName","rendererOptions","table","clickCallback","colorScaleGenerator","scaleLinear","range","rendererName","getRendererName","_jobResultTable","jobResult","expectedValues","medians","standardDeviations","policyIsBestProbabilities","trace","attributeArray","rowKey","colKey","numInputs","roundVariables","csvDAta","totalInColNum","_totalInColNum","_lineChart","SpiderPlotConfig","showLegend","guides","domainMargin","series","dotRadius","LineChartConfig","placeholderSelector","LineChart","percentageRangeValues","rangeVal","payoffs","baseContainer","_divergingStackedBarChart","TornadoDiagramPlotConfig","forceLegend","categoryNames","colorRange","middleValue","showBarValues","DivergingStackedBarChartConfig","DivergingStackedBarChart","defaultPayoff","varExtent","variableExtents","extents","categories","extentVariableValues","_leagueTable","_leagueTablePlot","onRowHover","emphasize","onRowHoverOut","LeagueTable","defaultWeight","onDotHover","onDotHoverOut","groupConf","groupOrdering","optimalForDefaultWeight","groupKey","LeagueTablePlot","initJobParams","initResultPlot","_scatterplot","LeagueTablePlotConfig","gradientArrowLength","gradientArrowOffset","emphasizedDotRadius","dotId","ScatterPlotConfig","ScatterPlot","checkOrdering","getOrdering","newData","updateIcerLines","updateDominatedRegion","updateGradientArrows","updateDotLabels","linesContainerSelector","linesContainerClass","prefixClass","linesContainer","svgG","dotsContainerClass","clipPathId","highlightedPoints","groupValue","highlightedDefaultPoints","dominatedRegionPoints","lowPoint","highPoint","minPoint","maxPoint","xAxisExtent","infLowY","infLowPoint","infHighPoint","_x","defaultPoint","defLowPoint","defHighPoint","_x2","unshift","dominatedRegionContainerSelector","dominatedRegionContainer","worstPoint","prev","curr","area","y0","labelsContainerSelector","labels","coeff","x1","y1","x2","y2","arrowsContainerSelector","arrowsContainer","arrowClass","arrows","arrowsEnter","arrowsMerge","_emphasize","emphasizeDot","dotClass","legendCells","getTextData","word","words","lineNumber","tspan","pop","LeagueTableConfig","resultTableHead","resultTableBody","resultTableFoot","drawHeaders","drawRows","headerData","headersMerge","rowsData","cells","rowspan","getRowComment","rowsMerge","cellsMerge","policy1","policy2","numberFormat","showZero","origAggregators","args1","res1","res","format_","origX","revertAggregators","origAggregator","pivotUI","toLowerCase","_payoffInputValidator","_probabilityInputValidator","_requiredInputValidator","_mcdmWeightValueValidator","dispatch","initLayoutOptions","initDiagramDetails","initDefinitions","initMultipleCriteria","onObjectUpdated","onMultiCriteriaUpdated","layoutOptionsContainer","autoLayoutOptionsGroup","diagramDetailsContainer","definitionsContainer","onDefinitionsCodeChanged","definitionsEvaluatedValuesContainer","openDefinitionsDialog","multipleCriteriaContainer","showLeagueTableButton","flipCriteriaButton","weightParser","multipleCriteriaFields","RequiredInputValidator","lowerBoundValueAccessor","upperBoundValueAccessor","weightValueValidator","McdmWeightValueValidator","upper","compare","lower","updateInputs","leagueTableAvailable","isLeagueTableAvailable","getValue","pristineStateSnapshot","setValue","objectProps","headerText","getHeaderTextForObject","fieldList","getFieldListForObject","updateObjectFields","updateObjectChildrenProperties","childObjects","getChildObjectList","objectType","getObjectType","childPropsSelector","ObjectInputField","PayoffInputValidator","ProbabilityInputValidator","fieldsMerge","fieldSelection","setSyntaxValidity","isFieldValid","customOnInput","checkFieldStatus","about_de","about_en","about_fr","about_it","about_pl","diagramDetailsBox","settingsDialogFormGroup","inputGroup","selectInputGroup","jobParameter","loadingIndicator","fullscreenPopup","warningMessage","_fileLoader","hiddenClass","initDiagramButtons","initExportToolbarGroup","initLayoutButtons","initUndoRedoButtons","initSettingsButton","initAboutButton","initSensitivityAnalysisButton","initRecomputeButton","initViewModeToolbarGroup","initObjectiveRuleToolbarGroup","newDiagramButton","openDiagramButton","openFile","saveDiagramButton","saveToFile","onLayoutChanged","layoutButtons","disableAutoLayout","updateLayoutButtons","settingsButton","aboutButton","recomputeButton","sensitivityAnalysisButton","openSensitivityAnalysis","undoRedoStateChangedCallback","onUndoRedoChanged","undoButton","redoButton","updateUndoRedoButtons","updateSensitivityAnalysisButton","updateViewModeValue","updateObjectiveRuleOptions","updateObjectiveRuleValue","initExportToPngButton","initExportSvgButton","initExportPdfButton","saveAsPng","saveAsSvg","saveAsPdf","objectiveRuleSelect","getCurrentObjectiveRule","viewModeSelect","getViewModes","getCurrentViewMode","NumberInputValidator","isNumber","hasAssignmentExpression","isHash"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar copy             = require('es5-ext/object/copy')\n  , normalizeOptions = require('es5-ext/object/normalize-options')\n  , ensureCallable   = require('es5-ext/object/valid-callable')\n  , map              = require('es5-ext/object/map')\n  , callable         = require('es5-ext/object/valid-callable')\n  , validValue       = require('es5-ext/object/valid-value')\n\n  , bind = Function.prototype.bind, defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = validValue(desc) && callable(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (options.resolveContext != null) ensureCallable(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement /*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Array.from\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === \"dwa\"));\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity\nmodule.exports = function (arrayLike /*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(length = arrayLike.length);\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call(\n\t(function () {\n\t\treturn arguments;\n\t})()\n);\n\nmodule.exports = function (value) {\n\treturn objToString.call(value) === id;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(require(\"./noop\"));\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && objToString.call(value) === id;\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","/* eslint strict: \"off\" */\n\nmodule.exports = (function () {\n\treturn this;\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Math.sign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn (sign(10) === 1) && (sign(-20) === -1);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Number.isNaN\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar numberIsNaN = Number.isNaN;\n\tif (typeof numberIsNaN !== \"function\") return false;\n\treturn !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\t// eslint-disable-next-line no-self-compare\n\treturn value !== value;\n};\n","\"use strict\";\n\nvar sign = require(\"../math/sign\")\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n\n  , max = Math.max;\n\nmodule.exports = function (value) {\n return max(0, toInteger(value));\n};\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb /*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.assign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn (obj.foo + obj.bar + obj.trzy) === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src /*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: true,\n\t\tvalue: undefined\n\t};\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","// Deprecated\n\n\"use strict\";\n\nmodule.exports = function (obj) {\n return typeof obj === \"function\";\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) {\n\treturn (isValue(value) && map[typeof value]) || false;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) {\n return (val !== _undefined) && (val !== null);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb /*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1 /*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.setPrototypeOf\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject        = require(\"../is-object\")\n  , value           = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty  = Object.defineProperty\n  , nullDesc        = {\n\tconfigurable: true,\n\tenumerable: false,\n\twritable: true,\n\tvalue: undefined\n}\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n}(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n));\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? String.prototype.contains\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn (str.contains(\"dwa\") === true) && (str.contains(\"foo\") === false);\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","'use strict';\n\nif (!require('./is-implemented')()) {\n\tObject.defineProperty(require('es5-ext/global'), 'Set',\n\t\t{ value: require('./polyfill'), configurable: true, enumerable: false,\n\t\t\twritable: true });\n}\n","'use strict';\n\nmodule.exports = function () {\n\tvar set, iterator, result;\n\tif (typeof Set !== 'function') return false;\n\tset = new Set(['raz', 'dwa', 'trzy']);\n\tif (String(set) !== '[object Set]') return false;\n\tif (set.size !== 3) return false;\n\tif (typeof set.add !== 'function') return false;\n\tif (typeof set.clear !== 'function') return false;\n\tif (typeof set.delete !== 'function') return false;\n\tif (typeof set.entries !== 'function') return false;\n\tif (typeof set.forEach !== 'function') return false;\n\tif (typeof set.has !== 'function') return false;\n\tif (typeof set.keys !== 'function') return false;\n\tif (typeof set.values !== 'function') return false;\n\n\titerator = set.values();\n\tresult = iterator.next();\n\tif (result.done !== false) return false;\n\tif (result.value !== 'raz') return false;\n\n\treturn true;\n};\n","// Exports true if environment provides native `Set` implementation,\n// whatever that is.\n\n'use strict';\n\nmodule.exports = (function () {\n\tif (typeof Set === 'undefined') return false;\n\treturn (Object.prototype.toString.call(Set.prototype) === '[object Set]');\n}());\n","'use strict';\n\nvar setPrototypeOf    = require('es5-ext/object/set-prototype-of')\n  , contains          = require('es5-ext/string/#/contains')\n  , d                 = require('d')\n  , Iterator          = require('es6-iterator')\n  , toStringTagSymbol = require('es6-symbol').toStringTag\n\n  , defineProperty = Object.defineProperty\n  , SetIterator;\n\nSetIterator = module.exports = function (set, kind) {\n\tif (!(this instanceof SetIterator)) return new SetIterator(set, kind);\n\tIterator.call(this, set.__setData__, set);\n\tif (!kind) kind = 'value';\n\telse if (contains.call(kind, 'key+value')) kind = 'key+value';\n\telse kind = 'value';\n\tdefineProperty(this, '__kind__', d('', kind));\n};\nif (setPrototypeOf) setPrototypeOf(SetIterator, Iterator);\n\nSetIterator.prototype = Object.create(Iterator.prototype, {\n\tconstructor: d(SetIterator),\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === 'value') return this.__list__[i];\n\t\treturn [this.__list__[i], this.__list__[i]];\n\t}),\n\ttoString: d(function () { return '[object Set Iterator]'; })\n});\ndefineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));\n","'use strict';\n\nvar clear          = require('es5-ext/array/#/clear')\n  , eIndexOf       = require('es5-ext/array/#/e-index-of')\n  , setPrototypeOf = require('es5-ext/object/set-prototype-of')\n  , callable       = require('es5-ext/object/valid-callable')\n  , d              = require('d')\n  , ee             = require('event-emitter')\n  , Symbol         = require('es6-symbol')\n  , iterator       = require('es6-iterator/valid-iterable')\n  , forOf          = require('es6-iterator/for-of')\n  , Iterator       = require('./lib/iterator')\n  , isNative       = require('./is-native-implemented')\n\n  , call = Function.prototype.call\n  , defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf\n  , SetPoly, getValues, NativeSet;\n\nif (isNative) NativeSet = Set;\n\nmodule.exports = SetPoly = function Set(/*iterable*/) {\n\tvar iterable = arguments[0], self;\n\tif (!(this instanceof SetPoly)) throw new TypeError('Constructor requires \\'new\\'');\n\tif (isNative && setPrototypeOf) self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));\n\telse self = this;\n\tif (iterable != null) iterator(iterable);\n\tdefineProperty(self, '__setData__', d('c', []));\n\tif (!iterable) return self;\n\tforOf(iterable, function (value) {\n\t\tif (eIndexOf.call(this, value) !== -1) return;\n\t\tthis.push(value);\n\t}, self.__setData__);\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(SetPoly, NativeSet);\n\tSetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });\n}\n\nee(Object.defineProperties(SetPoly.prototype, {\n\tadd: d(function (value) {\n\t\tif (this.has(value)) return this;\n\t\tthis.emit('_add', this.__setData__.push(value) - 1, value);\n\t\treturn this;\n\t}),\n\tclear: d(function () {\n\t\tif (!this.__setData__.length) return;\n\t\tclear.call(this.__setData__);\n\t\tthis.emit('_clear');\n\t}),\n\tdelete: d(function (value) {\n\t\tvar index = eIndexOf.call(this.__setData__, value);\n\t\tif (index === -1) return false;\n\t\tthis.__setData__.splice(index, 1);\n\t\tthis.emit('_delete', index, value);\n\t\treturn true;\n\t}),\n\tentries: d(function () { return new Iterator(this, 'key+value'); }),\n\tforEach: d(function (cb/*, thisArg*/) {\n\t\tvar thisArg = arguments[1], iterator, result, value;\n\t\tcallable(cb);\n\t\titerator = this.values();\n\t\tresult = iterator._next();\n\t\twhile (result !== undefined) {\n\t\t\tvalue = iterator._resolve(result);\n\t\t\tcall.call(cb, thisArg, value, value, this);\n\t\t\tresult = iterator._next();\n\t\t}\n\t}),\n\thas: d(function (value) {\n\t\treturn (eIndexOf.call(this.__setData__, value) !== -1);\n\t}),\n\tkeys: d(getValues = function () { return this.values(); }),\n\tsize: d.gs(function () { return this.__setData__.length; }),\n\tvalues: d(function () { return new Iterator(this); }),\n\ttoString: d(function () { return '[object Set]'; })\n}));\ndefineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));\ndefineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));\n","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","/*!\n * jQuery UI :data 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.extend( $.expr[ \":\" ], {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} ) );\n","export * from './src/index'\n","import * as d3 from \"./d3\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\n\nexport class AppUtils {\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, AppUtils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, AppUtils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width) {\n        var textObj = textD3Obj.node();\n        textObj.textContent = textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength() > width + margin) {\n            for (var x = textString.length - 3; x > 0; x -= 1) {\n                if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                    textObj.textContent = textString.substring(0, x) + \"...\";\n                    return true;\n                }\n            }\n            textObj.textContent = \"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n        var ellipsisPlaced = AppUtils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if (ellipsisPlaced && tooltip) {\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element) {\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static getTranslation(transform) {\n        // Create a dummy g for calculation purposes only. This will never\n        // be appended to the DOM and will be discarded once this function\n        // returns.\n        var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        // Set the transform attribute to the provided string value.\n        g.setAttributeNS(null, \"transform\", transform);\n\n        // consolidate the SVGTransformList containing all transformations\n        // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n        // its SVGMatrix.\n        var matrix = g.transform.baseVal.consolidate().matrix;\n\n        // As per definition values e and f are the ones for the translation.\n        return [matrix.e, matrix.f];\n    }\n\n\n    static closestPoint(pathNode, point) {\n        var pathLength = pathNode.getTotalLength(),\n            precision = 8,\n            best,\n            bestLength,\n            bestDistance = Infinity;\n\n        // linear scan for coarse approximation\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n                best = scan, bestLength = scanLength, bestDistance = scanDistance;\n            }\n        }\n\n        // binary search for precise estimate\n        precision /= 2;\n        while (precision > 0.5) {\n            var before,\n                after,\n                beforeLength,\n                afterLength,\n                beforeDistance,\n                afterDistance;\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n                best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n                best = after, bestLength = afterLength, bestDistance = afterDistance;\n            } else {\n                precision /= 2;\n            }\n        }\n\n        best = [best.x, best.y];\n        best.distance = Math.sqrt(bestDistance);\n        return best;\n\n        function distance2(p) {\n            var dx = p.x - point[0],\n                dy = p.y - point[1];\n            return dx * dx + dy * dy;\n        }\n    }\n\n    static growl(message, type='info', position='right', time = 2000){\n        var html = Templates.get('growl', {message:message, type:type})\n\n        var g = d3.select('body').selectOrAppend('div.sd-growl-list.'+position).append('div').html(html);\n        setTimeout(function(){\n            g.remove();\n        }, time)\n    }\n\n\n    static createElement(tag, attribs, parent) {\n        var el = document.createElement(tag);\n\n        if (attribs) {\n            AppUtils.deepExtend(el, attribs);\n        }\n        if (parent) {\n            parent.appendChild(el);\n        }\n        return el;\n    };\n\n    static removeElement(element) {\n        element.parentNode.removeChild(element);\n    }\n\n    static replaceUrls(text){\n        if(!text){\n            return text;\n        }\n        var urlRegexp = /((ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/\n\n        return text.replace(urlRegexp, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n\n    static escapeHtml(html)\n    {\n        var text = document.createTextNode(html);\n        var div = document.createElement('div');\n        div.appendChild(text);\n        return div.innerHTML;\n    }\n\n    static dispatchHtmlEvent(element, name){\n        if (\"createEvent\" in document) {\n            var evt = document.createEvent(\"HTMLEvents\");\n            evt.initEvent(name, false, true);\n            element.dispatchEvent(evt);\n        }\n        else\n            element.fireEvent(\"on\"+name);\n    }\n\n    static dispatchEvent(name, data){\n        var event;\n        try{\n            event = new  CustomEvent(name,{ 'detail': data });\n        }catch (e){ //IE\n            event = document.createEvent('CustomEvent');\n            event.initCustomEvent(name, false, false, data);\n        }\n        document.dispatchEvent(event);\n    }\n\n    static getValidationMessage(error){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var key = 'validation.' + error.name;\n        return i18n.t(key, error.data);\n    }\n\n    static hide(selection){\n        selection.classed('sd-hidden', true);\n    }\n\n    static show(selection, show=true){\n        selection.classed('sd-hidden', !show);\n    }\n\n\n\n    static isHidden(el, exact = true) {\n        if(!el){\n            return true;\n        }\n        if(exact){\n            var style = window.getComputedStyle(el);\n            return (style.display === 'none')\n        }\n        return (el.offsetParent === null)\n    }\n\n    static getJSON(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('get', url, true);\n        xhr.responseType = 'json';\n        xhr.onload = function () {\n            var status = xhr.status;\n            if (status == 200) {\n                callback(xhr.response, null);\n            } else {\n                callback(null, status);\n            }\n        };\n        xhr.send();\n    }\n}\n","import * as d3 from '../d3'\n\n/*based on:\n * github.com/patorjk/d3-context-menu */\n\nexport class ContextMenu {\n    openCallback;\n    closeCallback;\n\n    constructor(menu, opts) {\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1])\n            .enter()\n            .append('div')\n            .attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu')\n                .on('contextmenu', function (d) {\n                    d3.select('.d3-context-menu').style('display', 'none');\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                })\n                .append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n                .append('li')\n                .attr('class', function (d) {\n                    var ret = '';\n                    if (d.divider) {\n                        ret += ' is-divider';\n                    }\n                    if (d.disabled) {\n                        ret += ' is-disabled';\n                    }\n                    if (!d.action) {\n                        ret += ' is-header';\n                    }\n                    return ret;\n                })\n                .html(function (d) {\n                    if (d.divider) {\n                        return '<hr>';\n                    }\n                    if (!d.title) {\n                        console.error('No title attribute set. Check the spelling of your options.');\n                    }\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\n                })\n                .on('click', function (d, i) {\n                    if (d.disabled) return; // do nothing if disabled\n                    if (!d.action) return; // headers have no \"action\"\n                    d.action(elm, data, index);\n                    d3.select('.d3-context-menu').style('display', 'none');\n\n                    if (self.closeCallback) {\n                        self.closeCallback();\n                    }\n                });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu')\n                .style('left', (d3.event.pageX - 2) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n                .style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    };\n\n    static hide() {\n        d3.select('.d3-context-menu').style('display', 'none');\n    }\n\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class EdgeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n            var menu = [];\n\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectDecisionNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectDecisionNode(d)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectChanceNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectChanceNode(d)\n                }\n            });\n\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport * as d3 from '../d3'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class MainContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var mousePosition = null;\n        var menu = function (d) {\n\n            var menu = [];\n            menu.push({\n                title: i18n.t('contextMenu.main.addDecisionNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.DecisionNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.main.addChanceNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.ChanceNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.addText'),\n                action: function (elm, d, i) {\n                    var newText = new model.Text(mousePosition);\n                    treeDesigner.addText(newText);\n                },\n\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNewLocation(mousePosition);\n                },\n                disabled: !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            });\n            menu.push({divider: true});\n\n            menu.push({\n                title: i18n.t('contextMenu.main.selectAllNodes'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectAllNodes();\n                }\n            });\n            return menu;\n        };\n\n        super(menu, {onOpen: () => {\n            treeDesigner.clearSelection();\n            mousePosition = new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true));\n\n        }});\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class NodeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner, operationsForObject) {\n        var menu = function (d) {\n\n            var copyMenuItem = {\n                title: i18n.t('contextMenu.node.copy'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.copySelectedNodes();\n                }\n            };\n            var cutMenuItem = {\n                title: i18n.t('contextMenu.node.cut'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.cutSelectedNodes();\n                }\n            };\n            var pasteMenuItem = {\n                title: i18n.t('contextMenu.node.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNode(d);\n                },\n                disabled: d.folded || !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            };\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.node.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.removeSelectedNodes();\n\n                }\n            };\n\n            var menu = [];\n            if (d.type == model.TerminalNode.$TYPE) {\n                menu = [copyMenuItem, cutMenuItem, deleteMenuItem];\n                NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n                return menu;\n            }\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.addDecisionNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addDecisionNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addChanceNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addChanceNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addTerminalNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addTerminalNode(d)\n                    }\n                });\n                menu.push({divider: true});\n            }\n\n            menu.push(copyMenuItem);\n            menu.push(cutMenuItem);\n            menu.push(pasteMenuItem);\n            menu.push(deleteMenuItem);\n\n            NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.node.selectSubtree'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectSubTree(d, true);\n                }\n            });\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.fold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d);\n                    }\n                });\n            }else{\n                menu.push({\n                    title: i18n.t('contextMenu.node.unfold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d, false);\n                    }\n                });\n            }\n\n            if(operationsForObject){\n                var operations = operationsForObject(d);\n                if(operations.length) {\n                    menu.push({divider: true});\n                    operations.forEach(op=>{\n                        menu.push({\n                            title: i18n.t('contextMenu.node.'+op.name),\n                            action: function (elm, d, i) {\n                                treeDesigner.performOperation(d, op);\n                            },\n                            disabled: !op.canPerform(d)\n                        });\n                    })\n                }\n            }\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n\n    static addNodeConversionOptions(d, menu, treeDesigner){\n        var conversionOptions = NodeContextMenu.getNodeConversionOptions(d, treeDesigner);\n        if(conversionOptions.length){\n            menu.push({divider: true});\n            conversionOptions.forEach(o=>menu.push(o));\n\n        }\n    }\n\n    static getNodeConversionOptions(d, treeDesigner){\n        var options = [];\n\n        if(d.folded){\n            return [];\n        }\n\n        var allAllowedTypes = [model.DecisionNode.$TYPE, model.ChanceNode.$TYPE, model.TerminalNode.$TYPE];\n\n        if(!d.childEdges.length && d.$parent){\n            allAllowedTypes.filter(t=>t!==d.type).forEach(type=>{\n                options.push(NodeContextMenu.getNodeConversionOption(type, treeDesigner))\n            })\n        }else{\n            if(d instanceof model.DecisionNode){\n                options.push(NodeContextMenu.getNodeConversionOption(model.ChanceNode.$TYPE, treeDesigner))\n            }else{\n                options.push(NodeContextMenu.getNodeConversionOption(model.DecisionNode.$TYPE, treeDesigner))\n            }\n        }\n        return options;\n    }\n\n    static getNodeConversionOption(typeToConvertTo, treeDesigner){\n        return {\n            title: i18n.t('contextMenu.node.convert.'+typeToConvertTo),\n            action: function (elm, d, i) {\n                treeDesigner.convertNode(d, typeToConvertTo);\n            },\n        }\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class TextContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.text.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectText(d, true, true);\n                    treeDesigner.removeSelectedTexts()\n\n                }\n            };\n            var menu = [];\n            menu.push(deleteMenuItem);\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addText\": \"Text hinzufügen \",\n            \"paste\": \"Einfügen\",\n            \"selectAllNodes\": \"Alle Knoten auswählen\"\n        },\n        \"node\":{\n            \"copy\": \"Kopieren\",\n            \"cut\": \"Ausschneiden\",\n            \"paste\": \"Einfügen\",\n            \"delete\": \"Löschen\",\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addTerminalNode\": \"Endknotten hinzufügen\",\n            \"convert\":{\n                \"decision\": \"Als Entscheidungsknoten\",\n                \"chance\": \"Als Zufall Knoten\",\n                \"terminal\": \"Als Endknoten\"\n            },\n            \"selectSubtree\": \"Teilbaum wählen\",\n            \"fold\": \"Teilbaum falten\",\n            \"unfold\": \"Teilbaum entfalten\",\n\t\t\t\n            \"flipSubtree\": \"Teilbaum umdrehen\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Entscheidungsknoten Injizieren\",\n            \"injectChanceNode\": \"Zufall Knoten Injizieren\"\n        },\n        \"text\":{\n            \"delete\": \"Löschen\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Pfad, der nicht mit dem Endknoten endet\",\n        \"probabilityDoNotSumUpTo1\": \"Die Summe der Wahrscheinlichkeiten ist nicht gleich 1\",\n        \"invalidProbability\": \"Ungültige Wahrscheinlichkeit im Zweig #{{number}}\",\n        \"invalidPayoff\": \"Ungültige Auszahlung in Zweig #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Auswahlbürste deaktiviert\",\n        \"brushEnabled\": \"Auswahlbürste aktiviert\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregierte Auszahlung {{number}}\",\n                \"named\": \"Aggregierte {{name}}\"\n            },\n            \"probabilityToEnter\": \"Wahrscheinlichkeit\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Wahrscheinlichkeit: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addText\": \"Add Text\",\n            \"paste\": \"Paste\",\n            \"selectAllNodes\": \"Select all nodes\"\n        },\n        \"node\":{\n            \"copy\": \"Copy\",\n            \"cut\": \"Cut\",\n            \"paste\": \"Paste\",\n            \"delete\": \"Delete\",\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addTerminalNode\": \"Add Terminal Node\",\n            \"convert\":{\n                \"decision\": \"As Decision Node\",\n                \"chance\": \"As Chance Node\",\n                \"terminal\": \"As Terminal Node\"\n            },\n            \"selectSubtree\": \"Select subtree\",\n            \"fold\": \"Fold subtree\",\n            \"unfold\": \"Unfold subtree\",\n            \"flipSubtree\": \"Flip subtree\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inject Decision Node\",\n            \"injectChanceNode\": \"Inject Chance Node\"\n        },\n        \"text\":{\n            \"delete\": \"Delete\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Path not ending with terminal node\",\n        \"probabilityDoNotSumUpTo1\": \"Probabilities do not sum up to 1\",\n        \"invalidProbability\": \"Invalid probability in edge #{{number}}\",\n        \"invalidPayoff\": \"Invalid payoff in edge #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selection brush disabled\",\n        \"brushEnabled\": \"Selection brush enabled\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregated Payoff {{number}}\",\n                \"named\": \"Aggregated {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probability to enter\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probability: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addText\": \"Ajouter du texte\",\n            \"paste\": \"Coller\",\n            \"selectAllNodes\": \"Sélectionner tous les nouds\"\n        },\n        \"node\":{\n            \"copy\": \"Copie\",\n            \"cut\": \"Couper\",\n            \"paste\": \"Coller\",\n            \"delete\": \"Effacer\",\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addTerminalNode\": \"Ajouter un noeud terminal\",\n            \"convert\":{\n                \"decision\": \"Comme noud de décision\",\n                \"chance\": \"Comme noud aléatoire\",\n                \"terminal\": \"Comme un noeud terminal\"\n            },\n            \"selectSubtree\": \"Sélectionner une sous-arborescence\",\n            \"fold\": \"Plier sous-arbre\",\n            \"unfold\": \"Déplier arbre sous-arbre\",\n            \"flipSubtree\": \"Basculer sous-arbre\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Injecter un noeud de décision\",\n            \"injectChanceNode\": \"Injecter un noeud de chance\"\n        },\n        \"text\":{\n            \"delete\": \"Effacer\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Parcours non terminé par noeud terminal\",\n        \"probabilityDoNotSumUpTo1\": \"La somme des probabilités n'est pas 1 ou plus\",\n        \"invalidProbability\": \"Probabilité invalide - le bord #{{number}}\",\n        \"invalidPayoff\": \"Avantage invalide - le bord #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Brosse de sélection désactivée\",\n        \"brushEnabled\": \"Brosse de sélection activée\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Avantage agrégé {{number}}\",\n                \"named\": \"Agrégé  {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilité d'entrée\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilité: {{value}}\"\n        }\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        let resources = {\n            en: {\n                translation: en\n            },\n            pl: {\n                translation: pl\n            },\n            it: {\n                translation: it\n            },\n            de: {\n                translation: de\n            },\n            fr: {\n                translation: fr\n            }\n        };\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: resources\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addText\": \"Aggiungi testo\",\n            \"paste\": \"Incolla\",\n            \"selectAllNodes\": \"Seleziona tutti i nodi\"\n        },\n        \"node\":{\n            \"copy\": \"Copia\",\n            \"cut\": \"Taglia\",\n            \"paste\": \"Incolla\",\n            \"delete\": \"Cancella\",\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addTerminalNode\": \"Aggiungi un nodo terminale\",\n            \"convert\":{\n                \"decision\": \"Come Decision Node\",\n                \"chance\": \"Come Chance Node\",\n                \"terminal\": \"Come Terminal Node\"\n            },\n            \"selectSubtree\": \"Seleziona Sotto-albero\",\n            \"fold\": \"Piega sotto-albero\",\n            \"unfold\": \"Dispiegarsi sotto-albero\",\t\t\t\n            \"flipSubtree\": \"Ribalta sotto-albero\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inietta nodo di decisione\",\n            \"injectChanceNode\": \"Inietta nodo opportunità\"\n        },\n        \"text\":{\n            \"delete\": \"Cancella\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Percorso senza nodo terminale\",\n        \"probabilityDoNotSumUpTo1\": \"La somma delle probabilità è diversa da 1\",\n        \"invalidProbability\": \"Probabilità non valida - bordo #{{number}}\",\n        \"invalidPayoff\": \"Saldo non valido - bordo #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selezione pennello disabilitata\",\n        \"brushEnabled\": \"Selezione pennello abilitata\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Saldo aggregato {{number}}\",\n                \"named\": \"Aggregato {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilità da inserire\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilità: {{value}}\"\n        }\n    }\n}\n","module.exports={\n\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addText\": \"Dodaj Tekst\",\n            \"paste\": \"Wklej\",\n            \"selectAllNodes\": \"Zaznacz wszystkie węzły\"\n        },\n        \"node\":{\n            \"copy\": \"Kopiuj\",\n            \"cut\": \"Wytnij\",\n            \"paste\": \"Wklej\",\n            \"delete\": \"Usuń\",\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addTerminalNode\": \"Dodaj Węzeł Końcowy\",\n            \"convert\":{\n                \"decision\": \"Jako Węzeł Decyzyjny\",\n                \"chance\": \"Jako Węzeł Losowy\",\n                \"terminal\": \"Jako Węzeł Końcowy\"\n            },\n            \"selectSubtree\": \"Zaznacz poddrzewo\",\n            \"fold\": \"Zwiń poddrzewo\",\n            \"unfold\": \"Rozwiń poddrzewo\",\n            \"flipSubtree\": \"Przewróć poddrzewo\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Wstrzyknij Węzeł Decyzyjny\",\n            \"injectChanceNode\": \"Wstrzyknij Węzeł Losowy\"\n        },\n        \"text\":{\n            \"delete\": \"Usuń\"\n        }\n    },\n\n    \"validation\":{\n        \"incompletePath\": \"Ostatnim węzłem w ścieżce powinien być Węzeł Końcowy\",\n        \"probabilityDoNotSumUpTo1\": \"Prawdopodobieństwa nie sumują sie do 1\",\n        \"invalidProbability\": \"Niepoprawne prawdopodobieństwo na krawędzi #{{number}}\",\n        \"invalidPayoff\": \"Niepoprawna wypłata na krawędzi #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Zaznaczanie wyłączone\",\n        \"brushEnabled\": \"Zaznaczanie włączone\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Zagregowana wypłata {{number}}\",\n                \"named\": \"Zagregowana {{name}}\"\n            },\n            \"probabilityToEnter\": \"Prawdopodobieństwo wejścia\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Prawdopodobieństwo: {{value}}\"\n        }\n    }\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport * from './tree-designer'\nexport * from './app-utils'\nexport * from './templates'\nexport * from './tooltip'\nexport * from './d3-extensions'\nexport {default as d3} from './d3'\n\n\n","import {Utils} from 'sd-utils'\nimport {domain as model} from 'sd-model'\nimport * as d3 from './d3'\nimport circleSymbol from './symbols/circle'\nimport triangleSymbol from './symbols/triangle'\nimport {AppUtils} from \"./app-utils\";\n\n/*Tree layout manager*/\nexport class Layout{\n\n    treeDesigner;\n    data;\n    config;\n\n    nodeTypeToSymbol = {\n        'decision': d3.symbolSquare,\n        'chance': circleSymbol,\n        \"terminal\": triangleSymbol\n    };\n\n    static MANUAL_LAYOUT_NAME = 'manual';\n\n\n    onAutoLayoutChanged=[];\n\n    nodeTypeOrder = {\n        'decision' : 0,\n        'chance': 0,\n        'terminal': 1\n    };\n\n    treeMargin = 50;\n    targetSymbolSize={};\n    nodeSeparation = (a, b) => a.parent === b.parent ? 1 : 1.2\n\n    constructor(treeDesigner, data, config){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n        this.config = config;\n\n    }\n\n    update(node){\n        if(node && node.$parent){\n            node.$parent.childEdges.sort((a,b)=>a.childNode.location.y - b.childNode.location.y)\n        }\n        if(!this.isManualLayout()){\n            return this.autoLayout(this.config.type, true);\n        }\n        if(node){\n            this.moveNodeToEmptyPlace(node);\n        }else{\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    isManualLayout(){\n        return this.config.type === Layout.MANUAL_LAYOUT_NAME;\n    }\n\n    getNewChildLocation(parent){\n        if(!parent){\n            return new model.Point(this.getNodeMinX(), this.getNodeMinY())\n        }\n        var x = parent.location.x + this.config.gridWidth;\n        var y = parent.location.y;\n        if(parent.childEdges.length){\n            y = parent.childEdges[parent.childEdges.length-1].childNode.location.y+1;\n        }\n\n        return new model.Point(x, y)\n    }\n\n    getInjectedNodeLocation(edge){\n\n        var p = edge.$linePoints[2];\n\n        return new model.Point(p[0], p[1])\n    }\n\n    moveNodeToEmptyPlace(node, redrawIfChanged=true){\n        var positionMap = {};\n        var self = this;\n        node.location.x = Math.max(this.getNodeMinX(node), node.location.x);\n        node.location.y = Math.max(this.getNodeMinY(node), node.location.y);\n\n\n        this.nodesSortedByX = this.data.nodes.slice();\n        this.nodesSortedByX.sort((a,b)=>a.location.x - b.location.x);\n\n        function findCollidingNode(node, location){\n            return Utils.find(self.nodesSortedByX, n=>{\n                if(node == n){\n                    return false;\n                }\n\n                var margin = self.config.nodeSize/3;\n                var x = n.location.x;\n                var y = n.location.y;\n\n                return (location.x - margin <= x && location.x + margin >= x\n                    && location.y - margin <= y && location.y + margin >= y)\n            });\n        }\n\n        var stepX = this.config.nodeSize/2;\n        var stepY = this.config.nodeSize+10;\n        var stepXsameParent = 0;\n        var stepYsameParent = 75;\n        var changed = false;\n        var colidingNode;\n        var newLocation = new model.Point(node.location);\n        while(colidingNode = findCollidingNode(node, newLocation)){\n            changed=true;\n            var sameParent = node.$parent && colidingNode.$parent && node.$parent===colidingNode.$parent;\n            if(sameParent){\n                newLocation.move(stepXsameParent, stepYsameParent);\n            }else{\n                newLocation.move(stepX, stepY);\n            }\n        }\n        if(changed){\n            node.moveTo(newLocation.x,newLocation.y, true);\n            if(redrawIfChanged){\n                this.treeDesigner.redraw(true);\n            }\n        }\n    }\n\n    disableAutoLayout(){\n        this.config.type = Layout.MANUAL_LAYOUT_NAME;\n        this._fireOnAutoLayoutChangedCallbacks();\n    }\n\n\n    nodeSymbolSize = {};\n    drawNodeSymbol(path, transition){\n\n        var self = this;\n        var nodeSize = this.config.nodeSize;\n        this.nodeSymbol = d3.symbol().type(d=> self.nodeTypeToSymbol[d.type])\n            .size(d=>self.nodeSymbolSize[d.$id] ? Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", 64) : 64);\n\n        path\n            .each(function (d) {\n                var path = d3.select(this);\n                var prev = path.attr(\"d\");\n                if(!prev){\n                    path.attr(\"d\", self.nodeSymbol);\n                }\n                var size = Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\");\n                if(!size){\n                    var box = path.node().getBBox();\n                    var error = Math.min(nodeSize / box.width, nodeSize / box.height);\n                    size = error * error * (self.nodeSymbolSize[d.$id]||64);\n                    Utils.set(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", size);\n                }\n                if(transition){\n                    path =  path.transition();\n\n                }else{\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n                path.attr(\"d\", self.nodeSymbol);\n                if(transition){\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n            });\n    }\n\n    nodeLabelPosition(selection) {\n        return selection\n            .attr('x', 0)\n            .attr('y', -this.config.nodeSize / 2 - 7)\n    }\n\n    nodePayoffPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', 0)\n            .attr('y', this.config.nodeSize / 2 + 7)\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeAggregatedPayoffPosition(selection) {\n        var x = this.config.nodeSize / 2 + 7;\n        var self = this;\n        selection\n            .attr('x', x)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let items = d.displayValue('aggregatedPayoff');\n                let number = Utils.isArray(items) ? items.filter(it=>it !== undefined).length : 1;\n                if(number>1){\n                    return -this.getBBox().height/2 + fontSize/2;\n                }\n                return -Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            });\n\n        selection.selectAll('tspan').attr('x', x);\n        return selection;\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'hanging')\n    }\n\n    nodeProbabilityToEnterPosition(selection) {\n        var self = this;\n\n        return Layout.setHangingPosition(selection)\n            .attr('x', this.config.nodeSize / 2 + 7)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let aggregatedPayoffs = d.displayValue('aggregatedPayoff');\n                let aggregatedPayoffsNumber = Utils.isArray(aggregatedPayoffs) ? aggregatedPayoffs.filter(it=>it !== undefined).length : 1;\n                if(aggregatedPayoffsNumber>1){\n\n                    return fontSize*0.6\n                }\n\n                return Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            })\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'central')\n    }\n\n    nodeIndicatorPosition(selection) {\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 8)\n            .attr('y', - this.config.nodeSize/2)\n            .attr('dominant-baseline', 'central')\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeUnfoldButtonPosition(selection) {\n\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 5)\n            .attr('y', 0)\n            .attr('dominant-baseline', 'central')\n    }\n\n    edgeLineD(edge){\n        var line = d3.line()\n            .x(d=> d[0])\n            .y(d=> d[1]);\n        // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n        var parentNode = edge.parentNode;\n        var childNode = edge.childNode;\n\n        var dX = childNode.location.x - parentNode.location.x;\n        var dY = childNode.location.y - parentNode.location.y;\n\n        var sign = dX>=0 ? 1 : -1;\n\n        var slantStartXOffset = Math.min(dX/2, this.config.nodeSize/2+10);\n        var slantWidth = Math.min(this.config.edgeSlantWidthMax, Math.max(dX/2 - slantStartXOffset, 0));\n\n        var point1 = [parentNode.location.x +this.config.nodeSize/2 + 1, parentNode.location.y];\n        var point2 = [Math.max(parentNode.location.x+slantStartXOffset, point1[0]), parentNode.location.y];\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.nodeSize/2+8, dX/2)))), childNode.location.y];\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n        edge.$linePoints = [point1, point2, point3, point4];\n        return line(edge.$linePoints);\n    }\n\n    edgePayoffPosition(selection) {\n        Layout.setHangingPosition(selection)\n            .attr('x', d=>d.$linePoints[2][0] + 2)\n            .attr('y', d=>d.$linePoints[2][1] + 7);\n\n        selection.selectAll('tspan').attr('x', function(d){\n            return d3.select(this.parentNode).datum().$linePoints[2][0] + 2\n        });\n        return selection;\n\n    }\n\n    edgeLabelPosition(selection) {\n        return selection\n            .attr('transform', d=>'translate('+(d.$linePoints[2][0] + 2)+','+(d.$linePoints[2][1] - 7)+')')\n            // .attr('x', d=>d.$linePoints[2][0] + 2)\n            // .attr('y', d=>d.$linePoints[2][1] - 7)\n\n    }\n\n    edgeProbabilityPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', function (d) {\n                var len = this.getComputedTextLength();\n                var min = d.$linePoints[2][0] + 2 + this.previousSibling.childNodes[0].getComputedTextLength() + 7 + len;\n                return Math.max(min, d.$linePoints[3][0] - 8);\n            })\n            .attr('y', d=>d.$linePoints[2][1] + 7)\n    }\n\n    getMinMarginBetweenNodes(){\n      return this.config.nodeSize + 30;\n    }\n\n    getTextMinX(d){\n        let minX = 0;\n        if(d){\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\n            if (bb.x < 0) {\n                minX -= bb.x;\n            }\n        }\n        return minX;\n    }\n\n    getTextMinY(d){\n        let minY = 0;\n        if(d){\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\n            if (bb.y < 0) {\n                minY -= bb.y;\n            }\n        }\n        return minY;\n    }\n\n    getTextMaxX(d){\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n\n    getNodeMinX(d){\n        var self = this;\n        if(d && d.$parent){// && !self.isNodeSelected(d.$parent)\n            return d.$parent.location.x + self.getMinMarginBetweenNodes();\n        }\n        return self.config.nodeSize/2;\n    }\n\n    getNodeMinY(d){\n        return this.config.nodeSize/2;\n    }\n\n    getNodeMaxX(d){\n        var self = this;\n\n        if(d && d.childEdges.length){\n            return d3.min(d.childEdges, e=>!e.childNode.$hidden ? e.childNode.location.x : 9999999)-self.getMinMarginBetweenNodes();\n        }\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n    setGridWidth(width, withoutStateSaving){\n        var self=this;\n        if(this.config.gridWidth===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridWidth: self.config.gridWidth\n                },\n                onUndo: (data)=> {\n                    self.setGridWidth(data.gridWidth, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridWidth(width, true);\n                }\n            });\n        }\n\n        this.config.gridWidth=width;\n        this.update();\n    }\n\n    setGridHeight(gridHeight, withoutStateSaving){\n        var self=this;\n        if(this.config.gridHeight===gridHeight){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridHeight: self.config.gridHeight\n                },\n                onUndo: (data)=> {\n                    self.setGridHeight(data.gridHeight, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridHeight(gridHeight, true);\n                }\n            });\n        }\n\n        this.config.gridHeight=gridHeight;\n        this.update();\n    }\n\n    setNodeSize(nodeSize, withoutStateSaving){\n        var self=this;\n        if(this.config.nodeSize===nodeSize){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    nodeSize: self.config.nodeSize\n                },\n                onUndo: (data)=> {\n                    self.setNodeSize(data.nodeSize, true);\n                },\n                onRedo: (data)=> {\n                    self.setNodeSize(nodeSize, true);\n                }\n            });\n        }\n\n        this.config.nodeSize=nodeSize;\n        this.update();\n        if(this.isManualLayout()){\n            this.fitNodesInPlottingRegion(self.data.getRoots());\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    setEdgeSlantWidthMax(width, withoutStateSaving){\n        var self=this;\n        if(this.config.edgeSlantWidthMax===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    edgeSlantWidthMax: self.config.edgeSlantWidthMax\n                },\n                onUndo: (data)=> {\n                    self.setEdgeSlantWidthMax(data.edgeSlantWidthMax, true);\n                },\n                onRedo: (data)=> {\n                    self.setEdgeSlantWidthMax(width, true);\n                }\n            });\n        }\n\n        this.config.edgeSlantWidthMax=width;\n        this.treeDesigner.redraw(true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        var self=this;\n\n\n\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    newLayout: type,\n                    currentLayout: self.config.type\n                },\n                onUndo: (data)=> {\n                    self.config.type = data.currentLayout;\n                    self._fireOnAutoLayoutChangedCallbacks();\n                },\n                onRedo: (data)=> {\n                    self.autoLayout(data.newLayout, true);\n                }\n            });\n        }\n        this.config.type = type;\n        if(!this.data.nodes.length){\n            this._fireOnAutoLayoutChangedCallbacks();\n            return;\n        }\n\n        var prevTreeMaxY = self.getNodeMinY();\n        this.data.getRoots().forEach(r=>{\n            var root = d3.hierarchy(r, d=>{\n                return d.childEdges.filter(e=>!e.$hidden).map(e=>e.childNode);\n            });\n\n            // root.sort((a,b)=>self.nodeTypeOrder[a.data.type]-self.nodeTypeOrder[b.data.type]);\n            root.sort((a,b)=>a.data.location.y - b.data.location.y);\n\n\n            var layout;\n            if(type==='cluster'){\n                layout = d3.cluster();\n            }else{\n                layout = d3.tree();\n            }\n            layout.nodeSize([self.config.gridHeight, self.config.gridWidth]);\n            layout.separation(self.nodeSeparation);\n\n            layout(root);\n            var minY = 999999999;\n            root.each(d=>{\n                minY = Math.min(minY, d.x);\n            });\n\n            var dy = root.x - minY + prevTreeMaxY;\n            var dx = self.getNodeMinX();\n            var maxY=0;\n            root.each(d=>{\n                d.data.location.x = d.y + dx;\n                d.data.location.y = d.x + dy;\n\n                maxY = Math.max(maxY, d.data.location.y);\n            });\n\n            prevTreeMaxY = maxY + self.config.nodeSize+self.treeMargin;\n        });\n\n\n        // this.transition = true;\n        this.treeDesigner.redraw(true);\n        // this.transition = false;\n\n        this._fireOnAutoLayoutChangedCallbacks();\n        return this;\n    }\n\n    fitNodesInPlottingRegion(nodes){\n        var self = this;\n        var topY = d3.min(nodes, n=>n.location.y);\n        var minY = self.getNodeMinY();\n        var dy = topY - minY;\n\n        var minX = d3.min(nodes, n=>n.location.x);\n        var dx = minX - self.getNodeMinX();\n\n        if(dy<0 ||  dx<0){\n            nodes.forEach(n=>n.move(-dx, -dy));\n        }\n    }\n\n    moveNodes(nodes, dx, dy, pivot){\n        var self = this;\n        var limit = self.config.limitNodePositioning;\n        if(limit){\n            if(dx<0){\n                nodes.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                nodes.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n        var minY = d3.min(nodes, d=>d.location.y);\n        if(minY + dy < self.getNodeMinY()){\n            dy = self.getNodeMinY() - minY;\n        }\n\n        nodes.forEach(d=>{\n            if(limit){\n                Layout.backupNodeLocation(d);\n                var minX = self.getNodeMinX(d);\n                var maxX = self.getNodeMaxX(d);\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y += dy;\n            }else{\n                d.location.x +=dx;\n                d.location.y += dy;\n            }\n\n        });\n\n\n        var revertX = pivot && self.config.limitNodePositioning && (pivot.location.x === pivot.$location.x);\n\n        nodes.forEach(d=>{\n            if(revertX){\n                d.location.x = d.$location.x;\n            }\n            self.treeDesigner.updateNodePosition(d);\n        });\n\n\n    }\n\n    moveTexts(texts, dx, dy){\n        let self = this;\n        let limit = self.config.limitTextPositioning;\n        if(limit){\n            if(dx<0){\n                texts.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                texts.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n\n        texts.forEach(d=>{\n\n\n\n\n            if(limit){\n                let minX = self.getTextMinX(d);\n                let maxX = self.getTextMaxX(d);\n                let minY = self.getTextMinY(d);\n\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y = Math.max(d.location.y+dy, minY);\n\n            }else{\n                d.location.move(dx, dy);\n            }\n            self.treeDesigner.updateTextPosition(d);\n\n        });\n\n    }\n\n    static backupNodeLocation(node) {\n        node.$location = new model.Point(node.location);\n    }\n\n    _fireOnAutoLayoutChangedCallbacks(){\n        this.onAutoLayoutChanged.forEach(c=>c(this.config.type));\n    }\n\n    static setHangingPosition(selection){\n        // window.setTimeout(function(){\n        //     selection.each(function(){\n        //         var h =  this.getBBox().height;\n        //         d3.select(this).attr('dy', h);\n        //     });\n        // },0);\n\n        if(AppUtils.isHidden(selection.node())){ // setting hanging position of hidden elements fails on firefox\n            return selection;\n        }\n\n\n        selection.each(function(){\n            var h =  this.getBBox().height;\n            d3.select(this).attr('dy', '0.75em');\n        });\n\n        return selection;\n    }\n\n}\n\n\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class NodeDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n    stateSnapshot = null;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        if(self.ignoreDrag){\n            self.ignoreDrag=false;\n            self.ignoredDrag=true;\n            return;\n        }\n        self.ignoredDrag=false;\n        self.stateSnapshot = self.data.createStateSnapshot();\n\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var node = d3.select(this);\n        if(!node.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectNode(d);\n        node.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes(true);\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedNode, self){\n        if(self.ignoredDrag){\n            return;\n        }\n\n        if(self.dragEventCount===2 && self.stateSnapshot){\n            self.data.saveStateFromSnapshot(self.stateSnapshot); // TODO save only if something has really changed\n            self.stateSnapshot = null;\n        }\n        self.dragEventCount++;\n        if(self.selectedNodes.length>5 && self.dragEventCount%2!==1){\n            return;\n        }\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n        self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\n\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.redrawEdges();\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n        var node = d3.select(this).classed(\"dragging\", false);\n        if(self.ignoredDrag){\n            return;\n        }\n        self.treeDesigner.layout.update(draggedNode)\n    }\n\n    cancelDrag(){\n        this.ignoreDrag = true;\n    }\n\n}\n\n\n","var epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nexport default {\n    /*draw: function(context, size) {\n        var r = Math.sqrt(size / pi);\n        context.moveTo(r, 0);\n        context.arc(0, 0, r, 0, tau);\n    }*/\n    draw: function(context, size) {\n\n        var r = Math.sqrt(size / pi);\n        var dist =0.552284749831 * r;\n\n        context.moveTo(-r, 0)\n        // context.lineTo(2*r, 2*r)\n        // context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n        context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n\n        context.bezierCurveTo(dist, -r, r, -dist, r,0);\n\n        context.bezierCurveTo(r, dist, dist, r, 0, r);\n\n        context.bezierCurveTo(-dist, r, -r, dist, -r, 0);\n    }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n    draw: function(context, size) {\n        var r = Math.sqrt(size / Math.PI);\n        context.moveTo(-r, 0);\n        context.lineTo(0.9*r, -r);\n        context.lineTo(0.9*r, r);\n        context.closePath();\n    }\n};\n","import {Utils} from \"sd-utils\";\nimport {i18n} from './i18n/i18n'\n\nexport class Templates{\n\n    static growl = require('./templates/growl_message.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n    static styleRule(selector, props){\n        var s = selector+ '{';\n        props.forEach(p=> s+=Templates.styleProp(p[0], p[1]));\n        s+='} ';\n        return s;\n    }\n    static styleProp(styleName, variableName){\n        return  styleName+': <%= '+variableName+' %>; '\n    }\n\n    static treeDesignerSelector = 'svg.sd-tree-designer';\n    static nodeSelector(type, clazz){\n        var s = Templates.treeDesignerSelector+' .node';\n        if(type){\n            s+='.'+type+'-node';\n        }\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n    static edgeSelector(clazz){\n        var s = Templates.treeDesignerSelector+' .edge';\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n\n    static treeDesignerStyles =\n\n        Templates.styleRule(Templates.treeDesignerSelector,[\n            ['font-size', 'fontSize'],\n            ['font-family', 'fontFamily'],\n            ['font-weight', 'fontWeight'],\n            ['font-style', 'fontStyle']\n        ])+\n        //   node\n        Templates.styleRule(Templates.nodeSelector()+' path',[\n            ['fill', 'node.fill'],\n            ['stroke-width', 'node.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'optimal')+' path, '+Templates.nodeSelector('chance', 'optimal')+' path,' +Templates.nodeSelector('terminal', 'optimal')+' path',[\n            ['stroke', 'node.optimal.stroke'],\n            ['stroke-width', 'node.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .label',[\n            ['font-size', 'node.label.fontSize'],\n            ['fill', 'node.label.color']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff',[\n            ['font-size', 'node.payoff.fontSize'],\n            ['fill', 'node.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff.negative',[\n            ['fill', 'node.payoff.negativeColor'],\n        ])+\n\n        //    decision node\n        Templates.styleRule(Templates.nodeSelector('decision')+' path',[\n            ['fill', 'node.decision.fill'],\n            ['stroke', 'node.decision.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'selected')+' path',[\n            ['fill', 'node.decision.selected.fill']\n        ])+\n\n        //    chance node\n        Templates.styleRule(Templates.nodeSelector('chance')+' path',[\n            ['fill', 'node.chance.fill'],\n            ['stroke', 'node.chance.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('chance', 'selected')+' path',[\n            ['fill', 'node.chance.selected.fill']\n        ])+\n\n        //    terminal node\n        Templates.styleRule(Templates.nodeSelector('terminal')+' path',[\n            ['fill', 'node.terminal.fill'],\n            ['stroke', 'node.terminal.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal', 'selected')+' path',[\n            ['fill', 'node.terminal.selected.fill']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff',[\n            ['font-size', 'node.terminal.payoff.fontSize'],\n            ['fill', 'node.terminal.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff.negative',[\n            ['fill', 'node.terminal.payoff.negativeColor'],\n        ])+\n\n\n        //probability\n        Templates.styleRule(Templates.treeDesignerSelector+' .node .probability-to-enter, '+Templates.treeDesignerSelector+' .edge .probability',[\n            ['font-size', 'probability.fontSize'],\n            ['fill', 'probability.color']\n        ])+\n\n        //edge\n        Templates.styleRule(Templates.edgeSelector()+' path',[\n            ['stroke', 'edge.stroke'],\n            ['stroke-width', 'edge.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow path',[\n            ['fill', 'edge.stroke'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector('optimal')+' path',[\n            ['stroke', 'edge.optimal.stroke'],\n            ['stroke-width', 'edge.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-optimal path',[\n            ['fill', 'edge.optimal.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector('selected')+' path',[\n            ['stroke', 'edge.selected.stroke'],\n            ['stroke-width', 'edge.selected.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-selected path',[\n            ['fill', 'edge.selected.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .label',[\n            ['font-size', 'edge.label.fontSize'],\n            ['fill', 'edge.label.color']\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .payoff',[\n            ['font-size', 'edge.payoff.fontSize'],\n            ['fill', 'edge.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector()+' .payoff.negative',[\n            ['fill', 'edge.payoff.negativeColor'],\n        ])+\n\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-title',[\n            ['font-size', 'title.fontSize'],\n            ['font-weight', 'title.fontWeight'],\n            ['font-style', 'title.fontStyle'],\n            ['fill', 'title.color']\n        ]) +\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-description',[\n            ['font-size', 'description.fontSize'],\n            ['font-weight', 'description.fontWeight'],\n            ['font-style', 'description.fontStyle'],\n            ['fill', 'description.color']\n        ])\n}\n\n\n\n\n","module.exports = \"<div class=\\\"sd-growl-message <%=type%>\\\">\\n    <div class=\\\"sd-growl-message-text\\\">\\n        <%= message %>\\n    </div>\\n</div>\\n\";\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class TextDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var text = d3.select(this);\n        if(!text.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectText(d);\n        text.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes();\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedText, self){\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n\n        self.treeDesigner.layout.moveTexts([draggedText], dx, dy);\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n         d3.select(this).classed(\"dragging\", false);\n    }\n\n}\n\n\n","import * as d3 from './d3'\nimport {Utils} from 'sd-utils'\n\nexport class Tooltip {\n    static getContainer(){\n        return d3.select(\"body\").selectOrAppend('div.sd-tooltip');\n    }\n\n    static show(html, xOffset = 5, yOffset = 28, event, duration=null) {\n        var container = Tooltip.getContainer()\n            .style(\"opacity\", 0);\n        container.transition()\n            .duration(200)\n            .style(\"opacity\", .98);\n        container.html(html);\n        Tooltip.updatePosition(xOffset, yOffset, event);\n        if(duration){\n            setTimeout(function(){\n                Tooltip.hide();\n            }, duration)\n        }\n    }\n\n    static updatePosition(xOffset = 5, yOffset = 28, event) {\n        event = event || d3.event;\n        Tooltip.getContainer()\n            .style(\"left\", (event.pageX + xOffset) + \"px\")\n            .style(\"top\", (event.pageY - yOffset) + \"px\");\n    }\n\n    static hide(duration = 500) {\n        var t = Tooltip.getContainer();\n        if(duration){\n            t = t.transition().duration(duration)\n        }\n        t.style(\"opacity\", 0);\n    }\n\n    static attach(target, htmlOrFn, xOffset, yOffset) {\n        target.on('mouseover', function (d, i) {\n            var html = null;\n            if (Utils.isFunction(htmlOrFn)) {\n                html = htmlOrFn(d, i);\n            } else {\n                html = htmlOrFn;\n            }\n\n            if (html !== null && html !== undefined && html !== '') {\n                Tooltip.show(html, xOffset, yOffset);\n            }else{\n                Tooltip.hide(0);\n            }\n\n        }).on('mousemove', function (d) {\n            Tooltip.updatePosition(xOffset, yOffset);\n        }).on(\"mouseout\", function (d) {\n            Tooltip.hide();\n        });\n    }\n}\n","import * as d3 from \"./d3\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {ContextMenu} from \"./context-menu/context-menu\";\nimport {MainContextMenu} from \"./context-menu/main-context-menu\";\nimport {NodeContextMenu} from \"./context-menu/node-context-menu\";\nimport {Layout} from \"./layout\";\nimport {NodeDragHandler} from \"./node-drag-handler\";\nimport {Tooltip} from \"./tooltip\";\nimport {Templates} from \"./templates\";\nimport {TextDragHandler} from \"./text-drag-handler\";\nimport {TextContextMenu} from \"./context-menu/text-context-menu\";\nimport {EdgeContextMenu} from \"./context-menu/edge-context-menu\";\nimport * as Hammer from \"hammerjs\";\nimport {i18n} from \"./i18n/i18n\";\n\n\nexport class TreeDesignerConfig {\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    scale = 1;\n    lng = 'en';\n    layout= {\n        type: 'tree',\n        nodeSize: 40,\n        limitNodePositioning: true,\n        limitTextPositioning: true,\n        gridHeight: 75,\n        gridWidth: 150,\n        edgeSlantWidthMax: 20\n    };\n    fontFamily = 'sans-serif';\n    fontSize = '12px';\n    fontWeight = 'normal';\n    fontStyle = 'normal';\n    node = {\n        strokeWidth: '1px',\n        optimal: {\n            stroke: '#006f00',\n            strokeWidth: '1.5px',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'black'\n        },\n        payoff: {\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        },\n        decision: {\n            fill: '#ff7777',\n            stroke: '#660000',\n\n            selected: {\n                fill: '#aa3333',\n                // stroke: '#666600'\n            }\n        },\n        chance: {\n            fill: '#ffff44',\n            stroke: '#666600',\n\n            selected: {\n                fill: '#aaaa00',\n                // stroke: '#666600'\n            }\n        },\n        terminal:{\n            fill: '#44ff44',\n            stroke: 'black',\n            selected: {\n                fill: '#00aa00',\n                // stroke: 'black'\n            },\n            payoff: {\n                fontSize: '1em',\n                color: 'black',\n                negativeColor: '#b60000'\n            },\n        }\n    };\n    edge={\n        stroke: '#424242',\n        strokeWidth: '1.5',\n        optimal:{\n            stroke: '#006f00',\n            strokeWidth: '2.4',\n        },\n        selected:{\n            stroke: '#045ad1',\n            strokeWidth: '3.5',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'back'\n        },\n        payoff:{\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        }\n\n    };\n    probability = {\n        fontSize: '1em',\n        color: '#0000d7'\n    };\n    title = {\n        fontSize: '16px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 15,\n            bottom: 10\n        }\n    };\n    description = {\n        show: true,\n        fontSize: '12px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 5,\n            bottom: 10\n        }\n    };\n\n    readOnly= false;\n    disableAnimations=false;\n    forceFullEdgeRedraw=false;\n    hideLabels=false;\n    hidePayoffs=false;\n    hideProbabilities=false;\n    raw=false;\n\n\n    payoffNumberFormatter = (v, i)=> v;\n    probabilityNumberFormatter  = (v)=> v;\n\n    onNodeSelected = (node) => {};\n    onEdgeSelected = (edge) => {};\n    onTextSelected = (text) => {};\n    onSelectionCleared = () => {};\n\n    operationsForObject = (o) => [];\n\n    payoffNames = [null, null];\n    maxPayoffsToDisplay = 1;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n\nexport class TreeDesigner {\n\n    config;\n    container;\n    data; //data model manager\n    svg;\n\n    constructor(container, dataModel, config){\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    }\n\n    setConfig(config) {\n        this.config = new TreeDesignerConfig(config);\n        if(this.layout){\n            this.layout.config=this.config.layout;\n        }\n        this.updateCustomStyles();\n        return this;\n    }\n\n    init(){\n\n        this.initSvg();\n        this.initLayout();\n        this.initI18n();\n        this.initBrush();\n        this.initEdgeMarkers();\n\n        this.updateCustomStyles();\n        if(!this.config.readOnly){\n            this.initMainContextMenu();\n            this.initNodeContextMenu();\n            this.initEdgeContextMenu();\n            this.initNodeDragHandler();\n            this.initTextDragHandler();\n            this.initTextContextMenu();\n        }\n        this.redraw();\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n\n    updateCustomStyles(){\n        d3.select('head').selectOrAppend('style#sd-tree-designer-style').html(Templates.get('treeDesignerStyles', this.config));\n        return this;\n    }\n\n    initLayout(){\n        this.layout = new Layout(this, this.data, this.config.layout);\n    }\n\n    initNodeDragHandler(){\n        this.nodeDragHandler = new NodeDragHandler(this, this.data);\n    }\n\n    initTextDragHandler(){\n        this.textDragHandler = new TextDragHandler(this, this.data);\n    }\n\n    redraw(withTransitions=false){\n\n        var self = this;\n        withTransitions = !self.config.disableAnimations && withTransitions;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateScale(withTransitions);\n        this.updateMargin(withTransitions);\n        if(withTransitions){\n            self.transitionPrev = self.transition;\n            self.transition = true;\n        }\n        this.redrawNodes();\n        this.redrawEdges();\n        this.redrawFloatingTexts();\n        this.updateValidationMessages();\n        if(withTransitions){\n            self.transition =  self.transitionPrev;\n        }\n        setTimeout(function(){\n            self.updatePlottingRegionSize();\n        },10);\n\n        return this;\n    }\n\n    computeAvailableSpace(){\n        this.availableHeight = AppUtils.sanitizeHeight(this.config.height, this.container, this.config.margin);\n        this.availableWidth = AppUtils.sanitizeWidth(this.config.width, this.container, this.config.margin);\n    }\n\n    initSvg() {\n        var c = this;\n        var self = this;\n        this.computeAvailableSpace();\n        this.svg = this.container.selectOrAppend('svg.sd-tree-designer');\n        this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\n\n        this.wrapperGroup = this.svg.selectOrAppend('g.sd-wrapper-group');\n        this.mainGroup = this.wrapperGroup.selectOrAppend('g.main-group');\n        this.updateScale();\n        this.updateMargin();\n\n\n        if (!this.config.width) {\n            d3.select(window)\n                .on(\"resize.tree-designer\", function () {\n                    self.updatePlottingRegionSize();\n                    self.redrawDiagramTitle();\n                });\n        }\n\n        var mc = new Hammer.Manager(this.svg.node(), {touchAction : 'auto'});\n        mc.add(new Hammer.Press({\n            pointerType: 'touch'\n        }));\n\n        mc.add(new Hammer.Pinch({\n            pointerType: 'touch'\n        }));\n\n        var cancel;\n        mc.on('pinchstart', function(){\n            self.disableBrush();\n        })\n        mc.on('pinch', function(){\n            cancel = Utils.waitForFinalEvent(()=>self.enableBrush(), 'pinchend', 5000)\n        })\n    }\n\n    updateMargin(withTransitions){\n        var self = this;\n        var margin = this.config.margin;\n        var group = this.mainGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        this.topMargin = margin.top;\n        if(this.diagramTitle||this.diagramDescription){\n            this.topMargin = parseInt(this.diagramTitle ? this.config.title.margin.top : 0) + this.getTitleGroupHeight()\n                +  Math.max(this.topMargin, parseInt(this.config.title.margin.bottom));\n        }\n\n        group.attr(\"transform\", \"translate(\" + margin.left + \",\" + this.topMargin + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setMargin(margin, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    margin: Utils.clone(self.config.margin)\n                },\n                onUndo: (data)=> {\n                    self.setMargin(data.margin, true);\n                },\n                onRedo: (data)=> {\n                    self.setMargin(margin, true);\n                }\n            });\n        }\n        Utils.deepExtend(this.config.margin, margin);\n        this.redrawDiagramTitle();\n        this.updateMargin(true);\n    }\n\n\n    updateScale(withTransitions){\n        var self = this;\n        var scale = this.config.scale;\n        var group = this.wrapperGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        group.attr(\"transform\", \"scale(\" + scale + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setScale(scale, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    scale: Utils.clone(self.config.scale)\n                },\n                onUndo: (data)=> {\n                    self.setScale(data.scale, true);\n                },\n                onRedo: (data)=> {\n                    self.setScale(scale, true);\n                }\n            });\n        }\n        this.config.scale = scale;\n        this.updateScale(true);\n    }\n\n    initContainer(containerIdOrElem) {\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else if(containerIdOrElem._parents){\n            this.container = containerIdOrElem\n        }else{\n            this.container = d3.select(containerIdOrElem);\n        }\n    }\n\n    updatePlottingRegionSize() {\n        var changed = false;\n        this.computeAvailableSpace();\n        var margin = this.config.margin;\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        var mainGroupBox = this.mainGroup.node().getBBox();\n        let boxWidth = mainGroupBox.width;\n        var newSvgWidth = boxWidth+mainGroupBox.x+margin.left+margin.right;\n        newSvgWidth  *= this.config.scale;\n        this.container.classed('with-overflow-x', newSvgWidth>=this.availableWidth);\n        newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\n        if(svgWidth!=newSvgWidth){\n            changed = true;\n            this.svg.attr('width', newSvgWidth);\n        }\n        let boxHeight = mainGroupBox.height;\n        var newSvgHeight = boxHeight+mainGroupBox.y+this.topMargin+margin.bottom;\n        newSvgHeight *= this.config.scale;\n        this.container.classed('with-overflow-y', newSvgHeight>=this.availableHeight);\n        newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\n        if(svgHeight!=newSvgHeight){\n            changed=true;\n            this.svg.attr('height', newSvgHeight);\n        }\n        if(changed){\n            this.updateBrushExtent()\n        }\n\n\n    }\n\n    redrawNodes() {\n        var self = this;\n\n\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes.filter(d=>!d.$hidden), (d,i)=> d.$id);\n        nodes.exit().remove();\n        var nodesEnter = nodes.enter().append('g')\n            .attr('id', d=>'node-'+d.$id)\n            .attr('class', d=>d.type+'-node node')\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n        nodesEnter.append('path');\n\n        var labelEnter = nodesEnter.append('text').attr('class', 'label');\n        var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\n        var indicatorEnter = nodesEnter.append('text').attr('class', 'error-indicator').text('!!');\n        var aggregatedPayoffEnter = nodesEnter.append('text').attr('class', 'aggregated-payoff');\n        var probabilityToEnterEnter = nodesEnter.append('text').attr('class', 'probability-to-enter');\n\n        var nodesMerge = nodesEnter.merge(nodes);\n        nodesMerge.classed('optimal', (d)=>self.isOptimal(d));\n\n        var nodesMergeT = nodesMerge;\n        if(this.transition){\n            nodesMergeT = nodesMerge.transition();\n            nodesMergeT.on('end', ()=> self.updatePlottingRegionSize())\n        }\n        nodesMergeT\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')')\n\n        var path = nodesMerge.select('path');\n        this.layout.drawNodeSymbol(path,this.transition);\n\n        /*path\n            .style('fill', d=> {\n                // if(self.isNodeSelected(d)){\n                //     return self.config.node[d.type].selected.fill\n                // }\n                return self.config.node[d.type].fill\n            })\n            .style('stroke', d=> self.config.node[d.type].stroke)\n            .style('stroke-width', d=> {\n                if(self.config.node[d.type].strokeWidth!==undefined){\n                    return self.config.node[d.type].strokeWidth;\n                }\n                return self.config.node.strokeWidth;\n            });\n        */\n        this.layout.nodeLabelPosition(labelEnter);\n        var labelMerge = nodesMerge.select('text.label');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = nodesMergeT.select('text.label');\n        labelMergeT.each(this.updateTextLines);\n        this.layout.nodeLabelPosition(labelMergeT)\n            .attr('text-anchor', 'middle')\n\n        var payoff = nodesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('childrenPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n            // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0')\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((d, i)=> {\n                var val = d\n\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n        this.attachPayoffTooltip(payoffTspansM);\n\n\n        var payoffT = payoff;\n        if(this.transition){\n            payoffT = payoff.transition();\n        }\n\n        this.layout.nodePayoffPosition(payoffEnter);\n        this.layout.nodePayoffPosition(payoffT);\n\n        var aggregatedPayoff = nodesMerge.select('text.aggregated-payoff');\n        var aggregatedPayoffTspans = aggregatedPayoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('aggregatedPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        aggregatedPayoffTspans.exit().remove();\n        var aggregatedPayoffTspansM = aggregatedPayoffTspans.enter().append('tspan').merge(aggregatedPayoffTspans)\n            .attr('dy', (d,i)=>i>0 ? '0.95em': undefined)\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((val, i)=> {\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n\n        this.attachPayoffTooltip(aggregatedPayoffTspansM, 'aggregatedPayoff');\n\n        var aggregatedPayoffT = aggregatedPayoff;\n        if(this.transition){\n            aggregatedPayoffT = aggregatedPayoff.transition();\n        }\n\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffEnter);\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffT);\n\n        var probabilityToEnter = nodesMerge.select('text.probability-to-enter')\n            .text(d=>{\n                var val = d.displayValue('probabilityToEnter');\n                return val!==null ? (isNaN(val) ? val : self.config.probabilityNumberFormatter(val)): ''\n            })\n            .classed('sd-hidden', this.config.hideProbabilities || this.config.raw);\n        Tooltip.attach(probabilityToEnter, i18n.t('tooltip.node.probabilityToEnter'));\n\n\n        var probabilityToEnterT = probabilityToEnter;\n        if(this.transition){\n            probabilityToEnterT = probabilityToEnter.transition();\n        }\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterEnter);\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterT);\n\n\n        var indicator = nodesMerge.select('text.error-indicator');\n        indicator.classed('sd-hidden', this.config.raw)\n        this.layout.nodeIndicatorPosition(indicatorEnter);\n        this.layout.nodeIndicatorPosition(indicator);\n\n        if(this.nodeDragHandler){\n            nodesMerge.call(this.nodeDragHandler.drag);\n        }\n\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\n        nodesMerge.on('dblclick', this.nodeContextMenu)\n        nodesMerge.each(function(d, i){\n            var nodeElem = this;\n            var mc = new Hammer.Manager(nodeElem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n            mc.on('press', function(e){\n                if(e.pointerType=='touch'){\n                    self.nodeDragHandler.cancelDrag();\n                }\n            })\n\n\n            if(d.folded){\n                let button = d3.select(nodeElem).selectOrAppend('text.sd-unfold-button')\n                    .text(\"[+]\")\n                    .on('click dbclick mousedown', ()=>self.foldSubtree(d, false)); //firefox detects only mousedown event - related to drag handler\n\n                self.layout.nodeUnfoldButtonPosition(button);\n                Tooltip.attach(button, i18n.t('contextMenu.node.unfold'));\n            }else{\n                d3.select(nodeElem).select('.sd-unfold-button').remove();\n            }\n\n        })\n    }\n\n    attachPayoffTooltip(selection, payoffFiledName = 'payoff', object='node'){\n        var self = this;\n        Tooltip.attach(selection, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.named',{value: d.payoff, number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.default',{value: d.payoff, number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n    }\n\n    updateTextLines(d){ //helper method for splitting text to tspans\n        var lines = d.name ? d.name.split('\\n') : [];\n        lines.reverse();\n        var tspans = d3.select(this).selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .text(l=>l)\n            .attr('dy', (d,i)=>i>0 ? '-1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n    }\n\n    isOptimal(d){\n        return d.displayValue('optimal');\n    }\n\n    redrawEdges() {\n        var self = this;\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n        if(self.config.forceFullEdgeRedraw){\n            edgesContainer.selectAll(\"*\").remove();\n        }\n\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges.filter(e=>!e.$hidden), (d,i)=> d.$id);\n        edges.exit().remove();\n        var edgesEnter = edges.enter().append('g')\n            .attr('id', d=>'edge-'+d.$id)\n            .attr('class', 'edge');\n\n\n        edgesEnter.append('path');\n        var labelEnter = edgesEnter.appendSelector('g.label-group');\n        labelEnter.append('text').attr('class', 'label');\n        var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\n        var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\n\n\n        var edgesMerge = edgesEnter.merge(edges);\n\n\n        var optimalClassName = 'optimal';\n        edgesMerge.classed(optimalClassName, (d)=>self.isOptimal(d));\n\n        var edgesMergeT = edgesMerge;\n        if(this.transition){\n            edgesMergeT = edgesMerge.transition();\n        }\n\n        edgesMergeT.select('path')\n            .attr('d', d=> this.layout.edgeLineD(d))\n            // .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\")\n            .attr(\"marker-end\", function(d) {\n                var suffix = d3.select(this.parentNode).classed('selected') ? '-selected' : (self.isOptimal(d)?'-optimal':'');\n                return \"url(#arrow\"+ suffix+\")\"\n            });\n            // .attr(\"shape-rendering\", \"optimizeQuality\")\n\n\n        edgesMerge.on('click', d=>{\n            self.selectEdge(d, true)\n        });\n\n        this.layout.edgeLabelPosition(labelEnter);\n        edgesMergeT.select('text.label').each(this.updateTextLines);\n        var labelMerge = edgesMerge.select('g.label-group');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = edgesMergeT.select('g.label-group');\n        this.layout.edgeLabelPosition(labelMergeT);\n            // .text(d=>d.name);\n\n        var payoff = edgesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d => {\n            let item = d.displayValue('payoff');\n            return Utils.isArray(item) ? item.slice(0, Math.min(item.length, self.config.maxPayoffsToDisplay)).map(_=>d) : [d];\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n        // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            // .attr('x', '0')\n\n            // .attr('dominant-baseline', 'hanging')\n            .classed('negative', (d, i)=> {\n                var val = d.displayPayoff(undefined, i);\n                return val!==null && val<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs)\n            // .text(d=> isNaN(d.payoff) ? d.payoff : self.config.payoffNumberFormatter(d.payoff))\n            .text((d, i)=>{\n                if(this.config.raw){\n                    return d.payoff[i];\n                }\n\n                let item = d.displayValue('payoff');\n                let items = Utils.isArray(item) ? item : [item];\n\n                let val = items[i];\n                if (val !== null) {\n                    if (!isNaN(val)) {\n                        return self.config.payoffNumberFormatter(val, i);\n                    }\n                    if (Utils.isString(val)) {\n                        return val;\n                    }\n                }\n\n                if (d.payoff[i] !== null && !isNaN(d.payoff[i]))\n                    return self.config.payoffNumberFormatter(d.payoff[i], i);\n\n                return d.payoff[i];\n\n            });\n\n        Tooltip.attach(payoffTspansM, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.edge.payoff.named',{value: d.payoff[i], number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.edge.payoff.default',{value: d.payoff[i], number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n\n        var payoffTextT = payoff;\n        if(this.transition){\n            payoffTextT = payoff.transition();\n        }\n        this.layout.edgePayoffPosition(payoffEnter);\n        this.layout.edgePayoffPosition(payoffTextT);\n\n        Tooltip.attach(edgesMerge.select('text.probability'), d=>i18n.t('tooltip.edge.probability',{value: d.probability=== undefined ? d.displayProbability() : d.probability}));\n\n        edgesMerge.select('text.probability')\n            .classed('sd-hidden', this.config.hideProbabilities);\n        var probabilityMerge = edgesMerge.select('text.probability');\n        probabilityMerge\n            .attr('text-anchor', 'end')\n            .text(d=>{\n                if(this.config.raw){\n                    return d.probability;\n                }\n                var val = d.displayProbability();\n\n                if(val!==null){\n                    if(!isNaN(val)){\n                        return self.config.probabilityNumberFormatter(val);\n                    }\n                    if(Utils.isString(val)){\n                        return val;\n                    }\n                }\n\n                if(d.probability!==null && !isNaN(d.probability))\n                    return self.config.probabilityNumberFormatter(d.probability);\n\n                return d.probability;\n            });\n        var probabilityMergeT = probabilityMerge;\n        if(this.transition){\n            probabilityMergeT = probabilityMerge.transition();\n        }\n\n        this.layout.edgeProbabilityPosition(probabilityEnter);\n        this.layout.edgeProbabilityPosition(probabilityMergeT);\n\n\n        edgesContainer.selectAll('.edge.'+optimalClassName).raise();\n\n        edgesMerge.on('contextmenu', this.edgeContextMenu);\n        edgesMerge.on('dblclick', this.edgeContextMenu);\n        edgesMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: Hammer.POINTER_TOUCH\n            }));\n        })\n    }\n\n    redrawFloatingTexts() {\n        var self = this;\n\n\n        var textsContainer = this.mainGroup.selectOrAppend('g.floating-texts');\n        var texts = textsContainer.selectAll('.floating-text').data(this.data.texts, (d,i)=> d.$id);\n        texts.exit().remove();\n        var textsEnter = texts.enter().appendSelector('g.floating-text')\n            .attr('id', d=>'text-'+d.$id);\n\n\n        var rectWidth = 40;\n        var rectHeight = 20;\n\n        textsEnter.append('rect').attr('x', -5).attr('y', -16).attr('fill-opacity', 0);\n        textsEnter.append('text');\n\n        var textsMerge = textsEnter.merge(texts);\n        var textsMergeT = textsMerge;\n        if(this.transition){\n            textsMergeT = textsMerge.transition();\n        }\n\n        textsMergeT.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n\n        var tspans = textsMerge.select('text').selectAll('tspan').data(d=>d.value ? d.value.split('\\n') : []);\n\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        textsMerge.classed('sd-empty', d=>!d.value || !d.value.trim());\n        textsMerge.select('rect').attr('width', rectWidth).attr('height', rectHeight);\n\n        textsMerge.each(function(d){\n            if(!d.value){\n                return;\n            }\n            var bb = d3.select(this).select('text').node().getBBox();\n           d3.select(this).select('rect')\n               .attr('y', bb.y-5)\n               .attr('width', Math.max(bb.width+10, rectWidth))\n               .attr('height', Math.max(bb.height+10, rectHeight))\n        });\n\n        if(this.textDragHandler){\n            textsMerge.call(this.textDragHandler.drag);\n        }\n        textsMerge.on('contextmenu', this.textContextMenu);\n        textsMerge.on('dblclick', this.textContextMenu);\n        textsMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n        })\n\n    }\n\n    updateValidationMessages() {\n        var nodes = this.mainGroup.selectAll('.node');\n        nodes.classed('error', false);\n\n        this.data.validationResults.forEach(validationResult=>{\n            if(validationResult.isValid()){\n                return;\n            }\n\n            Object.getOwnPropertyNames(validationResult.objectIdToError).forEach(id=>{\n                var errors = validationResult.objectIdToError[id];\n                var nodeSelection = this.getNodeD3SelectionById(id);\n                nodeSelection.classed('error', true);\n                var tooltipHtml = '';\n                errors.forEach(e=>{\n                    if(tooltipHtml){\n                        tooltipHtml+='<br/>'\n                    }\n                    tooltipHtml+=AppUtils.getValidationMessage(e);\n                });\n\n                Tooltip.attach(nodeSelection.select('.error-indicator'), tooltipHtml);\n\n\n            })\n        });\n    }\n\n\n    initEdgeMarkers() {\n        var defs = this.svg.append(\"svg:defs\");\n\n        this.initArrowMarker(\"arrow\");\n        this.initArrowMarker(\"arrow-optimal\");\n        this.initArrowMarker(\"arrow-selected\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.select(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    updateBrushExtent() {\n        var self =this;\n        this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\n        this.brushContainer.call(this.brush);\n    }\n    initBrush() {\n        var self = this;\n\n        var brushContainer = self.brushContainer = this.brushContainer= this.wrapperGroup.selectOrInsert(\"g.brush\", \":first-child\")\n            .attr(\"class\", \"brush\");\n\n        var brush = this.brush = d3.brush()\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n\n\n        this.updateBrushExtent();\n\n        brushContainer.select('.overlay').on(\"mousemove.edgeSelection\", mousemoved);\n        function mousemoved() {\n            var m = d3.mouse(this);\n            var mgt = self.getMainGroupTranslation();\n            var margin = 10;\n\n            var closest = [null, 999999999];\n            var closeEdges = [];\n            self.mainGroup.selectAll('.edge').each(function(d){\n                var selection = d3.select(this);\n                selection.classed('sd-hover', false);\n                var pathNode = selection.select('path').node();\n                var b = pathNode.getBBox();\n                if(b.x+mgt[0] <=m[0] && b.x+b.width+mgt[0] >= m[0] &&\n                   b.y+mgt[1]-margin <=m[1] && b.y+b.height+mgt[1]+margin >= m[1]){\n\n                    var cp = AppUtils.closestPoint(pathNode, [m[0]-mgt[0], m[1]-mgt[1]]);\n                    if(cp.distance < margin && cp.distance<closest[1]){\n                        closest = [selection, cp.distance];\n                    }\n                }\n\n            });\n\n            self.hoveredEdge = null;\n            if(closest[0]){\n                closest[0].classed('sd-hover', true);\n                self.hoveredEdge = closest[0];\n            }\n\n        }\n\n        function brushstart() {\n            if (!d3.event.selection) return;\n            if(self.hoveredEdge){\n                self.selectEdge(self.hoveredEdge.datum(), true)\n            }else{\n                self.clearSelection();\n            }\n            ContextMenu.hide();\n        }\n\n        // Highlight the selected nodes.\n        function brushmove() {\n            var s = d3.event.selection;\n            if(!s)return;\n\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n                var mainGroupTranslation = self.getMainGroupTranslation();\n                var x = d.location.x+mainGroupTranslation[0];\n                var y = d.location.y+mainGroupTranslation[1];\n                var nodeSize = self.config.layout.nodeSize;\n                var offset = nodeSize*0.25;\n                return s[0][0] <= x+offset && x-offset <= s[1][0]\n                    && s[0][1] <= y+offset && y-offset <= s[1][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) return;\n            brush.move(brushContainer, null);\n\n            var selectedNodes = self.getSelectedNodes();\n            if(selectedNodes && selectedNodes.length === 1){\n                self.selectNode(selectedNodes[0]);\n            }\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n        }\n    }\n\n    disableBrush(){\n        if(!this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushDisabled'), 'info', 'left')\n        }\n        this.brushDisabled = true;\n        this.brushContainer.remove();\n    }\n\n    enableBrush(){\n        if(this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushEnabled'), 'info', 'left')\n            this.initBrush();\n            this.brushDisabled = false;\n        }\n\n\n    }\n\n    getMainGroupTranslation(invert) {\n        var translation = AppUtils.getTranslation(this.mainGroup.attr(\"transform\"));\n        if(invert){\n            translation[0] = -translation[0];\n            translation[1] = -translation[1]\n        }\n        return translation;\n    }\n\n    initNodeContextMenu() {\n        this.nodeContextMenu = new NodeContextMenu(this, this.config.operationsForObject);\n    }\n\n    initEdgeContextMenu() {\n        this.edgeContextMenu = new EdgeContextMenu(this);\n    }\n\n    initTextContextMenu() {\n        this.textContextMenu = new TextContextMenu(this);\n    }\n\n\n\n    initMainContextMenu() {\n        this.mainContextMenu = new MainContextMenu(this);\n        this.svg.on('contextmenu',this.mainContextMenu);\n        this.svg.on('dblclick',this.mainContextMenu);\n    }\n\n    addText(text){\n        this.data.saveState();\n        this.data.addText(text);\n        this.redraw();\n        this.selectText(text);\n    }\n\n    addNode(node, parent, redraw=false){\n        this.data.saveState();\n        this.data.addNode(node, parent);\n        this.redraw(true);\n        this.layout.update(node);\n        return node;\n    }\n\n    addDecisionNode(parent){\n        var newNode = new model.DecisionNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addChanceNode(parent){\n        var newNode = new model.ChanceNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addTerminalNode(parent){\n        var newNode = new model.TerminalNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n\n    injectNode(node, edge){\n        this.data.saveState();\n        this.data.injectNode(node, edge);\n        this.redraw();\n        this.layout.update(node);\n        return node;\n    }\n\n    injectDecisionNode(edge){\n        var newNode = new model.DecisionNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n\n    }\n\n    injectChanceNode(edge){\n        var newNode = new model.ChanceNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n    }\n\n    removeNode(node) {\n        this.data.saveState();\n        this.data.removeNode(node);\n\n\n        if(!this.layout.isManualLayout()){\n            this.layout.update();\n        }else{\n            this.redraw();\n        }\n    }\n\n    removeSelectedNodes() {\n        var selectedNodes = this.getSelectedNodes();\n        if(!selectedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeNodes(selectedNodes);\n        this.clearSelection();\n        this.redraw();\n        this.layout.update();\n    }\n\n    removeSelectedTexts(){\n        var selectedTexts = this.getSelectedTexts();\n\n        if(!selectedTexts.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeTexts(selectedTexts);\n        this.clearSelection();\n        this.redraw();\n    }\n\n    copyNode(d, notClearPrevSelection) {\n        var clone = this.data.cloneSubtree(d);\n        if(notClearPrevSelection){\n            if(!this.copiedNodes){\n                this.copiedNodes=[];\n            }\n            this.copiedNodes.push(clone);\n        }else{\n            this.copiedNodes = [clone];\n        }\n\n    }\n\n    cutNode(d) {\n        this.copyNode(d);\n        this.removeNode(d);\n    }\n\n    cutSelectedNodes(){\n        var selectedNodes = this.getSelectedNodes();\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n        this.removeSelectedNodes();\n    }\n\n    copySelectedNodes() {\n        var self;\n        var selectedNodes = this.getSelectedNodes();\n\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n\n\n    }\n\n    copyNodes(nodes){\n        this.copiedNodes = nodes.map(d=>this.data.cloneSubtree(d));\n    }\n\n\n\n    pasteToNode(node) {\n        if(!this.copiedNodes || !this.copiedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=>{\n            var attached = this.data.attachSubtree(toAttach, node).childNode;\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            var location = self.layout.getNewChildLocation(node);\n            attached.moveTo(location.x, location.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        if(node.folded){\n            self.foldSubtree(node, node.folded, false);\n        }\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    pasteToNewLocation(point) {\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=> {\n            var attached = this.data.attachSubtree(toAttach);\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            attached.moveTo(point.x, point.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    convertNode(node, typeToConvertTo){\n        var self = this;\n        this.data.saveState();\n        this.data.convertNode(node, typeToConvertTo);\n        setTimeout(function(){\n            self.redraw(true);\n        },10)\n    }\n\n    performOperation(object, operation){\n        var self = this;\n        this.data.saveState();\n        operation.perform(object);\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    foldSubtree(node, fold = true, redraw=true){\n        let self = this;\n        node.folded = fold;\n\n        this.data.getAllDescendantNodes(node).forEach(n=>{\n            n.$hidden = fold;\n            n.folded = false;\n        });\n        this.data.getAllDescendantEdges(node).forEach(e=>e.$hidden = fold);\n\n        if(!redraw){\n            return;\n        }\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    updateVisibility(node = null){\n        if(!node){\n            this.data.getRoots().forEach(n=>this.updateVisibility(n));\n            return;\n        }\n\n        if(node.folded){\n            this.foldSubtree(node, true, false);\n            return;\n        }\n\n        node.childEdges.forEach(e => this.updateVisibility(e.childNode));\n\n    }\n\n    moveNodeTo(x,y){\n\n    }\n\n    updateNodePosition(node) {\n        this.getNodeD3Selection(node).raise().attr('transform', 'translate('+node.location.x+' '+node.location.y+')');\n    }\n\n    updateTextPosition(text) {\n        this.getTextD3Selection(text).raise().attr('transform', 'translate('+text.location.x+' '+text.location.y+')');\n    }\n\n    getNodeD3Selection(node){\n        return this.getNodeD3SelectionById(node.$id);\n    }\n\n    getNodeD3SelectionById(id){\n        return this.mainGroup.select('#node-'+id);\n    }\n    getTextD3Selection(text){\n        return this.getTextD3SelectionById(text.$id);\n    }\n    getTextD3SelectionById(id){\n        return this.mainGroup.select('#text-'+id);\n    }\n\n    getSelectedNodes(visibleOnly = false) {\n        let selectedVisible = this.mainGroup.selectAll(\".node.selected\").data();\n        if(visibleOnly){\n            return selectedVisible;\n        }\n\n        let allSelected  = [];\n        allSelected.push(...selectedVisible);\n\n        selectedVisible.forEach(n=>{\n            if(n.folded){\n                let descendants = this.data.getAllDescendantNodes(n);\n                if(descendants){\n                    allSelected.push(...descendants);\n                }\n            }\n        });\n\n        return allSelected;\n    }\n\n    getSelectedTexts(){\n        return this.mainGroup.selectAll(\".floating-text.selected\").data();\n    }\n\n    clearSelection(){\n        this.mainGroup.selectAll(\".edge.selected\").select('path').attr(\"marker-end\", d => \"url(#arrow\"+(this.isOptimal(d)?'-optimal':'')+\")\")\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\n        this.config.onSelectionCleared();\n    }\n\n    selectEdge(edge, clearSelectionBeforeSelect){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.config.onEdgeSelected(edge);\n        this.mainGroup.select('#edge-'+edge.$id)\n            .classed('selected', true)\n            .select('path')\n            .attr(\"marker-end\", d => \"url(#arrow-selected)\")\n    }\n\n    isNodeSelected(node){\n        return this.getNodeD3Selection(node).classed('selected');\n    }\n\n    selectNode(node, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onNodeSelected(node);\n        }\n\n        this.getNodeD3SelectionById(node.$id).classed('selected', true);\n    }\n\n    selectText(text, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onTextSelected(text)\n        }\n\n        this.getTextD3SelectionById(text.$id).classed('selected', true);\n    }\n\n    selectSubTree(node, clearSelectionBeforeSelect,skipCallback) {\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.selectNode(node, false, skipCallback);\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode, false, true));\n    }\n\n    selectAllNodes() {\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        this.layout.autoLayout(type, withoutStateSaving);\n    }\n\n    updateDiagramTitle(titleValue){\n        if(!titleValue){\n            titleValue = '';\n        }\n        this.diagramTitle = titleValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n    redrawDiagramTitle(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n        title.text(this.diagramTitle);\n        Layout.setHangingPosition(title);\n\n        var marginTop = parseInt(this.config.title.margin.top);\n        this.titleContainer.attr('transform', 'translate('+(svgWidth/2)+','+( marginTop)+')');\n    }\n    redrawDiagramDescription(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var desc = this.titleContainer.selectOrAppend('text.sd-description');\n\n        if(!this.config.description.show){\n            desc.remove();\n            return;\n        }\n\n        var lines = this.diagramDescription ? this.diagramDescription.split('\\n') : [];\n        var tspans = desc.selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        Layout.setHangingPosition(desc);\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n\n        var marginTop = 0;\n        if(this.diagramTitle){\n            marginTop += title.node().getBBox().height;\n            marginTop+= Math.max(parseInt(this.config.description.margin.top), 0);\n        }\n\n\n        desc.attr('transform', 'translate(0,'+( marginTop)+')');\n    }\n\n    updateDiagramDescription(descriptionValue){\n        if(!descriptionValue){\n            descriptionValue = '';\n        }\n        this.diagramDescription = descriptionValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n\n    getTitleGroupHeight(withMargins){\n        if(!this.titleContainer){\n            return 0;\n        }\n        var h = this.titleContainer.node().getBBox().height;\n        if(withMargins){\n            h+= parseInt(this.config.title.margin.bottom);\n            h+= parseInt(this.config.title.margin.top);\n        }\n        return h;\n    }\n\n}\n","module.exports={\n  \"name\": \"silver-decisions\",\n  \"version\": \"1.1.0\",\n  \"description\": \"Software for creating and analyzing decision trees.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/SilverDecisions/SilverDecisions.git\"\n  },\n  \"author\": \"Michał Wasiluk, Bogumił Kamiński, Przemysław Szufel\",\n  \"license\": \"LGPL-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/SilverDecisions/SilverDecisions/issues\"\n  },\n  \"homepage\": \"https://github.com/SilverDecisions/SilverDecisions#readme\",\n  \"browserify\": {\n    \"transform\": [\n      [\n        \"babelify\",\n        {\n          \"presets\": [\n            \"@babel/preset-env\"\n          ],\n          \"plugins\": [\n            [\n              \"transform-class-properties\",\n              {\n                \"spec\": true\n              }\n            ],\n            \"transform-object-assign\",\n            \"transform-es2015-spread\",\n            \"@babel/plugin-proposal-object-rest-spread\",\n            [\n              \"babel-plugin-transform-builtin-extend\",\n              {\n                \"globals\": [\n                  \"Error\"\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    ]\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.6.0\",\n    \"@babel/plugin-proposal-object-rest-spread\": \"^7.5.5\",\n    \"@babel/preset-env\": \"^7.6.0\",\n    \"babel-plugin-transform-builtin-extend\": \"^1.1.2\",\n    \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n    \"babel-plugin-transform-es2015-spread\": \"^6.22.0\",\n    \"babel-plugin-transform-object-assign\": \"^6.22.0\",\n    \"babelify\": \"^10.0.0\",\n    \"browser-sync\": \"^2.26.7\",\n    \"browserify\": \"^16.5.0\",\n    \"browserify-shim\": \"^3.8.14\",\n    \"chalk\": \"^2.4.2\",\n    \"del\": \"^5.1.0\",\n    \"es6-set\": \"^0.1.5\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-clean-css\": \"^4.2.0\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-filelist\": \"^2.0.3\",\n    \"gulp-html2js\": \"^0.4.2\",\n    \"gulp-load-plugins\": \"^2.0.1\",\n    \"gulp-plumber\": \"^1.2.1\",\n    \"gulp-rename\": \"^1.4.0\",\n    \"gulp-replace\": \"^1.0.0\",\n    \"gulp-sass\": \"^4.0.2\",\n    \"gulp-sourcemaps\": \"^2.6.5\",\n    \"gulp-strip-debug\": \"^3.0.0\",\n    \"gulp-template\": \"^5.0.0\",\n    \"gulp-uglify\": \"^3.0.2\",\n    \"gulp-util\": \"^3.0.8\",\n    \"jasmine\": \"^3.4.0\",\n    \"jasmine-jquery\": \"^2.1.1\",\n    \"karma\": \"^4.3.0\",\n    \"karma-browserify\": \"^6.1.0\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"karma-intl-shim\": \"^1.0.3\",\n    \"karma-jasmine\": \"^2.0.1\",\n    \"merge-stream\": \"^2.0.0\",\n    \"run-sequence\": \"^2.2.1\",\n    \"stringify\": \"^5.2.0\",\n    \"svg2pdf.js\": \"^1.4.0\",\n    \"vinyl-buffer\": \"^1.0.1\",\n    \"vinyl-source-stream\": \"^2.0.0\",\n    \"yargs\": \"^14.0.0\",\n    \"odc-d3\": \"^1.1.9\"\n  },\n  \"dependencies\": {\n    \"autosize\": \"^4.0.2\",\n    \"blueimp-canvas-to-blob\": \"^3.16.0\",\n    \"d3-array\": \"^1.2.4\",\n    \"d3-dispatch\": \"^1.0.5\",\n    \"d3-drag\": \"^1.2.4\",\n    \"d3-scale\": \"^2.2.2\",\n    \"d3-scale-chromatic\": \"^1.5.0\",\n    \"d3-selection\": \"^1.4.0\",\n    \"d3-time-format\": \"^2.1.3\",\n    \"file-saver\": \"^2.0.2\",\n    \"hammerjs\": \"^2.0.8\",\n    \"i18next\": \"^17.0.14\",\n    \"jquery\": \"^3.4.1\",\n    \"jquery-ui\": \"^1.12.1\",\n    \"pivottable\": \"^2.23.0\",\n    \"sd-computations\": \"0.3.7\",\n    \"sd-model\": \"0.2.8\",\n    \"sd-utils\": \"0.1.12\",\n    \"sd-tree-designer\": \"0.1.13\"\n  }\n}\n","import * as d3 from \"./d3\";\nimport * as autosize from \"autosize\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils as TdUtils} from \"sd-tree-designer\";\n\nexport class AppUtils extends TdUtils{\n\n\n\n    static updateInputClass(selection){\n        var value = selection.node().value;\n        selection.classed('empty', value!==0 && !value);\n        return selection;\n    }\n\n    static autoResizeTextarea(element){\n        setTimeout(function(){\n            element.style.width = \"\";\n            var width = element.getBoundingClientRect().width;\n            if(width){\n                element.style.width = width+'px';\n            }\n            autosize.update(element);\n        }, 10);\n    }\n\n    static elasticTextarea(selection){\n        setTimeout(function(){\n            selection.style('width',undefined);\n            var width = selection.node().getBoundingClientRect().width;\n            if(width){\n                selection.style('width', width+'px')\n            }\n            autosize.default(selection.node());\n        },10)\n    }\n\n    static postByForm(url, data) {\n        var name,\n            form;\n\n        // create the form\n        form = AppUtils.createElement('form', AppUtils.mergeDeep({\n            method: 'post',\n            action: url,\n            enctype: 'multipart/form-data'\n        }), document.body);\n\n        for (name in data) {\n            if(data.hasOwnProperty(name)){\n                AppUtils.createElement('input', {\n                    type: 'hidden',\n                    name: name,\n                    value: data[name]\n                }, form);\n            }\n        }\n\n        form.submit();\n\n        AppUtils.removeElement(form);\n    };\n\n    static showFullScreenPopup(title, html, closeCallback){\n        var popup = d3.select(\"body\").selectOrAppend(\"div.sd-full-screen-popup-container\").html(Templates.get('fullscreenPopup', {title:title,body:html}));\n        popup.select('.sd-close-popup').on('click', ()=>{\n            popup.remove();\n            if(closeCallback) {\n                closeCallback()\n            }\n        })\n\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport * as model from \"sd-model\";\nimport {TreeDesigner} from \"sd-tree-designer\";\nimport {Templates} from \"./templates\";\nimport {Sidebar} from \"./sidebar\";\nimport {Toolbar} from \"./toolbar\";\nimport {SettingsDialog} from \"./dialogs/settings-dialog\";\nimport {AboutDialog} from \"./dialogs/about-dialog\";\nimport {Exporter} from \"./exporter\";\nimport {DefinitionsDialog} from \"./dialogs/definitions-dialog\";\nimport {ComputationsManager} from \"sd-computations\";\nimport {SensitivityAnalysisDialog} from \"./dialogs/sensitivity-analysis-dialog\";\nimport {LoadingIndicator} from \"./loading-indicator\";\nimport {LeagueTableDialog} from \"./league-table/league-table-dialog\";\n\nvar buildConfig = require('../tmp/build-config.js');\n\nexport class AppConfig {\n    readOnly = false;\n    logLevel = 'warn';\n    workerUrl = null;\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n    buttons = {\n        new: true,\n        save: true,\n        open: true,\n        exportToPng: true,\n        exportToSvg: true,\n        exportToPdf: true\n    };\n    exports = {\n        show: true,\n        serverUrl: 'http://export.highcharts.com', //url of the export server\n        pdf: {\n            mode: 'server', // available options: 'client', 'server', 'fallback',\n        },\n        png: {\n            mode: 'fallback', // available options: 'client', 'server', 'fallback',\n        }\n    };\n    showDetails = true;\n    showDefinitions = true;\n    jsonFileDownload = true;\n    width = undefined;\n    height = undefined;\n    rule = \"expected-value-maximization\";\n    lng = 'en';\n    format = {// NumberFormat  options\n        locales: 'en',\n        payoff1: {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        payoff2: {\n            style: 'decimal',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        probability: { // NumberFormat  options\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 3,\n            useGrouping: true\n        }\n    };\n    title = '';\n    description = '';\n    treeDesigner = {};\n    leagueTable = {\n        plot: {\n            maxWidth: \"800px\",\n            groups: {\n                'highlighted': {\n                    color: '#008000'\n                },\n                'highlighted-default': {\n                    color: '#00bd00'\n                },\n                'extended-dominated': {\n                    color: '#ffa500'\n                },\n                'dominated': {\n                    color: '#ff0000'\n                },\n                'default': {\n                    color: '#000000'\n                }\n            }\n        }\n    };\n\n    //https://github.com/d3/d3-format/blob/master/README.md#format\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class App {\n    static version = ''; // version is set from package.json\n    static buildTimestamp = buildConfig.buildTimestamp;\n    static utils = Utils;\n    static appUtils = AppUtils;\n    static d3 = d3;\n\n    config;\n    container;\n    dataModel; //Data model manager\n    expressionEngine;\n    computationsManager;\n    treeDesigner;\n    toolbar;\n    sidebar;\n    viewModes = [];\n    currentViewMode;\n\n    payoffsMaximization=[true, false];\n\n    constructor(containerIdOrElem, config, diagramData) {\n        var p = Promise.resolve();\n        this.setConfig(config);\n        this.initI18n();\n        this.initContainer(containerIdOrElem);\n        this.initViewModes();\n        this.initDataModel();\n        p = this.initComputationsManager();\n        this.initProbabilityNumberFormat();\n        this.initPayoffNumberFormat();\n        this.initTreeDesigner();\n        this.initSidebar();\n        this.initSettingsDialog();\n        this.initAboutDialog();\n        this.initDefinitionsDialog();\n        this.initSensitivityAnalysisDialog();\n        this.initLeagueTableDialog();\n        this.initOnBeforeUnload();\n        this.initKeyCodes();\n        p.then(()=> {\n            this.initToolbar();\n            if (diagramData) {\n                this.openDiagram(diagramData);\n            } else {\n                this.updateView();\n            }\n        }).catch(e=> {\n            log.error(e);\n        });\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new AppConfig();\n        } else {\n            this.config = new AppConfig(config);\n        }\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    static growl() {\n        return AppUtils.growl(arguments)\n    }\n\n    setLogLevel(level) {\n        log.setLevel(level)\n    }\n\n    initContainer(containerIdOrElem) {\n\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else {\n            this.container = d3.select(containerIdOrElem);\n        }\n        var self = this;\n\n        let html = Templates.get('main', {\n            version: App.version,\n            buildTimestamp: App.buildTimestamp,\n            'lng': self.config.lng\n        });\n        this.container.html(html);\n\n        this.container.select('#silver-decisions').classed('sd-read-only', this.config.readOnly);\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n    initDataModel() {\n        var self = this;\n        this.dataModel = new model.DataModel();\n        // this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = ()=>self.onNodeAddedOrRemoved();\n        this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = (node)=> Utils.waitForFinalEvent(()=>this.onNodeAddedOrRemoved(), 'onNodeAddedOrRemoved', 5);\n\n        this.dataModel.textAddedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextAdded(text), 'onTextAdded');\n        this.dataModel.textRemovedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextRemoved(text), 'onTextAdded');\n    }\n\n    initComputationsManager() {\n        this.computationsManager = new ComputationsManager({\n            ruleName: this.config.ruleName,\n            worker: {\n                url: this.config.workerUrl,\n            },\n            jobRepositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        }, this.dataModel);\n        this.expressionEngine = this.computationsManager.expressionEngine;\n        return this.checkValidityAndRecomputeObjective(false, false, false, true);\n\n    }\n\n    initSidebar() {\n        this.sidebar = new Sidebar(this.container.select('#sd-sidebar'), this);\n\n    }\n\n    initSettingsDialog() {\n        this.settingsDialog = new SettingsDialog(this);\n    }\n\n    initAboutDialog() {\n        this.aboutDialog = new AboutDialog(this);\n    }\n\n    initDefinitionsDialog() {\n        this.definitionsDialog = new DefinitionsDialog(this);\n        this.definitionsDialog.onClosed = ()=> this.recompute(true, true);\n\n    }\n\n    initLeagueTableDialog() {\n        this.leagueTableDialog = new LeagueTableDialog(this);\n    }\n\n    isLeagueTableAvailable() {\n        return this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.leagueTableDialog.validateParams();\n    }\n\n    initSensitivityAnalysisDialog() {\n        this.sensitivityAnalysisDialog = new SensitivityAnalysisDialog(this);\n\n    }\n\n    isSensitivityAnalysisAvailable() {\n        return !this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.dataModel.getGlobalVariableNames(true).length;\n    }\n\n    initToolbar() {\n        this.toolbar = new Toolbar(this.container.select('#sd-toolbar'), this);\n\n    }\n\n    initPayoffNumberFormat() {\n\n        this.payoffNumberFormat = [\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff1),\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff2)\n        ]\n\n    }\n\n    initProbabilityNumberFormat() {\n        this.probabilityNumberFormat = new Intl.NumberFormat(this.config.format.locales, this.config.format.probability);\n    }\n\n    initTreeDesigner() {\n        var self = this;\n        var config = this.getTreeDesignerInitialConfig();\n        let container2 = this.container.select('#tree-designer-container');\n\n        this.treeDesigner = new TreeDesigner(container2, this.dataModel, config);\n    }\n\n    getTreeDesignerInitialConfig() {\n        var self = this;\n\n        return Utils.deepExtend({\n            lng: self.config.lng,\n            readOnly: self.config.readOnly,\n            onNodeSelected: function (node) {\n                self.onObjectSelected(node);\n            },\n            onEdgeSelected: function (edge) {\n                self.onObjectSelected(edge);\n            },\n            onTextSelected: function (text) {\n                self.onObjectSelected(text);\n            },\n            onSelectionCleared: function () {\n                self.onSelectionCleared();\n            },\n            payoffNumberFormatter: (v, i) => {\n                let prefix = '';\n                if(self.currentViewMode.multiCriteria){\n                    prefix =  self.dataModel.payoffNames[i].charAt(0) + ': ';\n                }\n\n                return prefix + self.payoffNumberFormat[i || self.currentViewMode.payoffIndex || 0].format(v)\n            },\n            probabilityNumberFormatter: (v) => self.probabilityNumberFormat.format(v),\n            operationsForObject: (o) => self.computationsManager.operationsForObject(o)\n        }, self.config.treeDesigner);\n    }\n\n    onObjectSelected(object) {\n        var self = this;\n        if (this.selectedObject === object) {\n            return;\n        }\n        this.selectedObject = object;\n        setTimeout(function () {\n            self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10)\n    }\n\n    onSelectionCleared() {\n        var self = this;\n        this.selectedObject = null;\n        this.sidebar.hideObjectProperties();\n        setTimeout(function () {\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10);\n        // console.log();\n    }\n\n    getCurrentVariableDefinitionsSourceObject() {\n        if (this.selectedObject) {\n            if (this.selectedObject instanceof model.domain.Node) {\n                return this.selectedObject;\n            }\n            if (this.selectedObject instanceof model.domain.Edge) {\n                return this.selectedObject.parentNode;\n            }\n        }\n        return this.dataModel;\n    }\n\n    updateVariableDefinitions() {\n        var self = this;\n        var definitionsSourceObject = self.getCurrentVariableDefinitionsSourceObject();\n        var readOnly = (this.selectedObject instanceof model.domain.Edge) || (this.selectedObject instanceof model.domain.TerminalNode);\n        self.sidebar.updateDefinitions(definitionsSourceObject, readOnly, (code)=> {\n            self.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            self.recompute(true, true)\n        });\n\n    }\n\n    openDefinitionsDialog() {\n        var definitionsSourceObject = this.getCurrentVariableDefinitionsSourceObject();\n        this.definitionsDialog.open(definitionsSourceObject, (code)=> {\n            this.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            this.recompute(true, true);\n        });\n    }\n\n    updateView(withTransitions = true) {\n        // console.log('_updateView');\n        this.treeDesigner.redraw(withTransitions);\n        this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        this.updateVariableDefinitions();\n        this.toolbar.update();\n        this.sidebar.updateLayoutOptions();\n        this.sidebar.updateDiagramDetails();\n        this.sidebar.updateMultipleCriteria();\n    }\n\n    undo() {\n        let self = this;\n        self.dataModel.undo();\n        self.initPayoffNames();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n\n    }\n\n    redo() {\n        let self = this;\n        self.dataModel.redo();\n        self.initPayoffNames();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n    }\n\n    onNodeAddedOrRemoved() {\n        var self = this;\n        return this.checkValidityAndRecomputeObjective().then(()=> {\n            self.updateView();\n        });\n\n    }\n\n    onTextAdded(text) {\n        return this.onObjectSelected(text);\n    }\n\n    onTextRemoved(text) {\n        this.updateView();\n    }\n\n    onObjectUpdated(object, fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (!(object instanceof model.domain.Text) && fieldName !== 'name') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        // this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n            }, 1);\n        });\n    }\n\n    onMultiCriteriaUpdated(fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (fieldName === 'defaultCriterion1Weight') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        this.sidebar.updateMultipleCriteria();\n\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n                self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            }, 1);\n        });\n    }\n\n    setObjectiveRule(ruleName, evalCode = false, evalNumeric = false, updateView = true, recompute = true) {\n        let prevRule = this.computationsManager.getCurrentRule();\n        this.computationsManager.setCurrentRuleByName(ruleName);\n        let currentRule = this.computationsManager.getCurrentRule();\n        let multiCriteria = currentRule.multiCriteria;\n        this.treeDesigner.config.maxPayoffsToDisplay = multiCriteria ? 2 : 1;\n\n        if (multiCriteria) {\n            this.payoffsMaximization = currentRule.payoffCoeffs.map(c=>c>0);\n            this.initPayoffNames();\n            this.treeDesigner.config.payoffNames = this.dataModel.payoffNames;\n        } else {\n            this.payoffsMaximization[this.currentViewMode.payoffIndex] = currentRule.maximization;\n            this.treeDesigner.config.payoffNames = [null, null];\n        }\n        if (!recompute) {\n            return Promise.resolve();\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, evalCode, evalNumeric).then(()=> {\n            if (updateView) {\n                this.updateView(false);\n            }\n        });\n\n    }\n\n    initPayoffNames() {\n        if (this.currentViewMode.multiCriteria && !this.dataModel.payoffNames.length) {\n            this.dataModel.payoffNames.push(\n                this.dataModel.payoffNames[0] = i18n.t('multipleCriteria.defaultMinimizedCriterionName'),\n                this.dataModel.payoffNames[1] = i18n.t('multipleCriteria.defaultMaximizedCriterionName'));\n        }\n    }\n\n    isMultipleCriteria() {\n        return this.computationsManager.getCurrentRule().multiCriteria;\n    }\n\n    flipCriteria() {\n        let tmp = this.config.format.payoff1;\n        this.config.format.payoff1 = this.config.format.payoff2;\n        this.config.format.payoff2 = tmp;\n        this.initPayoffNumberFormat();\n\n        this.computationsManager.flipCriteria().then(()=> {\n            this.updateView(false);\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n\n    getCurrentObjectiveRule() {\n        return this.computationsManager.getCurrentRule();\n    }\n\n    getObjectiveRules() {\n        return this.computationsManager.getObjectiveRules().filter(rule=>rule.multiCriteria === this.currentViewMode.multiCriteria);\n    }\n\n\n    initViewModes() {\n        this.viewModes.push({\n            name: \"criterion1\",\n            multiCriteria: false,\n            payoffIndex: 0,\n        });\n\n        this.viewModes.push({\n            name: \"criterion2\",\n            multiCriteria: false,\n            payoffIndex: 1,\n        });\n\n        this.viewModes.push({\n            name: \"twoCriteria\",\n            multiCriteria: true,\n            payoffIndex: null,\n        });\n        this.currentViewMode = this.viewModes[0];\n    }\n\n    getCurrentViewMode() {\n        return this.currentViewMode;\n    }\n\n    setViewModeByName(name, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.name === name), recompute, updateView)\n    }\n\n    setViewMode(mode, recompute = true, updateView = true) {\n        let prevMode = this.currentViewMode;\n        this.currentViewMode = mode;\n\n        this.computationsManager.objectiveRulesManager.setPayoffIndex(this.currentViewMode.payoffIndex);\n\n\n        if (!recompute) {\n            return Promise.resolve();\n        }\n        let rules = this.getObjectiveRules();\n        let prevRule = this.computationsManager.getCurrentRule();\n        let newRule = rules[0];\n\n\n        if(this.currentViewMode.payoffIndex !== null){\n            newRule = Utils.find(rules, r => r.maximization == this.payoffsMaximization[this.currentViewMode.payoffIndex])\n        }else{\n            newRule = Utils.find(rules, r => r.payoffCoeffs.map(c=>c>0).every((max, i)=> this.payoffsMaximization[i] === max))\n        }\n\n        this.setObjectiveRule(newRule.name, false, false, updateView, recompute)\n    }\n\n    setDefaultViewModeForRule(rule, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.multiCriteria === rule.multiCriteria), recompute, updateView)\n    }\n\n    getViewModes() {\n        return this.viewModes;\n    }\n\n    showLeagueTable() {\n        this.leagueTableDialog.open();\n    }\n\n    openSensitivityAnalysis() {\n        let self = this;\n        setTimeout(function(){\n            if(!self.isSensitivityAnalysisAvailable()){\n                return;\n            }\n            self.sensitivityAnalysisDialog.open();\n        }, 200);\n\n    }\n\n    showTreePreview(dataDTO, closeCallback, autoLayout = true) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.dataModel.loadFromDTO(dataDTO, this.computationsManager.expressionEngine.getJsonReviver());\n        this.computationsManager.updateDisplayValues(this.dataModel);\n        this.updateView(false);\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node());\n                AppUtils.showFullScreenPopup('', svgString, ()=> {\n                    if (closeCallback) {\n                        self.dataModel._setNewState(self.originalDataModelSnapshot);\n                        self.updateView(false);\n\n                        closeCallback();\n                        setTimeout(function () {\n                            self.updateView(false);\n                        }, 1)\n                    }\n                });\n            }, 300);\n        }, 1)\n\n    }\n\n    showPolicyPreview(title, policy, closeCallback) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.computationsManager.displayPolicy(policy);\n        this.updateView(false);\n        AppUtils.showFullScreenPopup(title, '');\n        LoadingIndicator.show();\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node(), true);\n                LoadingIndicator.hide();\n                AppUtils.showFullScreenPopup(title, svgString, ()=> {\n\n                    self.dataModel._setNewState(self.originalDataModelSnapshot);\n\n                    // self.computationsManager.updateDisplayValues(self.dataModel);\n                    self.updateView(false);\n                    if (closeCallback) {\n                        closeCallback();\n                    }\n                    setTimeout(function () {\n                        self.updateView(false);\n                    }, 1)\n                });\n            }, 500);\n        }, 1)\n    }\n\n\n    recompute(updateView = true, debounce = false, forceWhenAutoIsDisabled=true) {\n        if (debounce) {\n            if (!this.debouncedRecompute) {\n                this.debouncedRecompute = Utils.debounce((updateView)=>this.recompute(updateView, false), 200);\n            }\n            this.debouncedRecompute(updateView);\n            return;\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, true, true, forceWhenAutoIsDisabled).then(()=> {\n            if (updateView) {\n                this.updateView();\n            }\n        });\n\n    }\n\n    onRawOptionChanged(){\n        if(this.isAutoRecalculationEnabled()){\n            return this.checkValidityAndRecomputeObjective(false, false).then(()=> {\n                this.updateView();\n            })\n        }\n    }\n\n    isAutoRecalculationEnabled(){\n        return !this.treeDesigner.config.raw;\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true, forceWhenAutoIsDisabled=false) {\n        if(!forceWhenAutoIsDisabled && !this.isAutoRecalculationEnabled()){\n            return Promise.resolve();\n        }\n\n        return this.computationsManager.checkValidityAndRecomputeObjective(allRules, evalCode, evalNumeric).then(()=> {\n            this.updateValidationMessages();\n            AppUtils.dispatchEvent('SilverDecisionsRecomputedEvent', this);\n        }).catch(e=> {\n            log.error(e);\n        });\n\n    }\n\n    updateValidationMessages() {\n        var self = this;\n        setTimeout(function () {\n            self.treeDesigner.updateValidationMessages();\n        }, 1);\n    }\n\n    newDiagram() {\n        this.clear();\n        this.updateView();\n    }\n\n    clear() {\n        this.dataModel.clear();\n        this.currentViewMode = this.viewModes[0];\n        this.computationsManager.setCurrentRuleByName(this.computationsManager.getObjectiveRules()[0].name);\n        this.setDiagramTitle('', true);\n        this.setDiagramDescription('', true);\n        this.treeDesigner.setConfig(Utils.deepExtend(this.getTreeDesignerInitialConfig()));\n        this.onSelectionCleared();\n        this.sensitivityAnalysisDialog.clear(true, true)\n\n    }\n\n    openDiagram(diagramData) {\n\n        var self = this;\n        var errors = [];\n\n        if (Utils.isString(diagramData)) {\n            try {\n                diagramData = JSON.parse(diagramData, self.computationsManager.expressionEngine.getJsonReviver());\n            } catch (e) {\n                errors.push('error.jsonParse');\n                alert(i18n.t('error.jsonParse'));\n                log.error(e);\n                return Promise.resolve(errors);\n            }\n        }\n\n        var dataModelObject = diagramData.data;\n\n        this.clear();\n        if (!diagramData.SilverDecisions) {\n            errors.push('error.notSilverDecisionsFile');\n            alert(i18n.t('error.notSilverDecisionsFile'));\n            return Promise.resolve(errors);\n        }\n\n        if (!Utils.isValidVersionString(diagramData.SilverDecisions)) {\n            errors.push('error.incorrectVersionFormat');\n            alert(i18n.t('error.incorrectVersionFormat'));\n        } else {\n            //Check if version in file is newer than version of application\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, App.version) > 0) {\n                errors.push('error.fileVersionNewerThanApplicationVersion');\n                alert(i18n.t('error.fileVersionNewerThanApplicationVersion'));\n            }\n\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, \"0.7.0\") < 0) {\n                dataModelObject = {\n                    code: diagramData.code,\n                    expressionScope: diagramData.expressionScope,\n                    trees: diagramData.trees,\n                    texts: diagramData.texts\n                }\n            }\n        }\n\n        try {\n            if (diagramData.lng) {\n                this.config.lng = diagramData.lng;\n            }\n\n            if (diagramData.rule) {\n                if (this.computationsManager.isRuleName(diagramData.rule)) {\n                    this.config.rule = diagramData.rule;\n                } else {\n                    delete this.config.rule;\n                }\n            }\n\n            if (diagramData.viewMode) {\n                this.setViewModeByName(diagramData.viewMode)\n            } else {\n                this.setDefaultViewModeForRule(this.computationsManager.getObjectiveRuleByName(this.config.rule), false, false);\n            }\n\n            if (diagramData.format) {\n                this.config.format = diagramData.format;\n            }\n\n            this.setConfig(this.config);\n            this.dataModel.load(dataModelObject);\n\n            if (diagramData.treeDesigner) {\n                this.treeDesigner.setConfig(Utils.deepExtend(self.getTreeDesignerInitialConfig(), diagramData.treeDesigner));\n            }\n            this.treeDesigner.updateVisibility();\n\n            this.setDiagramTitle(diagramData.title || '', true);\n            this.setDiagramDescription(diagramData.description || '', true);\n\n            if (diagramData.sensitivityAnalysis) {\n                this.sensitivityAnalysisDialog.loadSavedParamValues(diagramData.sensitivityAnalysis);\n            }\n\n        } catch (e) {\n            errors.push('error.malformedData');\n            alert(i18n.t('error.malformedData'));\n            this.clear();\n            log.error('malformedData', e);\n            return Promise.resolve(errors);\n\n        }\n        try {\n            this.updateNumberFormats(false);\n        } catch (e) {\n            log.error('incorrectNumberFormatOptions', e);\n            errors.push('error.incorrectNumberFormatOptions');\n            alert(i18n.t('error.incorrectNumberFormatOptions'));\n            delete this.config.format;\n            this.setConfig(this.config);\n            this.updateNumberFormats(false);\n        }\n        return this.setObjectiveRule(this.config.rule, false, true, false).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            return errors\n        }).then(()=> {\n            this.updateView(false);\n            return errors;\n        }).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            this.updateView(false);\n            return errors\n        });\n    }\n\n    serialize(filterLocation = false, filterComputed = false, filterPrivate = true) {\n        var self = this;\n        return self.checkValidityAndRecomputeObjective(true, false, false, true).then(()=> {\n            var obj = {\n                SilverDecisions: App.version,\n                buildTimestamp: App.buildTimestamp,\n                savetime: d3.isoFormat(new Date()),\n                lng: self.config.lng,\n                viewMode: self.currentViewMode.name,\n                rule: self.computationsManager.getCurrentRule().name,\n                title: self.config.title,\n                description: self.config.description,\n                format: self.config.format,\n                treeDesigner: self.treeDesigner.config,\n                data: self.dataModel.serialize(false),\n                sensitivityAnalysis: this.sensitivityAnalysisDialog.jobNameToParamValues\n            };\n\n            return Utils.stringify(obj, self.dataModel.getJsonReplacer(filterLocation, filterComputed, self.computationsManager.expressionEngine.getJsonReplacer(), filterPrivate), filterPrivate ? ['$'] : []);\n        });\n    }\n\n    saveToFile(filterLocation = false, filterComputed = false, filterPrivate = true){\n        this.serialize(filterLocation, filterComputed, filterPrivate).then((json)=>{\n            AppUtils.dispatchEvent('SilverDecisionsSaveEvent', json);\n            if(this.config.jsonFileDownload){\n                var blob = new Blob([json], {type: \"application/json\"});\n                Exporter.saveAs(blob, Exporter.getExportFileName('json'));\n            }\n        });\n    }\n\n    updateNumberFormats(updateView = true) {\n        this.initPayoffNumberFormat();\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    updatePayoffNumberFormat(updateView = true) {\n        this.initPayoffNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n\n    }\n\n    updateProbabilityNumberFormat(updateView = true) {\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    initOnBeforeUnload() {\n        var self = this;\n        window.addEventListener(\"beforeunload\", function (e) {\n            if (!(self.dataModel.isUndoAvailable() || self.dataModel.isRedoAvailable())) {\n                return;\n            }\n\n            var dialogText = i18n.t('confirm.beforeunload');\n            e.returnValue = dialogText;\n            return dialogText;\n        });\n    }\n\n    setConfigParam(path, value, withoutStateSaving, callback) {\n        var self = this;\n        var prevValue = Utils.get(this.config, path);\n\n        if (prevValue == value) {\n            return;\n        }\n        if (!withoutStateSaving) {\n            this.dataModel.saveState({\n                data: {\n                    prevValue: prevValue\n                },\n                onUndo: (data)=> {\n                    self.setConfigParam(path, data.prevValue, true, callback);\n                },\n                onRedo: (data)=> {\n                    self.setConfigParam(path, value, true, callback);\n                }\n            });\n        }\n        Utils.set(this.config, path, value);\n        if (callback) {\n            callback(value);\n        }\n    }\n\n\n    setDiagramTitle(title, withoutStateSaving) {\n        this.setConfigParam('title', title, withoutStateSaving, (v) => this.treeDesigner.updateDiagramTitle(v));\n    }\n\n    setDiagramDescription(description, withoutStateSaving) {\n        this.setConfigParam('description', description, withoutStateSaving, (v) => this.treeDesigner.updateDiagramDescription(v));\n    }\n\n    initKeyCodes() {\n\n        this.container.on(\"keyup\", (d)=> {\n            let srcElement = d3.event.target || d3.event.srcElement;\n\n            if (srcElement && ['INPUT', 'TEXTAREA'].indexOf(srcElement.nodeName.toUpperCase()) > -1) { //ignore events from input and textarea elements\n                return;\n            }\n\n            var key = d3.event.keyCode;\n            if (key == 46) {//delete\n                this.treeDesigner.removeSelectedNodes();\n                this.treeDesigner.removeSelectedTexts();\n                return;\n            }\n            if (!d3.event.ctrlKey) {\n                return;\n            }\n\n\n            if (d3.event.altKey) {\n                if (this.selectedObject instanceof model.domain.Node) {\n                    let selectedNode = this.selectedObject;\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.addDecisionNode(selectedNode);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.addChanceNode(selectedNode);\n                    } else if (key == 84) { // ctrl + alt + t\n                        this.treeDesigner.addTerminalNode(selectedNode);\n                    }\n                    return;\n                } else if (this.selectedObject instanceof model.domain.Edge) {\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.injectDecisionNode(this.selectedObject);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.injectChanceNode(this.selectedObject);\n                    }\n                }\n\n            }\n\n\n            if (key == 90) {//ctrl + z\n                this.undo();\n                return;\n            }\n            if (key == 89) {//ctrl + y\n                this.redo();\n                return;\n            }\n\n            /*if(key==65){//ctrl + a\n             if(selectedNodes.length==1){\n             this.treeDesigner.selectSubTree(selectedNodes[0])\n             }else{\n             this.treeDesigner.selectAllNodes();\n             }\n             // d3.event.preventDefault()\n             return;\n             }*/\n            var selectedNodes = this.treeDesigner.getSelectedNodes();\n            if (key == 86) {//ctrl + v\n                if (selectedNodes.length == 1) {\n                    let selectedNode = selectedNodes[0];\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    this.treeDesigner.pasteToNode(selectedNode)\n                } else if (selectedNodes.length == 0) {\n\n                }\n                return;\n            }\n\n            if (!selectedNodes.length) {\n                return;\n            }\n\n            if (key == 88) {//ctrl + x\n                this.treeDesigner.cutSelectedNodes();\n\n            } else if (key == 67) {//ctrl + c\n                this.treeDesigner.copySelectedNodes();\n\n            }\n\n        });\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nvar $ = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = $;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/button');\nrequire('jquery-ui/ui/widgets/menu');\nrequire('jquery-ui/ui/unique-id');\nrequire('jquery-ui/ui/position');\nrequire('jquery-ui/ui/keycode');\nrequire('jquery-ui/ui/safe-active-element');\nrequire('jquery-ui/ui/widgets/autocomplete');\nUtils.getGlobalObject().jQuery = global$;\n\nimport * as d3 from './d3'\n\n$( function() {\n    $.widget( \"sd.combobox\", {\n        _create: function() {\n            this.wrapper = $( \"<span>\" )\n                .addClass( \"sd-combobox\" )\n                .insertAfter( this.element );\n\n            this.element.hide();\n            this._createAutocomplete();\n            this._createShowAllButton();\n        },\n\n        _createAutocomplete: function() {\n            var selected = this.element.children( \":selected\" ),\n                value = selected.val() ? selected.text() : \"\";\n\n            this.input = $( \"<input>\" )\n                .appendTo( this.wrapper )\n                .val( value )\n                .attr( \"title\", \"\" )\n                .attr( \"type\", \"text\" )\n                .addClass( \"sd-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\n                .autocomplete({\n                    delay: 0,\n                    minLength: 0,\n                    source: $.proxy( this, \"_source\" ),\n                    classes: {\n                        \"ui-autocomplete\": \"sd-combobox-autocomplete\"\n                    }\n                });\n            $( \"<span class='bar'>\" ).appendTo( this.wrapper )\n\n            var input = this.input;\n            this._on( this.input, {\n                autocompleteselect: function( event, ui ) {\n                    ui.item.option.selected = true;\n                    this._trigger( \"select\", event, {\n                        item: ui.item.option\n                    });\n\n                },\n\n                autocompletechange: function(){\n                    let inputD3 = d3.select($(input).get(0));\n                    AppUtils.dispatchHtmlEvent(inputD3.node(), \"change\");\n                }\n            });\n        },\n\n        _createShowAllButton: function() {\n            var input = this.input,\n                wasOpen = false;\n\n            $( \"<button>\" )\n                .attr( \"tabIndex\", -1 )\n                .attr( \"type\", \"button\" )\n                .html('<i class=\"material-icons\">arrow_drop_down</i>')\n                .appendTo( this.wrapper )\n                .addClass( \"sd-combobox-toggle ui-corner-right\" )\n                .on( \"mousedown\", function() {\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\n                })\n                .on( \"click\", function() {\n                    input.trigger( \"focus\" );\n                    // Close if already visible\n                    if ( wasOpen ) {\n                        return;\n                    }\n\n                    // Pass empty string as value to search for, displaying all results\n                    input.autocomplete( \"search\", \"\" );\n                });\n        },\n\n        _source: function( request, response ) {\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n            response( this.element.children( \"option\" ).map(function() {\n                var text = $( this ).text();\n                if ( this.value && ( !request.term || matcher.test(text) ) )\n                    return {\n                        label: text,\n                        value: text,\n                        option: this\n                    };\n            }) );\n        },\n\n        _destroy: function() {\n            this.wrapper.remove();\n            this.element.show();\n        },\n\n        input_element: function(){\n            return this.input;\n        }\n    });\n} );\n\nexport class Autocomplete{\n\n\n    constructor(container){\n        this.container= container;\n        this.combobox = $( this.container.node() ).combobox();\n    }\n\n    getInput(){\n        return d3.select($(this.combobox).combobox('input_element').get(0))\n    }\n\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-scale-chromatic';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","import {Dialog} from './dialog'\n\nexport class AboutDialog extends Dialog{\n\n    constructor(app){\n        super(app.container.select('#sd-about-dialog'), app);\n    }\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {Templates} from \"../templates\";\nimport {domain as model} from \"sd-model\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class DefinitionsDialog extends Dialog {\n    changeCallback;\n\n    constructor(app) {\n        super(app.container.select('#sd-definitions-dialog'), app);\n        var self = this;\n\n        this.definitionsScopeLabel = this.container.select(\".sd-definitions-dialog-scope-label\");\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('input', function () {\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('change', function () {\n            if (self.changeCallback) {\n                self.changeCallback(this.value)\n            }\n        });\n\n        this.recalculateButton = this.container.select('button#sd-definitions-dialog-recalculate-button').on('click', function () {\n            self.app.recompute();\n        });\n\n        this.variableValuesContainer = this.container.select(\"#sd-definitions-dialog-variable-values\");\n        AppUtils.elasticTextarea(this.definitionsCode);\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.update();\n            }\n        });\n    }\n\n\n    open(definitionsSourceObject, changeCallback) {\n        super.open();\n        this.changeCallback = changeCallback;\n        this.definitionsSourceObject = definitionsSourceObject;\n        this.update();\n    }\n\n    update(force = false) {\n        if (!force && !this.isVisible()) {\n            return;\n        }\n\n        let scopeType = 'global';\n        let labelSuffix=\"\";\n        if (this.definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node';\n            let name =  this.definitionsSourceObject.name;\n            if(name){\n                labelSuffix += \" (\"+name+\")\"\n            }\n        }\n        this.definitionsScopeLabel.text(i18n.t(\"definitionsDialog.scope.\"+scopeType)+labelSuffix);\n\n        this.definitionsCode.node().value = this.definitionsSourceObject.code;\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node());\n        this.definitionsCode.classed('invalid', !!this.definitionsSourceObject.$codeError);\n        if(this.definitionsSourceObject.$codeError){\n            this.printError(this.definitionsSourceObject.$codeError);\n        }else{\n            this.printVariables(this.definitionsSourceObject.expressionScope);\n        }\n\n    }\n\n    printError(error) {\n        var html = error;\n        this.variableValuesContainer.html(html);\n    }\n\n    printVariables(scope) {\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(scope)});\n        this.variableValuesContainer.html(html);\n    }\n\n\n}\n","\nexport class Dialog{\n\n    app;\n\n    container;\n\n    constructor(container,app){\n        this.app = app;\n        this.container=container;\n        this.container.select('.sd-close-modal').on('click', ()=>this.close());\n        this.container.select('.sd-extend-modal').on('click', ()=>this.extend());\n        this.container.select('.sd-shrink-modal').on('click', ()=>this.shrink());\n    }\n\n    open(){\n        this.onOpen();\n        this.container.classed('open', true);\n    }\n    close(){\n        this.container.classed('open', false);\n        this.onClosed();\n    }\n\n    setFullScreen(fullScreen=true){\n        let self = this;\n        this.container.classed('sd-full-screen', fullScreen);\n        setTimeout(function(){ self.onResized() }, 10)\n    }\n\n    extend(){\n        this.setFullScreen();\n    }\n\n    shrink(){\n        this.setFullScreen(false);\n    }\n\n    isVisible(){\n        return this.container.classed('open');\n    }\n\n    onClosed(){\n\n    }\n\n    onOpen(){\n\n    }\n\n    onResized(){\n\n    }\n}\n","import {Dialog} from \"./dialog\";\nimport {JobParametersBuilder} from \"../jobs/job-parameters-builder\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {SensitivityAnalysisJobResultTable} from \"../jobs/sensitivity-analysis-result-table\";\nimport {ProbabilisticSensitivityAnalysisJobResultTable} from \"../jobs/probabilistic-sensitivity-analysis-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {TornadoDiagramPlot} from \"../jobs/tornado-diagram-plot\";\nimport {SpiderPlot} from \"../jobs/spider-plot\";\n\nexport class SensitivityAnalysisDialog extends Dialog {\n    computationsManager;\n    jobConfigurationContainer;\n\n    jobConfigurations = [];\n    jobInstanceManager;\n    jobNameToParamValues = {};\n\n    constructor(app) {\n        super(app.container.select('.sd-sensitivity-analysis-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        // this.initJobConfigurations();\n\n        this.jobConfigurationContainer = this.container.select(\".sd-sensitivity-analysis-job-configuration\");\n        this.parameterBuilderContainer = this.jobConfigurationContainer.select(\".sd-job-parameters-builder\");\n        this.jobParametersBuilder = new JobParametersBuilder(this.parameterBuilderContainer, 'job', () => this.onJobParametersChanged());\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-sensitivity-analysis-job-results\");\n        this.jobResultPlotContainer = this.jobResultsContainer.select(\".sd-job-result-plot-container\");\n\n        this.debouncedCheckWarnings = Utils.debounce(()=>this.checkWarnings(), 200);\n\n        this.initButtons();\n        let self = this;\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.onOpen();\n            }\n        });\n    }\n\n    onOpen() {\n\n        this.initJobConfigurations();\n        if (!this.jobSelect) {\n            this.initJobSelect();\n        }\n\n        let payoffConf = Utils.cloneDeep(this.app.config.format.payoff1);\n        payoffConf.style = 'decimal';\n        payoffConf.useGrouping = false;\n        this.payoffNumberFormat = new Intl.NumberFormat('en', payoffConf);\n        // this.payoffNumberFormat = {\n        //     format: v => this.app.computationsManager.expressionEngine.constructor.toFloat(v, payoffConf.maximumFractionDigits)\n        // }\n\n        this.clear();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n\n\n    onJobSelected(jobConfig) {\n\n        this.clearWarnings();\n        this.selectedJobConfig = jobConfig;\n        if (!jobConfig) {\n            return;\n        }\n        this.jobSelect.node().value = jobConfig.jobName;\n        let jobName = this.selectedJobConfig.jobName;\n        this.job = this.computationsManager.getJobByName(jobName);\n\n        var jobParamsValues = this.jobNameToParamValues[jobName] || {};\n\n        this.setJobParamsValues(jobParamsValues)\n    }\n\n    refreshSelectedJobConfig() {\n        if (this.selectedJobConfig) {\n            this.selectedJobConfig = Utils.find(this.jobConfigurations, (c)=>c.jobName === this.selectedJobConfig.jobName);\n        }\n    }\n\n    setJobParamsValues(jobParamsValues, deleteId = true) {\n        if(!this.job){\n            return;\n        }\n        this.refreshSelectedJobConfig();\n\n        if(deleteId){\n            delete jobParamsValues.id;\n        }\n        this.jobParameters = this.job.createJobParameters(jobParamsValues);\n\n        this.jobNameToParamValues[this.job.name] = this.jobParameters.values;\n\n        this.jobParametersBuilder.setJobParameters(this.job.name, this.jobParameters, this.selectedJobConfig.customParamsConfig);\n    }\n\n    onJobParametersChanged() {\n        this.debouncedCheckWarnings();\n\n    }\n\n    getGlobalVariableNames() {\n        return this.app.dataModel.getGlobalVariableNames(true);\n    }\n\n    initJobConfigurations() {\n        let self = this;\n        this.jobConfigurations.length = 0;\n        let ExpressionEngine = this.app.expressionEngine.constructor;\n        let customVariablesValidator = values => {\n            var isValidArray = [];\n\n            var names = [];\n            values.forEach((v, i)=>{\n                let isVariableInGlobalScope = self.app.dataModel.expressionScope.hasOwnProperty(v.name);\n                var valid = names.indexOf(v.name)<0 && isVariableInGlobalScope;\n                names.push(v.name);\n                isValidArray.push(valid);\n            });\n\n            return isValidArray;\n        };\n\n        let largeScenariosNumberWarning = {\n            name: 'largeScenariosNumber',\n            data: {\n                number: 10000,\n                numberFormatted: \"10,000\"\n            },\n            check: function (jobParameters) { // called with this set to warning config object\n                let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a * (b || 1), 1);\n                return combinations > this.data.number\n            }\n        };\n        this.jobConfigurations.push({\n            jobName: 'sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try {\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n\n                }\n            },\n            warnings: [\n                largeScenariosNumberWarning,\n                {\n                    name: 'largeParametersNumber',\n                    data: {\n                        number: 2,\n                    },\n                    check: function (jobParameters) { // called with this set to warning config object\n                        return jobParameters.values.variables.length > this.data.number\n                    }\n                }\n            ]\n        });\n\n\n        this.jobConfigurations.push({\n            jobName: 'tornado-diagram',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        },\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: (values)=>{\n                        let isValidNameArray = customVariablesValidator(values);\n\n                        return values.map((v, i)=>{\n                            if(!isValidNameArray[i]){\n                                return false;\n                            }\n\n                            if (!v.name || v.min === undefined || v.min === null || v.max === undefined || v.max === null) {\n                                return false;\n                            }\n\n                            let defVal = self.app.dataModel.expressionScope[v.name];\n                            return v.min < defVal && v.max >  defVal;\n                        });\n                    }\n\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a + b, 0);\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'probabilistic-sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    formula:{\n                        options: ExpressionEngine.randomMenuList,\n                        optionsAutocomplete: true\n                    },\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [largeScenariosNumberWarning]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'spider-plot',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.length * jobParameters.values.variables.length;\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n    }\n\n\n    checkWarnings() {\n        this.clearWarnings();\n        if (!this.selectedJobConfig.warnings) {\n            return;\n        }\n\n        this.selectedJobConfig.warnings.forEach(warnConf=> {\n            if (warnConf.check.call(warnConf, this.jobParameters)) {\n                this.addWarning(warnConf);\n            }\n        })\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-sensitivity-analysis-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-sensitivity-analysis-warnings\").appendSelector(\"div.sd-sensitivity-analysis-warning\").html(msgHTML);\n    }\n\n    initJobSelect() {\n        var self = this;\n        this.jobSelect = this.container.select(\".sd-job-select-input-group\").html(Templates.get(\"selectInputGroup\", {\n            id: Utils.guid(),\n            label: null,\n            name: \"sd-job-select\",\n            options: this.jobConfigurations.map(c=>({\n                label: i18n.t(\"job.\" + c.jobName + \".name\"),\n                value: c.jobName\n            }))\n        })).select(\"select\").on('change input', function (d) {\n            self.onJobSelected(Utils.find(self.jobConfigurations, c=>c.jobName === this.value))\n        });\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (rows, indexes, e)=> this.onResultRowSelected(rows, indexes, e),\n            className: \"sd-\" + this.job.name\n        };\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.setClassName(\"sd-\" + this.job.name);\n            this.resultTable.hide();\n        }\n\n        if (this.job.name == \"sensitivity-analysis\") {\n            this.resultTable = new SensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n        } else if (this.job.name == \"probabilistic-sensitivity-analysis\") {\n            this.resultTable = new ProbabilisticSensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config, (v) => this.payoffNumberFormat.format(v), (v) => this.app.probabilityNumberFormat.format(v));\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n\n        }\n\n\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-sensitivity-analysis-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n    initButtons() {\n        this.runJobButton = this.container.select(\".sd-run-job-button\").on('click', ()=> {\n            if (!this.jobParametersBuilder.validate()) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.checkWarnings();\n\n            this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n                onJobStarted: this.onJobStarted,\n                onJobCompleted: this.onJobCompleted,\n                onJobFailed: this.onJobFailed,\n                onJobStopped: this.onJobStopped,\n                onJobTerminated: this.onJobTerminated,\n                onProgress: this.onProgress,\n                callbacksThisArg: this\n            }).then(jobInstanceManager=> {\n                this.jobInstanceManager = jobInstanceManager;\n            }).catch(e=> {\n                log.error(e);\n            }).then(()=> {\n                this.disableActionButtonsAndShowLoadingIndicator(false);\n            })\n\n        });\n\n        this.resumeJobButton = this.container.select(\".sd-resume-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.resume();\n        });\n\n        this.stopJobButton = this.container.select(\".sd-stop-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.stop();\n        });\n\n        this.terminateJobButton = this.container.select(\".sd-terminate-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.terminateJob();\n        });\n\n        this.backButton = this.container.select(\".sd-back-button \").on('click', ()=> {\n            if (this.jobInstanceManager) {\n                this.jobInstanceManager.terminate();\n            }\n\n        });\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    loadSavedParamValues(jobNameToParamValues){\n        this.jobNameToParamValues = jobNameToParamValues;\n        this.selectedJobConfig = null;\n        this.jobParameters = null;\n    }\n\n\n    clear(clearParams = false, clearAllParams = false) {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        if (!this.selectedJobConfig) {\n            this.onJobSelected(this.jobConfigurations[0]);\n        }\n\n        if(clearAllParams){\n            Utils.forOwn(this.jobNameToParamValues, (value, key)=> this.jobNameToParamValues[key] = {})\n        }\n\n        let globalVariableNames = this.getGlobalVariableNames();\n        Utils.forOwn(this.jobNameToParamValues, (value, key)=> {\n            let paramValues = value;\n            if(clearAllParams){\n                paramValues = {}\n            }else if(paramValues.variables){\n                paramValues.variables = paramValues.variables.filter(v=>globalVariableNames.indexOf(v.name)!==-1);\n                if(!paramValues.variables.length){\n                    paramValues.variables.push({})\n                }\n            }\n\n            this.jobNameToParamValues[key] = paramValues;\n        });\n\n        if (this.job) {\n            if (clearParams) {\n                this.jobNameToParamValues[this.job.name] = {};\n                this.setJobParamsValues({});\n            } else {\n                this.jobParameters.values.ruleName = this.computationsManager.getCurrentRule().name;\n                this.setJobParamsValues(this.jobParameters.values);\n            }\n        }\n\n\n        AppUtils.show(this.jobConfigurationContainer);\n        AppUtils.show(this.runJobButton);\n        AppUtils.show(this.clearButton);\n\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.jobResultsContainer);\n        AppUtils.hide(this.backButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n        if(this.resultPlots){\n            this.resultPlots.forEach(p=>p.destroy())\n            this.jobResultPlotContainer.selectAll(\"*\").remove();\n        }\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.jobConfigurationContainer);\n        AppUtils.hide(this.runJobButton);\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.clearButton);\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n        AppUtils.show(this.stopJobButton);\n        AppUtils.show(this.terminateJobButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.backButton);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.clearButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlots(result);\n\n\n\n    }\n\n    initResultPlots(result) {\n\n\n        if (this.job.name === \"tornado-diagram\") {\n            this.initTornadoResultPlots(result);\n        } else if (this.job.name === \"spider-plot\") {\n            this.initSpiderResultPlots(result);\n        }\n\n\n\n    }\n\n    initTornadoResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new TornadoDiagramPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    initSpiderResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new SpiderPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    onResized() {\n        if (this.resultPlots) {\n            this.resultPlots.forEach(p=>p.init());\n\n        }\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.clearButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(rows, indexes, event) {\n\n        if (!rows.length) {\n            return;\n        }\n\n        let policyIndexes = rows.map(r=>r.policyIndex).filter((value, index, self)=>self.indexOf(value) === index);\n\n        if (policyIndexes.length > 1) {\n            Tooltip.show(i18n.t('jobResultTable.tooltip.multiplePoliciesInCell', {number: policyIndexes.length}), 5, 28, event, 2000);\n            return;\n        }\n\n\n        let policy = this.result.policies[policyIndexes[0]];\n        let title = Policy.toPolicyString(policy, false);\n\n        if(rows.length==1){\n\n            let row = rows[0];\n            if(row.variables){\n                title = '';\n                this.result.variableNames.forEach((v, i)=>{\n                    if(i){\n                        title += \"; \"\n                    }\n                    title += v + \" = \" + row.variables[i];\n                });\n            }\n        }\n\n        this.app.showPolicyPreview(title, policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows())\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {i18n} from \"../i18n/i18n\";\nimport {Templates} from \"../templates\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {InputField} from \"../form/input-field\";\nimport {PathValueAccessor} from \"../form/path-value-accessor\";\n\nexport class SettingsDialog extends Dialog{\n\n    formGroups=[];\n\n    static fontWeightOptions = ['normal', 'bold', 'lighter', 'bolder'];\n    static fontStyleOptions = ['normal', 'italic', 'oblique'];\n\n    constructor(app){\n        super(app.container.select('#sd-settings-dialog'), app);\n\n        var group = new FormGroup('general', ()=> {\n            app.treeDesigner.updateCustomStyles();\n            app.updateNumberFormats();\n        });\n        group\n            .addField('fontFamily', 'text', app.treeDesigner, 'config.fontFamily')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('numberFormatLocale', 'text', app, 'config.format.locales', {validate: (v)=>{try{new Intl.NumberFormat(v); return true;}catch (e){return false}}});\n        this.formGroups.push(group);\n\n\n        var payoffGroup = new FormGroup('payoff1', ()=>app.updatePayoffNumberFormat());\n        payoffGroup\n            .addSelectField('style', app, 'config.format.payoff1.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff1.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff1.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff1.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff1.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff1.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff1.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff1.useGrouping')\n\n        this.formGroups.push(payoffGroup);\n\n        var payoff2Group = new FormGroup('payoff2', ()=>app.updatePayoffNumberFormat());\n        payoff2Group\n            .addSelectField('style', app, 'config.format.payoff2.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff2.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff2.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff2.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff2.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff2.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff2.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff2.useGrouping')\n\n        this.formGroups.push(payoff2Group);\n\n\n        group = new FormGroup('probability', ()=>{\n            app.updateProbabilityNumberFormat();\n            app.treeDesigner.updateCustomStyles().redraw();\n        });\n        group\n            .addSelectField('style', app, 'config.format.probability.style', ['decimal', 'percent'])\n            .addField('minimumFractionDigits', 'number', app, 'config.format.probability.minimumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.probability.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.probability.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.probability.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('fontSize', 'text', app.treeDesigner, 'config.probability.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.probability.color');\n        this.formGroups.push(group);\n\n\n        var nodeGroup = new FormGroup('node', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        nodeGroup\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.strokeWidth');\n\n        nodeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.optimal.stroke');\n\n        nodeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.label.color');\n\n        nodeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.node.payoff.negativeColor');\n\n        this.formGroups.push(nodeGroup);\n\n        nodeGroup.addGroup('decision')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.decision.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.decision.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.decision.selected.fill');\n\n\n        nodeGroup.addGroup('chance')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.chance.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.chance.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.chance.selected.fill');\n\n        nodeGroup.addGroup('terminal')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.terminal.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.terminal.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.terminal.selected.fill')\n            .addGroup('payoff')\n                .addField('fontSize', 'text', app.treeDesigner, 'config.node.terminal.payoff.fontSize')\n                .addField('color', 'color', app.treeDesigner, 'config.node.terminal.payoff.color')\n                .addField('negativeColor', 'color', app.treeDesigner, 'config.node.terminal.payoff.negativeColor');\n\n\n\n        var edgeGroup = new FormGroup('edge', ()=>app.treeDesigner.updateCustomStyles().redraw())\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.stroke')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.strokeWidth');\n\n        edgeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.optimal.stroke');\n\n        edgeGroup.addGroup('selected')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.selected.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.selected.stroke');\n\n        edgeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.label.color');\n\n        edgeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.edge.payoff.negativeColor');\n        this.formGroups.push(edgeGroup);\n\n\n        var titleGroup = new FormGroup('diagramTitle', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        titleGroup\n            .addField('fontSize', 'text', app.treeDesigner, 'config.title.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.title.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.title.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.title.color')\n\n        .addGroup('margin')\n            .addField('top', 'number', app.treeDesigner, 'config.title.margin.top')\n            .addField('bottom', 'number', app.treeDesigner, 'config.title.margin.bottom');\n\n        titleGroup\n            .addGroup('description')\n            .addField('show', 'checkbox', app.treeDesigner, 'config.description.show')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.description.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.description.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.description.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.description.color')\n            .addField('marginTop', 'number', app.treeDesigner, 'config.description.margin.top');\n\n        this.formGroups.push(titleGroup);\n\n\n\n        var leagueTableGroup = new FormGroup('leagueTable');\n        leagueTableGroup\n            .addGroup('plot')\n            .addField('maxWidth', 'text', app, 'config.leagueTable.plot.maxWidth')\n            .addField('highlightedColor', 'color', app, 'config.leagueTable.plot.groups.highlighted.color')\n            .addField('highlightedDefaultColor', 'color', app, 'config.leagueTable.plot.groups.highlighted-default.color')\n            .addField('extendedDominatedColor', 'color', app, 'config.leagueTable.plot.groups.extended-dominated.color')\n            .addField('dominatedColor', 'color', app, 'config.leagueTable.plot.groups.dominated.color')\n            .addField('defaultColor', 'color', app, 'config.leagueTable.plot.groups.default.color');\n\n        this.formGroups.push(leagueTableGroup);\n\n\n\n        var otherGroup = new FormGroup('other', ()=>app.treeDesigner.redraw());\n        otherGroup\n            .addField('disableAnimations', 'checkbox', app.treeDesigner, 'config.disableAnimations')\n            .addField('forceFullEdgeRedraw', 'checkbox', app.treeDesigner, 'config.forceFullEdgeRedraw')\n            .addField('hideLabels', 'checkbox', app.treeDesigner, 'config.hideLabels')\n            .addField('hidePayoffs', 'checkbox', app.treeDesigner, 'config.hidePayoffs')\n            .addField('hideProbabilities', 'checkbox', app.treeDesigner, 'config.hideProbabilities')\n            .addField({\n                name: 'raw',\n                type: 'checkbox',\n                config: app.treeDesigner,\n                path: 'config.raw',\n                valueUpdateCallback: ()=>app.onRawOptionChanged()\n            });\n\n        this.formGroups.push(otherGroup);\n\n        this.initView();\n\n    }\n\n    initFormGroups(container, data){\n        var self = this;\n        var temp = {};\n        var formGroups = container.selectAll('div.sd-form-group').filter(function(d) { return this.parentNode==container.node(); }).data(data);\n        var formGroupsEnter = formGroups.enter().appendSelector('div.sd-form-group').attr('id', d=>d.id).html(d=>Templates.get('settingsDialogFormGroup', d));\n        formGroupsEnter.select('.toggle-button').on('click', (d) => {\n            var g = container.select('#'+d.id);\n            g.classed('sd-extended', !g.classed('sd-extended'));\n        });\n\n        var formGroupsMerge = formGroupsEnter.merge(formGroups);\n        var inputGroups = formGroupsMerge.select('  .sd-form-group-content > .sd-form-group-inputs').selectAll('div.input-group').data(d=>d.fields);\n\n\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n\n\n        inputGroupsEnter.merge(inputGroups).select('input, select').on('change input', function(d,i){\n            var value = this.value;\n            if(d.type=='checkbox'){\n                value = this.checked\n            }\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n                if(d3.event.type=='change'){\n                    this.value = d.valueAccessor.get();\n                }\n                return;\n            }\n            d3.select(this).classed('invalid', false);\n\n            d.valueAccessor.set(value);\n            if(d.valueUpdateCallback){\n                d.valueUpdateCallback();\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n\n        }).each(function(d, i){\n            var value = d.valueAccessor.get();\n            if(d.type=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n        });\n\n        formGroupsMerge.each(function(d){\n            self.initFormGroups(d3.select(this).select('.sd-form-group-content > .sd-form-group-child-groups'), d.groups);\n        });\n    }\n\n    initView() {\n        var temp = {};\n        this.initFormGroups(this.container.select('form#sd-settings-form'), this.formGroups);\n\n    }\n\n    onOpen(){\n        this.initView();\n    }\n\n}\n\nexport class FormGroup{\n    id;\n    name;\n    fields=[];\n    groups=[];\n    valueUpdateCallback;\n\n    constructor(name, valueUpdateCallback){\n        this.id = 'sd-form-group-'+name.replace(/\\./g, '-');\n        this.name = name;\n        this.valueUpdateCallback = valueUpdateCallback;\n    }\n\n    addSelectField(name, config, path, options) {\n        this.addField(name, 'select', config, path, null, options);\n        return this;\n    }\n\n    addField(fieldConfig){\n        if(arguments.length>1){\n            return this._addField(...arguments);\n        }\n\n        return this._addField(fieldConfig['name'], fieldConfig['type'], fieldConfig['config'], fieldConfig['path'], fieldConfig['validator'],\n                                fieldConfig['options'], fieldConfig['valueUpdateCallback'])\n    }\n\n    _addField(name, type, config, path, validator, options, valueUpdateCallback){\n        var fieldId = this.name+\"-\"+name;\n        var label = i18n.t(\"settingsDialog.\"+this.name+\".\"+name);\n        var configInputField = new ConfigInputField(fieldId,fieldId, type,label, config, path, validator, options);\n        if(valueUpdateCallback){\n            configInputField.valueUpdateCallback =  ()=>{\n                this.valueUpdateCallback();\n                valueUpdateCallback();\n            };\n        }else{\n            configInputField.valueUpdateCallback =  this.valueUpdateCallback;\n        }\n\n        this.fields.push(configInputField);\n        return this;\n    }\n\n    addGroup(name){\n        var groupName = this.name+'.'+name;\n        var group = new FormGroup(groupName, this.valueUpdateCallback);\n        this.groups.push(group);\n        return group;\n    }\n}\n\n\nclass ConfigInputField extends InputField{\n    constructor(id, name, type, label, sourceObject, path, validator, options){\n        super(id, name, type, label, new PathValueAccessor(sourceObject, path), validator, options);\n    }\n}\n\n","import {dataURLtoBlob} from \"blueimp-canvas-to-blob\";\nimport {saveAs} from \"file-saver\";\nimport * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {LoadingIndicator} from \"./loading-indicator\";\n\nexport class Exporter {\n    static saveAs = saveAs;\n    static dataURLtoBlob = dataURLtoBlob;\n    static exportedStyles = [/^font/, /^color/, /^opacity$/];\n    static svgProperties = [/^stroke/, /^fill/, /^text/];\n\n// Below are the function that handle actual exporting:\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n    static getSvgCloneWithInlineStyles(svgNode) {\n        var svgClone = svgNode.cloneNode(true);\n        appendInlineStyles(svgNode, svgClone);\n\n        function appendInlineStyles(source, target, parentCs) {\n            if (!source) {\n                log.error('Exporter.appendInlineStyles - undefined source!');\n                return false;\n            }\n            var children = source.children;\n            var targetChildren = target.children;\n            if (!source.children) {\n                children = source.childNodes;\n                targetChildren = target.childNodes;\n            }\n\n            if (source.tagName === 'text') {\n                /*\n                 var bBox = source.getBBox();\n                 console.log(source, bBox);\n                 target.setAttribute('y', bBox.y)*/\n            }\n\n\n            var cssStyleText = '';\n            var cs = getComputedStyle(source);\n            if (!cs) {\n                return true;\n            }\n            if (cs.display === 'none') {\n                return false;\n            }\n\n\n            for (let i = 0; i < cs.length; i++) {\n                var styleName = cs.item(i);\n                if (Utils.startsWith(styleName, '-')) {\n                    continue;\n                }\n\n                var propertyValue = cs.getPropertyValue(styleName);\n                if (parentCs) {\n                    if (propertyValue === parentCs.getPropertyValue(styleName)) {\n                        continue;\n                    }\n                }\n\n                if (Exporter.exportedStyles.some(s=>s.test(styleName))) {\n                    cssStyleText += '; ' + styleName + ': ' + propertyValue;\n                } else if (Exporter.svgProperties.some(s=>s.test(styleName))) {\n                    target.setAttribute(styleName, propertyValue);\n                }\n\n            }\n            if (cssStyleText.length) {\n                target.setAttribute(\"style\", cssStyleText);\n            } else {\n                target.removeAttribute(\"style\")\n            }\n\n\n            var toRemove = [];\n            for (let i = 0; i < children.length; i++) {\n                var node = children[i];\n                if (!appendInlineStyles(node, targetChildren[i], cs)) {\n                    toRemove.push(targetChildren[i]);\n                }\n            }\n            toRemove.forEach(n=> {\n                target.removeChild(n)\n            });\n            return true;\n        }\n\n        /*var textElements = svgNode.getElementsByTagName('text')\n         _.each(textElements, function (el) {\n\n\n         var textBBox = el.getBBox();\n         console.log(el,textBBox, el.getBoundingClientRect());\n         _.each(el.getElementsByTagName('tspan'), tspan=>{\n         var tspanBBox = tspan.getBBox();\n         console.log(tspan,tspanBBox, tspan.getBoundingClientRect());\n         })\n\n         // el.style['font-family'] = el.style['font-family'] && el.style['font-family'].split(' ').splice(-1);\n         });*/\n\n\n        svgClone.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        return svgClone;\n    }\n\n\n    static getSVGString(svgNode, removeIds=false) {\n        // svgNode = svgNode.cloneNode(true);\n        var svgClone = Exporter.getSvgCloneWithInlineStyles(svgNode);\n\n        var svgString = Exporter.serializeSvgNode(svgClone);\n        // svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\n        // svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\n        svgString = Exporter.sanitizeSVG(svgString, removeIds);\n\n        return svgString;\n    }\n\n    static serializeSvgNode(svgNode) {\n        var serializer = new XMLSerializer();\n        return serializer.serializeToString(svgNode);\n    }\n\n    static validateSvgNode(svgNode) {\n        var svgString = Exporter.serializeSvgNode(svgNode);\n        var oParser = new DOMParser();\n        var doc = oParser.parseFromString(svgString, 'image/svg+xml');\n        return doc.documentElement.nodeName.indexOf('parsererror') === -1;\n    }\n\n    static svgString2Image(svgString, width, height, format, callback) {\n        var format = format ? format : 'png';\n        var imgsrc = 'data:image/svg+xml,' + (encodeURIComponent(svgString)); // Convert SVG string to dataurl\n\n        // var canvas = document.createElement(\"canvas\");\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n\n        var image = new Image;\n        image.width = width;\n        image.height = height;\n        var target = new Image;\n        target.width = width;\n        target.height = height;\n\n\n        image.onload = function () {\n            // context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            canvas.toBlob(function (blob) {\n                var filesize = Math.round(blob.length / 1024) + ' KB';\n                if (callback) callback(blob, filesize);\n            });\n\n        };\n\n        image.src = imgsrc;\n    }\n\n    //decisiontree@yyyy.mm.dd_hh.mm.ss\n    static getExportFileName(ext, name='decisiontree') {\n        var format = d3.timeFormat(\"%Y.%m.%d_%H.%M.%S\");\n        var date = new Date();\n        name += '@' + format(date);\n        if (ext) {\n            name += '.' + ext\n        }\n        return name;\n    }\n\n    static saveAsPng(svg, options) {\n\n        var clientSide = options.png.mode === 'client';\n        var fallback = options.png.mode === 'fallback';\n        var serverSide = options.png.mode === 'server';\n        if (Utils.detectIE()) {\n            if (clientSide) {\n                alert(i18n.t('error.pngExportNotSupportedIE'));\n                return;\n            }\n\n            if (fallback) {\n                fallback = false;\n                serverSide = true;\n            }\n        }\n        LoadingIndicator.show();\n\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n            var svgWidth = svg.attr('width');\n            var svgHeight = svg.attr('height');\n\n            var pngWidth = 4 * svgWidth;\n            var pngHeight = 4 * svgHeight;\n            if (clientSide || fallback) {\n                Exporter.svgString2Image(svgString, pngWidth, pngHeight, 'png', save); // passes Blob and filesize String to the callback\n\n                function save(dataBlob, filesize) {\n                    try {\n                        Exporter.saveAs(dataBlob, Exporter.getExportFileName('png'));\n                        LoadingIndicator.hide();\n                    } catch (e) {\n                        log.warn('client side png rendering failed!');\n                        if (fallback) {\n                            log.info('performing server side fallback.');\n                            Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n                        } else {\n                            throw e;\n                        }\n                    }\n\n                }\n            } else if (serverSide) {\n                Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n            }\n\n\n        } catch (e) {\n            alert(i18n.t('error.pngExportNotSupported'));\n            LoadingIndicator.hide();\n            log.error('pngExportNotSupported', e);\n        }\n    }\n\n\n    static saveAsSvg(svg) {\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\n            Exporter.saveAs(blob, Exporter.getExportFileName('svg'));\n        } catch (e) {\n            alert(i18n.t('error.svgExportNotSupported'));\n            log.error('svgExportNotSupported', e);\n        }\n    }\n\n    static exportPdfClientSide(svgString, width, height) {\n        var doc = new jsPDF('l', 'pt', [width, height]);\n        var dummy = document.createElement('svg');\n        dummy.innerHTML = svgString;\n        svg2pdf(dummy.firstChild, doc, {\n            xOffset: 0,\n            yOffset: 0,\n            scale: 1\n        });\n        doc.save(Exporter.getExportFileName('pdf'));\n        LoadingIndicator.hide();\n\n    }\n\n    static postAndSave(url, data, filename, successCallback, failCallback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('post', url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function () {\n            var status = xhr.status;\n            log.debug(status);\n            var type = xhr.getResponseHeader('Content-Type');\n            if (status == 200) {\n                var blob = new Blob([this.response], {type: type});\n                Exporter.saveAs(blob, filename);\n                if (successCallback) {\n                    successCallback();\n                }\n            } else {\n                if (failCallback) {\n                    failCallback();\n                }\n            }\n        };\n        xhr.onreadystatechange = function (oEvent) {\n            if (xhr.readyState === 4) {\n                if (xhr.status !== 200) {\n                    failCallback();\n                }\n            }\n        };\n\n\n        xhr.send(JSON.stringify(data));\n    }\n\n    static exportPdfServerSide(svgString, url) {\n        var filename = Exporter.getExportFileName('pdf');\n        var data = {svg: svgString, type: 'pdf', noDownload: true};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        // Utils.postByForm(url, {\n        //     filename: filename,\n        //     type: 'pdf',\n        //     // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n        //     // scale: options.scale,\n        //     svg: svgString\n        // });\n\n    }\n\n    static exportPngServerSide(svgString, url, pngWidth, pngHeight) {\n        var filename = Exporter.getExportFileName('png');\n        var data = {svg: svgString, type: 'png', noDownload: true, width: pngWidth};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        /*Utils.postByForm(url, {\n         filename: filename,\n         type: 'pdf',\n         // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n         // scale: options.scale,\n         svg: svgString\n         });*/\n\n    }\n\n    static saveAsPdf(svg, options) {\n        var clientSidePdfExportAvailable = Exporter.isClientSidePdfExportAvailable();\n        if (options.pdf.mode === 'client') {\n            if (!clientSidePdfExportAvailable) {\n                alert(i18n.t('error.jsPDFisNotIncluded'));\n                return;\n            }\n        }\n        LoadingIndicator.show();\n        var margin = 20;\n        var svgElement = svg.node();\n        var width = svgElement.width.baseVal.value + 2 * margin,\n            height = svgElement.height.baseVal.value + 2 * margin;\n        try {\n            var svgString = Exporter.getSVGString(svgElement);\n\n            var fallback = options.pdf.mode === 'fallback';\n            if (options.pdf.mode === 'client' || fallback) {\n                try {\n                    Exporter.exportPdfClientSide(svgString, width, height);\n                } catch (e) {\n                    log.error('client side pdf rendering failed!');\n                    if (fallback) {\n                        log.info('performing server side fallback.');\n                        Exporter.exportPdfServerSide(svgString, options.serverUrl);\n                    } else {\n                        throw e;\n                    }\n                }\n            } else if (options.pdf.mode === 'server') {\n                Exporter.exportPdfServerSide(svgString, options.serverUrl);\n            }\n        } catch (e) {\n            log.error('pdfExportNotSupported', e);\n            LoadingIndicator.hide();\n            alert(i18n.t('error.pdfExportNotSupported'));\n\n        }\n\n    }\n\n    static isClientSidePdfExportAvailable() {\n        return typeof jsPDF !== 'undefined' && typeof svg2pdf !== 'undefined'\n    }\n\n\n    static sanitizeSVG(svg, removeIds=false) {\n        let sanitized = svg\n            .replace(/zIndex=\"[^\"]+\"/g, '')\n            .replace(/isShadow=\"[^\"]+\"/g, '')\n            .replace(/symbolName=\"[^\"]+\"/g, '')\n            .replace(/jQuery[0-9]+=\"[^\"]+\"/g, '')\n            .replace(/url\\((\"|&quot;)(\\S+)(\"|&quot;)\\)/g, 'url($2)')\n            .replace(/url\\([^#]+#/g, 'url(#')\n            .replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ')\n            .replace(/ (NS[0-9]+\\:)?href=/g, ' xlink:href=')\n            .replace(/\\n/, ' ')\n            .replace(/<\\/svg>.*?$/, '</svg>')\n            .replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"')\n            .replace(/&nbsp;/g, '\\u00A0')\n            .replace(/&shy;/g, '\\u00AD');\n\n        if(removeIds){\n            return sanitized.replace(/id=\"[^\"]+\"/g, '')\n        }\n\n        return sanitized;\n\n    }\n\n    static saveAsCSV(rows, name='decisiontree') {\n        var csvRows = [];\n        rows.forEach(row => {\n            csvRows.push(row.map(r=>Exporter.escapeCsvField(r)).join(','))\n        });\n        var csvString = csvRows.join(\"\\r\\n\");\n\n        var blob = new Blob([csvString], {type: \"text/csv\"});\n        Exporter.saveAs(blob, Exporter.getExportFileName('csv', name));\n\n    }\n\n    static escapeCsvField(field){\n        if(Utils.isString(field)){\n            return '\"'+field.replace(/\"/g, '\"\"')+'\"'\n        }\n        return field;\n    }\n}\n","import {i18n} from './i18n/i18n'\n\nexport class FileLoader{\n\n    static openFile(callback){\n        var input =  document.getElementById('sd-file-input');\n        input.onchange = loadFile;\n\n        input.click();\n\n        function loadFile() {\n\n             var file, fr;\n\n\n            if (typeof window.FileReader !== 'function') {\n                alert(i18n.t('error.fileApiNotSupported'));\n                return;\n            }\n            input =  document.getElementById('sd-file-input');\n            if (!input.files) {\n                alert(i18n.t('error.inputFilesProperty'));\n                return;\n            }\n\n            if (!input.files[0]) {\n                return;\n            }\n\n            file = input.files[0];\n            fr = new FileReader();\n            fr.onload = receivedText;\n            fr.readAsText(file);\n\n\n            function receivedText(e) {\n                callback(e.target.result);\n                input.value = null;\n            }\n        }\n    }\n\n}\n","export class InputField{\n    name;\n    type;\n    validator;\n    valueAccessor;\n\n    id;\n    label;\n    valueUpdateCallback;\n\n    constructor(id, name, type, label, valueAccessor, validator, options, parser, styleClass){\n        this.name = name;\n        this.type = type;\n        this.valueAccessor = valueAccessor;\n        this.validator = validator;\n        this.id=id;\n        this.label = label;\n        this.options = options;\n        this.parser = parser;\n        this.styleClass = styleClass;\n    }\n\n    getValue(){\n        return this.valueAccessor.get();\n    }\n\n    setValue(val){\n        return this.valueAccessor.set(val);\n    }\n\n    parse(val){\n        if(this.parser){\n            return this.parser(val)\n        }\n        return val;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PathValueAccessor {\n    sourceObject;\n    path;\n    constructor(sourceObject, path){\n        this.sourceObject=sourceObject;\n        this.path = path;\n    }\n\n    get(){\n        return Utils.get(this.sourceObject, this.path);\n    }\n\n    set(v){\n        return Utils.set(this.sourceObject, this.path, v);\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Neues Diagramm\",\n        \"openDiagram\": \"Diagramm öffnen\",\n        \"saveDiagram\": \"Aktuelles Diagramm speichern\",\n        \"export\":{\n            \"label\": \"Exportieren nach\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Baum\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"Aussicht\",\n            \"options\": {\n                \"criterion1\":\"Kriterium 1\",\n                \"criterion2\":\"Kriterium 2\",\n                \"twoCriteria\":\"Zwei Kriterien\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regel\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Rückgängig machen\",\n        \"redo\": \"Wiederholen\",\n        \"settings\": \"Einstellungen\",\n        \"about\": \"Über\",\n        \"sensitivityAnalysis\": \"Sensitivitätsanalyse\",\n        \"recompute\": \"Neu Berechnen\"\n    },\n    \"node\":{\n        \"name\": \"Beschreibung\"\n    },\n    \"edge\":{\n        \"name\": \"Beschreibung\",\n        \"payoff\": \"Auszahlung\",\n        \"probability\": \"Wahrscheinlichkeit\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Rangliste\",\n        \"buttons\": {\n            \"downloadCsv\": \"CSV Herunterladen\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regel #\",\n            \"policy\": \"Regel\",\n            \"comment\": \"Kommentar\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominiert (durch#{{policy}})\",\n            \"extendedDominatedBy\": \"Erweitert-dominiert (durch #{{policy1}} und #{{policy2}})\",\n            \"incratio\": \"Inkrementelles Verhältnis={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Markiert\",\n                \"highlighted-default\": \"Empfohlen (für Standard-WTP)\",\n                \"extended-dominated\" : \"Erweitert-dominiert\",\n                \"dominated\": \"Dominiert\",\n                \"default\": \"Andere\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Richtung von{{name}} Optimierung\",\n                \"gradientArrow2\": \"Richtung von {{name}} Optimierung\",\n                \"dominatedRegion\": \"Dominierte Region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Graumarkiert Bereich stellt dominierte Region dar\",\n                \"gradientArrows\": \"Pfeile zeigen Verbesserungsrichtung an\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivitätsanalyse\",\n        \"buttons\": {\n            \"runJob\": \"Lauf\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Beenden\",\n            \"resumeJob\": \"Fortsetzen\",\n            \"downloadCsv\": \"CSV Herunterladen\",\n            \"back\": \"Zurück\",\n            \"clear\": \"Löschen\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Entfernen\",\n            \"addParameterValue\": \"Hinzufügen\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} Grundregeln\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Wärmekarte\"\n            }\n        },\n        \"policyPreview\": \"Grundregel Vorschau\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-Wege-Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado-diagramm\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Verringerung\",\n                    \"high\": \"Erhöhung\"\n                },\n                \"xAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistische Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"numberOfRuns\": {\n                    \"label\": \"Anzahl der Läufe\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formel\",\n                        \"help\": \"Wählen Sie die Formelvorlage aus dem Menü aus oder schreiben Sie benutzerdefinierten Code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\",\n                \"param-computation\": \"Fehler beim Berechnen von Parameterwerten:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Netzdiagramm\",\n            \"param\": {\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- prozentuale Veränderung zum Berücksichtigen\"\n                },\n                \"length\": {\n                    \"label\": \"Anzahl der zu testenden Werte\",\n                    \"help\": \"Anzahl der zu testenden Werte (an einer Seite des Bereichs)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Prozentuale Veränderung\",\n                \"yAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Rangliste\"\n        },\n        \"errors\":{\n            \"generic\": \"Fehler bei der Sensitivitätsanalyse: {{message}}\",\n            \"params\": \"Inkorrekte {{jobName}} Parametern\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Einstellungen\",\n        \"general\":{\n            \"title\": \"Allgemein\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontFamily\": \"Schriftfamilie\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"numberFormatLocale\": \"Zahlenformat Gebietsschema\"\n        },\n        \"payoff1\":{\n            \"title\": \"Auszahlung 1 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"payoff2\":{\n            \"title\": \"Auszahlung 2 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"probability\":{\n            \"title\": \"Wahrscheinlichkeit Zahlenformat\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"fontSize\": \"Schriftgröße\",\n            \"color\": \"Farbe\"\n        },\n        \"node\":{\n            \"title\": \"Knoten\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Beschreibung Schriftgröße\",\n                \"color\": \"Beschreibungsfarbe\"\n            },\n            \"payoff\": {\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            },\n            \"decision\": {\n                \"title\": \"Entscheidungsknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Zufall Knoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Endknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                },\n                \"payoff\": {\n                    \"title\": \"Auszahlung\",\n                    \"fontSize\": \"Schriftgröße\",\n                    \"color\": \"Farbe\",\n                    \"negativeColor\": \"Negative Farbe\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \" Zweig\",\n            \"stroke\": \"Farbe\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"selected\":{\n                \"title\": \"Ausgewählt\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\"\n            },\n            \"payoff\":{\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagrammtitel\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"color\": \"Farbe\",\n            \"margin\":{\n                \"title\": \"Rand\",\n                \"top\": \"Oben\",\n                \"bottom\": \"Unten\"\n            },\n            \"description\":{\n                \"title\": \"Untertitel (Diagrammbeschreibung)\",\n                \"show\": \"Anzeigen\",\n                \"fontSize\": \"Schriftgröße\",\n                \"fontWeight\": \"Schriftgewicht\",\n                \"fontStyle\": \"Schriftstil\",\n                \"color\": \"Farbe\",\n                \"marginTop\": \"Rand Oben\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Rangliste\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max Breite\",\n                \"highlightedColor\": \"Farbe der markierten Regel\",\n                \"highlightedDefaultColor\": \"Empfohlene Regel(für Standard-WTP) Farbe\",\n                \"extendedDominatedColor\": \"Farbe der erweitert-dominierten Regel\",\n                \"dominatedColor\": \"Farbe der dominierten Regel\",\n                \"defaultColor\": \"Farbe der anderen Regeln\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Weitere\",\n            \"disableAnimations\": \"Animationen Deaktivieren\",\n            \"forceFullEdgeRedraw\": \"Erzwingt vollständige Neuzeichnung der Zweige\",\n            \"hideLabels\": \"Verstecke Beschreibung\",\n            \"hidePayoffs\": \"Verstecke Auszahlungen\",\n            \"hideProbabilities\": \"Verstecke Wahrscheinlichkeiten\",\n            \"raw\": \"Rau\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Über\"\n    },\n    \"help\":{\n        \"header\": \"Hilfe\",\n        \"mouse\": {\n            \"header\":\"Mausaktionen:\",\n            \"list\":{\n                \"1\": \"Linke Maustaste: Knoten/Zweig Auswahl\",\n                \"2\": \"Rechte Maustaste: Kontextmenü (Hinzufügen / Manipulieren von Knoten)\",\n                \"3\": \"Linke Maus Doppelklick: Kontextmenü\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Tastatur:\",\n            \"list\":{\n                \"1\": \"Del: ausgewählte Knoten Löschen\",\n                \"2\": \"Ctrl-C/X: ausgewählte Knoten Kopieren/Ausschneiden\",\n                \"3\": \"Ctrl-V: kopierte Knoten als Teilbaum ausgewähltes Knotens einfügen\",\n                \"4\": \"Ctrl-Y/Z: Rückgängig/Wiederholen\",\n                \"5\": \"Ctrl-Alt-D/C/T: Neue Entscheidungs/Zufall/Endsknoten als Unterknoten von <strong>ausgewähltem Knoten</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Neue Entscheidungs/Zufall Knoten in <strong>ausgewählten Zweig </strong> Injizieren\"\n            }\n        },\n        \"docs\": \"Die Dokumentation von SilverDecisions ist unter <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a> verfügbar\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variablendefinitionen\",\n        \"scope\": {\n            \"global\": \"Globaler Anwendungsbereich\",\n            \"node\": \"Gewählten Knoten und Teilbaum Anwendungsbereich\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variabel Anwendungsbereich:\",\n            \"global\": \"Globaler\",\n            \"node\": \"Gewählten Knoten und Teilbaum\"\n        },\n        \"header\": \"Variablen\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Dialog Öffnen\",\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Mehrere Kriterien\",\n        \"defaultMaximizedCriterionName\": \"Effekt\",\n        \"defaultMinimizedCriterionName\": \"Kosten\",\n        \"nameOfCriterion1\": \"Name des Kriteriums 1\",\n        \"nameOfCriterion2\": \"Name des Kriteriums 2\",\n        \"defaultCriterion1Weight\": \"Default 1. Kriterium Gewicht\",\n        \"weightLowerBound\": \"Gewicht untere Grenze\",\n        \"weightUpperBound\": \"Gewicht obere Grenze\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Rangliste anzeigen\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontaler Rand\",\n        \"marginVertical\": \"Vertikaler Rand\",\n        \"nodeSize\": \"Knotengröße\",\n        \"edgeSlantWidthMax\": \"Kantenschräge (max)\",\n        \"gridWidth\": \"Breite\",\n        \"gridHeight\": \"Höhe\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Einzelheiten\",\n        \"title\" : \"Titel\",\n        \"description\" : \"Beschreibung\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Entscheidungsknoten\",\n                \"chance\":\"Zufall Knoten\",\n                \"terminal\":\"Endknoten\"\n            },\n            \"edge\": \"Zweig\",\n            \"text\": \"Schwimmender Text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Verbindungen\",\n                \"child\": {\n                    \"header\": \"Zweig #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Möchten Sie das aktuelle Diagramm wirklich löschen? Alle nicht gespeicherten Daten werden verloren.\",\n        \"openDiagram\": \"Sind Sie sicher? Alle nicht gespeicherten Diagrammdaten werden verloren.\",\n        \"beforeunload\": \"Sind Sie sicher, dass Sie SilverDecisions schließen möchten? Alle nicht gespeicherten Diagrammdaten werden verloren.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Fehler beim Analysieren der Datei!\",\n        \"fileApiNotSupported\":\"Die Datei-API wird in diesem Browser noch nicht unterstützt.\",\n        \"inputFilesProperty\":\"Ihr Browser scheint die `files`-Eigenschaft der Dateieingaben nicht zu unterstützen.\",\n        \"notSilverDecisionsFile\":\"Keine SilverDecisions-Datei!\",\n        \"incorrectVersionFormat\": \"Falsches Format der Versionszeichenfolge!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version der Datei ist neuer als Version des Softwares. Einige Funktionen möglicherweise fehlen.\",\n        \"objectiveComputationFailure\": \"Fehler beim Berechnen von Objektiven!\",\n        \"diagramDrawingFailure\": \"Fehler beim Zeichnen des Diagramms!\",\n        \"malformedData\":\"Fehler beim Lesen der Baumdaten!\",\n        \"pngExportNotSupported\": \"Der Export nach PNG wird in Ihrem Browser nicht unterstützt.\",\n        \"pngExportNotSupportedIE\": \"Der Export nach PNG wird in Internet Explorer nicht unterstützt.\",\n        \"svgExportNotSupported\": \"Der Export nach SVG wird in Ihrem Browser nicht unterstützt.\",\n        \"pdfExportNotSupported\": \"Der Export nach PDF wird in Ihrem Browser nicht unterstützt.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Falsche Auszahlungsformat Optionen\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Falsche Wahrscheinlichkeitsformat Optionen\",\n        \"incorrectNumberFormatOptions\": \"Falsche Zahlenformat, die Standardeinstellungen angewendet.\",\n        \"jsPDFisNotIncluded\": \"jsPDF ist nicht enthalten!\",\n        \"serverSideExportRequestFailure\": \"Export Server Anfrage fehlgeschlagen!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"New diagram\",\n        \"openDiagram\": \"Open existing diagram\",\n        \"saveDiagram\": \"Save current diagram\",\n        \"export\":{\n            \"label\": \"Export to\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Tree\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"View\",\n            \"options\": {\n                \"criterion1\":\"Criterion 1\",\n                \"criterion2\":\"Criterion 2\",\n                \"twoCriteria\":\"Two criteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Rule\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Undo\",\n        \"redo\": \"Redo\",\n        \"settings\": \"Settings\",\n        \"about\": \"About\",\n        \"sensitivityAnalysis\": \"Sensitivity analysis\",\n        \"recompute\": \"Recompute\"\n    },\n    \"node\":{\n        \"name\": \"Label\"\n    },\n    \"edge\":{\n        \"name\": \"Label\",\n        \"payoff\": \"Payoff\",\n        \"probability\": \"Probability\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"League table\",\n        \"buttons\": {\n            \"downloadCsv\": \"Download CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Policy #\",\n            \"policy\": \"Policy\",\n            \"comment\": \"Comment\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominated (by #{{policy}})\",\n            \"extendedDominatedBy\": \"extended-dominated (by #{{policy1}} and #{{policy2}})\",\n            \"incratio\": \"incremental ratio={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Recommended (for some WTP in range)\",\n                \"highlighted-default\": \"Recommended (for default WTP)\",\n                \"extended-dominated\" : \"Extended-dominated\",\n                \"dominated\": \"Dominated\",\n                \"default\": \"Other\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direction of {{name}} optimization\",\n                \"gradientArrow2\": \"Direction of {{name}} optimization\",\n                \"dominatedRegion\": \"Not recommended region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Grey area highlights not recommended region\",\n                \"gradientArrows\": \"Arrows indicate improvement direction\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivity analysis\",\n        \"buttons\": {\n            \"runJob\": \"Run\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Terminate\",\n            \"resumeJob\": \"Resume\",\n            \"downloadCsv\": \"Download CSV\",\n            \"back\": \"Back\",\n            \"clear\": \"Clear\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Remove\",\n            \"addParameterValue\": \"Add\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} policies\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Heatmap\"\n            }\n        },\n        \"policyPreview\": \"policy preview\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-way sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado diagram\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decrease\",\n                    \"high\": \"Increase\"\n                },\n                \"xAxisTitle\": \"Payoff\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistic sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"numberOfRuns\": {\n                    \"label\": \"Number of runs\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Select formula template from the menu or write custom code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\",\n                \"param-computation\": \"Error computing parameter values:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Spider plot\",\n            \"param\": {\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- percentage change to consider\"\n                },\n                \"length\": {\n                    \"label\": \"Number of values to test\",\n                    \"help\": \"Number of values to test (in one side of range)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Percentage change\",\n                \"yAxisTitle\": \"Payoff\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"League table\"\n        },\n        \"errors\":{\n            \"generic\": \"Error in {{jobName}} computations: {{message}}\",\n            \"params\": \"Incorrect {{jobName}} parameters\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Settings\",\n        \"general\":{\n            \"title\": \"General\",\n            \"fontSize\": \"Font size\",\n            \"fontFamily\": \"Font family\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"numberFormatLocale\": \"Number format locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Payoff 1 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"payoff2\":{\n            \"title\": \"Payoff 2 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"probability\":{\n            \"title\": \"Probability number format\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"fontSize\": \"Font size\",\n            \"color\": \"Color\"\n        },\n        \"node\":{\n            \"title\": \"Node\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Label font size\",\n                \"color\": \"Label color\"\n            },\n            \"payoff\": {\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            },\n            \"decision\": {\n                \"title\": \"Decision Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Chance Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Terminal Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                },\n                \"payoff\": {\n                    \"title\": \"Payoff\",\n                    \"fontSize\": \"Font size\",\n                    \"color\": \"Color\",\n                    \"negativeColor\": \"Negative color\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Edge\",\n            \"stroke\": \"Color\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"selected\":{\n                \"title\": \"Selected\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\"\n            },\n            \"payoff\":{\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagram title\",\n            \"fontSize\": \"Font size\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"color\": \"Color\",\n            \"margin\":{\n                \"title\": \"Margin\",\n                \"top\": \"Top\",\n                \"bottom\": \"Bottom\"\n            },\n            \"description\":{\n                \"title\": \"Subtitle (diagram description)\",\n                \"show\": \"Show\",\n                \"fontSize\": \"Font size\",\n                \"fontWeight\": \"Font weight\",\n                \"fontStyle\": \"Font style\",\n                \"color\": \"Color\",\n                \"marginTop\": \"Margin top\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"League Table\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max width\",\n                \"highlightedColor\": \"Recommended (for some WTP in range) policy color\",\n                \"highlightedDefaultColor\": \"Recommended (for default WTP) policy color\",\n                \"extendedDominatedColor\": \"Extended dominated policy color\",\n                \"dominatedColor\": \"Dominated policy color\",\n                \"defaultColor\": \"Other policies color\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Other\",\n            \"disableAnimations\": \"Disable animations\",\n            \"forceFullEdgeRedraw\": \"Force full redraw of edges\",\n            \"hideLabels\": \"Hide labels\",\n            \"hidePayoffs\": \"Hide payoffs\",\n            \"hideProbabilities\": \"Hide probabilities\",\n            \"raw\": \"Raw\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"About\"\n    },\n    \"help\":{\n        \"header\": \"Help\",\n        \"mouse\": {\n            \"header\":\"Mouse actions:\",\n            \"list\":{\n                \"1\": \"left mouse button: node/edge selection\",\n                \"2\": \"right mouse button: context menu (adding/manipulating nodes)\",\n                \"3\": \"left mouse dbclick: context menu\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Keyboard:\",\n            \"list\":{\n                \"1\": \"Del: delete selected nodes\",\n                \"2\": \"Ctrl-C/X: copy/cut selected nodes\",\n                \"3\": \"Ctrl-V: paste copied nodes as a subtree of a selected node\",\n                \"4\": \"Ctrl-Y/Z: undo/redo\",\n                \"5\": \"Ctrl-Alt-D/C/T: add new Decision/Chance/Terminal subnode of a <strong>selected node</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inject new Decision/Chance node into a <strong>selected edge</strong>\"\n            }\n        },\n        \"docs\": \"Documentation of SilverDecisions is available <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variable definitions\",\n        \"scope\": {\n            \"global\": \"global scope\",\n            \"node\": \"selected node and subtree scope\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variable scope:\",\n            \"global\": \"global\",\n            \"node\": \"selected node and subtree\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Open dialog\",\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Multiple criteria\",\n        \"defaultMaximizedCriterionName\": \"Effect\",\n        \"defaultMinimizedCriterionName\": \"Cost\",\n        \"nameOfCriterion1\": \"Name for criterion 1\",\n        \"nameOfCriterion2\": \"Name for criterion 2\",\n        \"defaultCriterion1Weight\": \"Default 1st criterion weight\",\n        \"weightLowerBound\": \"Weight lower bound\",\n        \"weightUpperBound\": \"Weight upper bound\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Show league table\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontal Margin\",\n        \"marginVertical\": \"Vertical Margin\",\n        \"nodeSize\": \"Node size\",\n        \"edgeSlantWidthMax\": \"Edge slant (max)\",\n        \"gridWidth\": \"Width\",\n        \"gridHeight\": \"Height\",\n        \"scale\": \"Scale\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Details\",\n        \"title\" : \"Title\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Decision Node\",\n                \"chance\":\"Chance Node\",\n                \"terminal\":\"Terminal Node\"\n            },\n            \"edge\": \"Edge\",\n            \"text\": \"Floating text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connections\",\n                \"child\": {\n                    \"header\": \"Edge #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Do you really want to clear current diagram? All unsaved data will be lost.\",\n        \"openDiagram\": \"Are you sure? All unsaved diagram data will be lost.\",\n        \"beforeunload\": \"Are you sure you want to close SilverDecisions? All unsaved diagram data will be lost.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Error parsing file!\",\n        \"fileApiNotSupported\":\"The file API isn't supported on this browser yet.\",\n        \"inputFilesProperty\":\"Your browser doesn't seem to support the `files` property of file inputs.\",\n        \"notSilverDecisionsFile\":\"Not a SilverDecisions file!\",\n        \"incorrectVersionFormat\": \"Incorrect format of version string!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version in file is newer than version of the application. Some features may be missing.\",\n        \"objectiveComputationFailure\": \"Error while computing objective!\",\n        \"diagramDrawingFailure\": \"Error while drawing diagram!\",\n        \"malformedData\":\"Error reading tree data!\",\n        \"pngExportNotSupported\": \"Export to PNG is not supported in your browser.\",\n        \"pngExportNotSupportedIE\": \"Export to PNG not supported in Internet Explorer.\",\n        \"svgExportNotSupported\": \"Export to SVG is not supported in your browser.\",\n        \"pdfExportNotSupported\": \"Export to PDF is not supported in your browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Incorrect payoff number format options\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Incorrect probability number format options\",\n        \"incorrectNumberFormatOptions\": \"Incorrect number format options, using default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF is not included!\",\n        \"serverSideExportRequestFailure\": \"Export Server request failed!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nouveau diagramme\",\n        \"openDiagram\": \"Ouvrir le diagramme existant\",\n        \"saveDiagram\": \"Enregistrer le diagramme actuel\",\n        \"export\":{\n            \"label\": \"Exporter vers\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposition\",\n            \"manual\": \"Manuel\",\n            \"tree\": \"Arbre\",\n            \"cluster\": \"Grappe\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vue\",\n            \"options\": {\n                \"criterion1\":\"Critère 1\",\n                \"criterion2\":\"Critère 2\",\n                \"twoCriteria\":\"Deux critères\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regle\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Annuler\",\n        \"redo\": \"Refaire\",\n        \"settings\": \"Parametres\",\n        \"about\": \"A propos\",\n        \"sensitivityAnalysis\": \"Analyse de sensibilité\",\n        \"recompute\": \"Recalculer\"\n    },\n    \"node\":{\n        \"name\": \"Étiquette\"\n    },\n    \"edge\":{\n        \"name\": \"Étiquette\",\n        \"payoff\": \"Avantage\",\n        \"probability\": \"Probabilité\"\n    },\n    \"text\":{\n        \"value\": \"Texte\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classement\",\n        \"buttons\": {\n            \"downloadCsv\": \"Télécharger CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Règle #\",\n            \"policy\": \"Règle\",\n            \"comment\": \"Commentaire\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominé (par #{{policy}})\",\n            \"extendedDominatedBy\": \"Étendu-dominé (par #{{policy1}} et #{{policy2}})\",\n            \"incratio\": \"Ratio incrémental={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Surligné\",\n                \"highlighted-default\": \"Recommandée (pour WTP par défaut)\",\n                \"extended-dominated\" : \"Étendu-dominé\",\n                \"dominated\": \"Dominé\",\n                \"default\": \"Autre\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"La direction de {{name}} optimisation\",\n                \"gradientArrow2\": \"La direction de {{name}} optimisation\",\n                \"dominatedRegion\": \"Région dominée\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"La région grise surligne la région dominée\",\n                \"gradientArrows\": \"Les flèches indiquent une direction d'amélioration\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analyse de sensibilité\",\n        \"buttons\": {\n            \"runJob\": \"Exécuter\",\n            \"stopJob\": \"Arrêter\",\n            \"terminateJob\": \"Terminer\",\n            \"resumeJob\": \"Reprendre\",\n            \"downloadCsv\": \"Télécharger CSV\",\n            \"back\": \"Retourner\",\n            \"clear\": \"Effacer\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Effacer\",\n            \"addParameterValue\": \"Ajouter\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} règles\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Carte de chaleur\"\n            }\n        },\n        \"policyPreview\": \"Aperçu de la règle\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité multivariée\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Graphique en tornade\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Diminuer\",\n                    \"high\": \"Augmenter\"\n                },\n                \"xAxisTitle\": \"Avantage\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité probabiliste\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"numberOfRuns\": {\n                    \"label\": \"Nombre d'essais\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formule\",\n                        \"help\": \"Sélectionner le modèle de la formule dans le menu ou écrire un code personnalisé.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\",\n                \"param-computation\": \"Erreur de calcul des valeurs de paramètres:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Graphique en radar\",\n            \"param\": {\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- changement de pourcentage à considérer\"\n                },\n                \"length\": {\n                    \"label\": \"Nombre de valeurs à tester\",\n                    \"help\": \"Nombre de valeurs à tester (dans une partie de gamme)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Nom\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Changement de pourcentage\",\n                \"yAxisTitle\": \"Avantage\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classement\"\n        },\n        \"errors\":{\n            \"generic\": \"Erreur de calcul d'analyse de sensibilité: {{message}}\",\n            \"params\": \"Paramètres du {{jobName}} sont incorrect\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Parametres\",\n        \"general\":{\n            \"title\": \"Général\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontFamily\": \"Famille de police\",\n            \"fontWeight\": \"Poid de la police\",\n            \"fontStyle\": \"Style de police\",\n            \"numberFormatLocale\": \"format local de numérotation\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format de la numérotation des avantages 1\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format de la numérotation des avantages 2\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"probability\":{\n            \"title\": \"Format de la numérotatio des probabilités\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"fontSize\": \"Taille de police\",\n            \"color\": \"Couleur\"\n        },\n        \"node\":{\n            \"title\": \"Noud\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police de l'étiquette\",\n                \"color\": \"Couleur de l'étiquette\"\n            },\n            \"payoff\": {\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            },\n            \"decision\": {\n                \"title\": \"Noeud décisionnel\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de trait\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionnée\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Noud aléatoire\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Noeud terminal\",\n                \"fill\": \"Couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                },\n                \"payoff\": {\n                    \"title\": \"Avantage\",\n                    \"fontSize\": \"Taille de la police\",\n                    \"color\": \"Couleur\",\n                    \"negativeColor\": \"Négatif couleur\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Bord\",\n            \"stroke\": \"Couleur\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"selected\":{\n                \"title\": \"Choisi\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\"\n            },\n            \"payoff\":{\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titre du diagramme\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontWeight\": \"Poids de la police\",\n            \"fontStyle\": \"Style de la police\",\n            \"color\": \"Couleur\",\n            \"margin\":{\n                \"title\": \"Marge\",\n                \"top\": \"Haut du diagramme\",\n                \"bottom\": \"Bas du diagramme\"\n            },\n            \"description\":{\n                \"title\": \"Sous-titre (description du diagramme)\",\n                \"show\": \"Afficher\",\n                \"fontSize\": \"Taille de la police\",\n                \"fontWeight\": \"Poids de la police\",\n                \"fontStyle\": \"Style de police\",\n                \"color\": \"Couleur\",\n                \"marginTop\": \"Haut du marge\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classement\",\n            \"plot\": {\n                \"title\": \"Le graphe\",\n                \"maxWidth\": \"Largeur maximale\",\n                \"highlightedColor\": \"Couleur de la règle soulignée\",\n                \"highlightedDefaultColor\": \"Couleur recommandée pour la règle (pour WTP par défaut)\",\n                \"extendedDominatedColor\": \"Couleur de la règle étendu-dominée\",\n                \"dominatedColor\": \"Couleur de la règle dominée\",\n                \"defaultColor\": \"Couleur des autres règles\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Autre\",\n            \"disableAnimations\": \"Désactiver les animations\",\n            \"forceFullEdgeRedraw\": \"Forcer le redessinage complet des bords\",\n            \"hideLabels\": \"Masquer les étiquettes\",\n            \"hidePayoffs\": \"Masquer les paiements\",\n            \"hideProbabilities\": \"Masquer les probabilités\",\n            \"raw\": \"Brut\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"A propos\"\n    },\n    \"help\":{\n        \"header\": \"Aide\",\n        \"mouse\": {\n            \"header\":\"Actions de la souris:\",\n            \"list\":{\n                \"1\": \"Bouton gauche de la souris: sélection du noud/bord\",\n                \"2\": \"Bouton droit de la souris: menu contextuel (ajout/manipulation des nouds)\",\n                \"3\": \"Double clic gauche de la souris: menu contextuel\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Raccourcis clavier:\",\n            \"list\":{\n                \"1\": \"Del: effacer les nouds sélectionnés\",\n                \"2\": \"Ctrl-C/X: copier/couper les nouds sélectionnés\",\n                \"3\": \"Ctrl-V: coller les nouds copiés comme un sous-arbre d'un noud sélectionné\",\n                \"4\": \"Ctrl-Y/Z: annuler/refaire\",\n                \"5\": \"Ctrl-Alt-D/C/T: ajouter un nouveau sous-noud de décision/aléatoire/terminal d'un <strong>noud sélectionné</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: injecter un nouveau noeud de décision/aléatoire dans un <strong>bord sélectionné</strong>\"\n            }\n        },\n        \"docs\": \"La documentation de SilverDecisions est disponible  <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">ici</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Définitions des variables\",\n        \"scope\": {\n            \"global\": \"portée mondiale\",\n            \"node\": \"la portée des nœud et sous-arborescence sélectionné\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Portée de la variable:\",\n            \"global\": \"mondial\",\n            \"node\": \"nœud et sous-arborescence sélectionné\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Ouvrir la boîte de dialogue\",\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Critères multiples\",\n        \"defaultMaximizedCriterionName\": \"Effet\",\n        \"defaultMinimizedCriterionName\": \"Coût\",\n        \"nameOfCriterion1\": \"Le nome de critère 1\",\n        \"nameOfCriterion2\": \"Le nome de critère 2\",\n        \"defaultCriterion1Weight\": \"Par défaut poid du 1er critère\",\n        \"weightLowerBound\": \"Poid de la limite inférieure\",\n        \"weightUpperBound\": \"Poid de la limite supérieure\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Montrer classement\",\n            \"flip\": \"Basculer\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposition\",\n        \"marginHorizontal\": \"Marge horizontale\",\n        \"marginVertical\": \"Marge verticale\",\n        \"nodeSize\": \"Taille du noeud\",\n        \"edgeSlantWidthMax\": \"Inclinaison du bord (max.)\",\n        \"gridWidth\": \"Largeur\",\n        \"gridHeight\": \"Taille\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Détails\",\n        \"title\" : \"Titre\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Noeud de décision\",\n                \"chance\":\"Noud aléatoire\",\n                \"terminal\":\"Noeud terminal\"\n            },\n            \"edge\": \"Bord\",\n            \"text\": \"Texte flottant\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Les connexions\",\n                \"child\": {\n                    \"header\": \"Bord #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Voulez-vous vraiment effacer le diagramme actuel? Toutes les données non enregistrées seront perdues.\",\n        \"openDiagram\": \"Etes-vous sur? Toutes les données de diagramme non enregistrées seront perdues.\",\n        \"beforeunload\": \"Voulez-vous vraiment fermer SilverDecisions? Toutes les données de diagramme non enregistrées seront perdues.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Erreur lors de l'analyse du fichier!\",\n        \"fileApiNotSupported\":\"L'API du fichier n'est pas encore prise en charge sur ce navigateur.\",\n        \"inputFilesProperty\":\"Votre navigateur ne semble pas prendre en charge la propriété `fichiers`.\",\n        \"notSilverDecisionsFile\":\"Pas de fichiers SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Format incorrect de la chaîne de version!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La version dans le fichier est plus récente que la version de l'application. Certaines fonctionnalités peuvent être manquantes.\",\n        \"objectiveComputationFailure\": \"Erreur en calculant l'objectif!\",\n        \"diagramDrawingFailure\": \"Erreur lors du dessin diagramme!\",\n        \"malformedData\":\"Erreur lors de la lecture des données arborescentes!\",\n        \"pngExportNotSupported\": \"L'exportation vers PNG n'est pas prise en charge dans votre navigateur.\",\n        \"pngExportNotSupportedIE\": \"Exporter vers PNG n'est pas pris en charge dans Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'exportation vers SVG n'est pas prise en charge par votre navigateur.\",\n        \"pdfExportNotSupported\": \"L'exportation au format PDF n'est pas prise en charge par votre navigateur.\",\n        \"incorrectPayoffNumberFormatOptions\": \"L'option de format de numérotation des avantages chiosie est incorrecte.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"L'option de format de numérotation des probabilités chiosie est incorrecte.\",\n        \"incorrectNumberFormatOptions\": \"L'option de format de numérotation choisie est incorrecte.\",\n        \"jsPDFisNotIncluded\": \"JsPDF n'est pas inclus!\",\n        \"serverSideExportRequestFailure\": \"La demande de téléchargement au serveur a échoué!\"\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: {\n                en: {\n                    translation: en\n                },\n                pl: {\n                    translation: pl\n                },\n                it: {\n                    translation: it\n                },\n                de: {\n                    translation: de\n                },\n                fr: {\n                    translation: fr\n                }\n            }\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nuovo diagramma\",\n        \"openDiagram\": \"Apri diagramma esistnte\",\n        \"saveDiagram\": \"Salva il diagramma corente\",\n        \"export\":{\n            \"label\": \"Esporta in\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposizione\",\n            \"manual\": \"Manuale\",\n            \"tree\": \"Albero\",\n            \"cluster\": \"Grappolo\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vista\",\n            \"options\": {\n                \"criterion1\":\"Criterio 1\",\n                \"criterion2\":\"Criterio 2\",\n                \"twoCriteria\":\"Due criteri\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regola\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"max-min\",\n                \"maxi-max\":\"max-max\",\n                \"mini-min\":\"min-min\",\n                \"mini-max\":\"min-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Ripristina\",\n        \"redo\": \"Ripeti\",\n        \"settings\": \"Settaggi\",\n        \"about\": \"Di\",\n        \"sensitivityAnalysis\": \"Analisi di sensibilità\",\n        \"recompute\": \"Ricalcola\"\n    },\n    \"node\":{\n        \"name\": \"Etichetta\"\n    },\n    \"edge\":{\n        \"name\": \"Etichetta\",\n        \"payoff\": \"Saldo\",\n        \"probability\": \"Probabilità\"\n    },\n    \"text\":{\n        \"value\": \"Testo\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classifica\",\n        \"buttons\": {\n            \"downloadCsv\": \"Scarica CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regola #\",\n            \"policy\": \"Regola\",\n            \"comment\": \"Commento\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominata (da #{{policy}})\",\n            \"extendedDominatedBy\": \"estesa-dominata (da #{{policy1}} e #{{policy2}})\",\n            \"incratio\": \"rapporto incrementale={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Evidenziato\",\n                \"highlighted-default\": \"Raccomandato (per default WTP)\",\n                \"extended-dominated\" : \"Estesa-dominata\",\n                \"dominated\": \"Dominata\",\n                \"default\": \"Altro\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direzione di {{name}} ottimizzazione\",\n                \"gradientArrow2\": \"Direzione di {{name}} ottimizzazione\",\n                \"dominatedRegion\": \"Regione dominata\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"L'area grigia evidenzia la regione dominata\",\n                \"gradientArrows\": \"Le frecce indicano la direzione di miglioramento\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analisi di sensibilità\",\n        \"buttons\": {\n            \"runJob\": \"Esegui\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Esci\",\n            \"resumeJob\": \"Riprendi\",\n            \"downloadCsv\": \"Scaricare CSV\",\n            \"back\": \"Indietro\",\n            \"clear\": \"Cancella\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Cancella\",\n            \"addParameterValue\": \"Aggiungi\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} politiche\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Massimo\",\n                \"minimum\": \"Minimo\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mappa di calore\"\n            }\n        },\n        \"policyPreview\": \"Anteprima della politica\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità multivariata\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagramma a tornado\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decresce\",\n                    \"high\": \"Cresce\"\n                },\n                \"xAxisTitle\": \"Saldo\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità probabilistica\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"numberOfRuns\": {\n                    \"label\": \"Numero di operazioni\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Seleziona modello di formula dal menu o scrivi un codice personalizzato.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\",\n                \"param-computation\": \"Errore di calcolo dei valori dei parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n                \"spider-plot\": {\n            \"name\": \"Diagramma di Kiviat\",\n            \"param\": {\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- variazione percentuale da considerare\"\n                },\n                \"length\": {\n                    \"label\": \"Numero di valpri da testare\",\n                    \"help\": \"Numero di valpri da testare (in una parte della gamma)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Variazione percentuale\",\n                \"yAxisTitle\": \"Saldo\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classifica\"\n        },\n        \"errors\":{\n            \"generic\": \"Errore nei calcoli di analisi di sensibilità: {{message}}\",\n            \"params\": \"{{jobName}} parameteri errati\"\n        }\n    },\n\n    \"settingsDialog\":{\n        \"title\": \"Settaggi\",\n        \"general\":{\n            \"title\": \"Generale\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontFamily\": \"Famiglia font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"numberFormatLocale\": \"Formato numero locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Formato saldo 1\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"payoff2\":{\n            \"title\": \"Formato saldo 2\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"probability\":{\n            \"title\": \"Formato probabilità\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"fontSize\": \"Dimensione font\",\n            \"color\": \"Colore\"\n        },\n        \"node\":{\n            \"title\": \"Nodo\",\n            \"strokeWidth\": \"Spessore linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Spessore linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font etichetta\",\n                \"color\": \"Colore etichetta\"\n            },\n            \"payoff\": {\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            },\n            \"decision\": {\n                \"title\": \"Nodo dicisione\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Nodo opportunità\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Nodo terminale\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                },\n                \"payoff\": {\n                    \"title\": \"Saldo\",\n                    \"fontSize\": \"Dimensione font\",\n                    \"color\": \"Colore\",\n                    \"negativeColor\": \"Colore negativo\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Ramo\",\n            \"stroke\": \"Colore\",\n            \"strokeWidth\": \"Larghezza linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"selected\":{\n                \"title\": \"Selezionato\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\"\n            },\n            \"payoff\":{\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titolo diagramma\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"color\": \"Colore\",\n            \"margin\":{\n                \"title\": \"Margine\",\n                \"top\": \"Superiore\",\n                \"bottom\": \"Inferiore\"\n            },\n            \"description\":{\n                \"title\": \"Sotto-titolo (descrizione diagramma)\",\n                \"show\": \"Mostra\",\n                \"fontSize\": \"Dimensione font\",\n                \"fontWeight\": \"Peso del font\",\n                \"fontStyle\": \"Stile font\",\n                \"color\": \"Colore\",\n                \"marginTop\": \"Margine superiore\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classifica\",\n            \"plot\": {\n                \"title\": \"Grafico\",\n                \"maxWidth\": \"Larghezza massima\",\n                \"highlightedColor\": \"Colore evidenziato della regola\",\n                \"highlightedDefaultColor\": \"Colore polizza raccomandata (per default WTP)\",\n                \"extendedDominatedColor\": \"Colori della regola dominata estesa\",\n                \"dominatedColor\": \"Colore della denominata regola\",\n                \"defaultColor\": \"Altri criteri colore\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Altro\",\n            \"disableAnimations\": \"Disabilita animazione\",\n            \"forceFullEdgeRedraw\": \"Forza ridisegno dei rami\",\n            \"hideLabels\": \"Nascondi le etichette\",\n            \"hidePayoffs\": \"Nascondi saldo\",\n            \"hideProbabilities\": \"Nascondi le probabilità\",\n            \"raw\": \"Non elaborato\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informazioni\"\n    },\n    \"help\":{\n        \"header\": \"Aiuto\",\n        \"mouse\": {\n            \"header\":\"Azioni mouse:\",\n            \"list\":{\n                \"1\": \"Bottone sinistro: selezione nodo/ramo\",\n                \"2\": \"Bottone destro: menu di contesto (aggiunta/manipolazione nodi)\",\n                \"3\": \"Doppio click bottone sinistro: menu di contesto\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Scorciatoie tastiera:\",\n            \"list\":{\n                \"1\": \"Del: cancella nodi selezionati\",\n                \"2\": \"Ctrl-C/X: copia/taglia nodi selezionati\",\n                \"3\": \"Ctrl-V: incolla nodi copiati come sotto-albero di un nodo selezionato\",\n                \"4\": \"Ctrl-Y/Z: ripristina/ripeti\",\n                \"5\": \"Ctrl-Alt-D/C/T: aggiungi nuovo sottonodo Decisione/Opportunità/Terminale di un <strong>nodo selezionato</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inietta un nuovo nodo Decisione/Opportunità in un <strong>ramo selezionato</strong>\"\n            }\n        },\n        \"docs\": \"La documentazione di SilverDecisions e disponibile <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">qui</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definizioni delle variabili\",\n        \"scope\": {\n            \"global\": \"raggio globale\",\n            \"node\": \"raggio di nodo e sotto-albero selezionati\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Raggio variabile:\",\n            \"global\": \"globale\",\n            \"node\": \"nodo e sotto-albero selezionati\"\n        },\n        \"header\": \"Variabili\",\n        \"code\": \"Codice\",\n        \"buttons\":{\n            \"openDialog\" : \"Apri il dialogo\",\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Criteri multipli\",\n        \"defaultMaximizedCriterionName\": \"Effetto\",\n        \"defaultMinimizedCriterionName\": \"Costo\",\n        \"nameOfCriterion1\": \"Nome del criterio 1\",\n        \"nameOfCriterion2\": \"Nome del criterio 2\",\n        \"defaultCriterion1Weight\": \"Predefinito 1° peso criterio\",\n        \"weightLowerBound\": \"Peso inferiore limitato\",\n        \"weightUpperBound\": \"Peso superiore del limite\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Mostra la classifica\",\n            \"flip\": \"Ribalta\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposizione\",\n        \"marginHorizontal\": \"Margine orizzontale\",\n        \"marginVertical\": \"Margine verticale\",\n        \"nodeSize\": \"Dimensione nodo\",\n        \"edgeSlantWidthMax\": \"Inclinazione nodo\",\n        \"gridWidth\": \"Larghezza\",\n        \"gridHeight\": \"Altezza\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Dettagli\",\n        \"title\" : \"Titolo\",\n        \"description\" : \"Descrizione\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Nodo decisione\",\n                \"chance\":\"Nodo opportunità\",\n                \"terminal\":\"Nodo terminale\"\n            },\n            \"edge\": \"Ramo\",\n            \"text\": \"Testo mobile\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connessioni\",\n                \"child\": {\n                    \"header\": \"Ramo #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Vuoi davvero cancellare ildiagramma corrente ? Tutti i dati non salvati saranno persi.\",\n        \"openDiagram\": \"Sei sicuro? Tutti i dati non salvati saranno persi.\",\n        \"beforeunload\": \"Sei sicuro di voler uscire da SilverDecisions ?Tutti i dati non salvati saranno persi.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Errore analizzando il file !\",\n        \"fileApiNotSupported\":\"l'API di questo file non è ancora supportata in questo browser.  \",\n        \"inputFilesProperty\":\"Il tuo browser non sembra supportare la proprieta del file di input.\",\n        \"notSilverDecisionsFile\":\"Non è un file SilverDecisions !\",\n        \"incorrectVersionFormat\": \"Formato non corretto della serie di versione!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La versione in file è più recente rispetto alla versione dell'applicazione. Alcune funzionalità possono essere indisponibili.\",\n        \"objectiveComputationFailure\": \"Errore durante il calcolo obiettivo!\",\n        \"diagramDrawingFailure\": \"Errore durante il disegno della diagramma!\",\n        \"malformedData\":\"Errore durante la lettura dei dati dell'albero !\",\n        \"pngExportNotSupported\": \"L'esport in formato PNG non è supportata nel tuo browser.\",\n        \"pngExportNotSupportedIE\": \"L'esport in formato PNG non è supportata in Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'esport in formato SVG non è supportata nel tuo browser.\",\n        \"pdfExportNotSupported\": \"L'esport in formato PDF non è supportata nel tuo browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Opzioni per il formato dei saldi non corrette.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Opzioni per il formato delle probabilità non corrette.\",\n        \"incorrectNumberFormatOptions\": \"Opzioni per il formato dei numeri non corrette, utilizzo del default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF non incluso !\",\n        \"serverSideExportRequestFailure\": \"Richiesta di export fallita lato server !\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nowy diagram\",\n        \"openDiagram\": \"Otwórz diagram\",\n        \"saveDiagram\": \"Zapisz diagram\",\n        \"export\":{\n            \"label\": \"Eksport\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Układ\",\n            \"manual\": \"Ręczny\",\n            \"tree\": \"Drzewo\",\n            \"cluster\": \"Zgrupowany\"\n        },\n        \"viewMode\": {\n            \"label\": \"Widok\",\n            \"options\": {\n                \"criterion1\":\"Kryterium 1\",\n                \"criterion2\":\"Kryterium 2\",\n                \"twoCriteria\":\"Dwa kryteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Reguła\",\n            \"options\": {\n                \"expected-value-maximization\":\"maksimum\",\n                \"expected-value-minimization\":\"minimum\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Cofnij\",\n        \"redo\": \"Ponów\",\n        \"settings\": \"Ustawienia\",\n        \"about\": \"Informacje\",\n        \"sensitivityAnalysis\": \"Analiza wrażliwości\",\n        \"recompute\": \"Przelicz\"\n    },\n    \"node\":{\n        \"name\": \"Etykieta\"\n    },\n    \"edge\":{\n        \"name\": \"Etykieta\",\n        \"payoff\": \"Wypłata\",\n        \"probability\": \"Prawdopodobieństwo\"\n    },\n    \"text\":{\n        \"value\": \"Tekst\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Tabela ligowa\",\n        \"buttons\": {\n            \"downloadCsv\": \"Pobierz CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Nr polityki\",\n            \"policy\": \"Polityka\",\n            \"comment\": \"Komentarz\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"zdominowana (przez #{{policy}})\",\n            \"extendedDominatedBy\": \"zdominowana rozszerzenie (przez #{{policy1}} i #{{policy2}})\",\n            \"incratio\": \"inkrementalny iloraz={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Rekomendowany (dla pewnej wartości WTP w zakresie)\",\n                \"highlighted-default\": \"Rekomendowany (dla domyślnej wartości WTP)\",\n                \"extended-dominated\" : \"Zdominowana rozszerzenie\",\n                \"dominated\": \"Zdominowana\",\n                \"default\": \"Inne\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Kierunek optymalizacji {{name}}\",\n                \"gradientArrow2\": \"Kierunek optymalizacji {{name}}\",\n                \"dominatedRegion\": \"Obszar zdominowany\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Szary region oznacza obszar zdominowany\",\n                \"gradientArrows\": \"Strzałki wskazują kierunek poprawy\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analiza wrażliwości\",\n        \"buttons\": {\n            \"runJob\": \"Uruchom\",\n            \"stopJob\": \"Zatrzymaj\",\n            \"terminateJob\": \"Zakończ\",\n            \"resumeJob\": \"Wznów\",\n            \"downloadCsv\": \"Pobierz CSV\",\n            \"back\": \"Wstecz\",\n            \"clear\": \"Wyczyść\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Usuń\",\n            \"addParameterValue\": \"Dodaj\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} polityk\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maksimum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mapa cieplna\"\n            }\n        },\n        \"policyPreview\": \"podgląd polityki\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analiza wrażliwości N-czynnikowa\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maksimum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagram tornado\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maximum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Zmniejszenie\",\n                    \"high\": \"Zwiększenie\"\n                },\n                \"xAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistyczna analiza wrażliwości\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"numberOfRuns\": {\n                    \"label\": \"Liczba powtórzeń\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis reguły\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formuła\",\n                        \"help\": \"Wybierz wzór formuły z menu lub wpisz własny kod\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\",\n                \"param-computation\": \"Błąd w wyliczaniu wartości parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Tabela ligowa\"\n        },\n        \"spider-plot\": {\n            \"name\": \"Wykres pajęczynowy\",\n            \"param\": {\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- zmiana procentowa do analizy\"\n                },\n                \"length\": {\n                    \"label\": \"Liczba wartości do przetestowa\",\n                    \"help\": \"Liczba wartości do przetestowa (po jednej stronie zakresu)\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Zmiana procentowa\",\n                \"yAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"errors\":{\n            \"generic\": \"Błąd w obliczeniach analizy wrażliwości: {{message}}\",\n            \"params\": \"Błędne parametry w {{jobName}}\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Ustawienia\",\n        \"general\":{\n            \"title\": \"Ogólne\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontFamily\": \"Rodzina czcionek\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"numberFormatLocale\": \"Kod lokalizacji językowej liczb\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format wypłaty 1\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format wypłaty 2\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"probability\":{\n            \"title\": \"Format prawdopodobieństwa\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"color\": \"Kolor\"\n        },\n        \"node\":{\n            \"title\": \"Węzeł\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalny\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki etykiety\",\n                \"color\": \"Kolor etykiety\"\n            },\n            \"payoff\": {\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            },\n            \"decision\": {\n                \"title\": \"Węzeł Decyzyjny\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Węzeł Losowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Węzeł Końcowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                },\n                \"payoff\": {\n                    \"title\": \"Wypłata\",\n                    \"fontSize\": \"Rozmiar czcionki\",\n                    \"color\": \"Kolor\",\n                    \"negativeColor\": \"Kolor wartości ujemnej\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Krawędź\",\n            \"stroke\": \"Kolor\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalna\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"selected\":{\n                \"title\": \"Zaznaczona\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\"\n            },\n            \"payoff\":{\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Tytuł diagramu\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"color\": \"Kolor\",\n            \"margin\":{\n                \"title\": \"Margines\",\n                \"top\": \"Górny\",\n                \"bottom\": \"Dolny\"\n            },\n            \"description\":{\n                \"title\": \"Podtytuł (opis diagramu)\",\n                \"show\": \"Wyświetl\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"fontWeight\": \"Waga czcionki\",\n                \"fontStyle\": \"Styl czcionki\",\n                \"color\": \"Kolor\",\n                \"marginTop\": \"Margines górny\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Tabela ligowa\",\n            \"plot\": {\n                \"title\": \"Wykres\",\n                \"maxWidth\": \"Maksymalna szerokość\",\n                \"highlightedColor\": \"Kolor polityki rekomendowanej (dla pewnego WTP w zakresie)\",\n                \"highlightedDefaultColor\": \"Kolor polityki rekomendowanej (dla domyślnego WTP)\",\n                \"extendedDominatedColor\": \"Kolog polityki zdominowanej rozszerzenie\",\n                \"dominatedColor\": \"Kolor polityki zdominowanej\",\n                \"defaultColor\": \"Kolor innych polityk\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Inne\",\n            \"disableAnimations\": \"Wyłącz animacje\",\n            \"forceFullEdgeRedraw\": \"Wymuś pełne przerysowywanie krawędzi\",\n            \"hideLabels\": \"Ukryj etykiety\",\n            \"hidePayoffs\": \"Ukryj wypłaty\",\n            \"hideProbabilities\": \"Ukryj prawdopodobieństwa\",\n            \"raw\": \"Surowy\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informacje\"\n    },\n    \"help\":{\n        \"header\": \"Pomoc\",\n        \"mouse\": {\n            \"header\":\"Akcje myszy:\",\n            \"list\":{\n                \"1\": \"lewy klawisz myszy: wybór węzła/krawędzi\",\n                \"2\": \"prawy klawisz myszy: menu kontekstowe (dodawanie/manipulowanie węzłami)\",\n                \"3\": \"podwójne kliknięcie lewym przyciskiem myszy: menu kontekstowe\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Skróty klawiszowe:\",\n            \"list\":{\n                \"1\": \"Del: usuwanie wybranych węzłów\",\n                \"2\": \"Ctrl-C/X: kopiowanie/wycinanie wybranych węzłów\",\n                \"3\": \"Ctrl-V: wklej skopiowane węzły jako poddrzewo wybranego węzła\",\n                \"4\": \"Ctrl-Y/Z: cofnij/ponów\",\n                \"5\": \"Ctrl-Alt-D/C/T: dodaj nowy węzeł Decyzyjny/Losowy/Końcowy jako dziecko <strong>wybranego węzła</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Wstrzyknij nowy węzeł Decyzyjny/Losowy do <strong>wybranej krawędzi</strong>\"\n            }\n        },\n        \"docs\": \"Dokumentacja SilverDecisions jest dostępna <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">tutaj</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definicje zmiennych\",\n        \"scope\": {\n            \"global\": \"zasięg globalny\",\n            \"node\": \"zasięg wybranego węzła i poddrzewa\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Zasięg zmiennej:\",\n            \"global\": \"globalny\",\n            \"node\": \"wybrany węzeł i poddrzewo\"\n        },\n        \"header\": \"Zmienne\",\n        \"code\": \"Kod\",\n        \"buttons\":{\n            \"openDialog\" : \"Otwórz okno dialogowe\",\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Wiele kryteriów\",\n        \"defaultMaximizedCriterionName\": \"Efekt\",\n        \"defaultMinimizedCriterionName\": \"Koszt\",\n        \"nameOfCriterion1\": \"Nazwa kryterium 1\",\n        \"nameOfCriterion2\": \"Nazwa kryterium 2\",\n        \"defaultCriterion1Weight\": \"Domyślna waga kryerium 1\",\n        \"weightLowerBound\": \"Dolna granica wagi\",\n        \"weightUpperBound\": \"Górna granica wagi\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Pokaż tabelę ligową\",\n            \"flip\": \"Zamień\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Układ\",\n        \"marginHorizontal\": \"Margines w poziomie\",\n        \"marginVertical\": \"Margines w pionie\",\n        \"nodeSize\": \"Rozmiar węzła\",\n        \"edgeSlantWidthMax\": \"Skos krawędzi (maksymalny)\",\n        \"gridWidth\": \"Szerokość\",\n        \"gridHeight\": \"Wysokość\",\n        \"scale\": \"Skala\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Szczegóły\",\n        \"title\" : \"Tytuł\",\n        \"description\" : \"Opis\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Węzeł Decyzyjny\",\n                \"chance\":\"Węzeł Losowy\",\n                \"terminal\":\"Węzeł Końcowy\"\n            },\n            \"edge\": \"Krawędź\",\n            \"text\": \"Pływający tekst\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Połączenia\",\n                \"child\": {\n                    \"header\": \"Krawędź #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Czy jesteś pewien, że chcesz porzucić obecny diagram? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"openDiagram\": \"Czy jesteś pewien? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"beforeunload\": \"Czy jesteś pewien, że chcesz zamknąć SilverDecisions? Wszystkie niezapisane zmiany zostaną utracone.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Błąd przetwarzania danych z pliku!\",\n        \"fileApiNotSupported\":\"Funckja 'file API' nie jest wspierana w tej przeglądarce internetowej.\",\n        \"inputFilesProperty\":\"Twoje przeglądarka nie wspiera opcji `pliki` przy otwieraniu pliku.\",\n        \"notSilverDecisionsFile\":\"Plik niezgodny z formatem SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Niepoprawny format ciągu z numerem wersji!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Wersja pliku jest nowasza niż wersja aplikacji. Niektóre funkcjonalności mogą być niedostępne.\",\n        \"objectiveComputationFailure\": \"Błąd podczas wyliczania celu!\",\n        \"diagramDrawingFailure\": \"Błąd podczas rysowania diagramu!\",\n        \"malformedData\":\"Błąd odczytu danych drzewa!\",\n        \"pngExportNotSupported\": \"Eksport do obrazu PNG nie jest wspierany w Twojej przeglądarce.\",\n        \"pngExportNotSupportedIE\": \"Eksport do obrazu PNG nie jest wspierany w przeglądarce Internet Explorer.\",\n        \"svgExportNotSupported\": \"Eksport do obrazu SVG nie jest wspierany w Twojej przeglądarce.\",\n        \"pdfExportNotSupported\": \"Eksport do PDF nie jest wspierany w Twojej przeglądarce.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu wypłaty.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu prawdopodobieństw.\",\n        \"incorrectNumberFormatOptions\": \"Niewłaściwe ustawiono formatowanie liczb. Przyjęto ustawienia domyślne.\",\n        \"jsPDFisNotIncluded\": \"Nie włączono jsPDF!\",\n        \"serverSideExportRequestFailure\": \"Nieudane zapytanie do serwera exportu!\"\n    }\n}\n","require('es6-set/implement');\nimport {D3Extensions} from 'sd-tree-designer'\nimport {App} from './app'\nimport {version} from '../package.json';\nD3Extensions.extend();\n\nApp.version = version;\nmodule.exports = App;\n\n\n\n\n\n\n","import {Templates} from \"../templates\";\nimport {PARAMETER_TYPE} from \"sd-computations/src/jobs/engine/job-parameter-definition\";\nimport {log} from 'sd-utils'\nimport * as d3 from \"../d3\";\nimport {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {Autocomplete} from \"../autocomplete\"\n\nexport class JobParametersBuilder{\n\n\n    jobParameters;\n    hiddenParams;\n    constructor(container, i18nPrefix='', onChange=()=>{}){\n        this.container=container;\n        this.i18nPrefix = i18nPrefix;\n        this.paramTypeToInputType ={};\n        this.paramTypeToInputAttrs = {};\n\n        this.paramTypeToInputType[PARAMETER_TYPE.BOOLEAN] = 'checkbox';\n        this.paramTypeToInputType[PARAMETER_TYPE.DATE] = 'date';\n        this.paramTypeToInputType[PARAMETER_TYPE.INTEGER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.INTEGER] = [{\n            name: \"step\",\n            value: \"1\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.NUMBER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.NUMBER] = [{\n            name: \"step\",\n            value: \"any\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.STRING] = 'text';\n\n        this.onChange = onChange;\n    }\n\n\n    setJobParameters(jobName, jobParameters, customParamsConfig={}){\n        this.jobName=jobName;\n        this.jobParameters = jobParameters;\n        this.customParamsConfig = customParamsConfig;\n        this.clean();\n        this.build(this.container, this.jobParameters.definitions, this.jobParameters.values, '', this.onChange);\n    }\n\n    clean() {\n        this.container.html('');\n        this.pristine = {};\n        this.customValidators = {};\n        this.strictValidation(false);\n    }\n\n    validate(strictValidation = true){\n        this.strictValidation(strictValidation);\n        this.pristine = {};\n        this.container.selectAll('.sd-pristine').classed('sd-pristine', false);\n        return this.checkCustomValidators() && this.jobParameters.validate();\n    }\n\n    checkCustomValidators(){\n        let valid = true;\n        Utils.forOwn(this.customValidators, (val, key)=>{\n            valid = valid && val();\n        });\n        return valid;\n    }\n\n    strictValidation(enabled=true){\n        this.container.classed('sd-strict-validation', enabled);\n    }\n\n\n    build(container, jobParameterDefinitions, parentValueObject,  parentPath='', onChange=()=>{}, onInput=()=>{}){\n        container.html('');\n        var self = this;\n        var params = container.selectAll(\".sd-job-parameter\").data(jobParameterDefinitions);\n        var paramsEnter = params.enter().appendSelector('div.sd-job-parameter');\n\n        paramsEnter.html(d=>Templates.get('jobParameter', d));\n\n        var paramsMerge = paramsEnter.merge(params);\n        paramsMerge.each(function(d,i){\n            var paramSelection = d3.select(this);\n            var path = parentPath;\n\n            if(path){\n                path+='.';\n\n            }\n            path += d.name;\n            paramSelection.classed('sd-hidden', Utils.get(self.customParamsConfig, path+'.hidden'));\n\n            var value = parentValueObject[d.name];\n            var repeating = d.maxOccurs>1;\n            if(value==undefined){\n                if(repeating){\n                    value = [];\n                    for(var vi=0; vi<d.minOccurs; vi++){\n                        value.push(self.getEmptyValue(d.type))\n                    }\n\n                }else{\n                    value=Utils.get(self.customParamsConfig, path+'.value', self.getEmptyValue(d.type))\n                }\n\n                parentValueObject[d.name]=value;\n            }\n\n            if(!repeating) {\n                self.buildParameterSingleValue(paramSelection, d, {\n                    get: ()=> parentValueObject[d.name],\n                    set: (v)=> parentValueObject[d.name]=v\n                }, path,onChange, onInput)\n            }else{\n                paramSelection.appendSelector(\"div.sd-job-parameter-name\").html(self.getParamNameI18n(path));\n\n                var valuesContainer = paramSelection.appendSelector(\"div.sd-job-parameter-values\");\n                var actionButtons = paramSelection.appendSelector(\"div.sd-action-buttons\");\n                var addButton = actionButtons.appendSelector('button.sd-add-job-parameter-value-button.icon-button');\n                addButton.appendSelector(\"i.material-icons\").html('add');\n\n\n                paramSelection.classed('invalid', !d.validate(value));\n                var callbacks = {};\n                callbacks.onValueRemoved = function(v,i){\n                    value.splice(i, 1);\n                    self.buildParameterValues(valuesContainer, d, value, path,callbacks)\n                    addButton.classed('sd-hidden', value.length>=d.maxOccurs)\n                    callbacks.onChange();\n                };\n                callbacks.onChange = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onChange();\n                };\n                callbacks.onInput = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onInput();\n                };\n\n                addButton\n                    .attr('title', i18n.t('jobParametersBuilder.buttons.addParameterValue'))\n                    .classed('sd-hidden', value.length>=d.maxOccurs)\n                    .on('click', ()=>{\n                        value.push(self.getEmptyValue(d.type));\n                        Utils.set(self.pristine, path+\"[\"+(value.length-1)+\"]\", true);\n                        self.buildParameterValues(valuesContainer, d, value, path, callbacks);\n                        addButton.classed('sd-hidden', value.length>=d.maxOccurs);\n                        callbacks.onChange();\n                    });\n\n\n\n\n                self.buildParameterValues(valuesContainer, d, value, path,callbacks);\n            }\n\n        });\n\n    }\n\n    buildParameterValues(container, paramDefinition, values, path, callbacks){\n        var self = this;\n        container.html(\"\");\n\n        var paramValues = container.selectAll(\".sd-job-parameter-value\").data(values);\n\n        paramValues.exit().remove();\n        var paramValuesEnter = paramValues.enter().appendSelector('div.sd-job-parameter-value');\n\n        var paramValuesMerge = paramValuesEnter.merge(paramValues);\n\n        var indexToSelection = {};\n\n        var customValidator = Utils.get(self.customParamsConfig, path+'.customValidator');\n\n        function checkCustomValidator(){\n            let allValid = true;\n            if(customValidator){\n                customValidator(values).forEach((isValid, i)=>{\n                    var selection = indexToSelection[i];\n                    let valid = paramDefinition.validateSingleValue(values[i]) && isValid;\n                    selection.classed('invalid', !valid);\n                    allValid = allValid && valid;\n                })\n            }\n\n            return allValid;\n        }\n\n        self.customValidators[path] = checkCustomValidator;\n\n        paramValuesEnter.each(function (value, i) {\n            var derivedValueUpdaters = [];\n\n            function updateDerivedValues(){\n                derivedValueUpdaters.forEach(updater=>updater(values[i]))\n            }\n\n            var selection = d3.select(this);\n            indexToSelection[i] = selection;\n\n\n            if (PARAMETER_TYPE.COMPOSITE == paramDefinition.type) {\n                var nestedParameters = selection.selectOrAppend(\"div.sd-nested-parameters\");\n                var onChange = ()=>{\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    updateDerivedValues();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                };\n                var onInput = ()=>{\n                    updateDerivedValues();\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                };\n\n                self.build(nestedParameters, paramDefinition.nestedParameters, value, path, onChange, onInput);\n                selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                selection.classed('sd-pristine', Utils.get(self.pristine, path+\"[\"+i+\"]\", false));\n            }else{\n                self.buildParameterSingleValue(selection, paramDefinition, {\n                    get: ()=> values[i],\n                    set: (v)=> values[i]=v\n                }, path, ()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                },()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                })\n\n            }\n\n\n            var derivedValuesConfigs = Utils.get(self.customParamsConfig, path+'._derivedValues');\n            if(derivedValuesConfigs){\n                derivedValuesConfigs.forEach(derivedValueConfig =>{\n                    let updater = self.buildDerivedValue(selection, derivedValueConfig, path);\n                    updater(value);\n                    derivedValueUpdaters.push(updater);\n                });\n            }\n\n\n            var actionButtons = selection.appendSelector(\"div.sd-action-buttons\");\n            var removeButton = actionButtons.appendSelector('button.sd-remove-job-parameter-value-button.icon-button');\n            removeButton.appendSelector(\"i.material-icons\").html('remove')\n            removeButton\n                .attr('title', i18n.t('jobParametersBuilder.buttons.removeParameterValue'))\n                .classed('sd-hidden', values.length<=paramDefinition.minOccurs)\n                .on('click', (d)=>callbacks.onValueRemoved(d,i))\n\n        });\n\n        checkCustomValidator();\n\n        paramValuesMerge.each(function (value, i) {\n\n        });\n\n\n    }\n\n    buildDerivedValue(container, derivedValueConfig, path){\n        var self = this;\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group.sd-derived-value');\n        var name = this.getParamNameI18n(path+'.'+derivedValueConfig.name);\n        var input = selection.append('input').attr('type', 'text').attr(\"disabled\", \"disabled\");\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(name);\n\n        return (paramValue) => {\n            input.node().value = derivedValueConfig.value(paramValue);\n            AppUtils.updateInputClass(input);\n        }\n\n    }\n\n    buildParameterSingleValue(container, paramDefinition, valueAccessor, path, onChange, onInput){\n        var self = this;\n        var temp = {};\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group');\n        selection.classed('sd-parameter-'+paramDefinition.name, true);\n        var help = this.getParamHelpI18n(path);\n        if(help) {\n            let helpContainer = container.appendSelector('div.sd-help-icon');\n            helpContainer.html('<i class=\"material-icons\">info_outline</i>');\n            Tooltip.attach(helpContainer, (d)=>{\n                return help;\n            }, 5, 15);\n        }\n\n        var options = Utils.get(self.customParamsConfig, path+'.options', null);\n\n        var inputType = this.paramTypeToInputType[paramDefinition.type];\n        var additionalInputAttrs = this.paramTypeToInputAttrs[paramDefinition.type];\n        var input;\n        if(options && options.length){\n            inputType = 'select';\n            input = selection.append('select');\n            var optionsSel = input.selectAll(\"option\").data([null].concat(options));\n            optionsSel.enter().append(\"option\").attr(\"value\", d=>d).text(d=>d);\n\n            if(Utils.get(self.customParamsConfig, path+'.optionsAutocomplete', null)){\n                let autocomplete = new Autocomplete(input);\n                input = autocomplete.getInput();\n            }\n        }else{\n            input = selection.append('input').attr('type', inputType);\n\n            if(additionalInputAttrs){\n                additionalInputAttrs.forEach(attr=>input.attr(attr.name, attr.value))\n\n            }\n        }\n\n        input.attr('id', inputId);\n\n        input.classed('sd-input', true);\n        input.on('input change', function(d, i){\n            var value = self.parseInput(this.value, paramDefinition.type);\n            if(inputType=='checkbox'){\n                value = this.checked\n            }\n            if(!paramDefinition.validateSingleValue(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n\n            valueAccessor.set(value);\n            if (d3.event.type == 'change') {\n                if (onChange) {\n                    onChange();\n                }\n            }\n\n            if (d3.event.type == 'input') {\n                if (onInput) {\n                    onInput();\n                }\n            }\n\n            AppUtils.updateInputClass(d3.select(this));\n        }).each(function(d, i){\n            var value = valueAccessor.get();\n            if(inputType=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            d3.select(this).classed('invalid', !paramDefinition.validateSingleValue(value));\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(d=>{\n                let label = this.getParamNameI18n(path);\n                return label;\n            });\n        input.node().value = valueAccessor.get();\n    }\n\n    value(path, value){\n        return this.jobParameters.value(path, value);\n    }\n\n    parseInput(value, parameterType){\n        if(parameterType===PARAMETER_TYPE.DATE){\n            return new Date(value)\n        }\n        if(parameterType===PARAMETER_TYPE.NUMBER || parameterType===PARAMETER_TYPE.INTEGER){\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    getEmptyValue(parameterType){\n        if(parameterType===PARAMETER_TYPE.COMPOSITE){\n            return {}\n        }\n\n        return null;\n    }\n\n    getParamNameI18n(path){\n        return i18n.t(this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.label')\n    }\n\n    getParamHelpI18n(path){\n        let key = this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.help';\n        let help = i18n.t(key);\n        return help === key ? null : help;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport * as d3 from \"../d3\";\nimport {PivotTable} from \"../pivot-table\";\nvar jQuery = require('jquery');\n\nexport class JobResultTableConfig {\n    onRowSelected = (rows, indexes, event) => {};\n    className = '';\n\n    pivotTable;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobResultTable {\n\n    constructor(container, config) {\n        this.container = container;\n        this.config = new JobResultTableConfig(config);\n        this.init();\n    }\n\n    init() {\n        this.pivotTable = new PivotTable(this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true));\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = []\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(data.data[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n\n    setClassName(className){\n        if(this.config.className){\n            this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, false);\n            this.config.className = className;\n        }\n        this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true)\n    }\n\n    setData(data, jobParameters, job, config) {\n        var self = this;\n        var derivers = jQuery.pivotUtilities.derivers;\n        var pivotOptions = {\n            rows: data.rows,\n            vals: data.vals,\n            cols: data.cols,\n            hiddenAttributes: ['$rowIndex'],\n            aggregatorName: this.pivotTable.getAggregatorName(\"maximum\"),\n            rendererOptions: {\n                table: {\n                    clickCallback: function (e, value, filters, pivotData) {\n                        self.clickCallback(e, value, filters, pivotData);\n                    }\n                },\n                heatmap: {\n                    colorScaleGenerator: function (values) {\n                        let extent = d3.extent(values);\n\n                    return d3.scaleLinear()\n                        .domain([extent[0], (extent[0]+extent[1])/2,extent[1]])\n                        .range([\"#4b53ff\", \"#FFF\", \"#FF0000\"])\n                    }\n                }\n            },\n            rendererName: this.pivotTable.getRendererName(\"heatmap\")\n            /*\n             rendererName: 'custom',\n             renderers: {\n             'custom': function(pivotData, options){\n             console.log(pivotData)\n             }\n             }*/\n\n        };\n\n        if(config){\n            if(config.aggregatorName){\n                pivotOptions.aggregatorName = config.aggregatorName;\n            }\n            if(config.aggregators){\n                pivotOptions.aggregators = config.aggregators;\n            }\n        }\n\n        this.pivotTable.update(data.data.map((r, i)=>r.concat(i ?  i-1 : '$rowIndex')), pivotOptions);\n\n        // this.drawHeaders(data.headers);\n        // this.drawRows(data.rows)\n    }\n\n    clear() {\n        this.clearSelection();\n        this.pivotTable.clear();\n    }\n\n    show(show=true){\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide(){\n        this.show(false);\n    }\n\n    clearSelection() {\n        // this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {log} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nvar jQuery = require('jquery');\n\n\nexport class ProbabilisticSensitivityAnalysisJobResultTable extends JobResultTable {\n\n    constructor(container, config, payoffNumberFormatter, probabilityNumberFormatter){\n        super(container, config);\n        this.payoffNumberFormatter = payoffNumberFormatter;\n        this.probabilityNumberFormatter = probabilityNumberFormatter;\n    }\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n        var data = {rows: ['policy', 'expected value', 'median', 'standard deviation', 'best probability'], cols: [], vals: ['expected value'], data: []};\n\n\n        data.data.push(['policy', 'expected value', 'median', 'standard deviation', 'best probability']);\n        jobResult.policies.forEach((policy, i)=> {\n            var row = [\n                Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                this.payoffNumberFormatter(jobResult.expectedValues[i]),\n                this.payoffNumberFormatter(jobResult.medians[i]),\n                this.payoffNumberFormatter(jobResult.standardDeviations[i]),\n                this.probabilityNumberFormatter(jobResult.policyIsBestProbabilities[i])\n            ];\n            data.data.push(row);\n        });\n\n        log.trace(data);\n        super.setData(data, jobParameters, job,{\n            aggregatorName: \"empty\",\n            aggregators:{\n                empty: (attributeArray)=>(data, rowKey, colKey)=>{\n                    return {\n                        push: function(record) {\n                        },\n                        value: function() { return 0; },\n                        format: function(x) { return i18n.t('jobResultTable.policyPreview'); },\n                        numInputs: 1\n                    };\n                }\n            }\n        })\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push({policyIndex: record['$rowIndex']});\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Utils} from \"sd-utils\"\n\n\nexport class SensitivityAnalysisJobResultTable extends JobResultTable {\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n\n        jobParameters =job.createJobParameters(Utils.cloneDeep(jobParameters.values));\n        jobParameters.values.roundVariables = true;\n        var csvDAta = job.jobResultToCsvRows(jobResult, jobParameters);\n\n        if (csvDAta.length) {\n            csvDAta[0][0] = 'policy\\nnumber'\n        }\n\n        let cols = [];\n        let totalInColNum = 1;\n\n        jobParameters.values.variables.forEach(v=>{\n            let _totalInColNum = v.length * totalInColNum;\n            if((_totalInColNum>1000)){\n                return;\n            }\n            totalInColNum=_totalInColNum;\n            cols.push(v.name);\n        });\n\n        var data = {rows: ['policy'], cols: cols, vals: ['payoff'], data: csvDAta};\n        super.setData(data)\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self = this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(self.jobResult.rows[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {LineChartConfig, LineChart} from \"odc-d3/src/line-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class SpiderPlotConfig extends LineChartConfig {\n    maxWidth = undefined;\n\n    showLegend = true;\n    policyIndex = 0;\n    guides = true;\n    margin={\n        left: 100\n    };\n    x={// X axis config\n        title: i18n.t('job.spider-plot.plot.xAxisTitle'), // axis label\n        key: 0,\n        domainMargin: 0\n    };\n    y={// Y axis config\n        title: i18n.t('job.spider-plot.plot.yAxisTitle'), // axis label,\n        key: 1,\n        domainMargin: 0.1\n    };\n    series = true;\n    dotRadius = 3;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class SpiderPlot extends LineChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new SpiderPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new SpiderPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-spider-plot', true);\n    }\n\n    setData(data){\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map(r=>{\n            return {\n                key: r.variableName,\n                values: data.percentageRangeValues.map((rangeVal, index)=>[\n                    data.percentageRangeValues[index],\n                    r.payoffs[this.config.policyIndex][index]\n                ])\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {DivergingStackedBarChartConfig, DivergingStackedBarChart} from \"odc-d3/src/diverging-stacked-bar-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class TornadoDiagramPlotConfig extends DivergingStackedBarChartConfig {\n    maxWidth = undefined;\n    margin={\n        left: 150,\n        top: 70\n    };\n\n    showLegend = true;\n    forceLegend = true;\n\n    categoryNames = [i18n.t(\"job.tornado-diagram.plot.legend.low\"), i18n.t(\"job.tornado-diagram.plot.legend.high\")];\n    colorRange = [\"#4f81bd\", \"#9bbb59\"];\n    policyIndex = 0;\n\n    guides = true;\n    middleValue = 1000;\n    showBarValues = false;\n\n    x={// X axis config\n        title: i18n.t('job.tornado-diagram.plot.xAxisTitle'), // axis label\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class TornadoDiagramPlot extends DivergingStackedBarChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new TornadoDiagramPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new TornadoDiagramPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-tornado-diagram-plot', true);\n    }\n\n    setData(data){\n        this.config.middleValue = data.defaultPayoff;\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map((r)=>{\n            let varExtent = data.variableExtents[data.variableNames.indexOf(r.variableName)];\n            return {\n                key: r.variableName+' ['+varExtent[0]+'; '+varExtent[1]+']',\n                values: [\n                    Math.max(0, data.defaultPayoff - r.extents[this.config.policyIndex][0]),\n                    Math.max(0, r.extents[this.config.policyIndex][1] - data.defaultPayoff)\n                ],\n                categories: r.extentVariableValues[this.config.policyIndex][0] <= r.extentVariableValues[this.config.policyIndex][1] ? [0, 1] : [1, 0]\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {Dialog} from \"../dialogs/dialog\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {LeagueTable} from \"./league-table\";\nimport {LeagueTablePlot} from \"./league-table-plot\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class LeagueTableDialog extends Dialog {\n    computationsManager;\n    jobInstanceManager;\n\n    constructor(app) {\n        super(app.container.select('.sd-league-table-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-league-table-job-results\");\n        this.initButtons();\n\n        this.job = this.computationsManager.getJobByName(\"league-table\");\n    }\n\n    onOpen() {\n        this.clear();\n        this.runJob();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-league-table-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-league-table-warnings\").appendSelector(\"div.sd-league-table-warning\").html(msgHTML);\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (row, i)=> this.onResultRowSelected(row, i),\n            onRowHover: (row, i)=> this.resultPlot.emphasize(row.row, true),\n            onRowHoverOut: (row, i)=> this.resultPlot.emphasize(row.row, false),\n        };\n\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n        }\n\n\n        this.resultTable = new LeagueTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n        this.resultTable.setData(result, this.app.dataModel);\n        this.resultTable.show();\n    }\n\n\n\n    initResultPlot(result) {\n        let self = this;\n        let config = {\n            maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            weightLowerBound: result.weightLowerBound,\n            defaultWeight: result.defaultWeight,\n            weightUpperBound: result.weightUpperBound,\n            payoffCoeffs: result.payoffCoeffs,\n            payoffNames: result.payoffNames,\n            x: {\n                value: (d, key) => d.payoffs[0],\n                title: result.payoffNames[0]\n            },\n            y: {\n                value: (d, key) => d.payoffs[1],\n                title: result.payoffNames[1]\n            },\n            onDotHover: (d, i) => this.resultTable.emphasize(d, true),\n            onDotHoverOut: (d, i) => this.resultTable.emphasize(d, false),\n\n\n            color: function (group) {\n                let groupsConf = self.app.config.leagueTable.plot.groups;\n                let groupConf = groupsConf[group.key];\n                if (groupConf) {\n                    return groupConf.color;\n                }\n                return 'black'\n            },\n            groupOrdering: {\n                'dominated': 0,\n                'extended-dominated': 1,\n                'highlighted': 2,\n                'highlighted-default': 3,\n                'default': 4\n\n            },\n            groups: {\n                value: function (r) {\n                    if (r.optimalForDefaultWeight) {\n                        return 'highlighted-default'\n                    } else if (r.optimal) {\n                        return 'highlighted'\n                    }  else if (r.dominatedBy !== null) {\n                        return 'dominated'\n                    } else if (r.extendedDominatedBy !== null) {\n                        return 'extended-dominated'\n                    }\n\n                    return \"default\";\n                },\n                displayValue: (groupKey) => i18n.t(\"leagueTable.plot.groups.\"+groupKey)\n            }\n        };\n\n        this.resultPlot = new LeagueTablePlot(this.jobResultsContainer.select(\".sd-job-result-plot-container\").node(), result.rows, config);\n        setTimeout(function () {\n            self.resultPlot.init()\n        }, 100)\n    }\n\n    onResized() {\n        if (this.resultPlot) {\n            this.resultPlot.init();\n        }\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-league-table-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n\n    initJobParams(){\n        this.jobParameters = this.job.createJobParameters({\n            ruleName: this.computationsManager.getCurrentRule().name,\n            weightLowerBound: this.app.dataModel.weightLowerBound,\n            defaultWeight: this.app.dataModel.defaultCriterion1Weight,\n            weightUpperBound: this.app.dataModel.weightUpperBound,\n\n        });\n    }\n\n    validateParams(){\n        this.initJobParams();\n        return this.jobParameters.validate();\n    }\n\n    runJob() {\n\n\n        this.initJobParams();\n\n        if(!this.validateParams()){\n            alert(i18n.t(\"job.errors.params\", {\"jobName\": i18n.t(\"job.league-table.name\")}))\n            return;\n        }\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n            onJobStarted: this.onJobStarted,\n            onJobCompleted: this.onJobCompleted,\n            onJobFailed: this.onJobFailed,\n            onJobStopped: this.onJobStopped,\n            onJobTerminated: this.onJobTerminated,\n            onProgress: this.onProgress,\n            callbacksThisArg: this\n        }).then(jobInstanceManager=> {\n            this.jobInstanceManager = jobInstanceManager;\n        }).catch(e=> {\n            log.error(e);\n        }).then(()=> {\n            this.disableActionButtonsAndShowLoadingIndicator(false);\n        })\n    }\n\n    initButtons() {\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    clear() {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.jobResultsContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlot(result);\n\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.downloadCsvButtons);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                e.jobName = i18n.t(\"job.league-table.name\");\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(row, index) {\n        let title = Policy.toPolicyString(row.policy, false);\n        this.app.showPolicyPreview(title, row.policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows(), 'leaguetable')\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import {ScatterPlot, ScatterPlotConfig} from \"odc-d3/src/scatterplot\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTablePlotConfig extends ScatterPlotConfig {\n    maxWidth = undefined;\n    weightLowerBound = 0;\n    weightUpperBound = Infinity;\n    gradientArrowLength = 30;\n    gradientArrowOffset = 10;\n    payoffCoeffs = [1, 1];\n    payoffNames = [];\n\n    showLegend = true;\n    forceLegend = true;\n\n    legend = {\n        width: 125,\n    };\n\n    // d3ColorCategory = false;\n\n    guides = true;\n    dotRadius = 5;\n    emphasizedDotRadius = 8;\n\n    dotId = (d, i) => 'sd-league-table-dot-'+d.id;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LeagueTablePlot extends ScatterPlot {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LeagueTablePlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new LeagueTablePlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-league-table-plot', true);\n        this.initArrowMarker(\"triangle\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.selectOrAppend(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        this.checkOrdering();\n        super.initPlot();\n    }\n\n    checkOrdering(){\n        if(this.config.groupOrdering){\n            let getOrdering  = d => {\n                let g = this.config.groups.value(d);\n                return this.config.groupOrdering[g] === undefined ? 999 : this.config.groupOrdering[g];\n            };\n            this.data.sort((a, b)=>getOrdering(a) - getOrdering(b));\n        }\n    }\n\n    update(newData) {\n        this.checkOrdering();\n        super.update(newData);\n\n        this.updateIcerLines();\n        this.updateDominatedRegion();\n        this.updateGradientArrows();\n        this.updateDotLabels();\n\n\n    };\n\n    updateIcerLines() {\n        let self = this;\n        var linesContainerClass = this.linesContainerClass = this.prefixClass(\"lines-container\");\n        var linesContainerSelector = \"g.\" + linesContainerClass;\n        var linesContainer = this.linesContainer= self.svgG.selectOrInsert(linesContainerSelector, \".\" + self.dotsContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var linesContainerClip = linesContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        linesContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        linesContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        var line = d3.line()\n            .x(this.plot.x.map)\n            .y(this.plot.y.map);\n\n\n\n\n        let linePoints = this.plot.data.filter(d=>d.incratio !== null).sort(this.plot.x.map);\n        let highlightedPoints = this.plot.data.filter(d=>[\"highlighted\", \"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1).sort((a, b) => this.plot.x.map(a) - this.plot.x.map(b));\n        let highlightedDefaultPoints = highlightedPoints.filter(d=>[\"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1);\n\n        this.dominatedRegionPoints = highlightedPoints.map(d=>[this.plot.x.map(d), this.plot.y.map(d)]);\n\n        if (!highlightedPoints.length) {\n            linesContainer.selectAll(\"*\").remove();\n            return;\n        }\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('middle-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", line(highlightedPoints));\n\n        highlightedPoints.sort((a, b) =>a.incratio - b.incratio || (this.config.payoffCoeffs[0] * (this.plot.x.map(a) - this.plot.x.map(b))));\n\n        let minPoint = highlightedPoints[0];\n        let maxPoint = highlightedPoints[highlightedPoints.length - 1];\n\n        let lowPoint;\n        let highPoint;\n\n        let xAxisExtent = [this.plot.x.scale.invert(0), this.plot.x.scale.invert(this.plot.width)];\n        let yAxisExtent = [this.plot.y.scale.invert(this.plot.height), this.plot.y.scale.invert(0)];\n\n        let sign = (this.config.payoffCoeffs[0] * this.config.payoffCoeffs[1]) > 0 ? 1 : -1;\n\n        let infLowY = this.config.payoffCoeffs[0] > 0 ? this.plot.height: 0;\n        if(sign > 0){\n            infLowY = this.config.payoffCoeffs[0] < 0 ? this.plot.height: 0;\n        }\n        let infLowPoint = [this.plot.x.map(minPoint), infLowY];\n\n        if (this.config.weightLowerBound == Infinity) {\n            lowPoint = infLowPoint\n        } else {\n            let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n            lowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.weightLowerBound * (this.plot.x.value(minPoint) - x) + this.plot.y.value(minPoint))];\n            if(Math.abs(lowPoint[1]) > 1000000){\n                lowPoint = infLowPoint\n            }\n        }\n\n        let infHighPoint =  [this.plot.x.map(maxPoint), this.config.payoffCoeffs[1] > 0 ? this.plot.height: 0];\n        if (this.config.weightUpperBound == Infinity) {\n            highPoint = infHighPoint\n        } else {\n\n            let x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n\n            if(sign > 0){\n                x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n            }\n\n            highPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.weightUpperBound * (x - this.plot.x.value(maxPoint)) + this.plot.y.value(maxPoint))];\n            // highPoint = [this.plot.x.scale(x), this.plot.y.scale(EE.toFloat(EE.multiply(-sign, EE.multiply(this.config.weightUpperBound, (x - this.plot.x.value(maxPoint))))) + this.plot.y.value(maxPoint))];\n            if(Math.abs(highPoint[1]) > 1000000){\n                highPoint = infHighPoint\n            }\n        }\n\n        if(highlightedDefaultPoints.length){\n            let defaultPoint = highlightedDefaultPoints[0];\n            let defLowPoint = infLowPoint;\n            let defHighPoint = infHighPoint;\n            if (this.config.defaultWeight !== Infinity) {\n                let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                defLowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.defaultWeight * (this.plot.x.value(defaultPoint) - x) + this.plot.y.value(defaultPoint))];\n                x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                if(sign > 0){\n                    x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n                }\n                defHighPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.defaultWeight * (x - this.plot.x.value(defaultPoint)) + this.plot.y.value(defaultPoint))];\n            }\n            linesContainer.selectOrAppend(\"path.\" + this.prefixClass('default-incratio'))\n                .attr(\"shape-rendering\", \"optimizeQuality\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", 'black')\n                .attr(\"d\", d3.line()([defLowPoint, defHighPoint]))\n        } else{\n            linesContainer.select(\"path.\" + this.prefixClass('default-incratio')).remove()\n        }\n\n\n        this.dominatedRegionPoints.unshift(lowPoint);\n        this.dominatedRegionPoints.push(highPoint);\n\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('low-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([lowPoint, [this.plot.x.map(minPoint), this.plot.y.map(minPoint)]]))\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('high-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([highPoint, [this.plot.x.map(maxPoint), this.plot.y.map(maxPoint)]]))\n\n\n\n\n    }\n\n    updateDominatedRegion(){\n        let self = this;\n        var dominatedRegionContainerClass = this.prefixClass(\"dominated-region-container\");\n        var dominatedRegionContainerSelector = \"g.\" + dominatedRegionContainerClass;\n        var dominatedRegionContainer = self.svgG.selectOrInsert(dominatedRegionContainerSelector, \".\"+this.linesContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var dominatedRegionContainerClip = dominatedRegionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        dominatedRegionContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        dominatedRegionContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        //draw dominated region\n\n        let worstPoint = [\n            this.config.payoffCoeffs[0] < 0 ? self.plot.width : 0,\n            this.config.payoffCoeffs[1] < 0 ? 0 : self.plot.height\n        ];\n\n        this.dominatedRegionPoints.push(worstPoint);\n\n        if(this.dominatedRegionPoints.some(p=>worstPoint[1] ? p[1] <=0 : p[1] >= self.plot.height)){\n            this.dominatedRegionPoints.push([worstPoint[0], worstPoint[1] ? 0 : self.plot.height]);\n        }\n\n        this.dominatedRegionPoints.sort((a, b)=> (a[0] - b[0]));\n        this.dominatedRegionPoints = this.dominatedRegionPoints.reduce((prev, curr)=>{\n            if(!prev.length){\n                return [curr]\n            }\n            var prevPoint = prev[prev.length-1];\n            if(prevPoint[0] !== curr[0]){\n                prev.push(curr)\n            }\n            if(Math.abs(worstPoint[1] - curr[1]) > Math.abs(worstPoint[1] - prev[prev.length-1][1])){\n                prev[prev.length-1] = curr;\n            }\n            return prev;\n\n        }, []);\n\n        let area = d3.area();\n        area.y0(worstPoint[1])\n        dominatedRegionContainer.selectOrInsert(\"path.\" + this.prefixClass('dominated-region'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"gray\")\n            .attr(\"stroke-width\", 0)\n            .attr(\"d\", area(this.dominatedRegionPoints));\n\n        Tooltip.attach(dominatedRegionContainer, i18n.t('leagueTable.plot.tooltip.dominatedRegion'));\n    }\n\n    updateDotLabels() {\n        var self = this;\n        var labelsContainerClass = this.prefixClass(\"dot-labels-container\");\n        var labelsContainerSelector = \"g.\" + labelsContainerClass;\n        var labelsContainer = self.svgG.selectOrAppend(labelsContainerSelector, \".\" + self.dotsContainerClass);\n\n        var labels = labelsContainer.selectAll(\"text.\" + this.prefixClass(\"dot-label\")).data(this.plot.data);\n        labels.exit().remove();\n        labels.enter().append('text')\n            .attr('class', this.prefixClass(\"dot-label\"))\n            .merge(labels)\n            .attr('x', this.plot.x.map)\n            .attr('y', this.plot.y.map)\n            .attr('text-anchor', 'end')\n            .attr(\"dy\", \"-5px\")\n            .attr(\"dx\", \"-5px\")\n            .text(d=>d.id)\n    }\n\n    updateGradientArrows() {\n\n        var data = this.config.payoffCoeffs.map((coeff, i)=>{\n\n            let l = this.config.gradientArrowLength * coeff;\n            let offset = this.config.gradientArrowOffset * coeff;\n\n            let d = {\n                x1: this.plot.width/2,\n                y1: this.plot.height/2,\n            };\n\n            if(i==0){\n                d.x1 += offset;\n                d.x2 = d.x1 + l;\n                d.y2 = d.y1\n            }else{\n                d.y1 -= offset;\n                d.x2 = d.x1;\n                d.y2 = d.y1 - l\n            }\n\n            return d\n        });\n\n        let self = this;\n        var arrowsContainerClass = this.prefixClass(\"gradient-arrows-container\");\n        var arrowsContainerSelector = \"g.\" + arrowsContainerClass;\n        var arrowsContainer = self.svgG.selectOrInsert(arrowsContainerSelector, \".\" + self.dotsContainerClass);\n\n        let arrowClass = this.prefixClass(\"gradient-arrow\");\n        var arrows = arrowsContainer.selectAll(\".\"+arrowClass).data(data);\n        arrows.exit().remove();\n        var arrowsEnter = arrows.enter().append('g')\n            .attr('class', arrowClass);\n\n        arrowsEnter.append(\"line\").attr(\"marker-end\", \"url(#triangle)\");\n        var arrowsMerge =arrowsEnter.merge(arrows);\n\n        arrowsMerge.select(\"line\")\n            .attr(\"x1\", d=>d.x1)\n            .attr(\"y1\", d=>d.y1)\n            .attr(\"x2\", d=>d.x2)\n            .attr(\"y2\", d=>d.y2);\n\n        Tooltip.attach(arrowsMerge, (d, i)=>{\n            return i18n.t('leagueTable.plot.tooltip.gradientArrow' + (i + 1), { name: this.config.payoffNames[i]});\n        });\n    }\n\n    emphasize(row, emphasize=true){\n        this.emphasizeDot(this.svg.selectAll('#'+this.config.dotId(row)), emphasize);\n    }\n\n    emphasizeDot(selection, emphasize){\n        selection\n            .classed('sd-emphasized', emphasize)\n            .transition()\n            .attr('r', emphasize ? this.config.emphasizedDotRadius : this.config.dotRadius)\n    }\n    updateDots(){\n        var self = this;\n        super.updateDots();\n        var dotsContainer = this.svgG.select(\"g.\" + this.dotsContainerClass);\n        dotsContainer.selectAll('.' + this.dotClass)\n            .on(\"mouseover.emphasize\", function(d){ self.emphasizeDot(d3.select(this), true) })\n            .on(\"mouseout.emphasize\", function(d){ self.emphasizeDot(d3.select(this), false) })\n    }\n\n    updateLegend() {\n        super.updateLegend();\n        var plot = this.plot;\n\n        let container = plot.legend.container.selectOrAppend(\"g.sd-additional-items\")\n        let legendCells = plot.legend.container.select(\".legendCells\");\n        let margin = 20;\n\n        let texts = [\n            i18n.t(\"leagueTable.plot.legend.dominatedRegion\"),\n            i18n.t(\"leagueTable.plot.legend.gradientArrows\")\n        ];\n\n        container.attr(\"transform\", \"translate(0, \"+(legendCells.node().getBBox().height+margin)+\")\");\n\n        container.selectAll(\"text\").data(texts)\n            .enter().append(\"text\")\n            .text(d=>d)\n            .attr('dy', \"0\")\n            .attr('x', \"0\");\n\n        container.selectAll(\"text\").call(wrap, d=>d, this.config.legend.width);\n\n        function wrap(text, getTextData, width) {\n            text.each(function(d) {\n\n                var text = d3.select(this),\n                    words = getTextData(d).split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1.1, // ems\n                    y = text.attr('y'),\n                    dy = parseFloat(text.attr('dy')),\n                    tspan = text.text(null).append('tspan')\n                        .attr('x', 0).attr('y', y).attr('dy', dy + 'em');\n\n                if(this.previousSibling){\n                    text.attr('y', this.previousSibling.getBBox().height+10)\n                }\n\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n                        line = [word];\n                        tspan = text.append('tspan')\n                            .attr('x', 0).attr('y', y)\n                            .attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n","import {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTableConfig {\n    onRowSelected = (row) => {\n    };\n    extendedPolicyDescription = true;\n    onRowHover = (d, i) => {};\n    onRowHoverOut = (d, i) => {};\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class LeagueTable {\n\n    constructor(container, config, dataModel) {\n        this.container = container;\n        this.config = new LeagueTableConfig(config);\n        this.dataModel = dataModel;\n        this.init();\n    }\n\n    init() {\n        this.resultTable = this.container.selectOrAppend(\"table.sd-league-table\");\n        this.resultTableHead = this.resultTable.selectOrAppend(\"thead\");\n        this.resultTableBody = this.resultTable.selectOrAppend(\"tbody\");\n        this.resultTableFoot = this.resultTable.selectOrAppend(\"tfoot\");\n    }\n\n    setData(jobResult, dataModel) {\n        this.jobResult = jobResult;\n        this.dataModel = dataModel;\n        this.drawHeaders([\n            i18n.t('leagueTable.headers.policyNo'),\n            i18n.t('leagueTable.headers.policy'),\n            dataModel.payoffNames[0],\n            dataModel.payoffNames[1],\n            i18n.t('leagueTable.headers.comment')\n        ]);\n        this.drawRows(jobResult.rows)\n    }\n\n    drawHeaders(headerData) {\n        var headers = this.resultTableHead.selectOrAppend(\"tr\").selectAll(\"th\").data(headerData);\n        var headersEnter = headers.enter().append(\"th\");\n        var headersMerge = headersEnter.merge(headers);\n        headers.exit().remove();\n\n        headersMerge.text(d=>d);\n    }\n\n    drawRows(rowsData) {\n        var self = this;\n\n        let data = rowsData.reduce((prev, d)=> {\n            let r = prev;\n            d.policies.forEach((policy, i)=> {\n                if (!i) {\n                    r.push({\n                        row: d,\n                        policy: policy,\n                        cells: [\n                            {\n                                data: d.id,\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                                rowspan: 1\n                            },\n                            {\n                                data: d.payoffs[0],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: d.payoffs[1],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: this.getRowComment(d),\n                                rowspan: d.policies.length\n                            },\n                        ]\n                    });\n                    return;\n                }\n\n                r.push({\n                    row: d,\n                    policy: policy,\n                    cells: [{\n                        data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                        rowspan: 1\n                    }]\n                });\n\n            });\n\n            return r;\n        }, []);\n\n        var rows = this.resultTableBody.selectAll(\"tr\").data(data);\n\n        var rowsEnter = rows.enter().append(\"tr\");\n        var rowsMerge = rowsEnter.merge(rows);\n        rowsMerge\n            .on('click', function (d, i) {\n                // d3.select(this).classed('sd-selected', true);\n                self.config.onRowSelected(d, i)\n            })\n            .classed('sd-highlighted', d=>d.row.optimal)\n            .classed('sd-highlighted-default', d=>d.row.optimalForDefaultWeight)\n            .attr('id', d => 'sd-league-table-row-'+d.row.id);\n\n        rowsMerge.on(\"mouseover.onRowHover\", this.config.onRowHover);\n        rowsMerge.on(\"mouseout.onRowHoverOut\", this.config.onRowHoverOut);\n\n        rows.exit().remove();\n\n        var cells = rowsMerge.selectAll(\"td\").data(d=>d.cells);\n        var cellsEnter = cells.enter().append(\"td\");\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.text(d=>d.data);\n        cellsMerge.attr('rowspan', d=>d.rowspan);\n        cells.exit().remove();\n\n    }\n\n    clear() {\n        this.clearSelection();\n    }\n\n    show(show = true) {\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide() {\n        this.show(false);\n    }\n\n    clearSelection() {\n        this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n    getRowComment(row) {\n        if(row.incratio !== null){\n            return i18n.t('leagueTable.comment.incratio', {incratio: row.incratio});\n        }\n        if(row.dominatedBy !== null){\n            return i18n.t('leagueTable.comment.dominatedBy', {policy: row.dominatedBy});\n        }\n        if(row.extendedDominatedBy !== null){\n            return i18n.t('leagueTable.comment.extendedDominatedBy', {policy1: row.extendedDominatedBy[0], policy2: row.extendedDominatedBy[1]});\n        }\n        return '';\n    }\n\n\n    emphasize(row, emphasize=true){\n        this.resultTableBody.selectAll('#sd-league-table-row-'+row.id).classed('sd-emphasized', emphasize);\n    }\n}\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\n\nimport {Utils} from 'sd-utils'\nimport {Templates} from \"./templates\";\n\nexport class LoadingIndicator{\n    static show(message=''){\n        var html = Templates.get('loadingIndicator');\n\n        var g = d3.select('body').selectOrAppend('div.sd-loading-indicator-container').html(html).select('.sd-loading-indicator').classed('visible', true).style('display', 'block')\n    }\n\n    static hide(){\n        let select = d3.select('.sd-loading-indicator');\n        select.classed('visible', false);\n        setTimeout(function(){\n            select.style('display', 'none')\n        }, 500)\n\n    }\n}\n","import {Utils, log} from 'sd-utils';\nimport {i18n} from \"./i18n/i18n\";\nvar jQuery = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = jQuery;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/scroll-parent');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/sortable');\nrequire('pivottable');\n\n\n// pivot show zero hack start\nvar numberFormat = jQuery.pivotUtilities.numberFormat;\ntry{\n    jQuery.pivotUtilities.numberFormat = function(opts){\n        if(!opts){\n            opts = {};\n        }\n        opts.showZero = true;\n        return numberFormat(opts);\n    };\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting');\n\n    try{\n        jQuery.pivotUtilities.numberFormat = numberFormat;\n    }catch (e){\n\n    }\n}\n\nrequire('pivottable/dist/pivot.it');\nrequire('pivottable/dist/pivot.de');\nrequire('pivottable/dist/pivot.fr');\nrequire('pivottable/dist/pivot.pl');\n\nUtils.getGlobalObject().jQuery = global$;\n\n// pivot show zero hack continuation\ntry{\n    var origAggregators = {};\n    Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n        origAggregators[key] = value;\n        object[key] = function(){\n            var args1 = arguments;\n            try{\n                let res1 = value.apply(this, args1);\n                return function(){\n                    var res = res1(...arguments);\n                    var format_ = res.format;\n                    res.format = function(x){\n                        var origX = x;\n                        if(x===0){\n                            x =  \"0\";\n                        }\n                        try{\n                            return format_(x);\n                        }catch (e){\n                            log.error('Error when performing pivottable \"show zero\" hack (format func call), reverting', e);\n                            if(format_){\n                                return format_(origX);\n                            }\n                            revertAggregators();\n                        }\n                    };\n                    return res;\n                };\n            }catch(e){\n                log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n                revertAggregators();\n                return origAggregators[key](...args1)\n            }\n        }\n    });\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n    revertAggregators();\n}\n\nfunction revertAggregators(){\n    try {\n        Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n            let origAggregator = origAggregators[key];\n            if(origAggregator){\n                object[key] = origAggregator\n            }\n\n        });\n    }catch(e){\n        log.error('Error when reverting aggregators', e)\n    }\n}\n\n///////////////////// hack end\n\nexport class PivotTable{\n\n    container;\n\n\n    constructor(container, options, data){\n        this.container =container;\n        this.options = options;\n        this.data=data;\n        if(data){\n            this.update(data, options);\n        }\n    }\n\n    update(data, options){\n        this.data = data;\n        this.options = options;\n        jQuery(this.container.node()).pivotUI(data, options, true, i18n.language)\n    }\n\n    clear(){\n        jQuery(this.container.node()).pivotUI([], null, true)\n    }\n\n\n\n    getAggregatorName(name){\n        return i18n.t(\"jobResultTable.pivot.aggregators.\"+name.toLowerCase());\n    }\n\n    getRendererName(name){\n        return i18n.t(\"jobResultTable.pivot.renderers.\"+name.toLowerCase());\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {PayoffInputValidator} from \"./validation/payoff-input-validator\";\nimport {ProbabilityInputValidator} from \"./validation/probability-input-validator\";\nimport {Templates} from \"./templates\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {InputField} from \"./form/input-field\";\nimport {PathValueAccessor} from \"./form/path-value-accessor\";\nimport {NumberInputValidator} from \"./validation/number-input-validator\";\nimport {RequiredInputValidator} from \"./validation/required-input-validator\";\nimport {McdmWeightValueValidator} from \"sd-computations/src/validation/mcdm-weight-value-validator\";\n\nexport class Sidebar {\n\n    app;\n    container;\n    dispatch = d3.dispatch(\"recomputed\", \"object-updated\", \"multi-criteria-updated\");\n\n\n    constructor(container, app) {\n        this.app = app;\n        this.container = container;\n\n        this.initLayoutOptions();\n        this.initDiagramDetails();\n        this.initDefinitions();\n        this.initMultipleCriteria();\n        var self = this;\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app) {\n                self.dispatch.call(\"recomputed\");\n            }\n        });\n\n        self.dispatch.on(\"object-updated\", Utils.debounce((object, fieldName)=> self.app.onObjectUpdated(object, fieldName), 350));\n        self.dispatch.on(\"multi-criteria-updated\", Utils.debounce((fieldName)=> self.app.onMultiCriteriaUpdated(fieldName), 350));\n\n    }\n\n    initLayoutOptions() {\n        var self = this;\n        this.layoutOptionsContainer = this.container.select('#layout-options');\n        this.autoLayoutOptionsGroup = this.layoutOptionsContainer.select('#auto-layout-options');\n        this.gridWidth = this.layoutOptionsContainer.select('input#grid-width').on('change', function () {\n            self.app.treeDesigner.layout.setGridWidth(parseInt(this.value));\n\n        });\n\n        this.gridHeight = this.layoutOptionsContainer.select('input#grid-height').on('change', function () {\n            self.app.treeDesigner.layout.setGridHeight(parseInt(this.value));\n        });\n\n        this.nodeSize = this.layoutOptionsContainer.select('input#node-size').on('change', function () {\n            self.app.treeDesigner.layout.setNodeSize(parseInt(this.value));\n        });\n\n        this.edgeSlantWidthMax = this.layoutOptionsContainer.select('input#edge-slant-width-max').on('change', function () {\n            self.app.treeDesigner.layout.setEdgeSlantWidthMax(parseInt(this.value));\n        });\n\n        this.marginHorizontal = this.layoutOptionsContainer.select('input#margin-horizontal').on('change', function () {\n            var m = {};\n            m.left = m.right = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n        this.marginVertical = this.layoutOptionsContainer.select('input#margin-vertical').on('change', function () {\n            var m = {};\n            m.top = m.bottom = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n\n        this.scale = this.layoutOptionsContainer.select('input#sd-svg-scale').on('change', function () {\n            self.app.treeDesigner.setScale(parseFloat(this.value));\n        });\n\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.updateLayoutOptions());\n\n        this.layoutOptionsContainer.select('.toggle-button').on('click', () => {\n            this.layoutOptionsContainer.classed('sd-extended', !this.layoutOptionsContainer.classed('sd-extended'));\n        });\n\n        this.updateLayoutOptions();\n    }\n\n    updateLayoutOptions() {\n        this.nodeSize.node().value = this.app.treeDesigner.config.layout.nodeSize;\n        this.edgeSlantWidthMax.node().value = this.app.treeDesigner.config.layout.edgeSlantWidthMax;\n        this.marginHorizontal.node().value = this.app.treeDesigner.config.margin.left;\n        this.marginVertical.node().value = this.app.treeDesigner.config.margin.top;\n        this.gridWidth.node().value = this.app.treeDesigner.config.layout.gridWidth;\n        this.gridHeight.node().value = this.app.treeDesigner.config.layout.gridHeight;\n        this.scale.node().value = this.app.treeDesigner.config.scale;\n        this.autoLayoutOptionsGroup.classed('visible', !this.app.treeDesigner.layout.isManualLayout());\n    }\n\n    initDiagramDetails() {\n        var self = this;\n        this.diagramDetailsContainer = this.container.select('#diagram-details-box');\n        this.diagramDetailsContainer.classed('sd-hidden', !this.app.config.showDetails);\n\n        this.diagramDetailsContainer.select('.toggle-button').on('click', () => {\n            this.diagramDetailsContainer.classed('sd-extended', !this.diagramDetailsContainer.classed('sd-extended'));\n            this.updateDiagramDetails();\n        });\n\n        this.diagramTitle = this.diagramDetailsContainer.select('input#diagram-title').on('change', function () {\n            self.app.setDiagramTitle(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.diagramDescription = this.diagramDetailsContainer.select('textarea#diagram-description').on('change', function () {\n            self.app.setDiagramDescription(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        AppUtils.elasticTextarea(this.diagramDescription);\n\n        this.updateDiagramDetails();\n    }\n\n    initDefinitions() {\n        var self = this;\n        this.definitionsContainer = this.container.select('#sd-sidebar-definitions');\n        this.definitionsContainer.classed('sd-hidden', !this.app.config.showDefinitions);\n        this.onDefinitionsCodeChanged = null;\n        this.definitionsContainer.select('.toggle-button').on('click', () => {\n            this.definitionsContainer.classed('sd-extended', !this.definitionsContainer.classed('sd-extended'));\n            AppUtils.updateInputClass(this.definitionsCode);\n            AppUtils.autoResizeTextarea(this.definitionsCode.node())\n        });\n\n        this.definitionsScopeLabel = this.definitionsContainer.select('.sd-variables-scope-value');\n\n        this.definitionsCode = this.definitionsContainer.select('textarea#sd-sidebar-definitions-code').on('change', function () {\n            if (self.onDefinitionsCodeChanged) {\n                self.onDefinitionsCodeChanged(this.value)\n            }\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        Tooltip.attach(this.definitionsCode, (d)=>{\n            return self.definitionsCode.attr('data-error-msg');\n\n        }, 15, 50);\n\n\n        this.definitionsEvaluatedValuesContainer = this.container.select(\"#sd-sidebar-definitions-evaluated-values\");\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-open-dialog-button').on('click', () => {\n            this.app.openDefinitionsDialog();\n        });\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-recalculate-button').on('click', () => {\n            this.app.recompute();\n        });\n\n        AppUtils.elasticTextarea(this.definitionsCode);\n    }\n\n    initMultipleCriteria() {\n        var self = this;\n        this.multipleCriteriaContainer = this.container.select('#sd-multiple-criteria');\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        this.multipleCriteriaContainer.select('.toggle-button').on('click', () => {\n            this.multipleCriteriaContainer.classed('sd-extended', !this.multipleCriteriaContainer.classed('sd-extended'));\n        });\n\n\n        this.showLeagueTableButton = this.multipleCriteriaContainer.select('#sd-show-league-table-button').on('click', () => {\n            this.app.showLeagueTable();\n        });\n\n        this.flipCriteriaButton = this.multipleCriteriaContainer.select('#sd-flip-criteria-button').on('click', () => {\n            this.app.flipCriteria();\n        });\n\n         let weightParser = (w) => {\n             return parseFloat(w) === Infinity ? Infinity : w;\n        };\n\n\n\n        this.multipleCriteriaFields = [];\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion1', 'nameOfCriterion1', 'text', i18n.t('multipleCriteria.nameOfCriterion1'), new PathValueAccessor(self.app.dataModel, 'payoffNames[0]'), new RequiredInputValidator()));\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion2', 'nameOfCriterion2', 'text', i18n.t('multipleCriteria.nameOfCriterion2'), new PathValueAccessor(self.app.dataModel, 'payoffNames[1]'), new RequiredInputValidator()));\n        let lowerBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightLowerBound');\n        let upperBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightUpperBound');\n        let weightValueValidator = new McdmWeightValueValidator();\n        var ee = this.app.expressionEngine.constructor;\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightLowerBound', 'weightLowerBound', 'text', i18n.t('multipleCriteria.weightLowerBound'), lowerBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                return weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-defaultCriterion1Weight', 'defaultCriterion1Weight', 'text', i18n.t('multipleCriteria.defaultCriterion1Weight'),\n            new PathValueAccessor(self.app.dataModel, 'defaultCriterion1Weight'),\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                let lower = lowerBoundValueAccessor.get();\n                return (weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true) && (weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true)\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightUpperBound', 'weightUpperBound', 'text', i18n.t('multipleCriteria.weightUpperBound'), upperBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let lower = lowerBoundValueAccessor.get();\n                return weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true\n            }), null, weightParser));\n\n        this.updateMultipleCriteria();\n    }\n\n\n    updateMultipleCriteria(updateInputs = true){ //TODO refactor\n        var ee = this.app.expressionEngine;\n\n        var self = this;\n        var temp = {};\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        let leagueTableAvailable = this.app.isLeagueTableAvailable();\n        this.showLeagueTableButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.flipCriteriaButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.multipleCriteriaContainer.classed('sd-invalid-league-table-params', !leagueTableAvailable);\n\n        if(!updateInputs){\n            return;\n        }\n\n        var inputGroups = this.multipleCriteriaContainer.select(\".sd-multiple-criteria-properties\").selectAll('div.input-group').data(this.multipleCriteriaFields);\n        inputGroups.exit().remove();\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n        inputGroupsEnter.merge(inputGroups).select('.sd-input').on('change input', function (d, i) {\n            var prevValue = d.getValue();\n\n            var isValid = !d.validator || d.validator.validate(this.value);\n\n            let selection = d3.select(this);\n            selection.classed('invalid', !isValid);\n            if(d.styleClass){\n                selection.classed(d.styleClass, true);\n            }\n\n            if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                if (d.onChange) {\n                    d.onChange(object, this.value, temp[i].pristineVal);\n                }\n            }\n\n            if((prevValue+\"\")==this.value){\n                return;\n            }\n\n            AppUtils.updateInputClass(selection);\n            d.setValue(d.parse(this.value));\n            self.dispatch.call(\"multi-criteria-updated\", self, d.name);\n\n        })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                let value = d.getValue();\n\n                this.value = value;\n                temp[i] = {};\n                d3.select(this).classed('invalid', d.validator && !d.validator.validate(this.value));\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n    }\n\n    updateDefinitions(definitionsSourceObject, readOnly, changeCallback) {\n        this.definitionsContainer.classed('sd-read-only', readOnly);\n        this.onDefinitionsCodeChanged = changeCallback;\n\n\n        let scopeType = 'global';\n        if (definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node'\n        }\n\n        this.definitionsScopeLabel.text(i18n.t(\"sidebarDefinitions.scope.\"+scopeType));\n\n        this.definitionsCode.node().value = definitionsSourceObject.code;\n        this.definitionsCode.classed('invalid', !!definitionsSourceObject.$codeError);\n        this.definitionsCode.attr('data-error-msg', definitionsSourceObject.$codeError);\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(definitionsSourceObject.expressionScope)});\n        this.definitionsEvaluatedValuesContainer.html(html);\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node())\n    }\n\n    updateDiagramDetails() {\n        this.diagramTitle.node().value = this.app.config.title;\n        AppUtils.updateInputClass(this.diagramTitle);\n        this.diagramDescription.node().value = this.app.config.description;\n        AppUtils.updateInputClass(this.diagramDescription);\n        AppUtils.autoResizeTextarea(this.diagramDescription.node())\n    }\n\n    displayObjectProperties(object) {\n        this.updateObjectPropertiesView(object);\n    }\n\n    hideObjectProperties() {\n\n        this.container.select('#object-properties').classed('visible', false);\n        this.container.selectAll('div.child-object').remove();\n\n    }\n\n    updateObjectPropertiesView(object) {\n        this.dispatch.on(\".recomputed\", null); //remove all callbacks for recomputed event\n        if (!object) {\n            this.hideObjectProperties();\n            return;\n        }\n\n        var objectProps = this.objectProps = this.container.select('#object-properties').classed('visible', true);\n        var headerText = Sidebar.getHeaderTextForObject(object);\n        objectProps.select('.header').html(headerText);\n\n        var fieldList = this.getFieldListForObject(object);\n        this.updateObjectFields(object, fieldList, objectProps.select('.content .main-properties'));\n\n\n        this.updateObjectChildrenProperties(object);\n\n    }\n\n    updateObjectChildrenProperties(object) {\n        var self = this;\n        var childObjects = this.getChildObjectList(object);\n        var objectType = Sidebar.getObjectType(object);\n\n        var childPropsSelector = this.objectProps.select('.content .children-properties');\n\n        childPropsSelector.classed('visible', childObjects.length);\n\n        childPropsSelector.select('.children-properties-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.header'));\n        var childrenContent = childPropsSelector.select('.children-properties-content');\n        var children = childrenContent.selectAll('div.child-object').data(childObjects, (d, i)=> d.$id || i);\n        var childrenEnter = children.enter().appendSelector('div.child-object');\n        var childrenMerge = childrenEnter.merge(children);\n\n        childrenMerge.each(updateChildObjectProperties);\n\n        children.exit().remove();\n\n        function updateChildObjectProperties(child, i) {\n            var container = d3.select(this);\n            container.selectOrAppend('div.child-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.child.header', {number: i + 1}));\n\n            var fieldList = self.getFieldListForObject(child);\n            self.updateObjectFields(child, fieldList, container.selectOrAppend('div.field-list'))\n        }\n    }\n\n    static getObjectType(object) {\n        if (object instanceof model.Node) {\n            return 'node';\n        }\n        if (object instanceof model.Edge) {\n            return 'edge';\n        }\n        if (object instanceof model.Text) {\n            return 'text';\n        }\n        return '';\n    }\n\n    static getHeaderTextForObject(object) {\n        if (object instanceof model.Node) {\n            return i18n.t('objectProperties.header.node.' + object.type);\n        }\n        if (object instanceof model.Edge) {\n            return i18n.t('objectProperties.header.edge');\n        }\n        if (object instanceof model.Text) {\n            return i18n.t('objectProperties.header.text');\n        }\n        return '';\n    }\n\n    getChildObjectList(object) {\n        if (object instanceof model.Node) {\n            return object.childEdges.sort((a, b)=>a.childNode.location.y - b.childNode.location.y);\n        }\n        if (object instanceof model.Edge) {\n            return [];\n        }\n        return [];\n    }\n\n    getFieldListForObject(object) {\n        var self = this;\n\n        if (object instanceof model.Node) {\n            return [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                })\n            ]\n        }\n        if (object instanceof model.Edge) {\n            let multipleCriteria = this.app.isMultipleCriteria();\n            var list = [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                }),\n                new ObjectInputField(object, {\n                    name: 'payoff',\n                    path: 'payoff[' + (self.app.currentViewMode.payoffIndex || 0) + ']',\n                    label: multipleCriteria ? self.app.dataModel.payoffNames[0] : undefined,\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                })\n\n\n            ];\n\n            if(multipleCriteria) {\n                list.push(new ObjectInputField(object, {\n                    name: 'payoff2',\n                    path: 'payoff[1]',\n                    label: self.app.dataModel.payoffNames[1],\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                }));\n            }\n\n            if (object.parentNode instanceof model.ChanceNode) {\n                list.push(new ObjectInputField(object, {\n                    name: 'probability',\n                    type: 'text',\n                    validator: new ProbabilityInputValidator(self.app.expressionEngine)\n                }))\n            }\n            return list;\n\n        }\n        if (object instanceof model.Text) {\n            return [new ObjectInputField(object, {\n                name: 'value',\n                type: 'textarea'\n            })]\n        }\n\n        return [];\n    }\n\n    updateObjectFields(object, fieldList, container) {\n        var self = this;\n\n        var fields = container.selectAll('div.object-field').data(fieldList);\n        var temp = {};\n        var fieldsEnter = fields.enter().appendSelector('div.object-field');\n        var fieldsMerge = fieldsEnter.merge(fields);\n\n        fieldsMerge.each(function (d, i) {\n            var fieldSelection = d3.select(this);\n            fieldSelection.html(\"\");\n\n            var input;\n            if (d.type == 'textarea') {\n                input = fieldSelection.append('textarea').attr('rows', 1);\n            } else {\n                input = fieldSelection.append('input');\n            }\n            input.classed('sd-input', true);\n\n            fieldSelection.appendSelector('span.bar');\n            fieldSelection.append('label');\n            fieldSelection.classed('input-group', true);\n        });\n\n        fieldsMerge.select('label')\n            .attr('for', d=>d.id)\n            .html(d=>d.label);\n        fieldsMerge.select('.sd-input')\n            .attr('type', d=>d.type == 'textarea' ? undefined : d.type)\n            .attr('name', d=>d.name)\n            .attr('id', d=>d.id)\n            .on('change keyup', function (d, i) {\n                var prevValue = d.getValue();\n                var isValid = !d.validator || d.validator.validate(this.value, object, d.path);\n                object.setSyntaxValidity(d.path, isValid);\n\n                d3.select(this).classed('invalid', !object.isFieldValid(d.path));\n\n                if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                    self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                    if (d.onChange) {\n                        d.onChange(object, this.value, temp[i].pristineVal);\n                    }\n                }\n\n                if((prevValue+\"\")==this.value){\n                    return;\n                }\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.customOnInput) {\n                    d.customOnInput(object, this.value, temp[i].pristineVal)\n                } else {\n                    d.setValue(this.value);\n                    self.dispatch.call(\"object-updated\", self, object, d.path);\n                }\n            })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                this.value = d.getValue();\n                temp[i] = {};\n                if (d.validator && !d.validator.validate(this.value, object, d.path)) {\n                    d3.select(this).classed('invalid', true);\n                    object.setSyntaxValidity(d.path, false);\n                }else{\n                    object.setSyntaxValidity(d.path, true);\n                }\n\n                var _this = this;\n                var checkFieldStatus = () => {\n                    d3.select(_this).classed('invalid', !object.isFieldValid(d.path));\n                };\n                checkFieldStatus();\n\n                self.dispatch.on(\"recomputed.\"+object.$id+\".\"+d.path, checkFieldStatus);\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n\n        fields.exit().remove();\n    }\n}\n\nclass ObjectInputField extends InputField{\n    //config object with fields: name, path, type, validator, options\n    constructor(object, config) {\n        super('object-' + object.$id + '-field-' + config.name, config.name, config.type, config.label ? config.label : i18n.t(Sidebar.getObjectType(object) + '.' + config.name),\n            new PathValueAccessor(object, config.path || config.name), config.validator, config.options);\n        this.path = config.path || config.name;\n        this.onChange = config.onChange;\n    }\n}\n\n","import {Templates as TdTemplates} from \"sd-tree-designer\";\nimport {i18n} from './i18n/i18n'\nimport {Utils, log} from \"sd-utils\";\n\nexport class Templates extends TdTemplates{\n\n    //TODO automate\n    static about_de = require('./templates/about/de.html');\n    static about_en = require('./templates/about/en.html');\n    static about_fr = require('./templates/about/fr.html');\n    static about_it = require('./templates/about/it.html');\n    static about_pl = require('./templates/about/pl.html');\n\n    static toolbar = require('./templates/toolbar.html');\n    static layoutOptions = require('./templates/sidebar/layout_options.html');\n    static objectProperties = require('./templates/sidebar/object_properties.html');\n    static diagramDetailsBox = require('./templates/sidebar/diagram_details_box.html');\n    static evaluatedVariables = require('./templates/evaluated_variables.html');\n    static definitions = require('./templates/sidebar/definitions.html');\n    static multipleCriteria = require('./templates/sidebar/multiple_criteria.html');\n    static sidebar = require('./templates/sidebar/sidebar.html');\n    static settingsDialog = require('./templates/settings_dialog.html');\n    static settingsDialogFormGroup = require('./templates/settings_dialog_form_group.html');\n    static inputGroup = require('./templates/input_group.html');\n    static selectInputGroup = require('./templates/select_input_group.html');\n    static help = require('./templates/help.html');\n    static aboutDialog = require('./templates/about_dialog.html');\n    static definitionsDialog = require('./templates/definitions_dialog.html');\n    static sensitivityAnalysisDialog = require('./templates/sensitivity_analysis_dialog.html');\n    static jobParametersBuilder = require('./templates/jobs/job_parameters_builder.html');\n    static jobParameter = require('./templates/jobs/job_parameter.html');\n    static leagueTableDialog = require('./templates/league_table_dialog.html');\n    static loadingIndicator = require('./templates/loading_indicator.html');\n    static fullscreenPopup = require('./templates/fullscreen_popup.html');\n    static warningMessage = require('./templates/warning_message.html');\n    static main = require('./templates/main.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n}\n\n\n\n\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (gebaut <%= buildTimestamp%>)</strong><br/>Open Source Entscheidungsbaum Software.\\n</p>\\n<p>\\n<strong>Zitierung:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Projektteam:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (Projektleiter)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (Stellvertretender Projektleiter)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (Designer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (Entwickler)</li>\\n        <li>Anna Wiertlewska (Projekt Unterstützung)</li>\\n        <li>Marcin Czupryna (Tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Das Projekt wird von Decision Support and Analysis Division, Warsaw School of Economics entwickelt.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions ist ein gemeinschaftsgetriebenes Projekt. Sollten Sie es für Ihre Untericht, Forschung oder jede andere Aktivität, die Sie mit uns teilen möchten verwenden, wir würden uns freuen, einen Link zu Ihren Aktivitäten zu der <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Gemeinschaft</a> Seite hinzufügen zu können.\\n</p>\\n<p>\\n    Software wird als Teil von <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Projekt entwickelt. Dieses Projekt hat      Mittel aus dem Horizon 2020 (Forschungs- und Innovationsprogramm der Europäischen Union) im Rahmen der Finanzhilfevereinbarung Nr 645860 erhalten. Ziel dieses Projektes ist es, eine transparente Kommunikation zwischen der öffentlichen Verwaltung und den Bürgern über das Thema, öffentliche Daten und Entscheidungsprozesse zu unterstützen. \\n</p>\\n<p>\\n    Alle Quelldateien werden unter den Bedingungen der GNU Lesser General Public License Version 3 lizenziert.\\n</p>\\n<p>\\n    Für weitere Informationen besuchen Sie bitte, unsere Website unter <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>A free and open source decision tree software.\\n</p>\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Project team:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (deputy project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentalist)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    The project is developed at Decision Support and Analysis Division, Warsaw School of Economics.<br/>\\n    Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions is a community-driven project, so if you use it for teaching, research or any other activity that you would be willing to share please let us know. We would be glad to add a link to your activities on <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a> page.\\n</p>\\n<p>\\n    Software is developed as a part of <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Project that has\\n    received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No\\n    645860. Its aim is to allow a transparent communication between public administration and citizens regarding public\\n    data about decision making processes performed by public administration.\\n</p>\\n<p>\\n    All the source files are licensed under the terms of the GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    For more information visit our website at <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>Un logiciel libre et open source pour faire son propre arbre de décision.\\n</p>\\n\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Equipe du projet:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (chef de projet)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (chef de projet adjoint)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (développeur)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentaliste)</li>\\n\\t<li>Marcin Czupryna (testeur)</li>\\n    </ul>\\n</p>\\n<p>\\n    Le projet est conçu et développé par la Division de l'aide à la décision et de l'analyse, à l'École d'économie de Varsovie. <br/>Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions est un projet communautaire, donc si vous l'utilisez pour l'enseignement, la recherche ou toute autre activité que vous aimeriez partager, \\n    faites-le nous savoir. Nous serions heureux d'ajouter un lien vers vos activités sur le site web de \\n    <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>  \\n    Le logiciel est développé dans le cadre du projet <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a>, \\n    financé par le programme de recherche et d'innovation Horizon 2020 de l'Union Européenne dans le cadre de l'accord de subvention n° 645860. \\n    Son objectif est permettre une communication transparente entre l'administration publique et les citoyens \\n    concernant les données publiques (Open Data) et la prise de décision des administrations.  \\n</p>\\n<p>\\n    Tous les fichiers source sont sous licence GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    Pour plus d'informations, visitez notre site web à <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (construzione <%= buildTimestamp%>)</strong><br/>\\n    Un Software Open Source Free per gestire alberi di decisione.\\n</p>\\n\\n<p>\\n<strong>Citazione:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Team di progetto:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (vice project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (sviluppo)</li>\\n        <li>Marcin Czupryna (test)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (tester)</li>\\n        <li>Anna Wiertlewska (documentazione)</li>\\n    </ul>\\n</p>\\n<p>\\n    Il progetto è sviluppato presso la Divisione “Supporto alla decisione ed Analisi” della Scuola di Economia dell’Università di Varsavia. <br/>Contatto:\\n    silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\nSilverDecision è un Progetto basato su di una Comunità di sviluppo, se lo utilizzi a scopo di insegnamento, ricerca o altra attività che vorresti rendere nota tienici informati. Saremmo lieti di aggiungere un <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">link</a> alla tua attività.\\n</p>\\n<p>\\n    Il software è sviluppato nell’ambito del progetto <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> \\n    finanziato dal programma di ricerca ed innovazione H2020 dell’ Unione Europea (contratto n. 645860). \\n    Scopo del progetto è quello di permettere una comunicazione trasparente tra Pubblica Amministrazione e cittadini \\n    riguardo ai dati pubblici ed ai processi di decisione portati avanti dalla stessa Pubblica Amministrazione.    \\n</p>\\n<p>\\n    Tutti i codici sorgente sono rilasciati secondo i termini della licenza “GNU Lesser General Public License version 3\\\".\\n</p>\\n<p>\\n    Per maggiori informazioni visita il sito <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>\\n    Oprogramowanie do analizy drzew decyzyjnych typu Free Open Source.\\n</p>\\n\\n<p>\\n<strong>Cytowanie:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Zespół projektowy:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (manager projektu)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (zastępca managera projektu)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (projektant)</li>\\n        <li>Anna Wiertlewska (dokumentalistka)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Projekt jest realizowany w Zakładzie Wspomagania i Analizy Decyzji w Szkole Głównej Handlowej w Warszawie.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    Rozwój SilverDecisions zależy od potrzeb użytkowników. W związku z tym jeśli wykorzystujesz je do nauczania, badań lub innych aktywności, o których zechcesz na powiedzieć prosimy o kontakt. Byłoby nam bardzo miło, jeśli moglibyśmy dodać informację o Twoich aktywnościach na stronie <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>\\n<p>\\n    Oprogramowanie jest rozwijane w ramach projektu <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> (<em>Raising\\n    Open and User-friendly Transparency-Enabling Technologies for Public Administrations</em>),\\n    który jest finansowany ze środków Europejskiego Programu w Zakresie Badań Naukowych i Innowacji Horizon 2020 na\\n    podstawie umowy o dotację nr 645860. Celem projektu ROUTE-TO-PA jest umożliwienie przejrzystej komunikacji pomiędzy\\n    administracją publiczną a mieszkańcami w zakresie publicznych danych dotyczących procesu podejmowania przez\\n    administracje publiczne decyzji.\\n</p>\\n<p>\\n    Wszystkie pliki źródłowe są licencjonowane zgodnie ze słabszą powszechną licencją publiczną GNU (GNU Lesser General Public License version 3).\\n</p>\\n<p>\\n    Więcej informacji można znaleźć na stronie internetowej: <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<div id=\\\"sd-about-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"aboutDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <% if ( [\\\"de\\\", \\\"en\\\", \\\"fr\\\", \\\"it\\\", \\\"pl\\\"].indexOf(lng) !== -1) { %>\\n                <%= include('about_'+lng, variables) %>\\n            <% } else { %>\\n                <%= include('about_en', variables) %>\\n            <% } %>\\n\\n            <%= include('help', variables) %>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-definitions-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"definitionsDialog.title\\\")%>: <span class=\\\"sd-definitions-dialog-scope-label\\\"></span></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"definitions-form\\\">\\n                <div class=\\\"input-group\\\">\\n                    <textarea id=\\\"sd-definitions-dialog-definitions-code\\\" name=\\\"sd-definitions-code\\\"></textarea>\\n                    <span class=\\\"bar\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"evaluated-variables-preview\\\">\\n                <h3><%= i18n.t('definitionsDialog.evaluatedVariables')%>:</h3>\\n                <div id=\\\"sd-definitions-dialog-variable-values\\\"></div>\\n            </div>\\n            <div class=\\\"action-buttons\\\">\\n                <button id=\\\"sd-definitions-dialog-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('definitionsDialog.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<table class=\\\"sd-evaluated-variables\\\">\\n    <% for(i=0; i<scopeVariables.length; ++i) { %>\\n    <tr>\\n        <td><%= scopeVariables[i].key %></td>\\n        <td>=</td>\\n        <td><%= scopeVariables[i].value %></td>\\n    </tr>\\n    <% } %>\\n</table>\\n\";\n","module.exports = \"<div class=\\\"sd-fullscreen-popup\\\">\\n    <div class=\\\"sd-popup-header\\\">\\n        <span class=\\\"sd-close-popup\\\"><i class=\\\"material-icons\\\">close</i></span>\\n        <h2><%= title %></h2>\\n    </div>\\n\\n    <div class=\\\"sd-popup-body\\\">\\n        <%= body %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div>\\n    <h3><%= i18n.t(\\\"help.header\\\")%></h3>\\n    <p>\\n        <%= i18n.t(\\\"help.mouse.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.mouse.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.3\\\")%></li>\\n        </ul>\\n    </p>\\n    <p>\\n        <%= i18n.t(\\\"help.keyboard.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.keyboard.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.3\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.4\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.5\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.6\\\")%></li>\\n        </ul>\\n    </p>\\n    <p><%= i18n.t(\\\"help.docs\\\")%></p>\\n</div>\\n\";\n","module.exports = \"<input id=\\\"<%= id %>\\\" type=\\\"<%= type %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"\\n\";\n","module.exports = \"<div class=\\\"sd-job-parameters-builder\\\">\\n\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-league-table-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"leagueTableDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-league-table-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-league-table-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-league-table-action-buttons\\\">\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('leagueTableDialog.buttons.downloadCsv')%></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-loading-indicator\\\">\\n    <div></div>\\n    <div class=\\\"sd-spinner\\\" title=\\\"loading...\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"silver-decisions\\\" tabindex=\\\"0\\\">\\n    <%= include('toolbar', variables) %>\\n    <div id=\\\"main-region\\\">\\n        <%= include('sidebar', variables) %>\\n        <div id=\\\"tree-designer-container\\\"></div>\\n    </div>\\n    <input type=\\\"file\\\" style=\\\"display:none\\\" id=\\\"sd-file-input\\\" accept=\\\".json\\\"/>\\n    <%= include('settingsDialog', variables) %>\\n    <%= include('aboutDialog', variables) %>\\n    <%= include('definitionsDialog', variables) %>\\n    <%= include('sensitivityAnalysisDialog', variables) %>\\n    <%= include('leagueTableDialog', variables) %>\\n</div>\\n\";\n","module.exports = \"<select id=\\\"<%= id %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n    <% for(i=0; i<options.length; ++i) { %>\\n    <option value=\\\"<% if (options[i].value !== undefined){ %><%= options[i].value %><%} else { %><%= options[i] %><%}%>\\\"><% if (options[i].label !== undefined){ %><%= options[i].label %><%} else { %><%= options[i] %><%}%></option>\\n    <% } %>\\n</select>\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-sensitivity-analysis-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"sensitivityAnalysisDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-sensitivity-analysis-job-configuration\\\">\\n                <div class=\\\"sd-job-select-input-group input-group\\\"></div>\\n                <%= include('jobParametersBuilder', variables) %>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-sensitivity-analysis-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-action-buttons\\\">\\n                <button class=\\\"sd-terminate-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.terminateJob')%></button>\\n                <button class=\\\"sd-stop-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.stopJob')%></button>\\n                <button class=\\\"sd-resume-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.resumeJob')%></button>\\n                <button class=\\\"sd-back-button  sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.back')%></button>\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.downloadCsv')%></button>\\n                <button class=\\\"sd-clear-button \\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.clear')%></button>\\n                <button class=\\\"sd-run-job-button\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.runJob')%></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-settings-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"settingsDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <form id=\\\"sd-settings-form\\\">\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"header\\\">\\n    <h4><%= i18n.t(\\\"settingsDialog.\\\"+name+\\\".title\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </h4>\\n</div>\\n<div class=\\\"sd-form-group-content\\\">\\n    <div class=\\\"sd-form-group-inputs\\\"></div>\\n    <div class=\\\"sd-form-group-child-groups\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar-definitions\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"sidebarDefinitions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-variables-scope\\\">\\n            <div class=\\\"sd-variables-scope-label\\\"><%= i18n.t('sidebarDefinitions.scope.label')%></div>\\n            <div class=\\\"sd-variables-scope-value\\\"></div>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea rows=\\\"1\\\" id=\\\"sd-sidebar-definitions-code\\\" type=\\\"text\\\" name=\\\"sidebar-definitions-code\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"sd-sidebar-definitions-code\\\"><%= i18n.t(\\\"sidebarDefinitions.code\\\") %></label>\\n        </div>\\n        <div class=\\\"evaluated-variables-preview\\\">\\n            <div class=\\\"evaluated-variables-preview-header\\\">\\n                <%= i18n.t('sidebarDefinitions.evaluatedVariables')%>\\n            </div>\\n            <div id=\\\"sd-sidebar-definitions-evaluated-values\\\"></div>\\n        </div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-sidebar-definitions-open-dialog-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.openDialog')%>\\\"><i class=\\\"material-icons\\\">open_in_new</i></button>\\n            <button id=\\\"sd-sidebar-definitions-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"diagram-details-box\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"diagramDetails.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"diagram-title\\\" type=\\\"text\\\" name=\\\"diagram-title\\\">\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-title\\\"><%= i18n.t(\\\"diagramDetails.title\\\") %></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea id=\\\"diagram-description\\\" name=\\\"diagram-description\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-description\\\"><%= i18n.t(\\\"diagramDetails.description\\\") %></label>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"layout-options\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"layoutOptions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-horizontal\\\" name=\\\"margin-horizontal\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-horizontal\\\"><%= i18n.t(\\\"layoutOptions.marginHorizontal\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-vertical\\\" name=\\\"margin-vertical\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-vertical\\\"><%= i18n.t(\\\"layoutOptions.marginVertical\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"node-size\\\" name=\\\"node-size\\\" type=\\\"range\\\" min=\\\"20\\\" max=\\\"60\\\" step=\\\"5\\\"/>\\n            <label for=\\\"node-size\\\"><%= i18n.t(\\\"layoutOptions.nodeSize\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"edge-slant-width-max\\\" name=\\\"edge-slant-width-max\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"edge-slant-width-max\\\"><%= i18n.t(\\\"layoutOptions.edgeSlantWidthMax\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"sd-svg-scale\\\" name=\\\"svg-scale\\\" type=\\\"range\\\" min=\\\"0.2\\\" max=\\\"3\\\" step=\\\"0.1\\\"/>\\n            <label for=\\\"sd-svg-scale\\\"><%= i18n.t(\\\"layoutOptions.scale\\\")%></label>\\n        </div>\\n        <div id=\\\"auto-layout-options\\\">\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-width\\\" name=\\\"grid-width\\\" type=\\\"range\\\" min=\\\"105\\\" max=\\\"300\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-width\\\"><%= i18n.t(\\\"layoutOptions.gridWidth\\\")%></label>\\n            </div>\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-height\\\" name=\\\"grid-height\\\" type=\\\"range\\\" min=\\\"55\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-height\\\"><%= i18n.t(\\\"layoutOptions.gridHeight\\\")%></label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-multiple-criteria\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"multipleCriteria.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-multiple-criteria-properties\\\"></div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-show-league-table-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.showLeagueTable')%>\\\"><i class=\\\"material-icons\\\">assignment</i></button>\\n            <button id=\\\"sd-flip-criteria-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.flip')%>\\\"><i class=\\\"material-icons\\\">swap_vert</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"object-properties\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"main-properties\\\"></div>\\n        <div class=\\\"children-properties\\\">\\n            <div class=\\\"children-properties-header\\\"></div>\\n            <div class=\\\"children-properties-content\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar\\\">\\n    <div id=\\\"sd-sidebar-inner\\\">\\n        <%= include('layoutOptions', variables) %>\\n        <%= include('diagramDetailsBox', variables) %>\\n        <%= include('definitions', variables) %>\\n        <%= include('multipleCriteria', variables) %>\\n        <%= include('objectProperties', variables) %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-toolbar\\\">\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"new-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.newDiagram')%>\\\"><i class=\\\"material-icons\\\">insert_drive_file</i></button>\\n        <button id=\\\"open-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.openDiagram')%>\\\"><i class=\\\"material-icons\\\">folder_open</i></button>\\n        <button id=\\\"save-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.saveDiagram')%>\\\"><i class=\\\"material-icons\\\">save</i></button>\\n    </div>\\n    <div id=\\\"export-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.export.label\\\")%></label>\\n        <button id=\\\"saveButton\\\"><%= i18n.t(\\\"toolbar.export.png\\\")%></button>\\n        <button id=\\\"saveButtonSvg\\\"><%= i18n.t(\\\"toolbar.export.svg\\\")%></button>\\n        <button id=\\\"saveButtonPdf\\\"><%= i18n.t(\\\"toolbar.export.pdf\\\")%></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.layout.label\\\")%></label>\\n        <button id=\\\"manualLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.manual\\\")%></button>\\n        <button id=\\\"treeAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.tree\\\")%></button>\\n        <button id=\\\"clusterAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.cluster\\\")%></button>\\n    </div>\\n    <div id=\\\"view-mode-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"view-mode-select\\\"><%= i18n.t(\\\"toolbar.viewMode.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"view-mode-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div id=\\\"objective-rule-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"objective-rule-select\\\"><%= i18n.t(\\\"toolbar.objectiveRule.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"objective-rule-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"undoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.undo')%>\\\"><i class=\\\"material-icons\\\">undo</i></button>\\n        <button id=\\\"redoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.redo')%>\\\"><i class=\\\"material-icons\\\">redo</i></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"sensitivity-analysis-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.sensitivityAnalysis')%>\\\"><i class=\\\"material-icons\\\">assessment</i></button>\\n        <button id=\\\"recompute-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.recompute')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        <button id=\\\"settings-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.settings')%>\\\"><i class=\\\"material-icons\\\">settings</i></button>\\n        <button id=\\\"about-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.about')%>\\\"><i class=\\\"material-icons\\\">info_outline</i></button>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-warning-message\\\">\\n    <i class=\\\"material-icons sd-icon\\\">warning</i>\\n    <div class=\\\"sd-warning-message-text\\\">\\n       <%= message %>\\n    </div>\\n</div>\\n\";\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\nimport {AppUtils} from './app-utils'\nimport {Exporter} from './exporter'\nimport {FileLoader} from './file-loader'\n\nexport class Toolbar{\n\n    app;\n    container;\n    hiddenClass = 'sd-hidden';\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n        this.initDiagramButtons();\n        this.initExportToolbarGroup();\n        this.initLayoutButtons();\n        this.initUndoRedoButtons();\n        this.initSettingsButton();\n        this.initAboutButton();\n        this.initSensitivityAnalysisButton();\n        this.initRecomputeButton();\n        this.initViewModeToolbarGroup();\n        this.initObjectiveRuleToolbarGroup();\n    }\n\n    initDiagramButtons(){\n\n\n        this.newDiagramButton = this.container.select('#new-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.newDiagram'))){\n                return;\n            }\n            this.app.newDiagram();\n        });\n        this.newDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.new);\n        this.openDiagramButton = this.container.select('#open-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.openDiagram'))){\n                return;\n            }\n            FileLoader.openFile(model=>{\n                this.app.openDiagram(model);\n            });\n\n\n        });\n        this.openDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.open);\n        this.saveDiagramButton = this.container.select('#save-diagram-button').on('click', ()=>{\n            this.app.saveToFile();\n        });\n        this.saveDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.save);\n    }\n\n\n\n    initLayoutButtons() {\n        var self = this;\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.onLayoutChanged(layout));\n        this.layoutButtons={};\n        this.layoutButtons['manual'] = this.container.select('#manualLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='manual'){\n                return;\n            }\n            self.app.treeDesigner.layout.disableAutoLayout();\n        });\n        this.layoutButtons['tree'] = this.container.select('#treeAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='tree'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('tree');\n        });\n        this.layoutButtons['cluster'] = this.container.select('#clusterAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='cluster'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('cluster');\n        });\n\n        this.updateLayoutButtons();\n    }\n\n    updateLayoutButtons() {\n        this.onLayoutChanged(this.app.treeDesigner.config.layout.type)\n    }\n\n    initSettingsButton(){\n        this.settingsButton = this.container.select('#settings-button').on('click', ()=>{\n            this.app.settingsDialog.open();\n        });\n    }\n\n    initAboutButton(){\n        this.aboutButton = this.container.select('#about-button').on('click', ()=>{\n            this.app.aboutDialog.open();\n        });\n    }\n\n    initRecomputeButton(){\n        this.recomputeButton = this.container.select('#recompute-button').on('click', ()=>{\n            this.app.recompute();\n        });\n    }\n\n    initSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton = this.container.select('#sensitivity-analysis-button').on('click', ()=>{\n            this.app.openSensitivityAnalysis();\n        });\n    }\n\n    updateSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton.attr(\"disabled\", this.app.isSensitivityAnalysisAvailable() ? null : 'disabled');\n    }\n\n\n    onLayoutChanged(layout){\n        Object.getOwnPropertyNames(this.layoutButtons).forEach(l=>{\n            this.layoutButtons[l].classed('active', false);\n        });\n        var button = this.layoutButtons[layout];\n        if(button){\n            button.classed('active', true);\n        }\n    }\n\n    initUndoRedoButtons() {\n        var self = this;\n        self.app.dataModel.undoRedoStateChangedCallback = ()=>this.onUndoRedoChanged();\n        this.undoButton = this.container.select('#undoButton').on('click', function () {\n            self.app.undo();\n        });\n        this.redoButton = this.container.select('#redoButton').on('click', function () {\n            self.app.redo();\n        });\n    }\n\n    onUndoRedoChanged() {\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n    }\n    updateUndoRedoButtons(){\n        this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n        this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n    }\n\n    update(){\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n        this.updateLayoutButtons();\n        this.updateViewModeValue();\n        this.updateObjectiveRuleOptions();\n        this.updateObjectiveRuleValue();\n    }\n\n    initExportToolbarGroup() {\n        this.container.select('#export-toolbar-group').classed(this.hiddenClass, !this.app.config.exports.show);\n        if(!this.app.config.exports.show){\n            return;\n        }\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initExportPdfButton();\n\n    }\n    initExportToPngButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButton')\n            .on('click', () => Exporter.saveAsPng(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPng)\n    }\n\n    initExportSvgButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonSvg')\n            .on('click', () => Exporter.saveAsSvg(svg))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToSvg)\n    }\n\n    initExportPdfButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonPdf')\n            .on('click', () => Exporter.saveAsPdf(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPdf)\n    }\n\n    initObjectiveRuleToolbarGroup() {\n        var self = this;\n        this.objectiveRuleSelect = this.container.select('#objective-rule-select');\n\n        this.updateObjectiveRuleOptions()\n        this.updateObjectiveRuleValue();\n\n        this.objectiveRuleSelect.on('change', function(){\n            self.app.setObjectiveRule(this.value);\n        })\n    }\n\n    updateObjectiveRuleOptions(){\n        var rules = this.app.getObjectiveRules();\n        var options = this.objectiveRuleSelect.selectAll('option').data(rules);\n        options.exit().remove();\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.objectiveRule.options.'+d.name));\n    }\n\n    updateObjectiveRuleValue(){\n        this.objectiveRuleSelect.node().value = this.app.getCurrentObjectiveRule().name;\n    }\n\n    initViewModeToolbarGroup() {\n        var self = this;\n        this.viewModeSelect = this.container.select('#view-mode-select');\n        var rules = this.app.getViewModes();\n        var options = this.viewModeSelect.selectAll('option').data(rules);\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.viewMode.options.'+d.name));\n\n        this.updateViewModeValue();\n\n        this.viewModeSelect.on('change', function(){\n            self.app.setViewModeByName(this.value);\n        })\n    }\n\n    updateViewModeValue(){\n        this.viewModeSelect.node().value = this.app.getCurrentViewMode().name;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class NumberInputValidator {\n\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        if (!value.trim()) {\n            return false;\n        }\n\n        value = parseFloat(value);\n\n        if (!Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (this.min !== undefined && value < this.min) {\n            return false;\n        }\n\n        return !(this.max !== undefined && value > this.max);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PayoffInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        return this.expressionEngine.validate(value);\n    }\n\n}\n","export class ProbabilityInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n\n        if(this.expressionEngine.constructor.isHash(value)){\n            return true;\n        }\n\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        var scope = edge.parentNode.expressionScope;\n        return this.expressionEngine.validate(value, scope);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class RequiredInputValidator {\n\n    constructor() {\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        return !!value.trim();\n    }\n\n}\n","module.exports = {\"buildTimestamp\":1568550395002}\n"]}