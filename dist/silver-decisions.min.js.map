{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/blueimp-canvas-to-blob/js/canvas-to-blob.js","silver-decisions.js","node_modules/d3-array/build/d3-array.js","node_modules/d3-brush/build/d3-brush.js","node_modules/d3-collection/build/d3-collection.js","node_modules/d3-color/build/d3-color.js","node_modules/d3-dispatch/build/d3-dispatch.js","node_modules/d3-drag/build/d3-drag.js","node_modules/d3-ease/build/d3-ease.js","node_modules/d3-format/build/d3-format.js","node_modules/d3-hierarchy/build/d3-hierarchy.js","node_modules/d3-interpolate/build/d3-interpolate.js","node_modules/d3-path/build/d3-path.js","node_modules/d3-scale/build/d3-scale.js","node_modules/d3-selection/build/d3-selection.js","node_modules/d3-shape/build/d3-shape.js","node_modules/d3-time-format/build/d3-time-format.js","node_modules/d3-time/build/d3-time.js","node_modules/d3-timer/build/d3-timer.js","node_modules/d3-transition/build/d3-transition.js","node_modules/file-saver/FileSaver.js","node_modules/lodash/lodash.js","src/app.js","src/context-menu.js","src/d3-extensions.js","src/d3.js","src/data-model.js","src/exporter.js","src/index.js","src/model/edge.js","src/model/index.js","src/model/node/chance-node.js","src/model/node/decision-node.js","src/model/node/node.js","src/model/node/terminal-node.js","src/model/point.js","src/sidebar.js","src/templates.js","src/toolbar.js","src/tree-designer/layout.js","src/tree-designer/main-context-menu.js","src/tree-designer/node-context-menu.js","src/tree-designer/node-drag-handler.js","src/tree-designer/tree-designer.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","slice","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","toDataURL","2","factory","d3","ascending","b","NaN","bisector","compare","ascendingComparator","left","x","lo","hi","mid","right","d","descending","number","variance","array","m","j","isNaN","deviation","v","Math","sqrt","extent","c","constant","identity","range","start","stop","step","arguments","max","ceil","Array","ticks","count","tickStep","floor","step0","abs","step1","pow","log","LN10","error","e10","e5","e2","sturges","values","LN2","histogram","data","value","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","bisectRight","push","_","thresholds","quantile","p","h","freedmanDiaconis","min","map","sort","scott","mean","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","random","sum","transpose","matrix","row","zip","ascendingBisect","bisectLeft","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","Object","defineProperty","3","d3Dispatch","d3Drag","d3Interpolate","d3Selection","d3Transition","nopropagation","event","stopImmediatePropagation","defaultFilter","button","defaultExtent","svg","ownerSVGElement","width","baseVal","height","local","node","__brush","parentNode","empty","brushSelection","state","dim","output","selection","brushX","brush$1","X","brushY","Y","brush","group","overlay","property","initialize","selectAll","enter","attr","cursors","each","select","handle","handles","exit","remove","redraw","style","on","started","handleSize","emitter","that","args","Emitter","active","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent","move","dx","point0","dy","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","E","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","clearTimeout","setTimeout","dragEnable","view","end","keydowned","keyCode","keyupped","altKey","changedTouches","filter","apply","target","__data__","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","dispatch","tween","selection1","selection0","input","interpolate","starting","customEvent","BrushEvent","preventDefault","name","xy","y","XY","w","nw","ne","se","sw","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition","4","Map","object","key","set","nest","depth","createResult","setResult","keys","rollup","sortValues","keyValue","valuesByKey","result","get","entries","sortKey","sortKeys","k","createObject","setObject","createMap","setMap","order","Set","add","prefix","constructor","has","clear","proto","5","extend","parent","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","C","D","cubehelix","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","toString","round","PI","Kn","A","B","cosh","sinh","6","Dispatch","parseTypenames","typenames","types","split","indexOf","noop","concat","typename","T","copy","7","nodrag","root","document","documentElement","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","subject","id","identifier","defaultContainer","defaultSubject","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touch","sublisteners","p0","8","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","exponent","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","asin","elasticOut","elasticInOut","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","9","formatDecimal","toExponential","coefficient","formatGroup","grouping","thousands","substring","reverse","join","formatDefault","toPrecision","out","formatPrefixAuto","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","re","fill","align","sign","symbol","zero","comma","precision","formatTypes","formatLocale","locale","newFormat","valuePrefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","decimal","Infinity","padding","currency","test","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","","%","toFixed","toUpperCase","formatDefaultLocale","10","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","cluster","previousNode","eachAfter","separation","nodeSize","node_each","current","next","node_eachBefore","nodes","node_eachAfter","node_sum","node_sort","eachBefore","node_path","ancestor","leastCommonAncestor","splice","aNodes","ancestors","bNodes","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","source","hierarchy","child","childs","Node","valued","defaultChildren","computeHeight","node_copy","copyData","Node$2","head","tail","enclose","circles","encloseN","encloses","dr","L","circle","l2","p1","l0","l1","enclose1","enclose2","enclose3","y1","r1","x2","y2","r2","x21","y21","r21","x3","y3","r3","a2","c2","d2","a3","c3","ab","xa","xb","ya","yb","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","cx","cy","sj","sk","aa","ba","ca","oa","ox","oy","pack","siblings","optional","required","constantZero","defaultRadius","index","radius","radiusLeaf","packChildren","translateChild","roundNode","y0","treemapDice","partition","positionNode","defaultId","defaultParentId","parentId","stratify","nodeId","nodeKey","nodeByKey","keyPrefix","ambiguous","preroot","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","tree","firstWalk","secondWalk","sizeNode","bottom","tx","kx","ky","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","rows","dice","index$1","treemap","paddingStack","paddingInner","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","squarify","paddingOuter","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","path","descendants","phi","resquarify","_squarify","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","11","d3Color","basis","v0","v1","v2","v3","basis$1","basisClosed","exponential","hue","gamma","nogamma","rgbSpline","spline","colors","nb","na","date","Date","setTime","one","string","am","bm","bs","bi","reA","lastIndex","reB","q","rgb$1","decompose","scaleX","scaleY","skewX","translateX","translateY","rotate","degrees","atan","parseCss","cssNode","createElement","cssRoot","cssView","defaultView","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","parseSvg","svgNode","createElementNS","setAttribute","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","scale","exp","tanh","zoom","ux0","uy0","ux1","uy1","epsilon2","rho","d1","rho4","rho2","r0","coshr0","duration","hsl$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","quantize","interpolator","samples","rgbGamma","rgbBasis","rgbBasisClosed","RegExp","interpolateTransformCss","interpolateTransformSvg","SQRT2","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","d3-color","12","Path","_x0","_y0","_x1","_y1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","rect","13","d3Array","d3Collection","d3Format","d3Time","d3TimeFormat","ordinal","unknown","implicit","band","rescale","bandwidth","ordinalRange","undefined","rangeRound","pointish","deinterpolate","deinterpolateClamp","reinterpolateClamp","reinterpolate","bimap","d0","polymap","clamp","continuous","deinterpolate$$","piecewise","unit","invert","map$1","tickFormat","linearish","nice","interval","deinterpolate$1","pow10","isFinite","powp","base","logp","log10","log2","reflect","logs","pows","raise","quantile$1","invertExtent","quantiles","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","tickIntervals","durationYear","every","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","time","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","utcTime","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","rainbow$1","ts","rainbow","ramp","sequential","category10","category20b","category20c","category20","warm","cool","viridis","magma","inferno","plasma","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","d3-array","d3-collection","d3-format","d3-time","d3-time-format","14","namespace","namespaces","space","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","creator","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","selection_on","sourceEvent","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","top","clientTop","none","selector","querySelector","selection_select","groups","_groups","subgroups","subnode","subgroup","Selection","_parents","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","matcher$1","sparse","update","selection_enter","_enter","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","nextSibling","insertBefore","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","selection_attr","getAttributeNS","getAttribute","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","contains","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","selection_html","selection_raise","lower","previousSibling","firstChild","selection_lower","selection_append","constantNull","selection_insert","before","selection_remove","selection_datum","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","points","xlink","xml","xmlns","matcher","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","element$1","mouseenter","mouseleave","classed","text","html","insert","15","d3Path","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","x11","y11","x00","y00","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","buffer","context","a01","a11","a00","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","bx","by","kc","lc","centroid","Linear","_context","curveLinear","line","defined0","curve","defined","lineStart","lineEnd","x$$","y$$","area","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","pie","arcs","pa","Radial","_curve","curveRadial","radial","radialLine","angle","radialLine$1","curveRadialLinear","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","Basis","BasisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","slope3","h0","h1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","series","none$1","stackValue","stack","oz","kz","sz","sij","ki","si","offset","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","descending$1","insideOut","tops","bottoms","_line","_point","cross","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","_x","_y","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","_t0","px","py","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","d3-path","16","localDate","H","M","setFullYear","utcDate","setUTCFullYear","newYear","formats","pad","pads","charAt","newParse","newDate","parseSpecifier","getUTCDay","getDay","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","replace","requoteRe","numberRe","percentRe","getDate","getMilliseconds","getMinutes","getSeconds","timeSunday","timeMonday","getFullYear","getTimezoneOffset","getUTCDate","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","timeParse","formatIsoNative","toISOString","parseIsoNative","-","0","isoSpecifier","formatIso","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","17","newInterval","floori","offseti","field","weekday","setDate","setHours","utcWeekday","setUTCDate","setUTCHours","milliseconds","seconds","minutes","hours","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","18","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","taskTail","sleep","clearInterval","setInterval","timeout$1","elapsed","interval$1","total","tick","performance","requestAnimationFrame","TypeError","19","d3Timer","d3Ease","schedule","timing","schedules","__transition","emptyOn","emptyTween","ease","CREATED","init","STARTING","SCHEDULED","STARTED","RUNNING","ENDED","ENDING","selection_interrupt","tweenRemove","tween0","tween1","tweenFunction","transition_tween","_id","tweenValue","transition","value1","value00","interpolate0","value0","value10","transition_attr","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","inherit","transition_selection","styleRemoveEnd","transition_style","styleTween","transition_styleTween","transition_text","transition_transition","id0","id1","newId","defaultTiming","selection_transition","selection_prototype","d3-ease","d3-timer","20","saveAs","navigator","userAgent","doc","get_URL","URL","webkitURL","save_link","can_use_save_link","click","MouseEvent","is_safari","HTMLElement","is_chrome_ios","throw_outside","ex","setImmediate","force_saveable_type","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","filesaver","event_types","auto_bom","blob","String","fromCharCode","FileSaver","no_auto_bom","object_url","force","dispatch_all","fs_error","FileReader","reader","onloadend","url","popup","open","location","href","readyState","DONE","readAsDataURL","INIT","createObjectURL","opened","download","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","content","21","addMapEntry","pair","addSetEntry","func","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","done","mapToArray","forEach","overArg","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","BIND_FLAG","BIND_KEY_FLAG","CURRY_BOUND_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","ARY_FLAG","REARG_FLAG","FLIP_FLAG","UNORDERED_COMPARE_FLAG","PARTIAL_COMPARE_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","freeGlobal","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entry","hashClear","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","arrayLikeKeys","inherited","isArguments","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","arrayShuffle","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","baseAssignValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","configurable","enumerable","writable","baseAt","paths","isNil","baseClamp","upper","baseClone","isDeep","isFull","customizer","isObject","initCloneArray","tag","getTag","isFunc","isBuffer","cloneBuffer","initCloneObject","copySymbols","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","othLength","othIndex","caches","maxLength","seen","baseInverter","baseInvoke","last","baseIsArrayBuffer","baseIsDate","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","baseIsNative","isMasked","pattern","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","basePropertyDeep","basePullAll","basePullAt","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","baseSet","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","byteLength","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","Ctor","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","message","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","getAllKeysIn","keysIn","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","transforms","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","mergeDefaults","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduceRight","reject","negate","sample","sampleSize","some","after","curry","curryRight","debounce","options","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","resolver","memoized","Cache","once","rest","spread","throttle","unary","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","propertyIsEnumerable","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNumber","isNative","isMaskable","isNull","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","iteratorSymbol","remainder","valueOf","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","unset","updateWith","valuesIn","inRange","floating","temp","capitalize","upperFirst","endsWith","position","escape","escapeRegExp","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","unescape","cond","conforms","defaultTo","matchesProperty","mixin","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","idCounter","maxBy","meanBy","minBy","sumBy","defaults","pick","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","isConcatSpreadable","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","WeakMap","nativeDefineProperty","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","resolve","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","sortBy","defer","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invertBy","invoke","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extendWith","eachRight","first","filtered","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","22","_interopRequireWildcard","obj","__esModule","newObj","_classCallCheck","instance","Constructor","App","AppConfig","_createClass","defineProperties","descriptor","protoProps","staticProps","_d","_utils","_index","_treeDesigner","_dataModel","_templates","_sidebar","_toolbar","Utils","deepExtend","containerId","config","setConfig","initContainer","initDataModel","initSidebar","initTreeDesigner","initToolbar","Templates","main","dataModel","DataModel","sidebar","Sidebar","toolbar","Toolbar","onNodeSelected","onObjectSelected","onEdgeSelected","edge","onSelectionCleared","treeDesigner","TreeDesigner","selectedObject","updateObjectPropertiesView","hideObjectProperties","undo","findById","$id","updateView","redo","./d3","./data-model","./model/index","./sidebar","./templates","./toolbar","./tree-designer/tree-designer","./utils","23","ContextMenu","menu","opts","openCallback","onOpen","closeCallback","onClose","elm","stopPropagation","ret","divider","disabled","title","pageX","pageY","24","D3Extensions","insertSelector","appendSelector","selectOrAppend","selectOrInsert","25","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","d3-brush","d3-hierarchy","d3-scale","d3-shape","26","_toConsumableArray","arr","arr2","from","model","_lodash","edges","maxStackSize","undoStack","redoStack","undoRedoStateChangedCallback","addNode","DecisionNode","Point","setName","n2","ChanceNode","setPayoff","childNode","TerminalNode","setProbability","_addChild","Edge","childEdges","$l","removeNode","_removeNode","parentEdge","removeEdge","_removeEdge","_this","roots","findSubtreeRoots","nodeToCopy","cloneNode","childClone","cloneSubtree","payoff","probability","nodeToAttach","getAllDescendantEdges","guid","findNodeById","findEdgeById","nodesToRemove","edgesToRemove","getAllDescendantNodes","revertConf","_pushToStack","_fireUndoRedoCallback","newState","_setNewState","nodeById","getObjectByIdMap","edgeById","onRevert","27","Exporter","_blueimpCanvasToBlob","_fileSaver","getCSSStyles","parentElement","str","getSelectors","parentSelectors","selectorTextArr","tagName","allClasses","className","childNodes","extractedCSSText","styleSheets","cssRules","selectorText","cssText","appendCSS","styleElement","refNode","hasChildNodes","cssStyleText","serializer","XMLSerializer","svgString","serializeToString","imgsrc","btoa","encodeURIComponent","canvas","getContext","image","Image","onload","clearRect","drawImage","filesize","src","blueimp-canvas-to-blob","file-saver","28","_app","_d3Extensions","./app","./d3-extensions","29","../utils","30","_decisionNode","_chanceNode","_terminalNode","_edge","./edge","./node/chance-node","./node/decision-node","./node/node","./node/terminal-node","./point","31","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_Node","../../d3","./node","32","33","$symbol","withChildren","../../utils","../point","34","35","36","app","objectProps","headerText","getHeaderTextForObject","fieldList","getFieldListForObject","updateObjectFields","fields","fieldsEnter","fieldsMerge","label","pristineVal","saveState","capitalizeFirstLetter","37","nodeProperties","38","_exporter","initExportToPngButton","initExportSvgButton","initAutoLayoutButtons","initUndoRedoButtons","save","dataBlob","getSVGString","svgString2Image","autoLayout","onUndoRedoChanged","undoButton","redoButton","isUndoAvailable","isRedoAvailable","./exporter","39","Layout","currentAutoLayout","nodeTypeOrder","decision","chance","terminal","minMarginBetweenNodes","nodeSymbol","box","getBBox","dX","slantStartXOffset","slantWidth","point2","point3","point4","$linePoints","len","getComputedTextLength","withoutStateSaving","treeMargin","prevTreeMaxY","getNodeMinY","getRoots","layout","minY","getNodeMinX","topY","pivot","limitNodePositioning","backupNodeLocation","minX","maxX","getNodeMaxX","revertX","$location","updateNodePosition","../d3","../model/index","40","MainContextMenu","_contextMenu","_ContextMenu","newNode","getMainGroupTranslation","pasteToNewLocation","copiedNode","selectAllNodes","clearSelection","../context-menu","41","NodeContextMenu","copyMenuItem","copyNode","cutMenuItem","cutNode","pasteMenuItem","pasteToNode","deleteMenuItem","selectNode","isNodeSelected","removeSelectedNodes","selectSubTree","42","NodeDragHandler","getTranslation","dragStarted","onDrag","dragEnded","disableAutoLayout","hide","selectedNodes","getSelectedNodes","prevDragEvent","dragEventCount","draggedNode","moveNodes","redrawEdges","updatePlottingRegionSize","43","TreeDesignerConfig","_mainContextMenu","_nodeContextMenu","_layout","_nodeDragHandler","margin","initSvg","initLayout","initMainContextMenu","initBrush","initEdgeMarker","initNodeContextMenu","initNodeDragHandler","nodeDragHandler","withTransitions","transitionPrev","redrawNodes","availableHeight","sanitizeHeight","availableWidth","sanitizeWidth","computeAvailableSpace","mainGroup","changed","svgWidth","svgHeight","mainGroupBox","newSvgWidth","newSvgHeight","updateBrushExtent","nodesContainer","nodesEnter","labelEnter","payoffEnter","nodesMerge","nodesMergeT","drawNodeSymbol","nodeLabelPosition","payoffT","nodePayoffPosition","nodeContextMenu","edgesContainer","edgesEnter","probabilityEnter","edgesMerge","edgesMergeT","edgeLineD","selectEdge","edgeLabelPosition","payoffText","payoffTextT","edgePayoffPosition","edgeProbabilityPosition","defs","brushContainer","brushstart","brushmove","mainGroupTranslation","brushend","translation","mainContextMenu","removeNodes","_this2","selectedRoots","copiedNodes","toAttach","attached","attachSubtree","fitNodesInPlottingRegion","getNodeD3Selection","clearSelectionBeforeSelect","skipCallback","_this3","./layout","./main-context-menu","./node-context-menu","./node-drag-handler","44","_defineProperty","_typeof","utils","srcObj","isObjectNotArray","mergeDeep","item","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","s4","textD3Obj","textString","textObj","ellipsisLength","getSubStringLength","tooltip","ellipsisPlaced","placeTextWithEllipsis","objectList","mappingFn","objectById","val","SQRT_2"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/*global window, atob, Blob, ArrayBuffer, Uint8Array, define, module */\n\n;(function (window) {\n  'use strict'\n\n  var CanvasPrototype = window.HTMLCanvasElement &&\n                          window.HTMLCanvasElement.prototype\n  var hasBlobConstructor = window.Blob && (function () {\n    try {\n      return Boolean(new Blob())\n    } catch (e) {\n      return false\n    }\n  }())\n  var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    }())\n  var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||\n                      window.MozBlobBuilder || window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob &&\n    window.ArrayBuffer && window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob(\n          [hasArrayBufferViewSupport ? intArray : arrayBuffer],\n          {type: mediaType}\n        )\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n          callback(dataURLtoBlob(this.toDataURL(type, quality)))\n        } else {\n          callback(this.mozGetAsFile('blob', type))\n        }\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        callback(dataURLtoBlob(this.toDataURL(type, quality)))\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n}(window))\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SilverDecisions = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/*global window, atob, Blob, ArrayBuffer, Uint8Array, define, module */\n\n;(function (window) {\n  'use strict'\n\n  var CanvasPrototype = window.HTMLCanvasElement &&\n                          window.HTMLCanvasElement.prototype\n  var hasBlobConstructor = window.Blob && (function () {\n    try {\n      return Boolean(new Blob())\n    } catch (e) {\n      return false\n    }\n  }())\n  var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    }())\n  var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||\n                      window.MozBlobBuilder || window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob &&\n    window.ArrayBuffer && window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob(\n          [hasArrayBufferViewSupport ? intArray : arrayBuffer],\n          {type: mediaType}\n        )\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n          callback(dataURLtoBlob(this.toDataURL(type, quality)))\n        } else {\n          callback(this.mozGetAsFile('blob', type))\n        }\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        callback(dataURLtoBlob(this.toDataURL(type, quality)))\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n}(window))\n\n},{}],2:[function(require,module,exports){\n// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],3:[function(require,module,exports){\n// https://d3js.org/d3-brush/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n},{\"d3-dispatch\":6,\"d3-drag\":7,\"d3-interpolate\":11,\"d3-selection\":14,\"d3-transition\":19}],4:[function(require,module,exports){\n// https://d3js.org/d3-collection/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  exports.nest = nest;\n  exports.set = set;\n  exports.map = map;\n  exports.keys = keys;\n  exports.values = values;\n  exports.entries = entries;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],5:[function(require,module,exports){\n// https://d3js.org/d3-color/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, rgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function hsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, hsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function hcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, hcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],6:[function(require,module,exports){\n// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],7:[function(require,module,exports){\n// https://d3js.org/d3-drag/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, function (exports,d3Dispatch,d3Selection) { 'use strict';\n\n  function nopropagation() {\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    d3Selection.event.preventDefault();\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function nodrag(view) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function yesdrag(view, noclick) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !d3Selection.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n      if (!gesture) return;\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      nodrag(d3Selection.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      yesdrag(d3Selection.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = d3Selection.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  exports.drag = drag;\n  exports.dragDisable = nodrag;\n  exports.dragEnable = yesdrag;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-dispatch\":6,\"d3-selection\":14}],8:[function(require,module,exports){\n// https://d3js.org/d3-ease/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function cubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = cubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = cubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],9:[function(require,module,exports){\n// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],10:[function(require,module,exports){\n// https://d3js.org/d3-hierarchy/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function defaultSeparation(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  function meanX(children) {\n    return children.reduce(meanXReduce, 0) / children.length;\n  }\n\n  function meanXReduce(x, c) {\n    return x + c.x;\n  }\n\n  function maxY(children) {\n    return 1 + children.reduce(maxYReduce, 0);\n  }\n\n  function maxYReduce(y, c) {\n    return Math.max(y, c.y);\n  }\n\n  function leafLeft(node) {\n    var children;\n    while (children = node.children) node = children[0];\n    return node;\n  }\n\n  function leafRight(node) {\n    var children;\n    while (children = node.children) node = children[children.length - 1];\n    return node;\n  }\n\n  function cluster() {\n    var separation = defaultSeparation,\n        dx = 1,\n        dy = 1,\n        nodeSize = false;\n\n    function cluster(root) {\n      var previousNode,\n          x = 0;\n\n      // First walk, computing the initial x & y values.\n      root.eachAfter(function(node) {\n        var children = node.children;\n        if (children) {\n          node.x = meanX(children);\n          node.y = maxY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n\n      var left = leafLeft(root),\n          right = leafRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n\n      // Second walk, normalizing x & y to the desired size.\n      return root.eachAfter(nodeSize ? function(node) {\n        node.x = (node.x - root.x) * dx;\n        node.y = (root.y - node.y) * dy;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * dx;\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n      });\n    }\n\n    cluster.separation = function(x) {\n      return arguments.length ? (separation = x, cluster) : separation;\n    };\n\n    cluster.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n    };\n\n    cluster.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return cluster;\n  }\n\n  function node_each(callback) {\n    var node = this, current, next = [node], children, i, n;\n    do {\n      current = next.reverse(), next = [];\n      while (node = current.pop()) {\n        callback(node), children = node.children;\n        if (children) for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    } while (next.length);\n    return this;\n  }\n\n  function node_eachBefore(callback) {\n    var node = this, nodes = [node], children, i;\n    while (node = nodes.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n    return this;\n  }\n\n  function node_eachAfter(callback) {\n    var node = this, nodes = [node], next = [], children, i, n;\n    while (node = nodes.pop()) {\n      next.push(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n    while (node = next.pop()) {\n      callback(node);\n    }\n    return this;\n  }\n\n  function node_sum(value) {\n    return this.eachAfter(function(node) {\n      var sum = +value(node.data) || 0,\n          children = node.children,\n          i = children && children.length;\n      while (--i >= 0) sum += children[i].value;\n      node.value = sum;\n    });\n  }\n\n  function node_sort(compare) {\n    return this.eachBefore(function(node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  }\n\n  function node_path(end) {\n    var start = this,\n        ancestor = leastCommonAncestor(start, end),\n        nodes = [start];\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n    var k = nodes.length;\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n    return nodes;\n  }\n\n  function leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(),\n        bNodes = b.ancestors(),\n        c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while (a === b) {\n      c = a;\n      a = aNodes.pop();\n      b = bNodes.pop();\n    }\n    return c;\n  }\n\n  function node_ancestors() {\n    var node = this, nodes = [node];\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n    return nodes;\n  }\n\n  function node_descendants() {\n    var nodes = [];\n    this.each(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n\n  function node_leaves() {\n    var leaves = [];\n    this.eachBefore(function(node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  }\n\n  function node_links() {\n    var root = this, links = [];\n    root.each(function(node) {\n      if (node !== root) { // Don’t include the root’s parent, if any.\n        links.push({source: node.parent, target: node});\n      }\n    });\n    return links;\n  }\n\n  function hierarchy(data, children) {\n    var root = new Node(data),\n        valued = +data.value && (root.value = data.value),\n        node,\n        nodes = [root],\n        child,\n        childs,\n        i,\n        n;\n\n    if (children == null) children = defaultChildren;\n\n    while (node = nodes.pop()) {\n      if (valued) node.value = +node.data.value;\n      if ((childs = children(node.data)) && (n = childs.length)) {\n        node.children = new Array(n);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new Node(childs[i]));\n          child.parent = node;\n          child.depth = node.depth + 1;\n        }\n      }\n    }\n\n    return root.eachBefore(computeHeight);\n  }\n\n  function node_copy() {\n    return hierarchy(this).eachBefore(copyData);\n  }\n\n  function defaultChildren(d) {\n    return d.children;\n  }\n\n  function copyData(node) {\n    node.data = node.data.data;\n  }\n\n  function computeHeight(node) {\n    var height = 0;\n    do node.height = height;\n    while ((node = node.parent) && (node.height < ++height));\n  }\n\n  function Node(data) {\n    this.data = data;\n    this.depth =\n    this.height = 0;\n    this.parent = null;\n  }\n\n  Node.prototype = hierarchy.prototype = {\n    constructor: Node,\n    each: node_each,\n    eachAfter: node_eachAfter,\n    eachBefore: node_eachBefore,\n    sum: node_sum,\n    sort: node_sort,\n    path: node_path,\n    ancestors: node_ancestors,\n    descendants: node_descendants,\n    leaves: node_leaves,\n    links: node_links,\n    copy: node_copy\n  };\n\n  function Node$2(value) {\n    this._ = value;\n    this.next = null;\n  }\n\n  function shuffle(array) {\n    var i,\n        n = (array = array.slice()).length,\n        head = null,\n        node = head;\n\n    while (n) {\n      var next = new Node$2(array[n - 1]);\n      if (node) node = node.next = next;\n      else node = head = next;\n      array[i] = array[--n];\n    }\n\n    return {\n      head: head,\n      tail: node\n    };\n  }\n\n  function enclose(circles) {\n    return encloseN(shuffle(circles), []);\n  }\n\n  function encloses(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r - b.r;\n    return dr * dr + 1e-6 > dx * dx + dy * dy;\n  }\n\n  // Returns the smallest circle that contains circles L and intersects circles B.\n  function encloseN(L, B) {\n    var circle,\n        l0 = null,\n        l1 = L.head,\n        l2,\n        p1;\n\n    switch (B.length) {\n      case 1: circle = enclose1(B[0]); break;\n      case 2: circle = enclose2(B[0], B[1]); break;\n      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n    }\n\n    while (l1) {\n      p1 = l1._, l2 = l1.next;\n      if (!circle || !encloses(circle, p1)) {\n\n        // Temporarily truncate L before l1.\n        if (l0) L.tail = l0, l0.next = null;\n        else L.head = L.tail = null;\n\n        B.push(p1);\n        circle = encloseN(L, B); // Note: reorders L!\n        B.pop();\n\n        // Move l1 to the front of L and reconnect the truncated list L.\n        if (L.head) l1.next = L.head, L.head = l1;\n        else l1.next = null, L.head = L.tail = l1;\n        l0 = L.tail, l0.next = l2;\n\n      } else {\n        l0 = l1;\n      }\n      l1 = l2;\n    }\n\n    L.tail = l0;\n    return circle;\n  }\n\n  function enclose1(a) {\n    return {\n      x: a.x,\n      y: a.y,\n      r: a.r\n    };\n  }\n\n  function enclose2(a, b) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n        l = Math.sqrt(x21 * x21 + y21 * y21);\n    return {\n      x: (x1 + x2 + x21 / l * r21) / 2,\n      y: (y1 + y2 + y21 / l * r21) / 2,\n      r: (l + r1 + r2) / 2\n    };\n  }\n\n  function enclose3(a, b, c) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x3 = c.x, y3 = c.y, r3 = c.r,\n        a2 = 2 * (x1 - x2),\n        b2 = 2 * (y1 - y2),\n        c2 = 2 * (r2 - r1),\n        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n        a3 = 2 * (x1 - x3),\n        b3 = 2 * (y1 - y3),\n        c3 = 2 * (r3 - r1),\n        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n        ab = a3 * b2 - a2 * b3,\n        xa = (b2 * d3 - b3 * d2) / ab - x1,\n        xb = (b3 * c2 - b2 * c3) / ab,\n        ya = (a3 * d2 - a2 * d3) / ab - y1,\n        yb = (a2 * c3 - a3 * c2) / ab,\n        A = xb * xb + yb * yb - 1,\n        B = 2 * (xa * xb + ya * yb + r1),\n        C = xa * xa + ya * ya - r1 * r1,\n        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n    return {\n      x: xa + xb * r + x1,\n      y: ya + yb * r + y1,\n      r: r\n    };\n  }\n\n  function place(a, b, c) {\n    var ax = a.x,\n        ay = a.y,\n        da = b.r + c.r,\n        db = a.r + c.r,\n        dx = b.x - ax,\n        dy = b.y - ay,\n        dc = dx * dx + dy * dy;\n    if (dc) {\n      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = ax + x * dx + y * dy;\n      c.y = ay + x * dy - y * dx;\n    } else {\n      c.x = ax + db;\n      c.y = ay;\n    }\n  }\n\n  function intersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return dr * dr > dx * dx + dy * dy;\n  }\n\n  function distance2(circle, x, y) {\n    var dx = circle.x - x,\n        dy = circle.y - y;\n    return dx * dx + dy * dy;\n  }\n\n  function Node$1(circle) {\n    this._ = circle;\n    this.next = null;\n    this.previous = null;\n  }\n\n  function packEnclose(circles) {\n    if (!(n = circles.length)) return 0;\n\n    var a, b, c, n;\n\n    // Place the first circle.\n    a = circles[0], a.x = 0, a.y = 0;\n    if (!(n > 1)) return a.r;\n\n    // Place the second circle.\n    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n    if (!(n > 2)) return a.r + b.r;\n\n    // Place the third circle.\n    place(b, a, c = circles[2]);\n\n    // Initialize the weighted centroid.\n    var aa = a.r * a.r,\n        ba = b.r * b.r,\n        ca = c.r * c.r,\n        oa = aa + ba + ca,\n        ox = aa * a.x + ba * b.x + ca * c.x,\n        oy = aa * a.y + ba * b.y + ca * c.y,\n        cx, cy, i, j, k, sj, sk;\n\n    // Initialize the front-chain using the first three circles a, b and c.\n    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n    a.next = c.previous = b;\n    b.next = a.previous = c;\n    c.next = b.previous = a;\n\n    // Attempt to place each remaining circle…\n    pack: for (i = 3; i < n; ++i) {\n      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n      // If there are only three elements in the front-chain…\n      if ((k = a.previous) === (j = b.next)) {\n        // If the new circle intersects the third circle,\n        // rotate the front chain to try the next position.\n        if (intersects(j._, c._)) {\n          a = b, b = j, --i;\n          continue pack;\n        }\n      }\n\n      // Find the closest intersecting circle on the front-chain, if any.\n      else {\n        sj = j._.r, sk = k._.r;\n        do {\n          if (sj <= sk) {\n            if (intersects(j._, c._)) {\n              b = j, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            j = j.next, sj += j._.r;\n          } else {\n            if (intersects(k._, c._)) {\n              a = k, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            k = k.previous, sk += k._.r;\n          }\n        } while (j !== k.next);\n      }\n\n      // Success! Insert the new circle c between a and b.\n      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n      // Update the weighted centroid.\n      oa += ca = c._.r * c._.r;\n      ox += ca * c._.x;\n      oy += ca * c._.y;\n\n      // Compute the new closest circle a to centroid.\n      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n      while ((c = c.next) !== b) {\n        if ((ca = distance2(c._, cx, cy)) < aa) {\n          a = c, aa = ca;\n        }\n      }\n      b = a.next;\n    }\n\n    // Compute the enclosing circle of the front chain.\n    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n    // Translate the circles to put the enclosing circle around the origin.\n    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n    return c.r;\n  }\n\n  function siblings(circles) {\n    packEnclose(circles);\n    return circles;\n  }\n\n  function optional(f) {\n    return f == null ? null : required(f);\n  }\n\n  function required(f) {\n    if (typeof f !== \"function\") throw new Error;\n    return f;\n  }\n\n  function constantZero() {\n    return 0;\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultRadius(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function index() {\n    var radius = null,\n        dx = 1,\n        dy = 1,\n        padding = constantZero;\n\n    function pack(root) {\n      root.x = dx / 2, root.y = dy / 2;\n      if (radius) {\n        root.eachBefore(radiusLeaf(radius))\n            .eachAfter(packChildren(padding, 0.5))\n            .eachBefore(translateChild(1));\n      } else {\n        root.eachBefore(radiusLeaf(defaultRadius))\n            .eachAfter(packChildren(constantZero, 1))\n            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n      }\n      return root;\n    }\n\n    pack.radius = function(x) {\n      return arguments.length ? (radius = optional(x), pack) : radius;\n    };\n\n    pack.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n    };\n\n    pack.padding = function(x) {\n      return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n    };\n\n    return pack;\n  }\n\n  function radiusLeaf(radius) {\n    return function(node) {\n      if (!node.children) {\n        node.r = Math.max(0, +radius(node) || 0);\n      }\n    };\n  }\n\n  function packChildren(padding, k) {\n    return function(node) {\n      if (children = node.children) {\n        var children,\n            i,\n            n = children.length,\n            r = padding(node) * k || 0,\n            e;\n\n        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n        e = packEnclose(children);\n        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n        node.r = e + r;\n      }\n    };\n  }\n\n  function translateChild(k) {\n    return function(node) {\n      var parent = node.parent;\n      node.r *= k;\n      if (parent) {\n        node.x = parent.x + k * node.x;\n        node.y = parent.y + k * node.y;\n      }\n    };\n  }\n\n  function roundNode(node) {\n    node.x0 = Math.round(node.x0);\n    node.y0 = Math.round(node.y0);\n    node.x1 = Math.round(node.x1);\n    node.y1 = Math.round(node.y1);\n  }\n\n  function treemapDice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (x1 - x0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.y0 = y0, node.y1 = y1;\n      node.x0 = x0, node.x1 = x0 += node.value * k;\n    }\n  }\n\n  function partition() {\n    var dx = 1,\n        dy = 1,\n        padding = 0,\n        round = false;\n\n    function partition(root) {\n      var n = root.height + 1;\n      root.x0 =\n      root.y0 = padding;\n      root.x1 = dx;\n      root.y1 = dy / n;\n      root.eachBefore(positionNode(dy, n));\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(dy, n) {\n      return function(node) {\n        if (node.children) {\n          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n        }\n        var x0 = node.x0,\n            y0 = node.y0,\n            x1 = node.x1 - padding,\n            y1 = node.y1 - padding;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        node.x0 = x0;\n        node.y0 = y0;\n        node.x1 = x1;\n        node.y1 = y1;\n      };\n    }\n\n    partition.round = function(x) {\n      return arguments.length ? (round = !!x, partition) : round;\n    };\n\n    partition.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n    };\n\n    partition.padding = function(x) {\n      return arguments.length ? (padding = +x, partition) : padding;\n    };\n\n    return partition;\n  }\n\n  var keyPrefix = \"$\";\n  var preroot = {depth: -1};\n  var ambiguous = {};\n  function defaultId(d) {\n    return d.id;\n  }\n\n  function defaultParentId(d) {\n    return d.parentId;\n  }\n\n  function stratify() {\n    var id = defaultId,\n        parentId = defaultParentId;\n\n    function stratify(data) {\n      var d,\n          i,\n          n = data.length,\n          root,\n          parent,\n          node,\n          nodes = new Array(n),\n          nodeId,\n          nodeKey,\n          nodeByKey = {};\n\n      for (i = 0; i < n; ++i) {\n        d = data[i], node = nodes[i] = new Node(d);\n        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n          nodeKey = keyPrefix + (node.id = nodeId);\n          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n        }\n      }\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], nodeId = parentId(data[i], i, data);\n        if (nodeId == null || !(nodeId += \"\")) {\n          if (root) throw new Error(\"multiple roots\");\n          root = node;\n        } else {\n          parent = nodeByKey[keyPrefix + nodeId];\n          if (!parent) throw new Error(\"missing: \" + nodeId);\n          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n          if (parent.children) parent.children.push(node);\n          else parent.children = [node];\n          node.parent = parent;\n        }\n      }\n\n      if (!root) throw new Error(\"no root\");\n      root.parent = preroot;\n      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n      root.parent = null;\n      if (n > 0) throw new Error(\"cycle\");\n\n      return root;\n    }\n\n    stratify.id = function(x) {\n      return arguments.length ? (id = required(x), stratify) : id;\n    };\n\n    stratify.parentId = function(x) {\n      return arguments.length ? (parentId = required(x), stratify) : parentId;\n    };\n\n    return stratify;\n  }\n\n  function defaultSeparation$1(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  // function radialSeparation(a, b) {\n  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n  // }\n\n  // This function is used to traverse the left contour of a subtree (or\n  // subforest). It returns the successor of v on this contour. This successor is\n  // either given by the leftmost child of v or by the thread of v. The function\n  // returns null if and only if v is on the highest level of its subtree.\n  function nextLeft(v) {\n    var children = v.children;\n    return children ? children[0] : v.t;\n  }\n\n  // This function works analogously to nextLeft.\n  function nextRight(v) {\n    var children = v.children;\n    return children ? children[children.length - 1] : v.t;\n  }\n\n  // Shifts the current subtree rooted at w+. This is done by increasing\n  // prelim(w+) and mod(w+) by shift.\n  function moveSubtree(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  // All other shifts, applied to the smaller subtrees between w- and w+, are\n  // performed by this function. To prepare the shifts, we have to adjust\n  // change(w+), shift(w+), and change(w-).\n  function executeShifts(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n  // returns the specified (default) ancestor.\n  function nextAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  function TreeNode(node, i) {\n    this._ = node;\n    this.parent = null;\n    this.children = null;\n    this.A = null; // default ancestor\n    this.a = this; // ancestor\n    this.z = 0; // prelim\n    this.m = 0; // mod\n    this.c = 0; // change\n    this.s = 0; // shift\n    this.t = null; // thread\n    this.i = i; // number\n  }\n\n  TreeNode.prototype = Object.create(Node.prototype);\n\n  function treeRoot(root) {\n    var tree = new TreeNode(root, 0),\n        node,\n        nodes = [tree],\n        child,\n        children,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if (children = node._.children) {\n        node.children = new Array(n = children.length);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n          child.parent = node;\n        }\n      }\n    }\n\n    (tree.parent = new TreeNode(null, 0)).children = [tree];\n    return tree;\n  }\n\n  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n  function tree() {\n    var separation = defaultSeparation$1,\n        dx = 1,\n        dy = 1,\n        nodeSize = null;\n\n    function tree(root) {\n      var t = treeRoot(root);\n\n      // Compute the layout using Buchheim et al.’s algorithm.\n      t.eachAfter(firstWalk), t.parent.m = -t.z;\n      t.eachBefore(secondWalk);\n\n      // If a fixed node size is specified, scale x and y.\n      if (nodeSize) root.eachBefore(sizeNode);\n\n      // If a fixed tree size is specified, scale x and y based on the extent.\n      // Compute the left-most, right-most, and depth-most nodes for extents.\n      else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n\n      return root;\n    }\n\n    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n    // applied recursively to the children of v, as well as the function\n    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n    // node v is placed to the midpoint of its outermost children.\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n      if (children) {\n        executeShifts(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    // Computes all real x-coordinates by summing up the modifiers recursively.\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    // The core of the algorithm. Here, a new subtree is combined with the\n    // previous subtrees. Threads are used to traverse the inside and outside\n    // contours of the left and right subtree up to the highest common level. The\n    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n    // superscript o means outside and i means inside, the subscript - means left\n    // subtree and + means right subtree. For summing up the modifiers along the\n    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n    // nodes of the inside contours conflict, we compute the left one of the\n    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n    // Finally, we add a new thread (if necessary).\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n          vom = nextLeft(vom);\n          vop = nextRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !nextRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !nextLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= dx;\n      node.y = node.depth * dy;\n    }\n\n    tree.separation = function(x) {\n      return arguments.length ? (separation = x, tree) : separation;\n    };\n\n    tree.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n    };\n\n    tree.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return tree;\n  }\n\n  function treemapSlice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (y1 - y0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.x0 = x0, node.x1 = x1;\n      node.y0 = y0, node.y1 = y0 += node.value * k;\n    }\n  }\n\n  var phi = (1 + Math.sqrt(5)) / 2;\n\n  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n    var rows = [],\n        nodes = parent.children,\n        row,\n        nodeValue,\n        i0 = 0,\n        i1,\n        n = nodes.length,\n        dx, dy,\n        value = parent.value,\n        sumValue,\n        minValue,\n        maxValue,\n        newRatio,\n        minRatio,\n        alpha,\n        beta;\n\n    while (i0 < n) {\n      dx = x1 - x0, dy = y1 - y0;\n      minValue = maxValue = sumValue = nodes[i0].value;\n      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n      beta = sumValue * sumValue * alpha;\n      minRatio = Math.max(maxValue / beta, beta / minValue);\n\n      // Keep adding nodes while the aspect ratio maintains or improves.\n      for (i1 = i0 + 1; i1 < n; ++i1) {\n        sumValue += nodeValue = nodes[i1].value;\n        if (nodeValue < minValue) minValue = nodeValue;\n        if (nodeValue > maxValue) maxValue = nodeValue;\n        beta = sumValue * sumValue * alpha;\n        newRatio = Math.max(maxValue / beta, beta / minValue);\n        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n        minRatio = newRatio;\n      }\n\n      // Position and record the row orientation.\n      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n      value -= sumValue, i0 = i1;\n    }\n\n    return rows;\n  }\n\n  var squarify = (function custom(ratio) {\n\n    function squarify(parent, x0, y0, x1, y1) {\n      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n    }\n\n    squarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return squarify;\n  })(phi);\n\n  function index$1() {\n    var tile = squarify,\n        round = false,\n        dx = 1,\n        dy = 1,\n        paddingStack = [0],\n        paddingInner = constantZero,\n        paddingTop = constantZero,\n        paddingRight = constantZero,\n        paddingBottom = constantZero,\n        paddingLeft = constantZero;\n\n    function treemap(root) {\n      root.x0 =\n      root.y0 = 0;\n      root.x1 = dx;\n      root.y1 = dy;\n      root.eachBefore(positionNode);\n      paddingStack = [0];\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(node) {\n      var p = paddingStack[node.depth],\n          x0 = node.x0 + p,\n          y0 = node.y0 + p,\n          x1 = node.x1 - p,\n          y1 = node.y1 - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n      if (node.children) {\n        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n        x0 += paddingLeft(node) - p;\n        y0 += paddingTop(node) - p;\n        x1 -= paddingRight(node) - p;\n        y1 -= paddingBottom(node) - p;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        tile(node, x0, y0, x1, y1);\n      }\n    }\n\n    treemap.round = function(x) {\n      return arguments.length ? (round = !!x, treemap) : round;\n    };\n\n    treemap.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n    };\n\n    treemap.tile = function(x) {\n      return arguments.length ? (tile = required(x), treemap) : tile;\n    };\n\n    treemap.padding = function(x) {\n      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n    };\n\n    treemap.paddingInner = function(x) {\n      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n    };\n\n    treemap.paddingOuter = function(x) {\n      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n    };\n\n    treemap.paddingTop = function(x) {\n      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n    };\n\n    treemap.paddingRight = function(x) {\n      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n    };\n\n    treemap.paddingBottom = function(x) {\n      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n    };\n\n    treemap.paddingLeft = function(x) {\n      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n    };\n\n    return treemap;\n  }\n\n  function binary(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        i, n = nodes.length,\n        sum, sums = new Array(n + 1);\n\n    for (sums[0] = sum = i = 0; i < n; ++i) {\n      sums[i + 1] = sum += nodes[i].value;\n    }\n\n    partition(0, n, parent.value, x0, y0, x1, y1);\n\n    function partition(i, j, value, x0, y0, x1, y1) {\n      if (i >= j - 1) {\n        var node = nodes[i];\n        node.x0 = x0, node.y0 = y0;\n        node.x1 = x1, node.y1 = y1;\n        return;\n      }\n\n      var valueOffset = sums[i],\n          valueTarget = (value / 2) + valueOffset,\n          k = i + 1,\n          hi = j - 1;\n\n      while (k < hi) {\n        var mid = k + hi >>> 1;\n        if (sums[mid] < valueTarget) k = mid + 1;\n        else hi = mid;\n      }\n\n      var valueLeft = sums[k] - valueOffset,\n          valueRight = value - valueLeft;\n\n      if ((y1 - y0) > (x1 - x0)) {\n        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, x1, yk);\n        partition(k, j, valueRight, x0, yk, x1, y1);\n      } else {\n        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, xk, y1);\n        partition(k, j, valueRight, xk, y0, x1, y1);\n      }\n    }\n  }\n\n  function sliceDice(parent, x0, y0, x1, y1) {\n    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n  }\n\n  var resquarify = (function custom(ratio) {\n\n    function resquarify(parent, x0, y0, x1, y1) {\n      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n        var rows,\n            row,\n            nodes,\n            i,\n            j = -1,\n            n,\n            m = rows.length,\n            value = parent.value;\n\n        while (++j < m) {\n          row = rows[j], nodes = row.children;\n          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n          value -= row.value;\n        }\n      } else {\n        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n        rows.ratio = ratio;\n      }\n    }\n\n    resquarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return resquarify;\n  })(phi);\n\n  exports.cluster = cluster;\n  exports.hierarchy = hierarchy;\n  exports.pack = index;\n  exports.packSiblings = siblings;\n  exports.packEnclose = enclose;\n  exports.partition = partition;\n  exports.stratify = stratify;\n  exports.tree = tree;\n  exports.treemap = index$1;\n  exports.treemapBinary = binary;\n  exports.treemapDice = treemapDice;\n  exports.treemapSlice = treemapSlice;\n  exports.treemapSliceDice = sliceDice;\n  exports.treemapSquarify = squarify;\n  exports.treemapResquarify = resquarify;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],11:[function(require,module,exports){\n// https://d3js.org/d3-interpolate/ Version 1.1.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Color) { 'use strict';\n\n  function basis(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$1(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n  }\n\n  var rgb$1 = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = d3Color.rgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$1);\n  var rgbBasisClosed = rgbSpline(basisClosed);\n\n  function array(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function number(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = value(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function string(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: number(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function value(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant(b)\n        : (t === \"number\" ? number\n        : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n        : b instanceof d3Color.color ? rgb$1\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array\n        : isNaN(b) ? object\n        : number)(a, b);\n  }\n\n  function round(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$2 = hsl$1(hue);\n  var hslLong = hsl$1(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$2 = hcl$1(hue);\n  var hclLong = hcl$1(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix(start, end) {\n        var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix.gamma = cubehelixGamma;\n\n      return cubehelix;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var cubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  exports.interpolate = value;\n  exports.interpolateArray = array;\n  exports.interpolateBasis = basis$1;\n  exports.interpolateBasisClosed = basisClosed;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = number;\n  exports.interpolateObject = object;\n  exports.interpolateRound = round;\n  exports.interpolateString = string;\n  exports.interpolateTransformCss = interpolateTransformCss;\n  exports.interpolateTransformSvg = interpolateTransformSvg;\n  exports.interpolateZoom = zoom;\n  exports.interpolateRgb = rgb$1;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$2;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$2;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = cubehelixLong;\n  exports.quantize = quantize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-color\":5}],12:[function(require,module,exports){\n// https://d3js.org/d3-path/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau + tau;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{}],13:[function(require,module,exports){\n// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-array\":2,\"d3-collection\":4,\"d3-color\":5,\"d3-format\":9,\"d3-interpolate\":11,\"d3-time\":17,\"d3-time-format\":16}],14:[function(require,module,exports){\n// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{}],15:[function(require,module,exports){\n// https://d3js.org/d3-shape/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$ = x,\n      y$$ = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant(+_), line) : x$$;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant(+_), line) : y$$;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction radialLine$1() {\n  return radialLine(line().curve(curveRadialLinear));\n}\n\nfunction radialArea() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice = Array.prototype.slice;\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{\"d3-path\":12}],16:[function(require,module,exports){\n// https://d3js.org/d3-time-format/ Version 2.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Time) { 'use strict';\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale;\n  defaultLocale({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.timeFormat = locale.format;\n    exports.timeParse = locale.parse;\n    exports.utcFormat = locale.utcFormat;\n    exports.utcParse = locale.utcParse;\n    return locale;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  exports.timeFormatDefaultLocale = defaultLocale;\n  exports.timeFormatLocale = formatLocale;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n},{\"d3-time\":17}],17:[function(require,module,exports){\n// https://d3js.org/d3-time/ Version 1.0.4. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n},{}],18:[function(require,module,exports){\n// https://d3js.org/d3-timer/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{}],19:[function(require,module,exports){\n// https://d3js.org/d3-transition/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state === STARTED;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n},{\"d3-color\":5,\"d3-dispatch\":6,\"d3-ease\":8,\"d3-interpolate\":11,\"d3-selection\":14,\"d3-timer\":18}],20:[function(require,module,exports){\n/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement)\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n\n},{}],21:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.16.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://github.com/es-shims.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 500,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        defineProperty = Object.defineProperty,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create'),\n        nativeDefineProperty = getNative(Object, 'defineProperty');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = prototype;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      // Safari 9 makes `arguments.length` enumerable in strict mode.\n      var result = (isArray(value) || isArguments(value))\n        ? baseTimes(value.length, String)\n        : [];\n\n      var length = result.length,\n          skipIndexes = !!length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), n);\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = baseKeysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          baseAssignValue(result, key, value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      return shuffleSelf(values(collection), n);\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !nativeDefineProperty ? identity : function(func, string) {\n      return nativeDefineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : baseClamp(size, 0, length);\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return value != null && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' ||\n            typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !nativeKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8-9 which returns 'object' for typed array and other constructors.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || objectToString.call(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(props, toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(props, toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.App = exports.AppConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _utils = require('./utils');\n\nvar _index = require('./model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _treeDesigner = require('./tree-designer/tree-designer');\n\nvar _dataModel = require('./data-model');\n\nvar _templates = require('./templates');\n\nvar _sidebar = require('./sidebar');\n\nvar _toolbar = require('./toolbar');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AppConfig = exports.AppConfig = function AppConfig(custom) {\n    _classCallCheck(this, AppConfig);\n\n    this.width = undefined;\n    this.height = undefined;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar App = exports.App = function () {\n    function App(containerId, config) {\n        _classCallCheck(this, App);\n\n        this.setConfig(config);\n        this.initContainer(containerId);\n        this.initDataModel();\n        this.initSidebar();\n        this.initTreeDesigner();\n        this.initToolbar();\n    } //Data model manager\n\n\n    _createClass(App, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new AppConfig();\n            } else {\n                this.config = config;\n            }\n            return this;\n        }\n    }, {\n        key: 'initContainer',\n        value: function initContainer(containerId) {\n            this.container = d3.select('#' + containerId);\n            this.container.html(_templates.Templates.main);\n        }\n    }, {\n        key: 'initDataModel',\n        value: function initDataModel() {\n            this.dataModel = new _dataModel.DataModel();\n        }\n    }, {\n        key: 'initSidebar',\n        value: function initSidebar() {\n            this.sidebar = new _sidebar.Sidebar(this.container.select('#sidebar'), this);\n        }\n    }, {\n        key: 'initToolbar',\n        value: function initToolbar() {\n            this.toolbar = new _toolbar.Toolbar(this.container.select('#toolbar'), this);\n        }\n    }, {\n        key: 'initTreeDesigner',\n        value: function initTreeDesigner() {\n            var self = this;\n            var config = {\n                onNodeSelected: function onNodeSelected(node) {\n                    self.onObjectSelected(node);\n                },\n                onEdgeSelected: function onEdgeSelected(edge) {\n                    self.onObjectSelected(edge);\n                },\n                onSelectionCleared: function onSelectionCleared() {\n                    self.onSelectionCleared();\n                }\n            };\n            this.treeDesigner = new _treeDesigner.TreeDesigner(this.container.select('#tree-designer-container'), this.dataModel, config);\n        }\n    }, {\n        key: 'onObjectSelected',\n        value: function onObjectSelected(object) {\n            var self = this;\n            if (this.selectedObject === object) {\n                return;\n            }\n            this.selectedObject = object;\n            setTimeout(function () {\n                self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            }, 10);\n        }\n    }, {\n        key: 'onSelectionCleared',\n        value: function onSelectionCleared() {\n            this.selectedObject = null;\n            this.sidebar.hideObjectProperties();\n            // console.log();\n        }\n    }, {\n        key: 'updateView',\n        value: function updateView() {\n            this.treeDesigner.redraw(true);\n            this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        }\n    }, {\n        key: 'undo',\n        value: function undo() {\n            var self = this;\n            self.dataModel.undo();\n            if (self.selectedObject) {\n                self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n            }\n\n            self.updateView();\n        }\n    }, {\n        key: 'redo',\n        value: function redo() {\n            var self = this;\n            self.dataModel.redo();\n            if (self.selectedObject) {\n                self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n            }\n            self.updateView();\n        }\n    }]);\n\n    return App;\n}();\n\n},{\"./d3\":25,\"./data-model\":26,\"./model/index\":30,\"./sidebar\":36,\"./templates\":37,\"./toolbar\":38,\"./tree-designer/tree-designer\":43,\"./utils\":44}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ContextMenu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*based on:\n * github.com/patorjk/d3-context-menu */\n\nvar ContextMenu = exports.ContextMenu = function () {\n    function ContextMenu(menu, opts) {\n        _classCallCheck(this, ContextMenu);\n\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1]).enter().append('div').attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu').on('contextmenu', function (d) {\n                d3.select('.d3-context-menu').style('display', 'none');\n                d3.event.preventDefault();\n                d3.event.stopPropagation();\n            }).append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter().append('li').attr('class', function (d) {\n                var ret = '';\n                if (d.divider) {\n                    ret += ' is-divider';\n                }\n                if (d.disabled) {\n                    ret += ' is-disabled';\n                }\n                if (!d.action) {\n                    ret += ' is-header';\n                }\n                return ret;\n            }).html(function (d) {\n                if (d.divider) {\n                    return '<hr>';\n                }\n                if (!d.title) {\n                    void 0;\n                }\n                return typeof d.title === 'string' ? d.title : d.title(data);\n            }).on('click', function (d, i) {\n                if (d.disabled) return; // do nothing if disabled\n                if (!d.action) return; // headers have no \"action\"\n                d.action(elm, data, index);\n                d3.select('.d3-context-menu').style('display', 'none');\n\n                if (self.closeCallback) {\n                    self.closeCallback();\n                }\n            });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu').style('left', d3.event.pageX - 2 + 'px').style('top', d3.event.pageY - 2 + 'px').style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    }\n\n    _createClass(ContextMenu, null, [{\n        key: 'hide',\n        value: function hide() {\n            d3.select('.d3-context-menu').style('display', 'none');\n        }\n    }]);\n\n    return ContextMenu;\n}();\n\n},{\"./d3\":25}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.D3Extensions = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar D3Extensions = exports.D3Extensions = function () {\n    function D3Extensions() {\n        _classCallCheck(this, D3Extensions);\n    }\n\n    _createClass(D3Extensions, null, [{\n        key: 'extend',\n        value: function extend() {\n\n            d3.selection.prototype.enter.prototype.insertSelector = d3.selection.prototype.insertSelector = function (selector, before) {\n                return _utils.Utils.insertSelector(this, selector, before);\n            };\n\n            d3.selection.prototype.enter.prototype.appendSelector = d3.selection.prototype.appendSelector = function (selector) {\n                return _utils.Utils.appendSelector(this, selector);\n            };\n\n            d3.selection.prototype.enter.prototype.selectOrAppend = d3.selection.prototype.selectOrAppend = function (selector) {\n                return _utils.Utils.selectOrAppend(this, selector);\n            };\n\n            d3.selection.prototype.enter.prototype.selectOrInsert = d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return _utils.Utils.selectOrInsert(this, selector, before);\n            };\n        }\n    }]);\n\n    return D3Extensions;\n}();\n\n},{\"./d3\":25,\"./utils\":44}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d3Dispatch = require('d3-dispatch');\n\nObject.keys(_d3Dispatch).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Dispatch[key];\n    }\n  });\n});\n\nvar _d3Scale = require('d3-scale');\n\nObject.keys(_d3Scale).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Scale[key];\n    }\n  });\n});\n\nvar _d3Selection = require('d3-selection');\n\nObject.keys(_d3Selection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Selection[key];\n    }\n  });\n});\n\nvar _d3Shape = require('d3-shape');\n\nObject.keys(_d3Shape).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Shape[key];\n    }\n  });\n});\n\nvar _d3Drag = require('d3-drag');\n\nObject.keys(_d3Drag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Drag[key];\n    }\n  });\n});\n\nvar _d3Brush = require('d3-brush');\n\nObject.keys(_d3Brush).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Brush[key];\n    }\n  });\n});\n\nvar _d3Array = require('d3-array');\n\nObject.keys(_d3Array).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Array[key];\n    }\n  });\n});\n\nvar _d3Hierarchy = require('d3-hierarchy');\n\nObject.keys(_d3Hierarchy).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _d3Hierarchy[key];\n    }\n  });\n});\n\n},{\"d3-array\":2,\"d3-brush\":3,\"d3-dispatch\":6,\"d3-drag\":7,\"d3-hierarchy\":10,\"d3-scale\":13,\"d3-selection\":14,\"d3-shape\":15}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DataModel = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nvar _index = require('./model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _lodash = require('lodash');\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n* Data model manager\n* */\nvar DataModel = exports.DataModel = function () {\n\n    // undo / redo\n    function DataModel() {\n        _classCallCheck(this, DataModel);\n\n        this.nodes = [];\n        this.edges = [];\n        this.maxStackSize = 15;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.undoRedoStateChangedCallback = null;\n\n        var n1 = this.addNode(new model.DecisionNode(new model.Point(100, 150))).setName('dilemma');\n        var n2 = this.addNode(new model.ChanceNode(new model.Point(250, 100)), n1).setName('play').setPayoff(-1).childNode;\n        var n3 = this.addNode(new model.TerminalNode(new model.Point(250, 200)), n1).setName('leave game').setPayoff(0).childNode;\n        var n4 = this.addNode(new model.DecisionNode(new model.Point(400, 50)), n2).setName('win').setPayoff(20).setProbability(0.1).childNode;\n        var n5 = this.addNode(new model.TerminalNode(new model.Point(400, 150)), n2).setName('lose').setPayoff(0).setProbability(0.9).childNode;\n    }\n\n    /*returns node or edge from parent to this node*/\n\n\n    _createClass(DataModel, [{\n        key: 'addNode',\n        value: function addNode(node, parent) {\n            var self = this;\n            self.nodes.push(node);\n            if (parent) {\n                return self._addChild(parent, node);\n            }\n            return node;\n        }\n    }, {\n        key: '_addChild',\n        value: function _addChild(parent, child) {\n            var self = this;\n            var edge = new model.Edge(parent, child);\n            self.edges.push(edge);\n            parent.childEdges.push(edge);\n            child.parent = parent;\n            return edge;\n        }\n\n        /*removes given node and its subtree*/\n\n    }, {\n        key: 'removeNode',\n        value: function removeNode(node) {\n            var $l = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n\n            var self = this;\n            node.childEdges.forEach(function (e) {\n                return self.removeNode(e.childNode, $l + 1);\n            });\n\n            self._removeNode(node);\n            var parent = node.parent;\n            if (parent) {\n                var parentEdge = parent.childEdges.find(function (e, i) {\n                    return e.childNode === node;\n                });\n                if ($l == 0) {\n                    self.removeEdge(parentEdge);\n                } else {\n                    self._removeEdge(parentEdge);\n                }\n            }\n        }\n\n        /*removes given nodes and their subtrees*/\n\n    }, {\n        key: 'removeNodes',\n        value: function removeNodes(nodes) {\n            var _this = this;\n\n            var roots = this.findSubtreeRoots(nodes);\n            roots.forEach(function (n) {\n                return _this.removeNode(n, 0);\n            }, this);\n        }\n    }, {\n        key: 'getRoots',\n        value: function getRoots() {\n            return this.nodes.filter(function (n) {\n                return !n.parent;\n            });\n        }\n    }, {\n        key: 'findSubtreeRoots',\n        value: function findSubtreeRoots(nodes) {\n            return nodes.filter(function (n) {\n                return !n.parent || nodes.indexOf(n.parent) === -1;\n            });\n        }\n\n        /*creates detached clone of given node*/\n\n    }, {\n        key: 'cloneSubtree',\n        value: function cloneSubtree(nodeToCopy) {\n            var self = this;\n            var clone = this.cloneNode(nodeToCopy);\n\n            nodeToCopy.childEdges.forEach(function (e) {\n                var childClone = self.cloneSubtree(e.childNode);\n                childClone.parent = clone;\n                var edge = new model.Edge(clone, childClone, e.name, e.payoff, e.probability);\n                clone.childEdges.push(edge);\n            });\n            return clone;\n        }\n\n        /*attaches detached subtree to given parent*/\n\n    }, {\n        key: 'attachSubtree',\n        value: function attachSubtree(nodeToAttach, parent) {\n            var self = this;\n            self.addNode(nodeToAttach, parent);\n\n            var childEdges = self.getAllDescendantEdges(nodeToAttach);\n            childEdges.forEach(function (e) {\n                self.edges.push(e);\n                self.nodes.push(e.childNode);\n            });\n\n            return nodeToAttach;\n        }\n    }, {\n        key: 'cloneNodes',\n        value: function cloneNodes(nodes) {\n            var roots = [];\n            //TODO\n        }\n\n        /*shallow clone without parent and children*/\n\n    }, {\n        key: 'cloneNode',\n        value: function cloneNode(node) {\n            var clone = _.clone(node);\n            clone.$id = _utils.Utils.guid();\n            clone.location = _.clone(node.location);\n            clone.computed = _.clone(node.computed);\n            clone.parent = null;\n            clone.childEdges = [];\n            return clone;\n        }\n    }, {\n        key: 'findNodeById',\n        value: function findNodeById(id) {\n            return this.nodes.find(function (n) {\n                return n.$id == id;\n            });\n        }\n    }, {\n        key: 'findEdgeById',\n        value: function findEdgeById(id) {\n            return this.edges.find(function (e) {\n                return e.$id == id;\n            });\n        }\n    }, {\n        key: 'findById',\n        value: function findById(id) {\n            var node = this.findNodeById(id);\n            if (node) {\n                return node;\n            }\n            return this.findEdgeById(id);\n        }\n    }, {\n        key: '_removeNode',\n        value: function _removeNode(node) {\n            // simply removes node from node list\n            var index = this.nodes.indexOf(node);\n            if (index > -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    }, {\n        key: 'removeEdge',\n        value: function removeEdge(edge) {\n            var index = edge.parentNode.childEdges.indexOf(edge);\n            if (index > -1) {\n                edge.parentNode.childEdges.splice(index, 1);\n            }\n            this._removeEdge(edge);\n        }\n    }, {\n        key: '_removeEdge',\n        value: function _removeEdge(edge) {\n            //removes edge from edge list without removing connected nodes\n            var index = this.edges.indexOf(edge);\n            if (index > -1) {\n                this.edges.splice(index, 1);\n            }\n        }\n    }, {\n        key: '_removeNodes',\n        value: function _removeNodes(nodesToRemove) {\n            this.nodes = this.nodes.filter(function (n) {\n                return nodesToRemove.indexOf(n) === -1;\n            });\n        }\n    }, {\n        key: '_removeEdges',\n        value: function _removeEdges(edgesToRemove) {\n            this.edges = this.edges.filter(function (e) {\n                return edgesToRemove.indexOf(e) === -1;\n            });\n        }\n    }, {\n        key: 'getAllDescendantEdges',\n        value: function getAllDescendantEdges(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                result.push(e);\n                if (e.childNode) {\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantEdges(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: 'getAllDescendantNodes',\n        value: function getAllDescendantNodes(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                if (e.childNode) {\n                    result.push(e.childNode);\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantNodes(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: 'isUndoAvailable',\n        value: function isUndoAvailable() {\n            return !!this.undoStack.length;\n        }\n    }, {\n        key: 'isRedoAvailable',\n        value: function isRedoAvailable() {\n            return !!this.redoStack.length;\n        }\n    }, {\n        key: 'saveState',\n        value: function saveState(revertConf) {\n            this.redoStack.length = 0;\n\n            this._pushToStack(this.undoStack, {\n                revertConf: revertConf,\n                nodes: _.cloneDeep(this.nodes),\n                edges: _.cloneDeep(this.edges)\n            });\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'undo',\n        value: function undo() {\n            var self = this;\n            var newState = this.undoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.redoStack, {\n                nodes: self.nodes,\n                edges: self.edges\n            });\n\n            this._setNewState(newState);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'redo',\n        value: function redo() {\n            var self = this;\n            var newState = this.redoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.undoStack, {\n                nodes: self.nodes,\n                edges: self.edges\n            });\n\n            this._setNewState(newState);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: '_setNewState',\n        value: function _setNewState(newState) {\n            var nodeById = _utils.Utils.getObjectByIdMap(newState.nodes);\n            var edgeById = _utils.Utils.getObjectByIdMap(newState.edges);\n            this.nodes = newState.nodes;\n            this.edges = newState.edges;\n            this.nodes.forEach(function (n) {\n                for (var i = 0; i < n.childEdges.length; i++) {\n                    var edge = edgeById[n.childEdges[i].$id];\n                    n.childEdges[i] = edge;\n                    edge.parentNode = n;\n                    edge.childNode = nodeById[edge.childNode.$id];\n                }\n            });\n\n            if (newState.revertConf && newState.revertConf.onRevert) {\n                newState.revertConf.onRevert(newState.revertConf.data);\n            }\n        }\n    }, {\n        key: '_pushToStack',\n        value: function _pushToStack(stack, obj) {\n            if (stack.length >= this.maxStackSize) {\n                stack.shift();\n            }\n            stack.push(obj);\n        }\n    }, {\n        key: '_fireUndoRedoCallback',\n        value: function _fireUndoRedoCallback() {\n            if (this.undoRedoStateChangedCallback) {\n                this.undoRedoStateChangedCallback();\n            }\n        }\n    }]);\n\n    return DataModel;\n}();\n\n},{\"./model/index\":30,\"./utils\":44,\"lodash\":21}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Exporter = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _blueimpCanvasToBlob = require('blueimp-canvas-to-blob');\n\nvar _fileSaver = require('file-saver');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Exporter = exports.Exporter = function () {\n    function Exporter() {\n        _classCallCheck(this, Exporter);\n    }\n\n    _createClass(Exporter, null, [{\n        key: 'getSVGString',\n\n        // Below are the function that handle actual exporting:\n        // getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n        value: function getSVGString(svgNode) {\n            svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n            var cssStyleText = getCSSStyles(svgNode);\n            appendCSS(cssStyleText, svgNode);\n\n            var serializer = new XMLSerializer();\n            var svgString = serializer.serializeToString(svgNode);\n            svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n            svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\n\n            return svgString;\n\n            function getCSSStyles(parentElement) {\n                var selectorTextArr = getSelectors(parentElement, [], []);\n\n                // Extract CSS Rules\n                var extractedCSSText = \"\";\n                for (var i = 0; i < document.styleSheets.length; i++) {\n                    var cssRules = document.styleSheets[i].cssRules;\n                    for (var r = 0; r < cssRules.length; r++) {\n                        if (contains(cssRules[r].selectorText, selectorTextArr)) extractedCSSText += cssRules[r].cssText;\n                    }\n                }\n                void 0;\n                return extractedCSSText;\n\n                function contains(str, arr) {\n                    return arr.indexOf(str) !== -1;\n                }\n\n                function getSelectors(element, parentSelectors, selectorTextArr) {\n                    // Add Parent element Id and Classes to the list\n                    if (!element.tagName) {\n                        return selectorTextArr;\n                    }\n\n                    if (!contains(element.tagName, selectorTextArr)) selectorTextArr.push(element.tagName);\n\n                    if (element.id && !contains('#' + element.id, selectorTextArr)) selectorTextArr.push('#' + element.id);\n                    if (element.id && !contains(element.tagName + '#' + element.id, selectorTextArr)) selectorTextArr.push(element.tagName + '#' + element.id);\n\n                    var allClasses = '';\n                    for (var c = 0; c < element.classList.length; c++) {\n                        var className = element.classList[c];\n                        allClasses += '.' + className;\n                        if (!contains('.' + className, selectorTextArr)) selectorTextArr.push('.' + className);\n                        if (!contains(element.tagName + '.' + className, selectorTextArr)) selectorTextArr.push(element.tagName + '.' + className);\n                    }\n                    if (allClasses) {\n                        if (!contains(allClasses, selectorTextArr)) selectorTextArr.push(allClasses);\n                        if (!contains(element.tagName + allClasses, selectorTextArr)) selectorTextArr.push(element.tagName + allClasses);\n                    }\n\n                    // Add Children element Ids and Classes to the list\n                    var nodes = element.childNodes;\n\n                    for (var i = 0; i < nodes.length; i++) {\n                        var node = nodes[i];\n                        getSelectors(node, [], selectorTextArr);\n                    }\n\n                    return selectorTextArr;\n                }\n            }\n\n            function appendCSS(cssText, element) {\n                var styleElement = document.createElement(\"style\");\n                styleElement.setAttribute(\"type\", \"text/css\");\n                styleElement.innerHTML = cssText;\n                var refNode = element.hasChildNodes() ? element.children[0] : null;\n                element.insertBefore(styleElement, refNode);\n            }\n        }\n    }, {\n        key: 'svgString2Image',\n        value: function svgString2Image(svgString, width, height, format, callback) {\n            var format = format ? format : 'png';\n\n            var imgsrc = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString))); // Convert SVG string to dataurl\n\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n\n            canvas.width = width;\n            canvas.height = height;\n\n            var image = new Image();\n            image.onload = function () {\n                context.clearRect(0, 0, width, height);\n                context.drawImage(image, 0, 0, width, height);\n\n                canvas.toBlob(function (blob) {\n                    var filesize = Math.round(blob.length / 1024) + ' KB';\n                    if (callback) callback(blob, filesize);\n                });\n            };\n\n            image.src = imgsrc;\n        }\n    }]);\n\n    return Exporter;\n}();\n\nExporter.saveAs = _fileSaver.saveAs;\nExporter.dataURLtoBlob = _blueimpCanvasToBlob.dataURLtoBlob;\n\n},{\"blueimp-canvas-to-blob\":1,\"file-saver\":20}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.App = undefined;\n\nvar _app = require('./app');\n\nObject.defineProperty(exports, 'App', {\n  enumerable: true,\n  get: function get() {\n    return _app.App;\n  }\n});\n\nvar _d3Extensions = require('./d3-extensions');\n\n_d3Extensions.D3Extensions.extend();\n\n},{\"./app\":22,\"./d3-extensions\":24}],29:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Edge = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('../utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Edge = exports.Edge = function () {\n    function Edge(parentNode, childNode, name, payoff, probability) {\n        _classCallCheck(this, Edge);\n\n        this.name = '';\n        this.probability = 0;\n        this.payoff = 0;\n        this.$id = _utils.Utils.guid();\n\n        this.parentNode = parentNode;\n        this.childNode = childNode;\n\n        if (name !== undefined) {\n            this.name = name;\n        }\n        if (probability !== undefined) {\n            this.probability = probability;\n        }\n        if (payoff !== undefined) {\n            this.payoff = payoff;\n        }\n    }\n\n    _createClass(Edge, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'setProbability',\n        value: function setProbability(probability) {\n            this.probability = probability;\n            return this;\n        }\n    }, {\n        key: 'setPayoff',\n        value: function setPayoff(payoff) {\n            this.payoff = payoff;\n            return this;\n        }\n    }]);\n\n    return Edge;\n}();\n\n},{\"../utils\":44}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _node = require('./node/node');\n\nObject.keys(_node).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _node[key];\n    }\n  });\n});\n\nvar _decisionNode = require('./node/decision-node');\n\nObject.keys(_decisionNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _decisionNode[key];\n    }\n  });\n});\n\nvar _chanceNode = require('./node/chance-node');\n\nObject.keys(_chanceNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _chanceNode[key];\n    }\n  });\n});\n\nvar _terminalNode = require('./node/terminal-node');\n\nObject.keys(_terminalNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _terminalNode[key];\n    }\n  });\n});\n\nvar _edge = require('./edge');\n\nObject.keys(_edge).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _edge[key];\n    }\n  });\n});\n\nvar _point = require('./point');\n\nObject.keys(_point).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _point[key];\n    }\n  });\n});\n\n},{\"./edge\":29,\"./node/chance-node\":31,\"./node/decision-node\":32,\"./node/node\":33,\"./node/terminal-node\":34,\"./point\":35}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChanceNode = undefined;\n\nvar _node = require('./node');\n\nvar _d = require('../../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ChanceNode = exports.ChanceNode = function (_Node) {\n    _inherits(ChanceNode, _Node);\n\n    function ChanceNode(location) {\n        _classCallCheck(this, ChanceNode);\n\n        return _possibleConstructorReturn(this, (ChanceNode.__proto__ || Object.getPrototypeOf(ChanceNode)).call(this, 'chance', d3.symbolCircle, location));\n    }\n\n    return ChanceNode;\n}(_node.Node);\n\n},{\"../../d3\":25,\"./node\":33}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DecisionNode = undefined;\n\nvar _node = require('./node');\n\nvar _d = require('../../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DecisionNode = exports.DecisionNode = function (_Node) {\n    _inherits(DecisionNode, _Node);\n\n    function DecisionNode(location) {\n        _classCallCheck(this, DecisionNode);\n\n        return _possibleConstructorReturn(this, (DecisionNode.__proto__ || Object.getPrototypeOf(DecisionNode)).call(this, 'decision', d3.symbolSquare, location));\n    }\n\n    return DecisionNode;\n}(_node.Node);\n\n},{\"../../d3\":25,\"./node\":33}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Node = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('../../utils');\n\nvar _point = require('../point');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Node = exports.Node = function () {\n    //Point\n\n    function Node(type, symbol, location) {\n        _classCallCheck(this, Node);\n\n        this.childEdges = [];\n        this.name = '';\n        this.computed = {\n            payoff: null\n        };\n        this.$id = _utils.Utils.guid();\n\n        this.location = location;\n        if (!location) {\n            this.location = new _point.Point(0, 0);\n        }\n        this.type = type;\n        this.$symbol = symbol;\n    } //internal id\n\n\n    _createClass(Node, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'moveTo',\n        value: function moveTo(x, y, withChildren) {\n            //move to new location\n            if (withChildren) {\n                var dx = x - this.location.x;\n                var dy = y - this.location.y;\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n\n            this.location.moveTo(x, y);\n            return this;\n        }\n    }, {\n        key: 'move',\n        value: function move(dx, dy, withChildren) {\n            //move by vector\n            if (withChildren) {\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n            this.location.move(dx, dy);\n            return this;\n        }\n    }]);\n\n    return Node;\n}();\n\n},{\"../../utils\":44,\"../point\":35}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TerminalNode = undefined;\n\nvar _node = require('./node');\n\nvar _d = require('../../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TerminalNode = exports.TerminalNode = function (_Node) {\n    _inherits(TerminalNode, _Node);\n\n    function TerminalNode(location) {\n        _classCallCheck(this, TerminalNode);\n\n        return _possibleConstructorReturn(this, (TerminalNode.__proto__ || Object.getPrototypeOf(TerminalNode)).call(this, 'terminal', d3.symbolTriangle, location));\n    }\n\n    return TerminalNode;\n}(_node.Node);\n\n},{\"../../d3\":25,\"./node\":33}],35:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point = exports.Point = function () {\n    function Point(x, y) {\n        _classCallCheck(this, Point);\n\n        if (x instanceof Point) {\n            y = x.y;\n            x = x.x;\n        } else if (Array.isArray(x)) {\n            y = x[1];\n            x = x[0];\n        }\n        this.x = x;\n        this.y = y;\n    }\n\n    _createClass(Point, [{\n        key: \"moveTo\",\n        value: function moveTo(x, y) {\n            if (Array.isArray(x)) {\n                y = x[1];\n                x = x[0];\n            }\n            this.x = x;\n            this.y = y;\n            return this;\n        }\n    }, {\n        key: \"move\",\n        value: function move(dx, dy) {\n            //move by vector\n            if (Array.isArray(dx)) {\n                dy = dx[1];\n                dx = dx[0];\n            }\n            this.x += dx;\n            this.y += dy;\n            return this;\n        }\n    }]);\n\n    return Point;\n}();\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Sidebar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _utils = require('./utils');\n\nvar _index = require('./model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Sidebar = exports.Sidebar = function () {\n    function Sidebar(container, app) {\n        _classCallCheck(this, Sidebar);\n\n        this.app = app;\n        this.container = container;\n    }\n\n    _createClass(Sidebar, [{\n        key: 'displayObjectProperties',\n        value: function displayObjectProperties(object) {\n            this.updateObjectPropertiesView(object);\n        }\n    }, {\n        key: 'hideObjectProperties',\n        value: function hideObjectProperties() {\n            this.container.select('#object-properties').classed('visible', false);\n        }\n    }, {\n        key: 'updateObjectPropertiesView',\n        value: function updateObjectPropertiesView(object) {\n            if (!object) {\n                this.hideObjectProperties();\n                return;\n            }\n\n            var objectProps = this.container.select('#object-properties').classed('visible', true);\n            var headerText = Sidebar.getHeaderTextForObject(object);\n            objectProps.select('.header').html(headerText);\n\n            var fieldList = Sidebar.getFieldListForObject(object);\n            this.updateObjectFields(object, fieldList);\n        }\n    }, {\n        key: 'updateObjectFields',\n        value: function updateObjectFields(object, fieldList) {\n            var self = this;\n            var objectProps = this.container.select('#object-properties');\n            var content = objectProps.select('.content');\n            var fields = content.selectAll('div.object-field').data(fieldList);\n            var temp = {};\n            var fieldsEnter = fields.enter().appendSelector('div.object-field');\n            fieldsEnter.append('label');\n            fieldsEnter.append('input');\n            var fieldsMerge = fieldsEnter.merge(fields);\n            fieldsMerge.select('label').attr('for', function (d) {\n                return 'object-field-' + d.name;\n            }).html(function (d) {\n                return d.label;\n            });\n            fieldsMerge.select('input').attr('type', function (d) {\n                return d.type;\n            }).attr('name', function (d) {\n                return d.name;\n            }).attr('id', function (d) {\n                return 'object-field-' + d.name;\n            }).on('change keyup', function (d, i) {\n                if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                    object[d.name] = temp[i].pristineVal;\n                    self.app.dataModel.saveState();\n                }\n                object[d.name] = this.value;\n                self.app.treeDesigner.redraw();\n            }).each(function (d, i) {\n                this.value = object[d.name];\n                temp[i] = {};\n                temp[i].pristineVal = this.value;\n            });\n\n            fields.exit().remove();\n        }\n    }], [{\n        key: 'getHeaderTextForObject',\n        value: function getHeaderTextForObject(object) {\n            if (object instanceof model.Node) {\n                return _utils.Utils.capitalizeFirstLetter(object.type) + ' Node';\n            }\n            if (object instanceof model.Edge) {\n                return 'Edge';\n            }\n            return '';\n        }\n    }, {\n        key: 'getFieldListForObject',\n        value: function getFieldListForObject(object) {\n            if (object instanceof model.Node) {\n                return [{\n                    name: 'name',\n                    label: 'Label',\n                    type: 'text'\n                }];\n            }\n            if (object instanceof model.Edge) {\n                var list = [{\n                    name: 'name',\n                    label: 'Label',\n                    type: 'text'\n                }, {\n                    name: 'payoff',\n                    label: 'Payoff',\n                    type: 'number'\n                }];\n                if (object.parentNode instanceof model.ChanceNode) {\n                    list.push({\n                        name: 'probability',\n                        label: 'Probability',\n                        type: 'number'\n                    });\n                }\n                return list;\n            }\n\n            return [];\n        }\n    }]);\n\n    return Sidebar;\n}();\n\n},{\"./d3\":25,\"./model/index\":30,\"./utils\":44}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//TODO maybe use some templating engine instead\nvar Templates = exports.Templates = function Templates() {\n    _classCallCheck(this, Templates);\n};\n\nTemplates.toolbar = '<div id=\"toolbar\">' + '<button id=\"saveButton\" class=\"mdl-button mdl-js-button mdl-button--raised\">Export to PNG</button>' + '<button id=\"saveButtonSvg\">Export to SVG</button>' + '<button id=\"treeAutoLayoutButton\">Tree auto layout</button>' + '<button id=\"clusterAutoLayoutButton\">Cluster auto layout</button>' + '<button id=\"undoButton\" disabled=\"disabled\" title=\"undo\"><i class=\"material-icons\">undo</i></button>' + '<button id=\"redoButton\" disabled=\"disabled\" title=\"redo\"><i class=\"material-icons\">redo</i></button>' + '</div>';\nTemplates.nodeProperties = '<div id=\"object-properties\">' + '<div class=\"header\"></div> ' + '<div class=\"content\"></div> ' + '</div>';\nTemplates.sidebar = '<div id=\"sidebar\">' + Templates.nodeProperties + '</div>';\nTemplates.main = '<div id=\"silver-decisions\">' + Templates.toolbar + '<div id=\"main-region\">' + Templates.sidebar + '<div id=\"tree-designer-container\"></div>' + '</div>' + '</div>';\n\n},{}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Toolbar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('./d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _utils = require('./utils');\n\nvar _index = require('./model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _exporter = require('./exporter');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Toolbar = exports.Toolbar = function () {\n    function Toolbar(container, app) {\n        _classCallCheck(this, Toolbar);\n\n        this.app = app;\n        this.container = container;\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initAutoLayoutButtons();\n        this.initUndoRedoButtons();\n    }\n\n    _createClass(Toolbar, [{\n        key: 'initExportToPngButton',\n        value: function initExportToPngButton() {\n            var svg = this.app.treeDesigner.svg;\n            this.container.select('#saveButton').on('click', function () {\n                var svgString = _exporter.Exporter.getSVGString(svg.node());\n                _exporter.Exporter.svgString2Image(svgString, 2 * 800, 2 * 800, 'png', save); // passes Blob and filesize String to the callback\n\n                function save(dataBlob, filesize) {\n                    _exporter.Exporter.saveAs(dataBlob, 'export.png');\n                }\n            });\n        }\n    }, {\n        key: 'initExportSvgButton',\n        value: function initExportSvgButton() {\n            var svg = this.app.treeDesigner.svg;\n            this.container.select('#saveButtonSvg').on('click', function () {\n                var svgString = _exporter.Exporter.getSVGString(svg.node());\n                var blob = new Blob([svgString], { type: \"image/svg+xml\" });\n                _exporter.Exporter.saveAs(blob, 'export.svg');\n            });\n        }\n    }, {\n        key: 'initAutoLayoutButtons',\n        value: function initAutoLayoutButtons() {\n            var self = this;\n            this.container.select('#treeAutoLayoutButton').on('click', function () {\n                self.app.treeDesigner.autoLayout('tree');\n            });\n            this.container.select('#clusterAutoLayoutButton').on('click', function () {\n                self.app.treeDesigner.autoLayout('cluster');\n            });\n        }\n    }, {\n        key: 'initUndoRedoButtons',\n        value: function initUndoRedoButtons() {\n            var _this = this;\n\n            var self = this;\n            self.app.dataModel.undoRedoStateChangedCallback = function () {\n                return _this.onUndoRedoChanged();\n            };\n            this.undoButton = this.container.select('#undoButton').on('click', function () {\n                self.app.undo();\n            });\n            this.redoButton = this.container.select('#redoButton').on('click', function () {\n                self.app.redo();\n            });\n        }\n    }, {\n        key: 'onUndoRedoChanged',\n        value: function onUndoRedoChanged() {\n            void 0;\n            this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n            this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n        }\n    }]);\n\n    return Toolbar;\n}();\n\n},{\"./d3\":25,\"./exporter\":27,\"./model/index\":30,\"./utils\":44}],39:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Layout = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('../utils');\n\nvar _index = require('../model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _d = require('../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*Tree layout manager*/\nvar Layout = exports.Layout = function () {\n    function Layout(treeDesigner, data, config) {\n        _classCallCheck(this, Layout);\n\n        this.currentAutoLayout = null;\n        this.nodeTypeOrder = {\n            'decision': 0,\n            'chance': 0,\n            'terminal': 1\n        };\n\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n        this.config = config;\n        this.minMarginBetweenNodes = this.config.nodeSize + 30;\n    }\n\n    _createClass(Layout, [{\n        key: 'update',\n        value: function update() {\n            if (this.currentAutoLayout) {\n                this.autoLayout(this.currentAutoLayout, true);\n            }\n        }\n    }, {\n        key: 'disableAutoLayout',\n        value: function disableAutoLayout() {\n            this.currentAutoLayout = false;\n        }\n    }, {\n        key: 'drawNodeSymbol',\n        value: function drawNodeSymbol(path) {\n            var self = this;\n            this.nodeSymbol = d3.symbol().type(function (d) {\n                return d.$symbol;\n            }).size(function (d) {\n                return 64;\n            });\n            var nodeSize = this.config.nodeSize;\n            path.attr('transform', 'rotate(-90)').attr('d', self.nodeSymbol).each(function (d) {\n                var path = d3.select(this);\n                var box = path.node().getBBox();\n                var error = Math.min(nodeSize / box.width, nodeSize / box.height);\n                path.attr(\"d\", self.nodeSymbol.size(error * error * 64));\n            });\n        }\n    }, {\n        key: 'nodeLabelPosition',\n        value: function nodeLabelPosition(selection) {\n            return selection.attr('x', 0).attr('y', -this.config.nodeSize / 2 - 7);\n        }\n    }, {\n        key: 'nodePayoffPosition',\n        value: function nodePayoffPosition(selection) {\n            return selection.attr('x', 0).attr('y', this.config.nodeSize / 2 + 7).attr('text-anchor', 'middle');\n        }\n    }, {\n        key: 'edgeLineD',\n        value: function edgeLineD(edge) {\n            var line = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n            // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n            var parentNode = edge.parentNode;\n            var childNode = edge.childNode;\n\n            var dX = childNode.location.x - parentNode.location.x;\n            var dY = childNode.location.y - parentNode.location.y;\n\n            var sign = dX >= 0 ? 1 : -1;\n\n            var slantStartXOffset = Math.min(dX / 2, 30);\n            var slantWidth = Math.min(20, Math.max(dX / 2 - slantStartXOffset, 0));\n\n            var point1 = [parentNode.location.x + this.config.nodeSize / 2 + 1, parentNode.location.y];\n            var point2 = [parentNode.location.x + slantStartXOffset, parentNode.location.y];\n            var point3 = [parentNode.location.x + slantStartXOffset + slantWidth, childNode.location.y];\n            var point4 = [childNode.location.x - sign * Math.max(0, Math.min(this.config.nodeSize / 2 + 8, dX / 2)), childNode.location.y];\n            // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n            // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n            edge.$linePoints = [point1, point2, point3, point4];\n            return line(edge.$linePoints);\n        }\n    }, {\n        key: 'edgePayoffPosition',\n        value: function edgePayoffPosition(selection) {\n            return selection.attr('x', function (d) {\n                return d.$linePoints[2][0] + 2;\n            }).attr('y', function (d) {\n                return d.$linePoints[2][1] + 7;\n            });\n        }\n    }, {\n        key: 'edgeLabelPosition',\n        value: function edgeLabelPosition(selection) {\n            return selection.attr('x', function (d) {\n                return d.$linePoints[2][0] + 2;\n            }).attr('y', function (d) {\n                return d.$linePoints[2][1] - 7;\n            });\n        }\n    }, {\n        key: 'edgeProbabilityPosition',\n        value: function edgeProbabilityPosition(selection) {\n            return selection.attr('x', function (d) {\n                var len = d3.select(this).node().getComputedTextLength();\n                var min = d.$linePoints[2][0] + 2 + d3.select(this.previousSibling).node().getBBox().width + 7 + len;\n                return Math.max(min, d.$linePoints[3][0] - 8);\n            }).attr('y', function (d) {\n                return d.$linePoints[2][1] + 7;\n            });\n        }\n    }, {\n        key: 'getNodeMinX',\n        value: function getNodeMinX(d) {\n            var self = this;\n            if (d && d.parent) {\n                // && !self.isNodeSelected(d.parent)\n                return d.parent.location.x + self.minMarginBetweenNodes;\n            }\n            return self.config.nodeSize / 2;\n        }\n    }, {\n        key: 'getNodeMinY',\n        value: function getNodeMinY(d) {\n            return this.config.nodeSize / 2;\n        }\n    }, {\n        key: 'getNodeMaxX',\n        value: function getNodeMaxX(d) {\n            var self = this;\n            if (d && d.childEdges.length) {\n                return d3.min(d.childEdges, function (e) {\n                    return e.childNode.location.x;\n                }) - self.minMarginBetweenNodes;\n            }\n            return 9999999;\n        }\n    }, {\n        key: 'autoLayout',\n        value: function autoLayout(type, withoutStateSaving) {\n            var self = this;\n            if (!this.data.nodes.length) {\n                return;\n            }\n            if (!withoutStateSaving) {\n                this.data.saveState({\n                    data: {\n                        currentAutoLayout: self.currentAutoLayout\n                    },\n                    onRevert: function onRevert(data) {\n                        return self.currentAutoLayout = data.currentAutoLayout;\n                    }\n                });\n            }\n\n            var treeMargin = 50;\n\n            var prevTreeMaxY = self.getNodeMinY();\n            this.data.getRoots().forEach(function (r) {\n                var root = d3.hierarchy(r, function (d) {\n                    return d.childEdges.map(function (e) {\n                        return e.childNode;\n                    });\n                });\n\n                root.sort(function (a, b) {\n                    return self.nodeTypeOrder[a.data.type] - self.nodeTypeOrder[b.data.type];\n                });\n\n                var height = 65,\n                    width = 150;\n\n                var layout;\n                if (type == 'cluster') {\n                    height = 65;\n                    layout = d3.cluster();\n                } else {\n                    layout = d3.tree();\n                }\n                layout.nodeSize([height, width]);\n\n                layout(root);\n                var minY = 999999999;\n                root.each(function (d) {\n                    minY = Math.min(minY, d.x);\n                });\n\n                var dy = root.x - minY + prevTreeMaxY;\n                var dx = self.getNodeMinX();\n                var maxY = 0;\n                root.each(function (d) {\n                    d.data.location.x = d.y + dx;\n                    d.data.location.y = d.x + dy;\n\n                    maxY = Math.max(maxY, d.data.location.y);\n                });\n\n                prevTreeMaxY = maxY + self.config.nodeSize + treeMargin;\n            });\n\n            // this.transition = true;\n            this.treeDesigner.redraw(true);\n            // this.transition = false;\n\n            this.currentAutoLayout = type;\n            return this;\n        }\n    }, {\n        key: 'fitNodesInPlottingRegion',\n        value: function fitNodesInPlottingRegion(nodes) {\n            var self = this;\n            var topY = d3.min(nodes, function (n) {\n                return n.location.y;\n            });\n            var minY = self.getNodeMinY();\n            var dy = topY - minY;\n            if (dy < 0) {\n                nodes.forEach(function (n) {\n                    return n.move(0, -dy);\n                });\n            }\n        }\n    }, {\n        key: 'moveNodes',\n        value: function moveNodes(nodes, dx, dy, pivot) {\n            var self = this;\n            var limit = self.config.limitNodePositioning;\n            if (limit) {\n                if (dx < 0) {\n                    nodes.sort(function (a, b) {\n                        return a.location.x - b.location.x;\n                    });\n                } else {\n                    nodes.sort(function (a, b) {\n                        return b.location.x - a.location.x;\n                    });\n                }\n            }\n\n            var minY = d3.min(nodes, function (d) {\n                return d.location.y;\n            });\n            if (minY + dy < self.getNodeMinY()) {\n                dy = self.getNodeMinY() - minY;\n            }\n\n            nodes.forEach(function (d) {\n                if (limit) {\n                    Layout.backupNodeLocation(d);\n                    var minX = self.getNodeMinX(d);\n                    var maxX = self.getNodeMaxX(d);\n\n                    d.location.x = Math.min(Math.max(d.location.x + dx, minX), maxX);\n                    d.location.y += dy;\n                } else {\n                    d.location.x += dx;\n                    d.location.y += dy;\n                }\n            });\n\n            var revertX = pivot && self.config.limitNodePositioning && pivot.location.x == pivot.$location.x;\n\n            nodes.forEach(function (d) {\n                if (revertX) {\n                    d.location.x = d.$location.x;\n                }\n                self.treeDesigner.updateNodePosition(d);\n            });\n        }\n    }], [{\n        key: 'backupNodeLocation',\n        value: function backupNodeLocation(node) {\n            node.$location = new model.Point(node.location);\n        }\n    }]);\n\n    return Layout;\n}();\n\n},{\"../d3\":25,\"../model/index\":30,\"../utils\":44}],40:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MainContextMenu = undefined;\n\nvar _contextMenu = require('../context-menu');\n\nvar _utils = require('../utils');\n\nvar _index = require('../model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _d = require('../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MainContextMenu = exports.MainContextMenu = function (_ContextMenu) {\n    _inherits(MainContextMenu, _ContextMenu);\n\n    function MainContextMenu(treeDesigner) {\n        _classCallCheck(this, MainContextMenu);\n\n        var menu = function menu(d) {\n\n            var menu = [];\n            menu.push({\n                title: 'Add Decision Node',\n                action: function action(elm, d, i) {\n                    var newNode = new model.DecisionNode(new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true)));\n                    treeDesigner.addNode(newNode);\n                }\n            });\n            menu.push({\n                title: 'Add Chance Node',\n                action: function action(elm, d, i) {\n                    var newNode = new model.ChanceNode(new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true)));\n                    treeDesigner.addNode(newNode);\n                }\n            });\n            menu.push({ divider: true });\n            menu.push({\n                title: 'Paste',\n                action: function action(elm, d, i) {\n                    treeDesigner.pasteToNewLocation(new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true)));\n                },\n                disabled: !treeDesigner.copiedNode\n\n            });\n            menu.push({ divider: true });\n\n            menu.push({\n                title: 'Select all nodes',\n                action: function action(elm, d, i) {\n                    treeDesigner.selectAllNodes();\n                }\n            });\n            return menu;\n        };\n\n        var _this = _possibleConstructorReturn(this, (MainContextMenu.__proto__ || Object.getPrototypeOf(MainContextMenu)).call(this, menu, { onOpen: function onOpen() {\n                return treeDesigner.clearSelection();\n            } }));\n\n        _this.treeDesigner = treeDesigner;\n        return _this;\n    }\n\n    return MainContextMenu;\n}(_contextMenu.ContextMenu);\n\n},{\"../context-menu\":23,\"../d3\":25,\"../model/index\":30,\"../utils\":44}],41:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.NodeContextMenu = undefined;\n\nvar _contextMenu = require('../context-menu');\n\nvar _utils = require('../utils');\n\nvar _index = require('../model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _d = require('../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NodeContextMenu = exports.NodeContextMenu = function (_ContextMenu) {\n    _inherits(NodeContextMenu, _ContextMenu);\n\n    function NodeContextMenu(treeDesigner) {\n        _classCallCheck(this, NodeContextMenu);\n\n        var menu = function menu(d) {\n\n            var copyMenuItem = {\n                title: 'Copy',\n                action: function action(elm, d, i) {\n                    treeDesigner.copyNode(d);\n                }\n            };\n            var cutMenuItem = {\n                title: 'Cut',\n                action: function action(elm, d, i) {\n                    treeDesigner.cutNode(d);\n                }\n            };\n            var pasteMenuItem = {\n                title: 'Paste',\n                action: function action(elm, d, i) {\n                    treeDesigner.pasteToNode(d);\n                },\n                disabled: !treeDesigner.copiedNode\n\n            };\n            var deleteMenuItem = {\n                title: 'Delete',\n                action: function action(elm, d, i) {\n\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.removeSelectedNodes();\n                }\n            };\n            var menu = [];\n            if (d.type == 'terminal') {\n                return [copyMenuItem, cutMenuItem, deleteMenuItem];\n            }\n            menu.push({\n                title: 'Add Decision Node',\n                action: function action(elm, d, i) {\n                    var newNode = new model.DecisionNode(new model.Point(d.location.x + 150, d.location.y));\n                    treeDesigner.addNode(newNode, d);\n                }\n            });\n            menu.push({\n                title: 'Add Chance Node',\n                action: function action(elm, d, i) {\n                    var newNode = new model.ChanceNode(new model.Point(d.location.x + 150, d.location.y));\n                    treeDesigner.addNode(newNode, d);\n                }\n            });\n            menu.push({\n                title: 'Add Terminal Node',\n                action: function action(elm, d, i) {\n                    var newNode = new model.TerminalNode(new model.Point(d.location.x + 150, d.location.y));\n                    treeDesigner.addNode(newNode, d);\n                }\n            });\n            menu.push({ divider: true });\n            menu.push(copyMenuItem);\n            menu.push(cutMenuItem);\n            menu.push(pasteMenuItem);\n            menu.push(deleteMenuItem);\n            menu.push({ divider: true });\n            menu.push({\n                title: 'Select subtree',\n                action: function action(elm, d, i) {\n                    treeDesigner.selectSubTree(d, true);\n                }\n            });\n\n            return menu;\n        };\n\n        var _this = _possibleConstructorReturn(this, (NodeContextMenu.__proto__ || Object.getPrototypeOf(NodeContextMenu)).call(this, menu));\n\n        _this.treeDesigner = treeDesigner;\n        return _this;\n    }\n\n    return NodeContextMenu;\n}(_contextMenu.ContextMenu);\n\n},{\"../context-menu\":23,\"../d3\":25,\"../model/index\":30,\"../utils\":44}],42:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.NodeDragHandler = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('../utils');\n\nvar _index = require('../model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _d = require('../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _contextMenu = require('../context-menu');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NodeDragHandler = exports.NodeDragHandler = function () {\n    function NodeDragHandler(treeDesigner, data) {\n        _classCallCheck(this, NodeDragHandler);\n\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag().subject(function (d) {\n            if (d == null) {\n                return {\n                    x: event.x,\n                    y: event.y\n                };\n            }\n            var t = d3.select(this);\n            return {\n                x: t.attr(\"x\") + _utils.Utils.getTranslation(t.attr(\"transform\"))[0],\n                y: t.attr(\"y\") + _utils.Utils.getTranslation(t.attr(\"transform\"))[1]\n            };\n        }).on(\"start\", function (d) {\n            self.dragStarted.call(this, d, self);\n        }).on(\"drag\", function (d) {\n            self.onDrag.call(this, d, self);\n        }).on(\"end\", this.dragEnded);\n    }\n\n    _createClass(NodeDragHandler, [{\n        key: 'dragStarted',\n        value: function dragStarted(d, self) {\n            self.treeDesigner.layout.disableAutoLayout();\n            _contextMenu.ContextMenu.hide();\n            var node = d3.select(this);\n            if (!node.classed(\"selected\")) {\n                self.treeDesigner.clearSelection();\n            }\n            // console.log('drag started');\n            self.treeDesigner.selectNode(d);\n            node.classed(\"selected dragging\", true);\n            self.selectedNodes = self.treeDesigner.getSelectedNodes();\n            self.prevDragEvent = d3.event;\n            self.dragEventCount = 0;\n        }\n    }, {\n        key: 'onDrag',\n        value: function onDrag(draggedNode, self) {\n            // console.log('drag');\n            if (self.dragEventCount == 2) {\n                self.data.saveState();\n            }\n            self.dragEventCount++;\n            if (self.selectedNodes.length > 5 && self.dragEventCount % 2 != 1) {\n                return;\n            }\n\n            var dx = d3.event.x - self.prevDragEvent.x;\n            var dy = d3.event.y - self.prevDragEvent.y;\n            self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\n\n            self.prevDragEvent = d3.event;\n            self.treeDesigner.redrawEdges();\n            self.treeDesigner.updatePlottingRegionSize();\n        }\n    }, {\n        key: 'dragEnded',\n        value: function dragEnded() {\n            var self = this;\n            var node = d3.select(this).classed(\"dragging\", false);\n        }\n    }]);\n\n    return NodeDragHandler;\n}();\n\n},{\"../context-menu\":23,\"../d3\":25,\"../model/index\":30,\"../utils\":44}],43:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeDesigner = exports.TreeDesignerConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('../d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _utils = require('../utils');\n\nvar _index = require('../model/index');\n\nvar model = _interopRequireWildcard(_index);\n\nvar _contextMenu = require('../context-menu');\n\nvar _mainContextMenu = require('./main-context-menu');\n\nvar _nodeContextMenu = require('./node-context-menu');\n\nvar _layout = require('./layout');\n\nvar _nodeDragHandler = require('./node-drag-handler');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TreeDesignerConfig = exports.TreeDesignerConfig = function TreeDesignerConfig(custom) {\n    _classCallCheck(this, TreeDesignerConfig);\n\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    this.layout = {\n        nodeSize: 40,\n        limitNodePositioning: true\n    };\n\n    this.onNodeSelected = function (node) {};\n\n    this.onEdgeSelected = function (edge) {};\n\n    this.onSelectionCleared = function () {};\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar TreeDesigner = exports.TreeDesigner = function () {\n    function TreeDesigner(container, dataModel, config) {\n        _classCallCheck(this, TreeDesigner);\n\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    } //data model manager\n\n\n    _createClass(TreeDesigner, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            this.config = new TreeDesignerConfig(config);\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n\n            this.initSvg();\n            this.initLayout();\n            this.initMainContextMenu();\n            this.initBrush();\n            this.initEdgeMarker();\n            this.initNodeContextMenu();\n            this.initNodeDragHandler();\n            this.redraw();\n        }\n    }, {\n        key: 'initLayout',\n        value: function initLayout() {\n            this.layout = new _layout.Layout(this, this.data, this.config.layout);\n        }\n    }, {\n        key: 'initNodeDragHandler',\n        value: function initNodeDragHandler() {\n            this.nodeDragHandler = new _nodeDragHandler.NodeDragHandler(this, this.data);\n        }\n    }, {\n        key: 'redraw',\n        value: function redraw(withTransitions) {\n            var self = this;\n            if (withTransitions) {\n                self.transitionPrev = self.transition;\n                self.transition = true;\n            }\n            this.redrawNodes();\n            this.redrawEdges();\n            if (withTransitions) {\n                self.transition = self.transitionPrev;\n            }\n            setTimeout(function () {\n                self.updatePlottingRegionSize();\n            }, 10);\n        }\n    }, {\n        key: 'computeAvailableSpace',\n        value: function computeAvailableSpace() {\n            this.availableHeight = _utils.Utils.sanitizeHeight(this.config.height, this.container, this.config.margin);\n            this.availableWidth = _utils.Utils.sanitizeWidth(this.config.width, this.container, this.config.margin);\n        }\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            var self = this;\n            this.computeAvailableSpace();\n            this.svg = this.container.selectOrAppend('svg.tree-designer');\n            this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\n\n            var margin = this.config.margin;\n            this.mainGroup = this.svg.selectOrAppend('g.main-group');\n            this.mainGroup.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            if (!this.config.width) {\n                d3.select(window).on(\"resize.tree-designer\", function () {\n                    self.updatePlottingRegionSize();\n                });\n            }\n        }\n    }, {\n        key: 'initContainer',\n        value: function initContainer(container) {\n            this.container = container;\n        }\n    }, {\n        key: 'updatePlottingRegionSize',\n        value: function updatePlottingRegionSize() {\n            var changed = false;\n            this.computeAvailableSpace();\n            var margin = this.config.margin;\n            var svgWidth = this.svg.attr('width');\n            var svgHeight = this.svg.attr('height');\n            var mainGroupBox = this.mainGroup.node().getBBox();\n            var newSvgWidth = mainGroupBox.width + mainGroupBox.x + margin.left + margin.right;\n            this.container.classed('with-overflow-x', newSvgWidth >= this.availableWidth);\n            newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\n            if (svgWidth != newSvgWidth) {\n                changed = true;\n                this.svg.attr('width', newSvgWidth);\n            }\n            var newSvgHeight = mainGroupBox.height + mainGroupBox.y + margin.top + margin.bottom;\n\n            this.container.classed('with-overflow-y', newSvgHeight >= this.availableHeight);\n            newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\n            if (svgHeight != newSvgHeight) {\n                changed = true;\n                this.svg.attr('height', newSvgHeight);\n            }\n            if (changed) {\n                this.updateBrushExtent();\n            }\n        }\n    }, {\n        key: 'redrawNodes',\n        value: function redrawNodes() {\n            var self = this;\n\n            var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n            var nodes = nodesContainer.selectAll('.node').data(this.data.nodes, function (d, i) {\n                return d.$id;\n            });\n            nodes.exit().remove();\n            var nodesEnter = nodes.enter().append('g').attr('id', function (d) {\n                return 'node-' + d.$id;\n            }).attr('class', function (d) {\n                return d.type + '-node node';\n            }).attr('transform', function (d) {\n                return 'translate(' + d.location.x + '  ' + d.location.y + ')';\n            });\n            nodesEnter.append('path');\n\n            var labelEnter = nodesEnter.append('text').attr('class', 'label');\n            var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\n\n            var nodesMerge = nodesEnter.merge(nodes);\n\n            var nodesMergeT = nodesMerge;\n            if (this.transition) {\n                nodesMergeT = nodesMerge.transition();\n                nodesMergeT.on('end', function () {\n                    return self.updatePlottingRegionSize();\n                });\n            }\n            nodesMergeT.attr('transform', function (d) {\n                return 'translate(' + d.location.x + '  ' + d.location.y + ')';\n            });\n\n            this.layout.drawNodeSymbol(nodesMerge.select('path'));\n\n            this.layout.nodeLabelPosition(labelEnter);\n            this.layout.nodeLabelPosition(nodesMergeT.select('text.label')).attr('text-anchor', 'middle').text(function (d) {\n                return d.name;\n            });\n\n            var payoff = nodesMerge.select('text.payoff').attr('dominant-baseline', 'hanging').classed('negative', function (d) {\n                return d.computed.payoff < 0;\n            }).text(function (d) {\n                return d.computed.payoff !== null ? '$ ' + d.computed.payoff : '';\n            });\n\n            var payoffT = payoff;\n            if (this.transition) {\n                payoffT = payoff.transition();\n            }\n\n            this.layout.nodePayoffPosition(payoffEnter);\n            this.layout.nodePayoffPosition(payoffT);\n\n            nodesMerge.call(this.nodeDragHandler.drag);\n            nodesMerge.on('contextmenu', this.nodeContextMenu);\n            nodesMerge.on('dblclick', function (d) {\n                return self.selectSubTree(d, true);\n            });\n        }\n    }, {\n        key: 'redrawEdges',\n        value: function redrawEdges() {\n            var _this = this;\n\n            var self = this;\n            var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n            var edges = edgesContainer.selectAll('.edge').data(this.data.edges, function (d, i) {\n                return d.$id;\n            });\n            edges.exit().remove();\n            var edgesEnter = edges.enter().append('g').attr('id', function (d) {\n                return 'edge-' + d.$id;\n            }).attr('class', 'edge');\n\n            edgesEnter.append('path');\n            var labelEnter = edgesEnter.append('text').attr('class', 'label');\n            var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\n            var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\n\n            var edgesMerge = edgesEnter.merge(edges);\n\n            var edgesMergeT = edgesMerge;\n            if (this.transition) {\n                edgesMergeT = edgesMerge.transition();\n            }\n            edgesMergeT.select('path').attr('d', function (d) {\n                return _this.layout.edgeLineD(d);\n            }).attr(\"stroke\", \"black\")\n            // .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\").attr(\"marker-end\", \"url(#arrow)\").attr(\"shape-rendering\", \"optimizeQuality\");\n\n            edgesMerge.on('click', function (d) {\n                self.selectEdge(d, true);\n            });\n\n            this.layout.edgeLabelPosition(labelEnter);\n            this.layout.edgeLabelPosition(edgesMergeT.select('text.label')).text(function (d) {\n                return d.name;\n            });\n\n            var payoffText = edgesMerge.select('text.payoff').attr('dominant-baseline', 'hanging').classed('negative', function (d) {\n                return d.payoff < 0;\n            }).text(function (d) {\n                return '$ ' + d.payoff;\n            });\n\n            var payoffTextT = payoffText;\n            if (this.transition) {\n                payoffTextT = payoffText.transition();\n            }\n            this.layout.edgePayoffPosition(payoffEnter);\n            this.layout.edgePayoffPosition(payoffTextT);\n\n            this.layout.edgeProbabilityPosition(probabilityEnter);\n            this.layout.edgeProbabilityPosition(edgesMergeT.select('text.probability')).attr('dominant-baseline', 'hanging') //TODO not working in IE\n            .attr('text-anchor', 'end').text(function (d) {\n                return d.probability ? d.probability : '';\n            });\n        }\n    }, {\n        key: 'initEdgeMarker',\n        value: function initEdgeMarker() {\n            void 0;\n            var defs = this.svg.append(\"svg:defs\");\n\n            defs.append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 5).attr(\"refY\", 0).attr(\"markerWidth\", 4).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"class\", \"arrowHead\");\n        }\n    }, {\n        key: 'updateBrushExtent',\n        value: function updateBrushExtent() {\n            var self = this;\n            this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\n            this.brushContainer.call(this.brush);\n        }\n    }, {\n        key: 'initBrush',\n        value: function initBrush() {\n            var self = this;\n            var brushContainer = this.brushContainer = this.svg.selectOrInsert(\"g.brush\", \":first-child\").attr(\"class\", \"brush\");\n\n            var brush = this.brush = d3.brush().on(\"start\", brushstart).on(\"brush\", brushmove).on(\"end\", brushend);\n\n            var mainGroupTranslation = this.getMainGroupTranslation();\n            this.updateBrushExtent();\n\n            function brushstart() {\n                if (!d3.event.selection) return;\n                self.clearSelection();\n                _contextMenu.ContextMenu.hide();\n            }\n\n            // Highlight the selected nodes.\n            function brushmove() {\n                var s = d3.event.selection;\n                if (!s) return;\n\n                self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n\n                    var x = d.location.x + mainGroupTranslation[0];\n                    var y = d.location.y + mainGroupTranslation[1];\n                    return s[0][0] <= x && x <= s[1][0] && s[0][1] <= y && y <= s[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (!d3.event.selection) return;\n                brush.move(brushContainer, null);\n\n                // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n            }\n        }\n    }, {\n        key: 'getMainGroupTranslation',\n        value: function getMainGroupTranslation(invert) {\n            var translation = _utils.Utils.getTranslation(this.mainGroup.attr(\"transform\"));\n            if (invert) {\n                translation[0] = -translation[0];\n                translation[1] = -translation[1];\n            }\n            return translation;\n        }\n    }, {\n        key: 'initNodeContextMenu',\n        value: function initNodeContextMenu() {\n            this.nodeContextMenu = new _nodeContextMenu.NodeContextMenu(this);\n        }\n    }, {\n        key: 'initMainContextMenu',\n        value: function initMainContextMenu() {\n            this.mainContextMenu = new _mainContextMenu.MainContextMenu(this);\n            this.svg.on('contextmenu', this.mainContextMenu);\n        }\n    }, {\n        key: 'addNode',\n        value: function addNode(node, parent) {\n            this.data.saveState();\n            this.data.addNode(node, parent);\n            this.redraw();\n            this.layout.update();\n            return node;\n        }\n    }, {\n        key: 'removeNode',\n        value: function removeNode(node) {\n            this.data.saveState();\n            this.data.removeNode(node);\n\n            if (this.layout.currentAutoLayout) {\n                this.layout.update();\n            } else {\n                this.redraw();\n            }\n        }\n    }, {\n        key: 'removeSelectedNodes',\n        value: function removeSelectedNodes() {\n            this.data.saveState();\n            var selectedNodes = this.getSelectedNodes();\n            this.data.removeNodes(selectedNodes);\n            this.clearSelection();\n            this.redraw();\n            this.layout.update();\n        }\n    }, {\n        key: 'copyNode',\n        value: function copyNode(d) {\n            this.copiedNode = this.data.cloneSubtree(d);\n        }\n    }, {\n        key: 'cutNode',\n        value: function cutNode(d) {\n            this.copyNode(d);\n            this.removeNode(d);\n        }\n    }, {\n        key: 'copySelectedNodes',\n        value: function copySelectedNodes() {\n            var _this2 = this;\n\n            var self;\n            var selectedNodes = this.getSelectedNodes();\n\n            var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n            this.copiedNodes = selectedRoots.map(function (d) {\n                return _this2.data.cloneSubtree(d);\n            });\n            //TODO\n        }\n    }, {\n        key: 'pasteToNode',\n        value: function pasteToNode(node) {\n            this.data.saveState();\n            var self = this;\n            var toAttach = this.copiedNode;\n            self.copyNode(toAttach);\n            var attached = this.data.attachSubtree(toAttach, node);\n\n            attached.moveTo(node.location.x + 120, node.location.y, true);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            this.redraw();\n            self.layout.update();\n\n            self.selectSubTree(attached, true);\n        }\n    }, {\n        key: 'pasteToNewLocation',\n        value: function pasteToNewLocation(point) {\n            this.data.saveState();\n            var self = this;\n            var toAttach = this.copiedNode;\n            self.copyNode(toAttach);\n            var attached = this.data.attachSubtree(toAttach);\n\n            attached.moveTo(point.x, point.y, true);\n            self.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            this.redraw();\n            self.layout.update();\n\n            self.selectSubTree(attached, true);\n        }\n    }, {\n        key: 'moveNodeTo',\n        value: function moveNodeTo(x, y) {}\n    }, {\n        key: 'updateNodePosition',\n        value: function updateNodePosition(node) {\n            this.getNodeD3Selection(node).raise().attr('transform', 'translate(' + node.location.x + ' ' + node.location.y + ')');\n        }\n    }, {\n        key: 'getNodeD3Selection',\n        value: function getNodeD3Selection(node) {\n            return this.mainGroup.select('#node-' + node.$id);\n        }\n    }, {\n        key: 'getSelectedNodes',\n        value: function getSelectedNodes() {\n            return this.mainGroup.selectAll(\".node.selected\").data();\n        }\n    }, {\n        key: 'clearSelection',\n        value: function clearSelection() {\n            this.mainGroup.selectAll(\".selected\").classed('selected', false);\n            this.config.onSelectionCleared();\n        }\n    }, {\n        key: 'selectEdge',\n        value: function selectEdge(edge, clearSelectionBeforeSelect) {\n            if (clearSelectionBeforeSelect) {\n                this.clearSelection();\n            }\n            this.config.onEdgeSelected(edge);\n            this.mainGroup.select('#edge-' + edge.$id).classed('selected', true);\n        }\n    }, {\n        key: 'isNodeSelected',\n        value: function isNodeSelected(node) {\n            return this.getNodeD3Selection(node).classed('selected');\n        }\n    }, {\n        key: 'selectNode',\n        value: function selectNode(node, clearSelectionBeforeSelect, skipCallback) {\n            if (clearSelectionBeforeSelect) {\n                this.clearSelection();\n            }\n\n            if (!skipCallback) {\n                this.config.onNodeSelected(node);\n            }\n\n            this.mainGroup.select('#node-' + node.$id).classed('selected', true);\n        }\n    }, {\n        key: 'selectSubTree',\n        value: function selectSubTree(node, clearSelectionBeforeSelect, skipCallback) {\n            var _this3 = this;\n\n            if (clearSelectionBeforeSelect) {\n                this.clearSelection();\n            }\n            this.selectNode(node, false, skipCallback);\n            node.childEdges.forEach(function (e) {\n                return _this3.selectSubTree(e.childNode, false, true);\n            });\n        }\n    }, {\n        key: 'selectAllNodes',\n        value: function selectAllNodes() {\n            this.mainGroup.selectAll(\".node\").classed('selected', true);\n        }\n    }, {\n        key: 'autoLayout',\n        value: function autoLayout(type, withoutStateSaving) {\n            this.layout.autoLayout(type, withoutStateSaving);\n        }\n    }]);\n\n    return TreeDesigner;\n}();\n\n},{\"../context-menu\":23,\"../d3\":25,\"../model/index\":30,\"../utils\":44,\"./layout\":39,\"./main-context-menu\":40,\"./node-context-menu\":41,\"./node-drag-handler\":42}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isArray',\n        value: function isArray(item) {\n            return Array.isArray(item);\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'isDate',\n        value: function isDate(a) {\n            return Object.prototype.toString.call(a) === '[object Date]';\n        }\n    }, {\n        key: 'isString',\n        value: function isString(a) {\n            return typeof a === 'string' || a instanceof String;\n        }\n    }, {\n        key: 'insertOrAppendSelector',\n        value: function insertOrAppendSelector(parent, selector, operation, before) {\n\n            var selectorParts = selector.split(/([\\.\\#])/);\n            var element = parent[operation](selectorParts.shift(), before); //\":first-child\"\n\n            while (selectorParts.length > 1) {\n                var selectorModifier = selectorParts.shift();\n                var selectorItem = selectorParts.shift();\n                if (selectorModifier === \".\") {\n                    element = element.classed(selectorItem, true);\n                } else if (selectorModifier === \"#\") {\n                    element = element.attr('id', selectorItem);\n                }\n            }\n            return element;\n        }\n    }, {\n        key: 'insertSelector',\n        value: function insertSelector(parent, selector, before) {\n            return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n        }\n    }, {\n        key: 'appendSelector',\n        value: function appendSelector(parent, selector) {\n            return Utils.insertOrAppendSelector(parent, selector, \"append\");\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                if (element) {\n                    return parent.append(element);\n                }\n                return Utils.appendSelector(parent, selector);\n            }\n            return selection;\n        }\n    }, {\n        key: 'selectOrInsert',\n        value: function selectOrInsert(parent, selector, before) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                return Utils.insertSelector(parent, selector, before);\n            }\n            return selection;\n        }\n    }, {\n        key: 'guid',\n        value: function guid() {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n            }\n\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n        }\n\n        //places textString in textObj, adds an ellipsis if text can't fit in width\n\n    }, {\n        key: 'placeTextWithEllipsis',\n        value: function placeTextWithEllipsis(textD3Obj, textString, width) {\n            var textObj = textD3Obj.node();\n            textObj.textContent = textString;\n\n            var margin = 0;\n            var ellipsisLength = 9;\n            //ellipsis is needed\n            if (textObj.getComputedTextLength() > width + margin) {\n                for (var x = textString.length - 3; x > 0; x -= 1) {\n                    if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                        textObj.textContent = textString.substring(0, x) + \"...\";\n                        return true;\n                    }\n                }\n                textObj.textContent = \"...\"; //can't place at all\n                return true;\n            }\n            return false;\n        }\n    }, {\n        key: 'placeTextWithEllipsisAndTooltip',\n        value: function placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n            var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n            if (ellipsisPlaced && tooltip) {\n                textD3Obj.on(\"mouseover\", function (d) {\n                    tooltip.transition().duration(200).style(\"opacity\", .9);\n                    tooltip.html(textString).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                textD3Obj.on(\"mouseout\", function (d) {\n                    tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n        }\n    }, {\n        key: 'getFontSize',\n        value: function getFontSize(element) {\n            return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n        }\n    }, {\n        key: 'capitalizeFirstLetter',\n        value: function capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    }, {\n        key: 'getTranslation',\n        value: function getTranslation(transform) {\n            // Create a dummy g for calculation purposes only. This will never\n            // be appended to the DOM and will be discarded once this function\n            // returns.\n            var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n            // Set the transform attribute to the provided string value.\n            g.setAttributeNS(null, \"transform\", transform);\n\n            // consolidate the SVGTransformList containing all transformations\n            // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n            // its SVGMatrix.\n            var matrix = g.transform.baseVal.consolidate().matrix;\n\n            // As per definition values e and f are the ones for the translation.\n            return [matrix.e, matrix.f];\n        }\n    }, {\n        key: 'getObjectByIdMap',\n        value: function getObjectByIdMap(objectList, mappingFn) {\n            var objectById = {};\n            if (!objectList) {\n                return objectById;\n            }\n            objectList.forEach(function (obj) {\n                var val = obj;\n                if (mappingFn) {\n                    val = mappingFn(obj);\n                }\n                objectById[obj.$id] = val;\n            });\n            return objectById;\n        }\n    }]);\n\n    return Utils;\n}();\n\nUtils.SQRT_2 = 1.41421356237;\n\nUtils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n};\n\nUtils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n};\n\nUtils.availableHeight = function (height, container, margin) {\n    return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\nUtils.availableWidth = function (width, container, margin) {\n    return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n},{}]},{},[28])(28)\n});\n\n","// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-brush/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-collection/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  exports.nest = nest;\n  exports.set = set;\n  exports.map = map;\n  exports.keys = keys;\n  exports.values = values;\n  exports.entries = entries;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-color/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, rgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function hsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, hsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function hcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, hcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-drag/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, function (exports,d3Dispatch,d3Selection) { 'use strict';\n\n  function nopropagation() {\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    d3Selection.event.preventDefault();\n    d3Selection.event.stopImmediatePropagation();\n  }\n\n  function nodrag(view) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function yesdrag(view, noclick) {\n    var root = view.document.documentElement,\n        selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !d3Selection.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n      if (!gesture) return;\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      nodrag(d3Selection.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      yesdrag(d3Selection.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = d3Selection.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = d3Selection.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  exports.drag = drag;\n  exports.dragDisable = nodrag;\n  exports.dragEnable = yesdrag;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-ease/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function cubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = cubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = cubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-hierarchy/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function defaultSeparation(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  function meanX(children) {\n    return children.reduce(meanXReduce, 0) / children.length;\n  }\n\n  function meanXReduce(x, c) {\n    return x + c.x;\n  }\n\n  function maxY(children) {\n    return 1 + children.reduce(maxYReduce, 0);\n  }\n\n  function maxYReduce(y, c) {\n    return Math.max(y, c.y);\n  }\n\n  function leafLeft(node) {\n    var children;\n    while (children = node.children) node = children[0];\n    return node;\n  }\n\n  function leafRight(node) {\n    var children;\n    while (children = node.children) node = children[children.length - 1];\n    return node;\n  }\n\n  function cluster() {\n    var separation = defaultSeparation,\n        dx = 1,\n        dy = 1,\n        nodeSize = false;\n\n    function cluster(root) {\n      var previousNode,\n          x = 0;\n\n      // First walk, computing the initial x & y values.\n      root.eachAfter(function(node) {\n        var children = node.children;\n        if (children) {\n          node.x = meanX(children);\n          node.y = maxY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n\n      var left = leafLeft(root),\n          right = leafRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n\n      // Second walk, normalizing x & y to the desired size.\n      return root.eachAfter(nodeSize ? function(node) {\n        node.x = (node.x - root.x) * dx;\n        node.y = (root.y - node.y) * dy;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * dx;\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n      });\n    }\n\n    cluster.separation = function(x) {\n      return arguments.length ? (separation = x, cluster) : separation;\n    };\n\n    cluster.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n    };\n\n    cluster.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return cluster;\n  }\n\n  function node_each(callback) {\n    var node = this, current, next = [node], children, i, n;\n    do {\n      current = next.reverse(), next = [];\n      while (node = current.pop()) {\n        callback(node), children = node.children;\n        if (children) for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    } while (next.length);\n    return this;\n  }\n\n  function node_eachBefore(callback) {\n    var node = this, nodes = [node], children, i;\n    while (node = nodes.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n    return this;\n  }\n\n  function node_eachAfter(callback) {\n    var node = this, nodes = [node], next = [], children, i, n;\n    while (node = nodes.pop()) {\n      next.push(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n    while (node = next.pop()) {\n      callback(node);\n    }\n    return this;\n  }\n\n  function node_sum(value) {\n    return this.eachAfter(function(node) {\n      var sum = +value(node.data) || 0,\n          children = node.children,\n          i = children && children.length;\n      while (--i >= 0) sum += children[i].value;\n      node.value = sum;\n    });\n  }\n\n  function node_sort(compare) {\n    return this.eachBefore(function(node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  }\n\n  function node_path(end) {\n    var start = this,\n        ancestor = leastCommonAncestor(start, end),\n        nodes = [start];\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n    var k = nodes.length;\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n    return nodes;\n  }\n\n  function leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(),\n        bNodes = b.ancestors(),\n        c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while (a === b) {\n      c = a;\n      a = aNodes.pop();\n      b = bNodes.pop();\n    }\n    return c;\n  }\n\n  function node_ancestors() {\n    var node = this, nodes = [node];\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n    return nodes;\n  }\n\n  function node_descendants() {\n    var nodes = [];\n    this.each(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n\n  function node_leaves() {\n    var leaves = [];\n    this.eachBefore(function(node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  }\n\n  function node_links() {\n    var root = this, links = [];\n    root.each(function(node) {\n      if (node !== root) { // Don’t include the root’s parent, if any.\n        links.push({source: node.parent, target: node});\n      }\n    });\n    return links;\n  }\n\n  function hierarchy(data, children) {\n    var root = new Node(data),\n        valued = +data.value && (root.value = data.value),\n        node,\n        nodes = [root],\n        child,\n        childs,\n        i,\n        n;\n\n    if (children == null) children = defaultChildren;\n\n    while (node = nodes.pop()) {\n      if (valued) node.value = +node.data.value;\n      if ((childs = children(node.data)) && (n = childs.length)) {\n        node.children = new Array(n);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new Node(childs[i]));\n          child.parent = node;\n          child.depth = node.depth + 1;\n        }\n      }\n    }\n\n    return root.eachBefore(computeHeight);\n  }\n\n  function node_copy() {\n    return hierarchy(this).eachBefore(copyData);\n  }\n\n  function defaultChildren(d) {\n    return d.children;\n  }\n\n  function copyData(node) {\n    node.data = node.data.data;\n  }\n\n  function computeHeight(node) {\n    var height = 0;\n    do node.height = height;\n    while ((node = node.parent) && (node.height < ++height));\n  }\n\n  function Node(data) {\n    this.data = data;\n    this.depth =\n    this.height = 0;\n    this.parent = null;\n  }\n\n  Node.prototype = hierarchy.prototype = {\n    constructor: Node,\n    each: node_each,\n    eachAfter: node_eachAfter,\n    eachBefore: node_eachBefore,\n    sum: node_sum,\n    sort: node_sort,\n    path: node_path,\n    ancestors: node_ancestors,\n    descendants: node_descendants,\n    leaves: node_leaves,\n    links: node_links,\n    copy: node_copy\n  };\n\n  function Node$2(value) {\n    this._ = value;\n    this.next = null;\n  }\n\n  function shuffle(array) {\n    var i,\n        n = (array = array.slice()).length,\n        head = null,\n        node = head;\n\n    while (n) {\n      var next = new Node$2(array[n - 1]);\n      if (node) node = node.next = next;\n      else node = head = next;\n      array[i] = array[--n];\n    }\n\n    return {\n      head: head,\n      tail: node\n    };\n  }\n\n  function enclose(circles) {\n    return encloseN(shuffle(circles), []);\n  }\n\n  function encloses(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r - b.r;\n    return dr * dr + 1e-6 > dx * dx + dy * dy;\n  }\n\n  // Returns the smallest circle that contains circles L and intersects circles B.\n  function encloseN(L, B) {\n    var circle,\n        l0 = null,\n        l1 = L.head,\n        l2,\n        p1;\n\n    switch (B.length) {\n      case 1: circle = enclose1(B[0]); break;\n      case 2: circle = enclose2(B[0], B[1]); break;\n      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n    }\n\n    while (l1) {\n      p1 = l1._, l2 = l1.next;\n      if (!circle || !encloses(circle, p1)) {\n\n        // Temporarily truncate L before l1.\n        if (l0) L.tail = l0, l0.next = null;\n        else L.head = L.tail = null;\n\n        B.push(p1);\n        circle = encloseN(L, B); // Note: reorders L!\n        B.pop();\n\n        // Move l1 to the front of L and reconnect the truncated list L.\n        if (L.head) l1.next = L.head, L.head = l1;\n        else l1.next = null, L.head = L.tail = l1;\n        l0 = L.tail, l0.next = l2;\n\n      } else {\n        l0 = l1;\n      }\n      l1 = l2;\n    }\n\n    L.tail = l0;\n    return circle;\n  }\n\n  function enclose1(a) {\n    return {\n      x: a.x,\n      y: a.y,\n      r: a.r\n    };\n  }\n\n  function enclose2(a, b) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n        l = Math.sqrt(x21 * x21 + y21 * y21);\n    return {\n      x: (x1 + x2 + x21 / l * r21) / 2,\n      y: (y1 + y2 + y21 / l * r21) / 2,\n      r: (l + r1 + r2) / 2\n    };\n  }\n\n  function enclose3(a, b, c) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x3 = c.x, y3 = c.y, r3 = c.r,\n        a2 = 2 * (x1 - x2),\n        b2 = 2 * (y1 - y2),\n        c2 = 2 * (r2 - r1),\n        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n        a3 = 2 * (x1 - x3),\n        b3 = 2 * (y1 - y3),\n        c3 = 2 * (r3 - r1),\n        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n        ab = a3 * b2 - a2 * b3,\n        xa = (b2 * d3 - b3 * d2) / ab - x1,\n        xb = (b3 * c2 - b2 * c3) / ab,\n        ya = (a3 * d2 - a2 * d3) / ab - y1,\n        yb = (a2 * c3 - a3 * c2) / ab,\n        A = xb * xb + yb * yb - 1,\n        B = 2 * (xa * xb + ya * yb + r1),\n        C = xa * xa + ya * ya - r1 * r1,\n        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n    return {\n      x: xa + xb * r + x1,\n      y: ya + yb * r + y1,\n      r: r\n    };\n  }\n\n  function place(a, b, c) {\n    var ax = a.x,\n        ay = a.y,\n        da = b.r + c.r,\n        db = a.r + c.r,\n        dx = b.x - ax,\n        dy = b.y - ay,\n        dc = dx * dx + dy * dy;\n    if (dc) {\n      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = ax + x * dx + y * dy;\n      c.y = ay + x * dy - y * dx;\n    } else {\n      c.x = ax + db;\n      c.y = ay;\n    }\n  }\n\n  function intersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return dr * dr > dx * dx + dy * dy;\n  }\n\n  function distance2(circle, x, y) {\n    var dx = circle.x - x,\n        dy = circle.y - y;\n    return dx * dx + dy * dy;\n  }\n\n  function Node$1(circle) {\n    this._ = circle;\n    this.next = null;\n    this.previous = null;\n  }\n\n  function packEnclose(circles) {\n    if (!(n = circles.length)) return 0;\n\n    var a, b, c, n;\n\n    // Place the first circle.\n    a = circles[0], a.x = 0, a.y = 0;\n    if (!(n > 1)) return a.r;\n\n    // Place the second circle.\n    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n    if (!(n > 2)) return a.r + b.r;\n\n    // Place the third circle.\n    place(b, a, c = circles[2]);\n\n    // Initialize the weighted centroid.\n    var aa = a.r * a.r,\n        ba = b.r * b.r,\n        ca = c.r * c.r,\n        oa = aa + ba + ca,\n        ox = aa * a.x + ba * b.x + ca * c.x,\n        oy = aa * a.y + ba * b.y + ca * c.y,\n        cx, cy, i, j, k, sj, sk;\n\n    // Initialize the front-chain using the first three circles a, b and c.\n    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n    a.next = c.previous = b;\n    b.next = a.previous = c;\n    c.next = b.previous = a;\n\n    // Attempt to place each remaining circle…\n    pack: for (i = 3; i < n; ++i) {\n      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n      // If there are only three elements in the front-chain…\n      if ((k = a.previous) === (j = b.next)) {\n        // If the new circle intersects the third circle,\n        // rotate the front chain to try the next position.\n        if (intersects(j._, c._)) {\n          a = b, b = j, --i;\n          continue pack;\n        }\n      }\n\n      // Find the closest intersecting circle on the front-chain, if any.\n      else {\n        sj = j._.r, sk = k._.r;\n        do {\n          if (sj <= sk) {\n            if (intersects(j._, c._)) {\n              b = j, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            j = j.next, sj += j._.r;\n          } else {\n            if (intersects(k._, c._)) {\n              a = k, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            k = k.previous, sk += k._.r;\n          }\n        } while (j !== k.next);\n      }\n\n      // Success! Insert the new circle c between a and b.\n      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n      // Update the weighted centroid.\n      oa += ca = c._.r * c._.r;\n      ox += ca * c._.x;\n      oy += ca * c._.y;\n\n      // Compute the new closest circle a to centroid.\n      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n      while ((c = c.next) !== b) {\n        if ((ca = distance2(c._, cx, cy)) < aa) {\n          a = c, aa = ca;\n        }\n      }\n      b = a.next;\n    }\n\n    // Compute the enclosing circle of the front chain.\n    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n    // Translate the circles to put the enclosing circle around the origin.\n    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n    return c.r;\n  }\n\n  function siblings(circles) {\n    packEnclose(circles);\n    return circles;\n  }\n\n  function optional(f) {\n    return f == null ? null : required(f);\n  }\n\n  function required(f) {\n    if (typeof f !== \"function\") throw new Error;\n    return f;\n  }\n\n  function constantZero() {\n    return 0;\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultRadius(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function index() {\n    var radius = null,\n        dx = 1,\n        dy = 1,\n        padding = constantZero;\n\n    function pack(root) {\n      root.x = dx / 2, root.y = dy / 2;\n      if (radius) {\n        root.eachBefore(radiusLeaf(radius))\n            .eachAfter(packChildren(padding, 0.5))\n            .eachBefore(translateChild(1));\n      } else {\n        root.eachBefore(radiusLeaf(defaultRadius))\n            .eachAfter(packChildren(constantZero, 1))\n            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n      }\n      return root;\n    }\n\n    pack.radius = function(x) {\n      return arguments.length ? (radius = optional(x), pack) : radius;\n    };\n\n    pack.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n    };\n\n    pack.padding = function(x) {\n      return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n    };\n\n    return pack;\n  }\n\n  function radiusLeaf(radius) {\n    return function(node) {\n      if (!node.children) {\n        node.r = Math.max(0, +radius(node) || 0);\n      }\n    };\n  }\n\n  function packChildren(padding, k) {\n    return function(node) {\n      if (children = node.children) {\n        var children,\n            i,\n            n = children.length,\n            r = padding(node) * k || 0,\n            e;\n\n        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n        e = packEnclose(children);\n        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n        node.r = e + r;\n      }\n    };\n  }\n\n  function translateChild(k) {\n    return function(node) {\n      var parent = node.parent;\n      node.r *= k;\n      if (parent) {\n        node.x = parent.x + k * node.x;\n        node.y = parent.y + k * node.y;\n      }\n    };\n  }\n\n  function roundNode(node) {\n    node.x0 = Math.round(node.x0);\n    node.y0 = Math.round(node.y0);\n    node.x1 = Math.round(node.x1);\n    node.y1 = Math.round(node.y1);\n  }\n\n  function treemapDice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (x1 - x0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.y0 = y0, node.y1 = y1;\n      node.x0 = x0, node.x1 = x0 += node.value * k;\n    }\n  }\n\n  function partition() {\n    var dx = 1,\n        dy = 1,\n        padding = 0,\n        round = false;\n\n    function partition(root) {\n      var n = root.height + 1;\n      root.x0 =\n      root.y0 = padding;\n      root.x1 = dx;\n      root.y1 = dy / n;\n      root.eachBefore(positionNode(dy, n));\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(dy, n) {\n      return function(node) {\n        if (node.children) {\n          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n        }\n        var x0 = node.x0,\n            y0 = node.y0,\n            x1 = node.x1 - padding,\n            y1 = node.y1 - padding;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        node.x0 = x0;\n        node.y0 = y0;\n        node.x1 = x1;\n        node.y1 = y1;\n      };\n    }\n\n    partition.round = function(x) {\n      return arguments.length ? (round = !!x, partition) : round;\n    };\n\n    partition.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n    };\n\n    partition.padding = function(x) {\n      return arguments.length ? (padding = +x, partition) : padding;\n    };\n\n    return partition;\n  }\n\n  var keyPrefix = \"$\";\n  var preroot = {depth: -1};\n  var ambiguous = {};\n  function defaultId(d) {\n    return d.id;\n  }\n\n  function defaultParentId(d) {\n    return d.parentId;\n  }\n\n  function stratify() {\n    var id = defaultId,\n        parentId = defaultParentId;\n\n    function stratify(data) {\n      var d,\n          i,\n          n = data.length,\n          root,\n          parent,\n          node,\n          nodes = new Array(n),\n          nodeId,\n          nodeKey,\n          nodeByKey = {};\n\n      for (i = 0; i < n; ++i) {\n        d = data[i], node = nodes[i] = new Node(d);\n        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n          nodeKey = keyPrefix + (node.id = nodeId);\n          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n        }\n      }\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], nodeId = parentId(data[i], i, data);\n        if (nodeId == null || !(nodeId += \"\")) {\n          if (root) throw new Error(\"multiple roots\");\n          root = node;\n        } else {\n          parent = nodeByKey[keyPrefix + nodeId];\n          if (!parent) throw new Error(\"missing: \" + nodeId);\n          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n          if (parent.children) parent.children.push(node);\n          else parent.children = [node];\n          node.parent = parent;\n        }\n      }\n\n      if (!root) throw new Error(\"no root\");\n      root.parent = preroot;\n      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n      root.parent = null;\n      if (n > 0) throw new Error(\"cycle\");\n\n      return root;\n    }\n\n    stratify.id = function(x) {\n      return arguments.length ? (id = required(x), stratify) : id;\n    };\n\n    stratify.parentId = function(x) {\n      return arguments.length ? (parentId = required(x), stratify) : parentId;\n    };\n\n    return stratify;\n  }\n\n  function defaultSeparation$1(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  // function radialSeparation(a, b) {\n  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n  // }\n\n  // This function is used to traverse the left contour of a subtree (or\n  // subforest). It returns the successor of v on this contour. This successor is\n  // either given by the leftmost child of v or by the thread of v. The function\n  // returns null if and only if v is on the highest level of its subtree.\n  function nextLeft(v) {\n    var children = v.children;\n    return children ? children[0] : v.t;\n  }\n\n  // This function works analogously to nextLeft.\n  function nextRight(v) {\n    var children = v.children;\n    return children ? children[children.length - 1] : v.t;\n  }\n\n  // Shifts the current subtree rooted at w+. This is done by increasing\n  // prelim(w+) and mod(w+) by shift.\n  function moveSubtree(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  // All other shifts, applied to the smaller subtrees between w- and w+, are\n  // performed by this function. To prepare the shifts, we have to adjust\n  // change(w+), shift(w+), and change(w-).\n  function executeShifts(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n  // returns the specified (default) ancestor.\n  function nextAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  function TreeNode(node, i) {\n    this._ = node;\n    this.parent = null;\n    this.children = null;\n    this.A = null; // default ancestor\n    this.a = this; // ancestor\n    this.z = 0; // prelim\n    this.m = 0; // mod\n    this.c = 0; // change\n    this.s = 0; // shift\n    this.t = null; // thread\n    this.i = i; // number\n  }\n\n  TreeNode.prototype = Object.create(Node.prototype);\n\n  function treeRoot(root) {\n    var tree = new TreeNode(root, 0),\n        node,\n        nodes = [tree],\n        child,\n        children,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if (children = node._.children) {\n        node.children = new Array(n = children.length);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n          child.parent = node;\n        }\n      }\n    }\n\n    (tree.parent = new TreeNode(null, 0)).children = [tree];\n    return tree;\n  }\n\n  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n  function tree() {\n    var separation = defaultSeparation$1,\n        dx = 1,\n        dy = 1,\n        nodeSize = null;\n\n    function tree(root) {\n      var t = treeRoot(root);\n\n      // Compute the layout using Buchheim et al.’s algorithm.\n      t.eachAfter(firstWalk), t.parent.m = -t.z;\n      t.eachBefore(secondWalk);\n\n      // If a fixed node size is specified, scale x and y.\n      if (nodeSize) root.eachBefore(sizeNode);\n\n      // If a fixed tree size is specified, scale x and y based on the extent.\n      // Compute the left-most, right-most, and depth-most nodes for extents.\n      else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n\n      return root;\n    }\n\n    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n    // applied recursively to the children of v, as well as the function\n    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n    // node v is placed to the midpoint of its outermost children.\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n      if (children) {\n        executeShifts(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    // Computes all real x-coordinates by summing up the modifiers recursively.\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    // The core of the algorithm. Here, a new subtree is combined with the\n    // previous subtrees. Threads are used to traverse the inside and outside\n    // contours of the left and right subtree up to the highest common level. The\n    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n    // superscript o means outside and i means inside, the subscript - means left\n    // subtree and + means right subtree. For summing up the modifiers along the\n    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n    // nodes of the inside contours conflict, we compute the left one of the\n    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n    // Finally, we add a new thread (if necessary).\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n          vom = nextLeft(vom);\n          vop = nextRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !nextRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !nextLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= dx;\n      node.y = node.depth * dy;\n    }\n\n    tree.separation = function(x) {\n      return arguments.length ? (separation = x, tree) : separation;\n    };\n\n    tree.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n    };\n\n    tree.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return tree;\n  }\n\n  function treemapSlice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (y1 - y0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.x0 = x0, node.x1 = x1;\n      node.y0 = y0, node.y1 = y0 += node.value * k;\n    }\n  }\n\n  var phi = (1 + Math.sqrt(5)) / 2;\n\n  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n    var rows = [],\n        nodes = parent.children,\n        row,\n        nodeValue,\n        i0 = 0,\n        i1,\n        n = nodes.length,\n        dx, dy,\n        value = parent.value,\n        sumValue,\n        minValue,\n        maxValue,\n        newRatio,\n        minRatio,\n        alpha,\n        beta;\n\n    while (i0 < n) {\n      dx = x1 - x0, dy = y1 - y0;\n      minValue = maxValue = sumValue = nodes[i0].value;\n      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n      beta = sumValue * sumValue * alpha;\n      minRatio = Math.max(maxValue / beta, beta / minValue);\n\n      // Keep adding nodes while the aspect ratio maintains or improves.\n      for (i1 = i0 + 1; i1 < n; ++i1) {\n        sumValue += nodeValue = nodes[i1].value;\n        if (nodeValue < minValue) minValue = nodeValue;\n        if (nodeValue > maxValue) maxValue = nodeValue;\n        beta = sumValue * sumValue * alpha;\n        newRatio = Math.max(maxValue / beta, beta / minValue);\n        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n        minRatio = newRatio;\n      }\n\n      // Position and record the row orientation.\n      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n      value -= sumValue, i0 = i1;\n    }\n\n    return rows;\n  }\n\n  var squarify = (function custom(ratio) {\n\n    function squarify(parent, x0, y0, x1, y1) {\n      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n    }\n\n    squarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return squarify;\n  })(phi);\n\n  function index$1() {\n    var tile = squarify,\n        round = false,\n        dx = 1,\n        dy = 1,\n        paddingStack = [0],\n        paddingInner = constantZero,\n        paddingTop = constantZero,\n        paddingRight = constantZero,\n        paddingBottom = constantZero,\n        paddingLeft = constantZero;\n\n    function treemap(root) {\n      root.x0 =\n      root.y0 = 0;\n      root.x1 = dx;\n      root.y1 = dy;\n      root.eachBefore(positionNode);\n      paddingStack = [0];\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(node) {\n      var p = paddingStack[node.depth],\n          x0 = node.x0 + p,\n          y0 = node.y0 + p,\n          x1 = node.x1 - p,\n          y1 = node.y1 - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n      if (node.children) {\n        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n        x0 += paddingLeft(node) - p;\n        y0 += paddingTop(node) - p;\n        x1 -= paddingRight(node) - p;\n        y1 -= paddingBottom(node) - p;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        tile(node, x0, y0, x1, y1);\n      }\n    }\n\n    treemap.round = function(x) {\n      return arguments.length ? (round = !!x, treemap) : round;\n    };\n\n    treemap.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n    };\n\n    treemap.tile = function(x) {\n      return arguments.length ? (tile = required(x), treemap) : tile;\n    };\n\n    treemap.padding = function(x) {\n      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n    };\n\n    treemap.paddingInner = function(x) {\n      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n    };\n\n    treemap.paddingOuter = function(x) {\n      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n    };\n\n    treemap.paddingTop = function(x) {\n      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n    };\n\n    treemap.paddingRight = function(x) {\n      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n    };\n\n    treemap.paddingBottom = function(x) {\n      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n    };\n\n    treemap.paddingLeft = function(x) {\n      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n    };\n\n    return treemap;\n  }\n\n  function binary(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        i, n = nodes.length,\n        sum, sums = new Array(n + 1);\n\n    for (sums[0] = sum = i = 0; i < n; ++i) {\n      sums[i + 1] = sum += nodes[i].value;\n    }\n\n    partition(0, n, parent.value, x0, y0, x1, y1);\n\n    function partition(i, j, value, x0, y0, x1, y1) {\n      if (i >= j - 1) {\n        var node = nodes[i];\n        node.x0 = x0, node.y0 = y0;\n        node.x1 = x1, node.y1 = y1;\n        return;\n      }\n\n      var valueOffset = sums[i],\n          valueTarget = (value / 2) + valueOffset,\n          k = i + 1,\n          hi = j - 1;\n\n      while (k < hi) {\n        var mid = k + hi >>> 1;\n        if (sums[mid] < valueTarget) k = mid + 1;\n        else hi = mid;\n      }\n\n      var valueLeft = sums[k] - valueOffset,\n          valueRight = value - valueLeft;\n\n      if ((y1 - y0) > (x1 - x0)) {\n        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, x1, yk);\n        partition(k, j, valueRight, x0, yk, x1, y1);\n      } else {\n        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, xk, y1);\n        partition(k, j, valueRight, xk, y0, x1, y1);\n      }\n    }\n  }\n\n  function sliceDice(parent, x0, y0, x1, y1) {\n    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n  }\n\n  var resquarify = (function custom(ratio) {\n\n    function resquarify(parent, x0, y0, x1, y1) {\n      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n        var rows,\n            row,\n            nodes,\n            i,\n            j = -1,\n            n,\n            m = rows.length,\n            value = parent.value;\n\n        while (++j < m) {\n          row = rows[j], nodes = row.children;\n          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n          value -= row.value;\n        }\n      } else {\n        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n        rows.ratio = ratio;\n      }\n    }\n\n    resquarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return resquarify;\n  })(phi);\n\n  exports.cluster = cluster;\n  exports.hierarchy = hierarchy;\n  exports.pack = index;\n  exports.packSiblings = siblings;\n  exports.packEnclose = enclose;\n  exports.partition = partition;\n  exports.stratify = stratify;\n  exports.tree = tree;\n  exports.treemap = index$1;\n  exports.treemapBinary = binary;\n  exports.treemapDice = treemapDice;\n  exports.treemapSlice = treemapSlice;\n  exports.treemapSliceDice = sliceDice;\n  exports.treemapSquarify = squarify;\n  exports.treemapResquarify = resquarify;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-interpolate/ Version 1.1.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Color) { 'use strict';\n\n  function basis(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$1(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n  }\n\n  var rgb$1 = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = d3Color.rgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$1);\n  var rgbBasisClosed = rgbSpline(basisClosed);\n\n  function array(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function number(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = value(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function string(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: number(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function value(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant(b)\n        : (t === \"number\" ? number\n        : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n        : b instanceof d3Color.color ? rgb$1\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array\n        : isNaN(b) ? object\n        : number)(a, b);\n  }\n\n  function round(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$2 = hsl$1(hue);\n  var hslLong = hsl$1(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl$1(hue) {\n    return function(start, end) {\n      var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$2 = hcl$1(hue);\n  var hclLong = hcl$1(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix(start, end) {\n        var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix.gamma = cubehelixGamma;\n\n      return cubehelix;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var cubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  exports.interpolate = value;\n  exports.interpolateArray = array;\n  exports.interpolateBasis = basis$1;\n  exports.interpolateBasisClosed = basisClosed;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = number;\n  exports.interpolateObject = object;\n  exports.interpolateRound = round;\n  exports.interpolateString = string;\n  exports.interpolateTransformCss = interpolateTransformCss;\n  exports.interpolateTransformSvg = interpolateTransformSvg;\n  exports.interpolateZoom = zoom;\n  exports.interpolateRgb = rgb$1;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$2;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$2;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = cubehelixLong;\n  exports.quantize = quantize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-path/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau + tau;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-shape/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$ = x,\n      y$$ = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant(+_), line) : x$$;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant(+_), line) : y$$;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction radialLine$1() {\n  return radialLine(line().curve(curveRadialLinear));\n}\n\nfunction radialArea() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice = Array.prototype.slice;\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","// https://d3js.org/d3-time-format/ Version 2.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3));\n}(this, function (exports,d3Time) { 'use strict';\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale;\n  defaultLocale({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.timeFormat = locale.format;\n    exports.timeParse = locale.parse;\n    exports.utcFormat = locale.utcFormat;\n    exports.utcParse = locale.utcParse;\n    return locale;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  exports.timeFormatDefaultLocale = defaultLocale;\n  exports.timeFormatLocale = formatLocale;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-time/ Version 1.0.4. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-timer/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","// https://d3js.org/d3-transition/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state === STARTED;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement)\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.16.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://github.com/es-shims.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 500,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        defineProperty = Object.defineProperty,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create'),\n        nativeDefineProperty = getNative(Object, 'defineProperty');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = prototype;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      // Safari 9 makes `arguments.length` enumerable in strict mode.\n      var result = (isArray(value) || isArguments(value))\n        ? baseTimes(value.length, String)\n        : [];\n\n      var length = result.length,\n          skipIndexes = !!length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), n);\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = baseKeysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          baseAssignValue(result, key, value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      return shuffleSelf(values(collection), n);\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !nativeDefineProperty ? identity : function(func, string) {\n      return nativeDefineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : baseClamp(size, 0, length);\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return value != null && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' ||\n            typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !nativeKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8-9 which returns 'object' for typed array and other constructors.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || objectToString.call(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(props, toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(props, toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import * as d3 from './d3'\n\nimport {Utils} from './utils'\nimport * as model from './model/index'\n\nimport {TreeDesigner, TreeDesignerConfig} from './tree-designer/tree-designer'\nimport {DataModel} from './data-model'\nimport {Templates} from './templates'\nimport {Sidebar} from './sidebar'\nimport {Toolbar} from './toolbar'\n\nexport class AppConfig {\n    width = undefined;\n    height = undefined;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class App {\n    config;\n    container;\n    dataModel; //Data model manager\n    treeDesigner;\n    toolbar;\n    sidebar;\n\n    constructor(containerId, config) {\n        this.setConfig(config);\n        this.initContainer(containerId);\n        this.initDataModel();\n        this.initSidebar();\n        this.initTreeDesigner();\n        this.initToolbar();\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new AppConfig();\n        } else {\n            this.config = config;\n        }\n        return this;\n    }\n\n    initContainer(containerId) {\n        this.container = d3.select('#' + containerId);\n        this.container.html(Templates.main);\n    }\n\n    initDataModel() {\n        this.dataModel = new DataModel();\n    }\n\n    initSidebar(){\n        this.sidebar = new Sidebar(this.container.select('#sidebar'), this);\n\n    }\n\n    initToolbar(){\n        this.toolbar = new Toolbar(this.container.select('#toolbar'), this);\n\n    }\n\n    initTreeDesigner() {\n        var self=this;\n        var config = {\n            onNodeSelected: function(node){\n                self.onObjectSelected(node);\n            },\n            onEdgeSelected: function(edge){\n                self.onObjectSelected(edge);\n            },\n            onSelectionCleared: function(){\n                self.onSelectionCleared();\n            }\n        };\n        this.treeDesigner = new TreeDesigner(this.container.select('#tree-designer-container'), this.dataModel,config);\n    }\n    onObjectSelected(object){\n        var self = this;\n        if(this.selectedObject===object){\n            return;\n        }\n        this.selectedObject = object;\n        setTimeout(function(){\n            self.sidebar.updateObjectPropertiesView(self.selectedObject);\n        },10)\n\n    }\n\n    onSelectionCleared(){\n        this.selectedObject=null;\n        this.sidebar.hideObjectProperties();\n        // console.log();\n    }\n\n    updateView(){\n        this.treeDesigner.redraw(true);\n        this.sidebar.updateObjectPropertiesView(this.selectedObject);\n    }\n\n    undo(){\n        var self = this;\n        self.dataModel.undo();\n        if(self.selectedObject){\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n\n        self.updateView();\n    }\n\n    redo(){\n        var self = this;\n        self.dataModel.redo();\n        if(self.selectedObject){\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n        self.updateView();\n    }\n\n}\n","import * as d3 from './d3'\n\n/*based on:\n * github.com/patorjk/d3-context-menu */\n\nexport class ContextMenu {\n    openCallback;\n    closeCallback;\n\n    constructor(menu, opts) {\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1])\n            .enter()\n            .append('div')\n            .attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu')\n                .on('contextmenu', function (d) {\n                    d3.select('.d3-context-menu').style('display', 'none');\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                })\n                .append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n                .append('li')\n                .attr('class', function (d) {\n                    var ret = '';\n                    if (d.divider) {\n                        ret += ' is-divider';\n                    }\n                    if (d.disabled) {\n                        ret += ' is-disabled';\n                    }\n                    if (!d.action) {\n                        ret += ' is-header';\n                    }\n                    return ret;\n                })\n                .html(function (d) {\n                    if (d.divider) {\n                        return '<hr>';\n                    }\n                    if (!d.title) {\n                        console.error('No title attribute set. Check the spelling of your options.');\n                    }\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\n                })\n                .on('click', function (d, i) {\n                    if (d.disabled) return; // do nothing if disabled\n                    if (!d.action) return; // headers have no \"action\"\n                    d.action(elm, data, index);\n                    d3.select('.d3-context-menu').style('display', 'none');\n\n                    if (self.closeCallback) {\n                        self.closeCallback();\n                    }\n                });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu')\n                .style('left', (d3.event.pageX - 2) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n                .style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    };\n\n    static hide() {\n        d3.select('.d3-context-menu').style('display', 'none');\n    }\n\n}\n","import {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return Utils.insertSelector(this, selector, before);\n            };\n\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return Utils.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return Utils.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return Utils.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n}\n","export * from 'd3-dispatch';\r\nexport * from 'd3-scale';\r\nexport * from 'd3-selection';\r\nexport * from 'd3-shape'\r\nexport * from 'd3-drag';\r\nexport * from 'd3-brush'\r\nexport * from 'd3-array'\r\nexport * from 'd3-hierarchy'","import {Utils} from './utils'\nimport * as model from './model/index'\nimport *  as _ from 'lodash'\n\n/*\n* Data model manager\n* */\nexport class DataModel {\n\n    nodes = [];\n    edges = [];\n\n    // undo / redo\n    maxStackSize = 15;\n    undoStack = [];\n    redoStack =[];\n    undoRedoStateChangedCallback = null;\n\n\n    constructor() {\n        var n1 = this.addNode(new model.DecisionNode(new model.Point(100,150))).setName('dilemma');\n        var n2 = this.addNode(new model.ChanceNode(new model.Point(250,100)), n1).setName('play').setPayoff(-1).childNode;\n        var n3 = this.addNode(new model.TerminalNode(new model.Point(250,200)), n1).setName('leave game').setPayoff(0).childNode;\n        var n4 = this.addNode(new model.DecisionNode(new model.Point(400,50)), n2).setName('win').setPayoff(20).setProbability(0.1).childNode;\n        var n5 = this.addNode(new model.TerminalNode(new model.Point(400,150)), n2).setName('lose').setPayoff(0).setProbability(0.9).childNode;\n    }\n\n    /*returns node or edge from parent to this node*/\n    addNode(node, parent){\n        var self = this;\n        self.nodes.push(node);\n        if(parent){\n            return self._addChild(parent, node);\n        }\n        return node;\n    }\n\n    _addChild(parent, child) {\n        var self = this;\n        var edge = new model.Edge(parent, child);\n        self.edges.push(edge);\n        parent.childEdges.push(edge);\n        child.parent = parent;\n        return edge;\n    }\n\n    /*removes given node and its subtree*/\n    removeNode(node, $l = 0) {\n\n        var self = this;\n        node.childEdges.forEach(e=>self.removeNode(e.childNode, $l + 1));\n\n        self._removeNode(node);\n        var parent = node.parent;\n        if (parent) {\n            var parentEdge = parent.childEdges.find((e, i)=> e.childNode === node);\n            if ($l == 0) {\n                self.removeEdge(parentEdge);\n            } else {\n                self._removeEdge(parentEdge);\n            }\n        }\n    }\n\n    /*removes given nodes and their subtrees*/\n    removeNodes(nodes){\n\n        var roots = this.findSubtreeRoots(nodes);\n        roots.forEach(n=>this.removeNode(n,0), this);\n    }\n\n    getRoots(){\n        return this.nodes.filter(n=>!n.parent);\n    }\n\n    findSubtreeRoots(nodes) {\n        return nodes.filter(n=>!n.parent || nodes.indexOf(n.parent)===-1);\n    }\n\n    /*creates detached clone of given node*/\n    cloneSubtree(nodeToCopy){\n        var self = this;\n        var clone = this.cloneNode(nodeToCopy);\n\n        nodeToCopy.childEdges.forEach(e=>{\n            var childClone = self.cloneSubtree(e.childNode);\n            childClone.parent = clone;\n            var edge = new model.Edge(clone, childClone, e.name, e.payoff, e.probability);\n            clone.childEdges.push(edge);\n        });\n        return clone;\n    }\n\n    /*attaches detached subtree to given parent*/\n    attachSubtree(nodeToAttach, parent){\n        var self = this;\n        self.addNode(nodeToAttach, parent);\n\n        var childEdges = self.getAllDescendantEdges(nodeToAttach);\n        childEdges.forEach(e=>{\n            self.edges.push(e);\n            self.nodes.push(e.childNode);\n        });\n\n        return nodeToAttach;\n    }\n\n    cloneNodes(nodes){\n        var roots = []\n        //TODO\n    }\n\n    /*shallow clone without parent and children*/\n    cloneNode(node){\n        var clone = _.clone(node)\n        clone.$id = Utils.guid();\n        clone.location = _.clone(node.location);\n        clone.computed = _.clone(node.computed);\n        clone.parent=null;\n        clone.childEdges = [];\n        return clone;\n    }\n\n    findNodeById(id){\n        return this.nodes.find(n=>n.$id == id);\n    }\n\n    findEdgeById(id){\n        return this.edges.find(e=>e.$id == id);\n    }\n\n    findById(id){\n        var node = this.findNodeById(id);\n        if(node) {\n            return node;\n        }\n        return this.findEdgeById(id);\n    }\n\n    _removeNode(node){// simply removes node from node list\n        var index  = this.nodes.indexOf(node);\n        if (index > -1) {\n            this.nodes.splice(index, 1);\n        }\n    }\n\n    removeEdge(edge){\n        var index  = edge.parentNode.childEdges.indexOf(edge);\n        if (index > -1) {\n            edge.parentNode.childEdges.splice(index, 1);\n        }\n        this._removeEdge(edge);\n    }\n\n    _removeEdge(edge){ //removes edge from edge list without removing connected nodes\n        var index  = this.edges.indexOf(edge);\n        if (index > -1) {\n            this.edges.splice(index, 1);\n        }\n    }\n\n    _removeNodes(nodesToRemove) {\n        this.nodes = this.nodes.filter(n=>nodesToRemove.indexOf(n)===-1);\n    }\n    _removeEdges(edgesToRemove) {\n        this.edges = this.edges.filter(e=>edgesToRemove.indexOf(e)===-1);\n    }\n\n    getAllDescendantEdges(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=>{\n            result.push(e);\n            if(e.childNode){\n                result.push(...self.getAllDescendantEdges(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    getAllDescendantNodes(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=>{\n            if(e.childNode){\n                result.push(e.childNode);\n                result.push(...self.getAllDescendantNodes(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    isUndoAvailable(){\n        return !!this.undoStack.length\n    }\n\n    isRedoAvailable(){\n        return !!this.redoStack.length\n    }\n\n\n    saveState(revertConf){\n        this.redoStack.length = 0;\n\n        this._pushToStack(this.undoStack,{\n            revertConf: revertConf,\n            nodes: _.cloneDeep(this.nodes),\n            edges: _.cloneDeep(this.edges)\n        });\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    undo(){\n        var self = this;\n        var newState = this.undoStack.pop();\n        if(!newState){\n            return;\n        }\n\n        this._pushToStack(this.redoStack, {\n            nodes: self.nodes,\n            edges: self.edges\n        });\n\n        this._setNewState(newState);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    redo(){\n        var self = this;\n        var newState = this.redoStack.pop();\n        if(!newState){\n            return;\n        }\n\n        this._pushToStack(this.undoStack, {\n            nodes: self.nodes,\n            edges: self.edges\n        });\n\n        this._setNewState(newState);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n\n    _setNewState(newState) {\n        var nodeById = Utils.getObjectByIdMap(newState.nodes);\n        var edgeById = Utils.getObjectByIdMap(newState.edges);\n        this.nodes = newState.nodes;\n        this.edges = newState.edges;\n        this.nodes.forEach(n=> {\n            for(var i=0; i<n.childEdges.length; i++){\n                var edge = edgeById[n.childEdges[i].$id];\n                n.childEdges[i] = edge;\n                edge.parentNode = n;\n                edge.childNode = nodeById[edge.childNode.$id];\n            }\n\n        });\n\n        if(newState.revertConf && newState.revertConf.onRevert){\n            newState.revertConf.onRevert(newState.revertConf.data);\n        }\n    }\n\n    _pushToStack(stack, obj){\n        if(stack.length>=this.maxStackSize){\n            stack.shift();\n        }\n        stack.push(obj);\n    }\n\n    _fireUndoRedoCallback() {\n        if (this.undoRedoStateChangedCallback) {\n            this.undoRedoStateChangedCallback();\n        }\n    }\n}\n","import {dataURLtoBlob} from 'blueimp-canvas-to-blob'\nimport {saveAs} from 'file-saver'\n\nexport class Exporter {\n    static saveAs = saveAs;\n    static dataURLtoBlob = dataURLtoBlob;\n// Below are the function that handle actual exporting:\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n    static getSVGString(svgNode) {\n        svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        var cssStyleText = getCSSStyles(svgNode);\n        appendCSS(cssStyleText, svgNode)\n\n        var serializer = new XMLSerializer();\n        var svgString = serializer.serializeToString(svgNode);\n        svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\n        svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\n\n        return svgString;\n\n        function getCSSStyles(parentElement) {\n            var selectorTextArr = getSelectors(parentElement, [], []);\n\n\n            // Extract CSS Rules\n            var extractedCSSText = \"\";\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var cssRules = document.styleSheets[i].cssRules;\n                for (var r = 0; r < cssRules.length; r++) {\n                    if (contains(cssRules[r].selectorText, selectorTextArr))\n                        extractedCSSText += cssRules[r].cssText;\n                }\n            }\n            console.log(selectorTextArr);\n            return extractedCSSText;\n\n            function contains(str, arr) {\n                return arr.indexOf(str) !== -1;\n            }\n\n            function getSelectors(element, parentSelectors, selectorTextArr) {\n                // Add Parent element Id and Classes to the list\n                if (!element.tagName) {\n                    return selectorTextArr;\n                }\n\n                if (!contains(element.tagName, selectorTextArr))\n                    selectorTextArr.push(element.tagName);\n\n                if (element.id && !contains('#' + element.id, selectorTextArr))\n                    selectorTextArr.push('#' + element.id);\n                if (element.id && !contains(element.tagName + '#' + element.id, selectorTextArr))\n                    selectorTextArr.push(element.tagName + '#' + element.id);\n\n\n                var allClasses = '';\n                for (var c = 0; c < element.classList.length; c++) {\n                    var className = element.classList[c];\n                    allClasses += '.' + className;\n                    if (!contains('.' + className, selectorTextArr))\n                        selectorTextArr.push('.' + className);\n                    if (!contains(element.tagName + '.' + className, selectorTextArr))\n                        selectorTextArr.push(element.tagName + '.' + className);\n                }\n                if (allClasses) {\n                    if (!contains(allClasses, selectorTextArr))\n                        selectorTextArr.push(allClasses);\n                    if (!contains(element.tagName + allClasses, selectorTextArr))\n                        selectorTextArr.push(element.tagName + allClasses);\n                }\n\n                // Add Children element Ids and Classes to the list\n                var nodes = element.childNodes;\n\n                for (var i = 0; i < nodes.length; i++) {\n                    var node = nodes[i];\n                    getSelectors(node, [], selectorTextArr)\n                }\n\n                return selectorTextArr;\n            }\n        }\n\n        function appendCSS(cssText, element) {\n            var styleElement = document.createElement(\"style\");\n            styleElement.setAttribute(\"type\", \"text/css\");\n            styleElement.innerHTML = cssText;\n            var refNode = element.hasChildNodes() ? element.children[0] : null;\n            element.insertBefore(styleElement, refNode);\n        }\n    }\n\n\n    static svgString2Image(svgString, width, height, format, callback) {\n        var format = format ? format : 'png';\n\n        var imgsrc = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString))); // Convert SVG string to dataurl\n\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n\n        var image = new Image;\n        image.onload = function () {\n            context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n\n            canvas.toBlob(function (blob) {\n                var filesize = Math.round(blob.length / 1024) + ' KB';\n                if (callback) callback(blob, filesize);\n            });\n\n\n        };\n\n        image.src = imgsrc;\n    }\n\n}\n","import {D3Extensions} from './d3-extensions'\r\nD3Extensions.extend();\r\n\r\nexport {App} from './app'\r\n\r\n\r\n\r\n\r\n\r\n","import {Utils} from '../utils'\r\n\r\nexport class Edge {\r\n    parentNode;\r\n    childNode;\r\n\r\n    name='';\r\n    probability=0;\r\n    payoff=0;\r\n\r\n    $id = Utils.guid();\r\n\r\n    constructor(parentNode, childNode, name,payoff, probability, ){\r\n        this.parentNode = parentNode;\r\n        this.childNode = childNode;\r\n\r\n        if(name!==undefined){\r\n            this.name = name;\r\n        }\r\n        if(probability!==undefined){\r\n            this.probability=probability;\r\n        }\r\n        if(payoff!==undefined){\r\n            this.payoff=payoff\r\n        }\r\n\r\n    }\r\n\r\n    setName(name){\r\n        this.name = name;\r\n        return this;\r\n    }\r\n\r\n    setProbability(probability){\r\n        this.probability = probability;\r\n        return this;\r\n    }\r\n\r\n    setPayoff(payoff){\r\n        this.payoff = payoff;\r\n        return this;\r\n    }\r\n}","export * from './node/node'\r\nexport * from './node/decision-node'\r\nexport * from './node/chance-node'\r\nexport * from './node/terminal-node'\r\nexport * from './edge'\r\nexport * from './point'","import {Node} from './node'\r\nimport * as d3 from '../../d3'\r\n\r\nexport class ChanceNode extends Node{\r\n\r\n    constructor(location){\r\n        super('chance', d3.symbolCircle, location);\r\n    }\r\n}","import {Node} from './node'\r\nimport * as d3 from '../../d3'\r\n\r\nexport class DecisionNode extends Node{\r\n\r\n    constructor(location){\r\n        super('decision', d3.symbolSquare, location);\r\n    }\r\n}","import {Utils} from '../../utils'\r\nimport {Point} from '../point'\r\n\r\nexport class Node {\r\n    \r\n    type;\r\n    childEdges=[];\r\n    name='';\r\n\r\n    computed={\r\n        payoff: null\r\n    };\r\n    location; //Point\r\n\r\n    $id = Utils.guid(); //internal id\r\n    $symbol;\r\n    \r\n    constructor(type, symbol, location){\r\n        this.location=location;\r\n        if(!location){\r\n            this.location = new Point(0,0);\r\n        }\r\n        this.type=type;\r\n        this.$symbol=symbol;\r\n    }\r\n\r\n    setName(name){\r\n        this.name = name;\r\n        return this;\r\n    }\r\n\r\n    moveTo(x,y, withChildren){ //move to new location\r\n        if(withChildren){\r\n            var dx = x-this.location.x;\r\n            var dy = y-this.location.y;\r\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\r\n        }\r\n\r\n        this.location.moveTo(x,y);\r\n        return this;\r\n    }\r\n\r\n    move(dx, dy, withChildren){ //move by vector\r\n        if(withChildren){\r\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\r\n        }\r\n        this.location.move(dx, dy);\r\n        return this;\r\n    }\r\n}","import {Node} from './node'\r\nimport * as d3 from '../../d3'\r\n\r\nexport class TerminalNode extends Node{\r\n\r\n    constructor(location){\r\n        super('terminal', d3.symbolTriangle, location);\r\n    }\r\n}","export class Point {\r\n    x;\r\n    y;\r\n    constructor(x,y){\r\n        if(x instanceof Point){\r\n            y=x.y;\r\n            x=x.x\r\n        }else if(Array.isArray(x)){\r\n            y=x[1];\r\n            x=x[0];\r\n        }\r\n        this.x=x;\r\n        this.y=y;\r\n    }\r\n\r\n    moveTo(x,y){\r\n        if(Array.isArray(x)){\r\n            y=x[1];\r\n            x=x[0];\r\n        }\r\n        this.x=x;\r\n        this.y=y;\r\n        return this;\r\n    }\r\n    \r\n    move(dx,dy){ //move by vector\r\n        if(Array.isArray(dx)){\r\n            dy=dx[1];\r\n            dx=dx[0];\r\n        }\r\n        this.x+=dx;\r\n        this.y+=dy;\r\n        return this;\r\n    }\r\n\r\n}","import * as d3 from './d3'\n\nimport {Utils} from './utils'\nimport * as model from './model/index'\n\nexport class Sidebar{\n\n    app;\n    container;\n\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n    }\n\n    displayObjectProperties(object){\n        this.updateObjectPropertiesView(object);\n    }\n    hideObjectProperties(){\n        this.container.select('#object-properties').classed('visible', false);\n    }\n\n    updateObjectPropertiesView(object){\n        if(!object){\n            this.hideObjectProperties();\n            return;\n        }\n\n        var objectProps = this.container.select('#object-properties').classed('visible', true);\n        var headerText = Sidebar.getHeaderTextForObject(object);\n        objectProps.select('.header').html(headerText);\n\n        var fieldList = Sidebar.getFieldListForObject(object);\n        this.updateObjectFields(object, fieldList);\n    }\n\n    static getHeaderTextForObject(object) {\n        if(object instanceof model.Node){\n            return Utils.capitalizeFirstLetter(object.type)+' Node';\n        }\n        if(object instanceof model.Edge){\n            return 'Edge';\n        }\n        return '';\n    }\n\n    static getFieldListForObject(object) {\n        if(object instanceof model.Node){\n            return [{\n                name: 'name',\n                label: 'Label',\n                type: 'text'\n            }]\n        }\n        if(object instanceof model.Edge){\n            var list = [\n                {\n                    name: 'name',\n                    label: 'Label',\n                    type: 'text'\n                },\n                {\n                    name: 'payoff',\n                    label: 'Payoff',\n                    type: 'number'\n                }\n            ];\n            if(object.parentNode instanceof model.ChanceNode){\n                list.push( {\n                    name: 'probability',\n                    label: 'Probability',\n                    type: 'number'\n                })\n            }\n            return list;\n\n        }\n\n        return [];\n    }\n\n\n\n    updateObjectFields(object, fieldList) {\n        var self = this;\n        var objectProps = this.container.select('#object-properties');\n        var content = objectProps.select('.content');\n        var fields = content.selectAll('div.object-field').data(fieldList);\n        var temp={};\n        var fieldsEnter = fields.enter().appendSelector('div.object-field');\n        fieldsEnter.append('label');\n        fieldsEnter.append('input');\n        var fieldsMerge = fieldsEnter.merge(fields);\n        fieldsMerge.select('label')\n            .attr('for', d=>'object-field-'+d.name)\n            .html(d=>d.label);\n        fieldsMerge.select('input')\n            .attr('type', d=>d.type)\n            .attr('name', d=>d.name)\n            .attr('id', d=>'object-field-'+d.name)\n            .on('change keyup', function(d, i){\n                if(d3.event.type=='change' && temp[i].pristineVal!=this.value){\n                    object[d.name] = temp[i].pristineVal;\n                    self.app.dataModel.saveState();\n                }\n                object[d.name] = this.value;\n                self.app.treeDesigner.redraw();\n\n            })\n            .each(function(d, i){\n                this.value = object[d.name];\n                temp[i]={};\n                temp[i].pristineVal = this.value;\n            });\n\n        fields.exit().remove();\n    }\n}\n","\n//TODO maybe use some templating engine instead\nexport class Templates{\n\n    static toolbar =\n        '<div id=\"toolbar\">' +\n            '<button id=\"saveButton\" class=\"mdl-button mdl-js-button mdl-button--raised\">Export to PNG</button>'+\n            '<button id=\"saveButtonSvg\">Export to SVG</button>'+\n            '<button id=\"treeAutoLayoutButton\">Tree auto layout</button>'+\n            '<button id=\"clusterAutoLayoutButton\">Cluster auto layout</button>'+\n            '<button id=\"undoButton\" disabled=\"disabled\" title=\"undo\"><i class=\"material-icons\">undo</i></button>'+\n            '<button id=\"redoButton\" disabled=\"disabled\" title=\"redo\"><i class=\"material-icons\">redo</i></button>'+\n        '</div>';\n\n\n\n    static nodeProperties =\n        '<div id=\"object-properties\">' +\n            '<div class=\"header\"></div> '+\n            '<div class=\"content\"></div> '+\n        '</div>';\n    static sidebar =\n        '<div id=\"sidebar\">' +\n        Templates.nodeProperties+\n        '</div>';\n\n    static main =\n        '<div id=\"silver-decisions\">'+\n\n        Templates.toolbar+\n        '<div id=\"main-region\">' +\n        Templates.sidebar+\n        '<div id=\"tree-designer-container\"></div>'+\n        '</div>'+\n\n        '</div>';\n}\n\n\n\n\n","import * as d3 from './d3'\n\nimport {Utils} from './utils'\nimport * as model from './model/index'\nimport {Exporter} from './exporter'\n\nexport class Toolbar{\n\n    app;\n    container;\n\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initAutoLayoutButtons();\n        this.initUndoRedoButtons();\n    }\n\n    initExportToPngButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButton').on('click', function () {\n            var svgString = Exporter.getSVGString(svg.node());\n            Exporter.svgString2Image(svgString, 2 * 800, 2 * 800, 'png', save); // passes Blob and filesize String to the callback\n\n            function save(dataBlob, filesize) {\n                Exporter.saveAs(dataBlob, 'export.png');\n            }\n        });\n    }\n\n    initExportSvgButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonSvg').on('click', function () {\n            var svgString = Exporter.getSVGString(svg.node());\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\n            Exporter.saveAs(blob, 'export.svg');\n        });\n    }\n\n    initAutoLayoutButtons() {\n        var self = this;\n        this.container.select('#treeAutoLayoutButton').on('click', function () {\n            self.app.treeDesigner.autoLayout('tree');\n        });\n        this.container.select('#clusterAutoLayoutButton').on('click', function () {\n            self.app.treeDesigner.autoLayout('cluster');\n        });\n    }\n\n    initUndoRedoButtons() {\n        var self = this;\n        self.app.dataModel.undoRedoStateChangedCallback = ()=>this.onUndoRedoChanged();\n        this.undoButton = this.container.select('#undoButton').on('click', function () {\n            self.app.undo();\n        });\n        this.redoButton = this.container.select('#redoButton').on('click', function () {\n            self.app.redo();\n        });\n    }\n\n    onUndoRedoChanged() {\n        console.log('onUndoRedoChanged');\n        this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n        this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n    }\n}\n","import {Utils} from '../utils'\nimport * as model from '../model/index'\nimport * as d3 from '../d3'\n\n/*Tree layout manager*/\nexport class Layout{\n\n    treeDesigner;\n    data;\n    config;\n\n    currentAutoLayout=null;\n\n    nodeTypeOrder = {\n        'decision' : 0,\n        'chance': 0,\n        'terminal': 1\n    };\n\n    constructor(treeDesigner, data, config){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n        this.config = config;\n        this.minMarginBetweenNodes = this.config.nodeSize + 30;\n\n    }\n\n    update(){\n        if(this.currentAutoLayout){\n            this.autoLayout(this.currentAutoLayout, true);\n        }\n    }\n    disableAutoLayout(){\n        this.currentAutoLayout = false;\n    }\n\n\n    drawNodeSymbol(path){\n        var self = this;\n        this.nodeSymbol = d3.symbol().type(d=> d.$symbol)\n            .size(d=>64);\n        var nodeSize = this.config.nodeSize;\n        path.attr('transform', 'rotate(-90)')\n            .attr('d', self.nodeSymbol)\n            .each(function (d) {\n                var path = d3.select(this);\n                var box = path.node().getBBox();\n                var error = Math.min(nodeSize / box.width, nodeSize / box.height);\n                path.attr(\"d\", self.nodeSymbol.size(error * error * 64));\n            });\n    }\n\n    nodeLabelPosition(selection) {\n        return selection\n            .attr('x', 0)\n            .attr('y', -this.config.nodeSize / 2 - 7)\n    }\n\n    nodePayoffPosition(selection) {\n        return selection\n            .attr('x', 0)\n            .attr('y', this.config.nodeSize / 2 + 7)\n            .attr('text-anchor', 'middle')\n    }\n\n    edgeLineD(edge){\n        var line = d3.line()\n            .x(d=> d[0])\n            .y(d=> d[1])\n        // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n        var parentNode = edge.parentNode;\n        var childNode = edge.childNode;\n\n        var dX = childNode.location.x - parentNode.location.x;\n        var dY = childNode.location.y - parentNode.location.y;\n\n        var sign = dX>=0 ? 1 : -1;\n\n        var slantStartXOffset = Math.min(dX/2, 30);\n        var slantWidth = Math.min(20, Math.max(dX/2 - slantStartXOffset, 0));\n\n        var point1 = [parentNode.location.x +this.config.nodeSize/2 + 1, parentNode.location.y];\n        var point2 = [parentNode.location.x+slantStartXOffset, parentNode.location.y];\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.nodeSize/2+8, dX/2)))), childNode.location.y];\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n        edge.$linePoints = [point1, point2, point3, point4];\n        return line(edge.$linePoints);\n    }\n\n    edgePayoffPosition(selection) {\n        return selection\n            .attr('x', d=>d.$linePoints[2][0] + 2)\n            .attr('y', d=>d.$linePoints[2][1] + 7)\n    }\n\n    edgeLabelPosition(selection) {\n        return selection\n            .attr('x', d=>d.$linePoints[2][0] + 2)\n            .attr('y', d=>d.$linePoints[2][1] - 7)\n\n    }\n\n    edgeProbabilityPosition(selection) {\n        return selection\n            .attr('x', function (d) {\n                var len = d3.select(this).node().getComputedTextLength();\n                var min = d.$linePoints[2][0] + 2 + d3.select(this.previousSibling).node().getBBox().width + 7 + len;\n                return Math.max(min, d.$linePoints[3][0] - 8);\n            })\n            .attr('y', d=>d.$linePoints[2][1] + 7)\n\n    }\n\n\n\n    getNodeMinX(d){\n        var self = this;\n        if(d && d.parent){// && !self.isNodeSelected(d.parent)\n            return d.parent.location.x + self.minMarginBetweenNodes;\n        }\n        return self.config.nodeSize/2;\n    }\n\n    getNodeMinY(d){\n        return this.config.nodeSize/2;\n    }\n\n    getNodeMaxX(d){\n        var self = this;\n        if(d && d.childEdges.length){\n            return d3.min(d.childEdges, e=>e.childNode.location.x)-self.minMarginBetweenNodes;\n        }\n        return 9999999;\n    }\n\n    autoLayout(type, withoutStateSaving){\n        var self=this;\n        if(!this.data.nodes.length){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    currentAutoLayout: self.currentAutoLayout\n                },\n                onRevert: (data)=> self.currentAutoLayout = data.currentAutoLayout\n            });\n        }\n\n        var treeMargin = 50;\n\n        var prevTreeMaxY = self.getNodeMinY();\n        this.data.getRoots().forEach(r=>{\n            var root = d3.hierarchy(r, d=>{\n                return d.childEdges.map(e=>e.childNode);\n            });\n\n            root.sort((a,b)=>self.nodeTypeOrder[a.data.type]-self.nodeTypeOrder[b.data.type]);\n\n            var height = 65, width=150;\n\n            var layout;\n            if(type=='cluster'){\n                height  =65;\n                layout = d3.cluster();\n            }else{\n                layout = d3.tree();\n            }\n            layout.nodeSize([height, width]);\n\n            layout(root);\n            var minY = 999999999;\n            root.each(d=>{\n                minY = Math.min(minY, d.x);\n            });\n\n            var dy = root.x - minY + prevTreeMaxY;\n            var dx = self.getNodeMinX();\n            var maxY=0;\n            root.each(d=>{\n                d.data.location.x = d.y + dx;\n                d.data.location.y = d.x + dy;\n\n                maxY = Math.max(maxY, d.data.location.y);\n            });\n\n            prevTreeMaxY = maxY + self.config.nodeSize+treeMargin;\n        });\n\n\n        // this.transition = true;\n        this.treeDesigner.redraw(true);\n        // this.transition = false;\n\n        this.currentAutoLayout = type;\n        return this;\n    }\n\n    fitNodesInPlottingRegion(nodes){\n        var self = this;\n        var topY = d3.min(nodes, n=>n.location.y);\n        var minY = self.getNodeMinY();\n        var dy = topY - minY;\n        if(dy<0){\n            nodes.forEach(n=>n.move(0, -dy));\n        }\n    }\n\n    moveNodes(nodes, dx, dy, pivot){\n        var self = this;\n        var limit = self.config.limitNodePositioning;\n        if(limit){\n            if(dx<0){\n                nodes.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                nodes.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n        var minY = d3.min(nodes, d=>d.location.y);\n        if(minY + dy < self.getNodeMinY()){\n            dy = self.getNodeMinY() - minY;\n        }\n\n        nodes.forEach(d=>{\n            if(limit){\n                Layout.backupNodeLocation(d);\n                var minX = self.getNodeMinX(d);\n                var maxX = self.getNodeMaxX(d);\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y += dy;\n            }else{\n                d.location.x +=dx;\n                d.location.y += dy;\n            }\n\n        });\n\n\n        var revertX = pivot && self.config.limitNodePositioning && (pivot.location.x == pivot.$location.x);\n\n        nodes.forEach(d=>{\n            if(revertX){\n                d.location.x = d.$location.x;\n            }\n            self.treeDesigner.updateNodePosition(d);\n        });\n\n\n    }\n\n    static backupNodeLocation(node) {\n        node.$location = new model.Point(node.location);\n    }\n\n}\n\n\n","import {ContextMenu} from '../context-menu'\nimport {Utils} from '../utils'\nimport * as model from '../model/index'\nimport * as d3 from '../d3'\n\nexport class MainContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n            var menu = [];\n            menu.push({\n                title: 'Add Decision Node',\n                action: function (elm, d, i) {\n                    var newNode = new model.DecisionNode(new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true)));\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({\n                title: 'Add Chance Node',\n                action: function (elm, d, i) {\n                    var newNode = new model.ChanceNode(new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true)));\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: 'Paste',\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNewLocation(new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true)));\n                },\n                disabled: !treeDesigner.copiedNode\n\n            });\n            menu.push({divider: true});\n\n            menu.push({\n                title: 'Select all nodes',\n                action: function (elm, d, i) {\n                    treeDesigner.selectAllNodes();\n                }\n            });\n            return menu;\n        };\n\n        super(menu, {onOpen: () => treeDesigner.clearSelection()});\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from '../context-menu'\nimport {Utils} from '../utils'\nimport * as model from '../model/index'\nimport * as d3 from '../d3'\n\nexport class NodeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n            var copyMenuItem = {\n                title: 'Copy',\n                action: function (elm, d, i) {\n                    treeDesigner.copyNode(d);\n                }\n            };\n            var cutMenuItem = {\n                title: 'Cut',\n                action: function (elm, d, i) {\n                    treeDesigner.cutNode(d);\n                }\n            };\n            var pasteMenuItem = {\n                title: 'Paste',\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNode(d);\n                },\n                disabled: !treeDesigner.copiedNode\n\n            };\n            var deleteMenuItem = {\n                title: 'Delete',\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.removeSelectedNodes();\n\n                }\n            };\n            var menu = [];\n            if (d.type == 'terminal') {\n                return [copyMenuItem, cutMenuItem, deleteMenuItem];\n            }\n            menu.push({\n                title: 'Add Decision Node',\n                action: function (elm, d, i) {\n                    var newNode = new model.DecisionNode(new model.Point(d.location.x + 150, d.location.y));\n                    treeDesigner.addNode(newNode, d)\n                }\n            });\n            menu.push({\n                title: 'Add Chance Node',\n                action: function (elm, d, i) {\n                    var newNode = new model.ChanceNode(new model.Point(d.location.x + 150, d.location.y));\n                    treeDesigner.addNode(newNode, d)\n                }\n            });\n            menu.push({\n                title: 'Add Terminal Node',\n                action: function (elm, d, i) {\n                    var newNode = new model.TerminalNode(new model.Point(d.location.x + 150, d.location.y));\n                    treeDesigner.addNode(newNode, d)\n                }\n            });\n            menu.push({divider: true});\n            menu.push(copyMenuItem);\n            menu.push(cutMenuItem);\n            menu.push(pasteMenuItem);\n            menu.push(deleteMenuItem);\n            menu.push({divider: true});\n            menu.push({\n                title: 'Select subtree',\n                action: function (elm, d, i) {\n                    treeDesigner.selectSubTree(d, true);\n                }\n            });\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {Utils} from '../utils'\nimport * as model from '../model/index'\nimport * as d3 from '../d3'\nimport {ContextMenu} from '../context-menu'\n\nexport class NodeDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + Utils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + Utils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", this.dragEnded);\n    }\n\n\n    dragStarted(d,self) {\n        self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var node = d3.select(this);\n        if(!node.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n        // console.log('drag started');\n        self.treeDesigner.selectNode(d);\n        node.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes();\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedNode, self){\n        // console.log('drag');\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n        if(self.selectedNodes.length>5 && self.dragEventCount%2!=1){\n            return;\n        }\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n        self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\n\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.redrawEdges();\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(){\n        var self = this;\n        var node = d3.select(this).classed(\"dragging\", false);\n    }\n\n\n}\n\n\n","import * as d3 from '../d3'\n\nimport {Utils} from '../utils'\nimport * as model from '../model/index'\nimport {ContextMenu} from '../context-menu'\nimport {MainContextMenu} from './main-context-menu'\nimport {NodeContextMenu} from './node-context-menu'\nimport {Layout} from './layout'\nimport {NodeDragHandler} from './node-drag-handler'\n\nexport class TreeDesignerConfig {\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    layout= {\n        nodeSize: 40,\n        limitNodePositioning: true\n    };\n\n    onNodeSelected = (node) => {};\n    onEdgeSelected = (edge) => {};\n    onSelectionCleared = () => {};\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class TreeDesigner {\n\n    config;\n    container;\n    data; //data model manager\n    svg;\n\n    constructor(container, dataModel, config){\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    }\n\n    setConfig(config) {\n        this.config = new TreeDesignerConfig(config);\n        return this;\n    }\n\n    init(){\n\n        this.initSvg();\n        this.initLayout();\n        this.initMainContextMenu();\n        this.initBrush();\n        this.initEdgeMarker();\n        this.initNodeContextMenu();\n        this.initNodeDragHandler();\n        this.redraw();\n    }\n\n    initLayout(){\n        this.layout = new Layout(this, this.data, this.config.layout);\n    }\n\n    initNodeDragHandler(){\n        this.nodeDragHandler = new NodeDragHandler(this, this.data);\n    }\n\n    redraw(withTransitions){\n        var self = this;\n        if(withTransitions){\n            self.transitionPrev = self.transition;\n            self.transition = true;\n        }\n        this.redrawNodes();\n        this.redrawEdges();\n        if(withTransitions){\n            self.transition =  self.transitionPrev;\n        }\n        setTimeout(function(){\n            self.updatePlottingRegionSize();\n        },10)\n    }\n\n    computeAvailableSpace(){\n        this.availableHeight = Utils.sanitizeHeight(this.config.height, this.container, this.config.margin);\n        this.availableWidth = Utils.sanitizeWidth(this.config.width, this.container, this.config.margin);\n    }\n\n    initSvg() {\n        var self = this;\n        this.computeAvailableSpace();\n        this.svg = this.container.selectOrAppend('svg.tree-designer');\n        this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\n\n        var margin = this.config.margin;\n        this.mainGroup = this.svg.selectOrAppend('g.main-group');\n        this.mainGroup.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (!this.config.width) {\n            d3.select(window)\n                .on(\"resize.tree-designer\", function () {\n                    self.updatePlottingRegionSize();\n                });\n        }\n    }\n\n    initContainer(container) {\n        this.container = container;\n    }\n\n    updatePlottingRegionSize() {\n        var changed = false;\n        this.computeAvailableSpace();\n        var margin = this.config.margin;\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        var mainGroupBox = this.mainGroup.node().getBBox();\n        var newSvgWidth = mainGroupBox.width+mainGroupBox.x+margin.left+margin.right;\n        this.container.classed('with-overflow-x', newSvgWidth>=this.availableWidth);\n        newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\n        if(svgWidth!=newSvgWidth){\n            changed = true;\n            this.svg.attr('width', newSvgWidth);\n        }\n        var newSvgHeight = mainGroupBox.height+mainGroupBox.y+margin.top+margin.bottom;\n\n        this.container.classed('with-overflow-y', newSvgHeight>=this.availableHeight);\n        newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\n        if(svgHeight!=newSvgHeight){\n            changed=true;\n            this.svg.attr('height', newSvgHeight);\n        }\n        if(changed){\n            this.updateBrushExtent()\n        }\n\n    }\n\n    redrawNodes() {\n        var self = this;\n\n\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes, (d,i)=> d.$id);\n        nodes.exit().remove();\n        var nodesEnter = nodes.enter().append('g')\n            .attr('id', d=>'node-'+d.$id)\n            .attr('class', d=>d.type+'-node node')\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n        nodesEnter.append('path');\n\n        var labelEnter = nodesEnter.append('text').attr('class', 'label');\n        var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\n\n        var nodesMerge = nodesEnter.merge(nodes);\n\n        var nodesMergeT = nodesMerge;\n        if(this.transition){\n            nodesMergeT = nodesMerge.transition();\n            nodesMergeT.on('end', ()=> self.updatePlottingRegionSize())\n        }\n        nodesMergeT.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n\n        this.layout.drawNodeSymbol(nodesMerge.select('path'));\n\n\n        this.layout.nodeLabelPosition(labelEnter);\n        this.layout.nodeLabelPosition(nodesMergeT.select('text.label'))\n\n            .attr('text-anchor', 'middle')\n            .text(d=>d.name);\n\n\n        var payoff = nodesMerge.select('text.payoff')\n            .attr('dominant-baseline', 'hanging')\n            .classed('negative', d=>d.computed.payoff<0)\n            .text(d=> d.computed.payoff!==null ? '$ '+d.computed.payoff : '');\n\n        var payoffT = payoff;\n        if(this.transition){\n            payoffT = payoff.transition();\n        }\n\n        this.layout.nodePayoffPosition(payoffEnter);\n        this.layout.nodePayoffPosition(payoffT);\n\n\n\n\n        nodesMerge.call(this.nodeDragHandler.drag);\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\n        nodesMerge.on('dblclick', d=>self.selectSubTree(d, true))\n    }\n\n\n    redrawEdges() {\n        var self = this;\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges, (d,i)=> d.$id);\n        edges.exit().remove();\n        var edgesEnter = edges.enter().append('g')\n            .attr('id', d=>'edge-'+d.$id)\n            .attr('class', 'edge');\n\n\n        edgesEnter.append('path');\n        var labelEnter = edgesEnter.append('text').attr('class', 'label');\n        var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\n        var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\n\n        var edgesMerge = edgesEnter.merge(edges);\n\n        var edgesMergeT = edgesMerge;\n        if(this.transition){\n            edgesMergeT = edgesMerge.transition();\n        }\n        edgesMergeT.select('path')\n            .attr('d', d=> this.layout.edgeLineD(d))\n            .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\")\n            .attr(\"marker-end\", \"url(#arrow)\")\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n\n        edgesMerge.on('click', d=>{\n            self.selectEdge(d, true)\n        });\n\n        this.layout.edgeLabelPosition(labelEnter);\n        this.layout.edgeLabelPosition(edgesMergeT.select('text.label'))\n            .text(d=>d.name);\n\n        var payoffText = edgesMerge.select('text.payoff')\n            .attr('dominant-baseline', 'hanging')\n            .classed('negative', d=>d.payoff<0)\n            .text(d=>'$ '+d.payoff);\n\n        var payoffTextT = payoffText;\n        if(this.transition){\n            payoffTextT = payoffText.transition();\n        }\n        this.layout.edgePayoffPosition(payoffEnter);\n        this.layout.edgePayoffPosition(payoffTextT);\n\n        this.layout.edgeProbabilityPosition(probabilityEnter);\n        this.layout.edgeProbabilityPosition(edgesMergeT.select('text.probability'))\n            .attr('dominant-baseline', 'hanging') //TODO not working in IE\n            .attr('text-anchor', 'end')\n            .text(d=>d.probability ? d.probability: '')\n\n\n    }\n\n    initEdgeMarker() {\n        console.log(this.svg);\n        var defs = this.svg.append(\"svg:defs\");\n\n        defs.append(\"marker\")\n            .attr(\"id\",\"arrow\")\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    updateBrushExtent() {\n        var self =this;\n        this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\n        this.brushContainer.call(this.brush);\n    }\n    initBrush() {\n        var self = this;\n        var brushContainer = this.brushContainer= this.svg.selectOrInsert(\"g.brush\", \":first-child\")\n            .attr(\"class\", \"brush\");\n\n        var brush = this.brush = d3.brush()\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n\n        var mainGroupTranslation = this.getMainGroupTranslation();\n        this.updateBrushExtent();\n\n\n        function brushstart() {\n            if (!d3.event.selection) return;\n            self.clearSelection();\n            ContextMenu.hide();\n        }\n\n        // Highlight the selected nodes.\n        function brushmove() {\n            var s = d3.event.selection;\n            if(!s)return;\n\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n\n                var x = d.location.x+mainGroupTranslation[0];\n                var y = d.location.y+mainGroupTranslation[1];\n                return s[0][0] <= x && x <= s[1][0]\n                    && s[0][1] <= y && y <= s[1][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) return;\n            brush.move(brushContainer, null);\n\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n        }\n    }\n\n    getMainGroupTranslation(invert) {\n        var translation = Utils.getTranslation(this.mainGroup.attr(\"transform\"));\n        if(invert){\n            translation[0] = -translation[0];\n            translation[1] = -translation[1]\n        }\n        return translation;\n    }\n\n    initNodeContextMenu() {\n        this.nodeContextMenu = new NodeContextMenu(this);\n    }\n\n    initMainContextMenu() {\n        this.mainContextMenu = new MainContextMenu(this);\n        this.svg.on('contextmenu',this.mainContextMenu);\n    }\n\n    addNode(node, parent){\n        this.data.saveState();\n        this.data.addNode(node, parent);\n        this.redraw();\n        this.layout.update();\n        return node;\n    }\n\n    removeNode(node) {\n        this.data.saveState();\n        this.data.removeNode(node);\n\n\n        if(this.layout.currentAutoLayout){\n            this.layout.update();\n        }else{\n            this.redraw();\n        }\n    }\n\n    removeSelectedNodes() {\n        this.data.saveState();\n        var selectedNodes = this.getSelectedNodes();\n        this.data.removeNodes(selectedNodes);\n        this.clearSelection();\n        this.redraw();\n        this.layout.update();\n    }\n\n    copyNode(d) {\n        this.copiedNode = this.data.cloneSubtree(d);\n    }\n\n    cutNode(d) {\n        this.copyNode(d);\n        this.removeNode(d);\n    }\n\n    copySelectedNodes() {\n        var self;\n        var selectedNodes = this.getSelectedNodes();\n\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copiedNodes = selectedRoots.map(d=>this.data.cloneSubtree(d));\n        //TODO\n\n    }\n\n\n\n    pasteToNode(node) {\n        this.data.saveState();\n        var self = this;\n        var toAttach = this.copiedNode;\n        self.copyNode(toAttach);\n        var attached = this.data.attachSubtree(toAttach, node);\n\n        attached.moveTo(node.location.x+120, node.location.y, true);\n        self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n        this.redraw();\n        self.layout.update();\n\n        self.selectSubTree(attached, true);\n    }\n\n    pasteToNewLocation(point) {\n        this.data.saveState();\n        var self = this;\n        var toAttach = this.copiedNode;\n        self.copyNode(toAttach);\n        var attached = this.data.attachSubtree(toAttach);\n\n        attached.moveTo(point.x, point.y, true);\n        self.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n        this.redraw();\n        self.layout.update();\n\n        self.selectSubTree(attached, true);\n    }\n\n    moveNodeTo(x,y){\n\n    }\n\n    updateNodePosition(node) {\n        this.getNodeD3Selection(node).raise().attr('transform', 'translate('+node.location.x+' '+node.location.y+')');\n    }\n\n    getNodeD3Selection(node){\n        return this.mainGroup.select('#node-'+node.$id);\n    }\n\n    getSelectedNodes() {\n        return this.mainGroup.selectAll(\".node.selected\").data();\n    }\n\n    clearSelection(){\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\n        this.config.onSelectionCleared();\n    }\n\n    selectEdge(edge, clearSelectionBeforeSelect){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.config.onEdgeSelected(edge);\n        this.mainGroup.select('#edge-'+edge.$id).classed('selected', true);\n    }\n\n    isNodeSelected(node){\n        return this.getNodeD3Selection(node).classed('selected');\n    }\n\n    selectNode(node, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onNodeSelected(node);\n        }\n\n        this.mainGroup.select('#node-'+node.$id).classed('selected', true);\n    }\n\n    selectSubTree(node, clearSelectionBeforeSelect,skipCallback) {\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.selectNode(node, false, skipCallback);\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode, false, true));\n    }\n\n    selectAllNodes() {\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        this.layout.autoLayout(type, withoutStateSaving);\n    }\n}\n","export class Utils {\n    static SQRT_2 = 1.41421356237;\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n    static deepExtend(out) {\n\n        var utils = this;\n        var emptyOut = {};\n\n\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n            out = [];\n        }\n        out = out || {};\n\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            if (!source)\n                continue;\n\n            for (var key in source) {\n                if (!source.hasOwnProperty(key)) {\n                    continue;\n                }\n                var isArray = Array.isArray(out[key]);\n                var isObject = utils.isObject(out[key]);\n                var srcObj = utils.isObject(source[key]);\n\n                if (isObject && !isArray && srcObj) {\n                    utils.deepExtend(out[key], source[key]);\n                } else {\n                    out[key] = source[key];\n                }\n            }\n        }\n\n        return out;\n    };\n\n    static mergeDeep(target, source) {\n        let output = Object.assign({}, target);\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n            Object.keys(source).forEach(key => {\n                if (Utils.isObjectNotArray(source[key])) {\n                    if (!(key in target))\n                        Object.assign(output, {[key]: source[key]});\n                    else\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\n                } else {\n                    Object.assign(output, {[key]: source[key]});\n                }\n            });\n        }\n        return output;\n    }\n\n    static cross(a, b) {\n        var c = [], n = a.length, m = b.length, i, j;\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\n        return c;\n    };\n\n    static isObjectNotArray(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\n    };\n\n    static isArray(item) {\n        return Array.isArray(item);\n    };\n\n    static isObject(a) {\n        return a !== null && typeof a === 'object';\n    };\n\n    static isNumber(a) {\n        return !isNaN(a) && typeof a === 'number';\n    };\n\n    static isFunction(a) {\n        return typeof a === 'function';\n    };\n\n    static isDate(a) {\n        return Object.prototype.toString.call(a) === '[object Date]'\n    }\n\n    static isString(a) {\n        return typeof a === 'string' || a instanceof String\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return Utils.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return Utils.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width) {\n        var textObj = textD3Obj.node();\n        textObj.textContent = textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength() > width + margin) {\n            for (var x = textString.length - 3; x > 0; x -= 1) {\n                if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                    textObj.textContent = textString.substring(0, x) + \"...\";\n                    return true;\n                }\n            }\n            textObj.textContent = \"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n        var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if (ellipsisPlaced && tooltip) {\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element) {\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    static getTranslation(transform) {\n        // Create a dummy g for calculation purposes only. This will never\n        // be appended to the DOM and will be discarded once this function\n        // returns.\n        var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        // Set the transform attribute to the provided string value.\n        g.setAttributeNS(null, \"transform\", transform);\n\n        // consolidate the SVGTransformList containing all transformations\n        // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n        // its SVGMatrix.\n        var matrix = g.transform.baseVal.consolidate().matrix;\n\n        // As per definition values e and f are the ones for the translation.\n        return [matrix.e, matrix.f];\n    }\n\n    static getObjectByIdMap(objectList, mappingFn) {\n        var objectById = {};\n        if (!objectList) {\n            return objectById;\n        }\n        objectList.forEach(function (obj) {\n            var val = obj;\n            if (mappingFn) {\n                val = mappingFn(obj);\n            }\n            objectById[obj.$id] = val;\n        });\n        return objectById;\n    };\n}\n"],"sourceRoot":"/source/"}