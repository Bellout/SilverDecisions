{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d/auto-bind.js","node_modules/d/index.js","node_modules/es5-ext/array/#/clear.js","node_modules/es5-ext/array/#/e-index-of.js","node_modules/es5-ext/array/from/index.js","node_modules/es5-ext/array/from/is-implemented.js","node_modules/es5-ext/array/from/shim.js","node_modules/es5-ext/function/is-arguments.js","node_modules/es5-ext/function/is-function.js","node_modules/es5-ext/function/noop.js","node_modules/es5-ext/global.js","node_modules/es5-ext/math/sign/index.js","node_modules/es5-ext/math/sign/is-implemented.js","node_modules/es5-ext/math/sign/shim.js","node_modules/es5-ext/number/is-nan/index.js","node_modules/es5-ext/number/is-nan/is-implemented.js","node_modules/es5-ext/number/is-nan/shim.js","node_modules/es5-ext/number/to-integer.js","node_modules/es5-ext/number/to-pos-integer.js","node_modules/es5-ext/object/_iterate.js","node_modules/es5-ext/object/assign/index.js","node_modules/es5-ext/object/assign/is-implemented.js","node_modules/es5-ext/object/assign/shim.js","node_modules/es5-ext/object/copy.js","node_modules/es5-ext/object/create.js","node_modules/es5-ext/object/for-each.js","node_modules/es5-ext/object/is-callable.js","node_modules/es5-ext/object/is-object.js","node_modules/es5-ext/object/is-value.js","node_modules/es5-ext/object/keys/index.js","node_modules/es5-ext/object/keys/is-implemented.js","node_modules/es5-ext/object/keys/shim.js","node_modules/es5-ext/object/map.js","node_modules/es5-ext/object/normalize-options.js","node_modules/es5-ext/object/set-prototype-of/index.js","node_modules/es5-ext/object/set-prototype-of/is-implemented.js","node_modules/es5-ext/object/set-prototype-of/shim.js","node_modules/es5-ext/object/valid-callable.js","node_modules/es5-ext/object/valid-value.js","node_modules/es5-ext/string/#/contains/index.js","node_modules/es5-ext/string/#/contains/is-implemented.js","node_modules/es5-ext/string/#/contains/shim.js","node_modules/es5-ext/string/is-string.js","node_modules/es6-iterator/array.js","node_modules/es6-iterator/for-of.js","node_modules/es6-iterator/get.js","node_modules/es6-iterator/index.js","node_modules/es6-iterator/is-iterable.js","node_modules/es6-iterator/string.js","node_modules/es6-iterator/valid-iterable.js","node_modules/es6-set/implement.js","node_modules/es6-set/is-implemented.js","node_modules/es6-set/is-native-implemented.js","node_modules/es6-set/lib/iterator.js","node_modules/es6-set/polyfill.js","node_modules/es6-symbol/index.js","node_modules/es6-symbol/is-implemented.js","node_modules/es6-symbol/is-symbol.js","node_modules/es6-symbol/polyfill.js","node_modules/es6-symbol/validate-symbol.js","node_modules/event-emitter/index.js","node_modules/jquery-ui/ui/data.js","node_modules/sd-tree-designer/index.js","node_modules/sd-tree-designer/src/app-utils.js","node_modules/sd-tree-designer/src/context-menu/context-menu.js","node_modules/sd-tree-designer/src/context-menu/edge-context-menu.js","node_modules/sd-tree-designer/src/context-menu/main-context-menu.js","node_modules/sd-tree-designer/src/context-menu/node-context-menu.js","node_modules/sd-tree-designer/src/context-menu/text-context-menu.js","node_modules/sd-tree-designer/src/d3-extensions.js","node_modules/sd-tree-designer/src/d3.js","node_modules/sd-tree-designer/src/i18n/de.json","node_modules/sd-tree-designer/src/i18n/en.json","node_modules/sd-tree-designer/src/i18n/fr.json","node_modules/sd-tree-designer/src/i18n/i18n.js","node_modules/sd-tree-designer/src/i18n/it.json","node_modules/sd-tree-designer/src/i18n/pl.json","node_modules/sd-tree-designer/src/index.js","node_modules/sd-tree-designer/src/layout.js","node_modules/sd-tree-designer/src/node-drag-handler.js","node_modules/sd-tree-designer/src/symbols/circle.js","node_modules/sd-tree-designer/src/symbols/triangle.js","node_modules/sd-tree-designer/src/templates.js","node_modules/sd-tree-designer/src/templates/growl_message.html","node_modules/sd-tree-designer/src/text-drag-handler.js","node_modules/sd-tree-designer/src/tooltip.js","node_modules/sd-tree-designer/src/tree-designer.js","package.json","src/app-utils.js","src/app.js","src/autocomplete.js","src/d3.js","src/dialogs/about-dialog.js","src/dialogs/definitions-dialog.js","src/dialogs/dialog.js","src/dialogs/sensitivity-analysis-dialog.js","src/dialogs/settings-dialog.js","src/exporter.js","src/file-loader.js","src/form/input-field.js","src/form/path-value-accessor.js","src/i18n/de.json","src/i18n/en.json","src/i18n/fr.json","src/i18n/i18n.js","src/i18n/it.json","src/i18n/pl.json","src/index.js","src/jobs/job-parameters-builder.js","src/jobs/job-result-table.js","src/jobs/probabilistic-sensitivity-analysis-result-table.js","src/jobs/sensitivity-analysis-result-table.js","src/jobs/spider-plot.js","src/jobs/tornado-diagram-plot.js","src/league-table/league-table-dialog.js","src/league-table/league-table-plot.js","src/league-table/league-table.js","src/loading-indicator.js","src/pivot-table.js","src/sidebar.js","src/templates.js","src/templates/about/de.html","src/templates/about/en.html","src/templates/about/fr.html","src/templates/about/it.html","src/templates/about/pl.html","src/templates/about_dialog.html","src/templates/definitions_dialog.html","src/templates/evaluated_variables.html","src/templates/fullscreen_popup.html","src/templates/help.html","src/templates/input_group.html","src/templates/jobs/job_parameter.html","src/templates/jobs/job_parameters_builder.html","src/templates/league_table_dialog.html","src/templates/loading_indicator.html","src/templates/main.html","src/templates/select_input_group.html","src/templates/sensitivity_analysis_dialog.html","src/templates/settings_dialog.html","src/templates/settings_dialog_form_group.html","src/templates/sidebar/definitions.html","src/templates/sidebar/diagram_details_box.html","src/templates/sidebar/layout_options.html","src/templates/sidebar/multiple_criteria.html","src/templates/sidebar/object_properties.html","src/templates/sidebar/sidebar.html","src/templates/toolbar.html","src/templates/warning_message.html","src/toolbar.js","src/validation/number-input-validator.js","src/validation/payoff-input-validator.js","src/validation/probability-input-validator.js","src/validation/required-input-validator.js","tmp/build-config.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","App","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","copy","normalizeOptions","ensureCallable","map","callable","validValue","bind","Function","prototype","defineProperty","Object","hasOwnProperty","name","desc","options","dgs","value","writable","get","overwriteDefinition","resolveContext","props","arguments","assign","normalizeOpts","isCallable","contains","dscr","w","configurable","enumerable","gs","set","undefined","numberIsNaN","toPosInt","indexOf","Array","objHasOwnProperty","abs","Math","floor","searchElement","fromIndex","val","apply","isNaN","from","arr","result","Boolean","iteratorSymbol","iterator","isArguments","isFunction","isValue","isString","isArray","arrayLike","Context","j","getIterator","mapFn","thisArg","next","done","charCodeAt","objToString","toString","id","sign","Number","NaN","isFinite","toInteger","max","keys","objPropertyIsEnumerable","propertyIsEnumerable","method","defVal","obj","cb","list","compareFn","sort","key","index","foo","bar","trzy","dest","src","error","forEach","aFrom","propertyNames","propertyName","ensure","shim","nullObject","polyProps","create","level","getOwnPropertyNames","defineProperties","function","object","_undefined","targetObj","opts1","process","setPrototypeOf","getPrototypeOf","plainObject","customCreate","validate","status","fn","isObject","objIsPrototypeOf","isPrototypeOf","nullDesc","TypeError","tmpObj1","tmpObj2","getOwnPropertyDescriptor","ignore","__proto__","isNullBase","nullPolyfill","String","str","searchString","ArrayIterator","d","Symbol","Iterator","kind","constructor","_resolve","__kind__","__list__","toStringTag","some","iterable","mode","doBreak","broken","char","StringIterator","clear","autoBind","context","__context__","__nextIndex__","on","_onAdd","_onDelete","_onClear","_next","__redo__","shift","_unBind","_createResult","off","redo","push","splice","__length__","isIterable","Set","size","add","delete","entries","has","values","SetIterator","toStringTagSymbol","__setData__","SetPoly","getValues","NativeSet","eIndexOf","ee","forOf","isNative","emit","validTypes","symbol","toPrimitive","x","NativeSymbol","SymbolPolyfill","HiddenSymbol","isNativeSafe","validateSymbol","objPrototype","globalSymbols","created","generateName","ie11BugWorkaround","postfix","description","__description__","__name__","for","keyFor","s","hasInstance","isConcatSpreadable","match","replace","search","species","split","unscopables","valueOf","isSymbol","once","methods","descriptors","base","descriptor","type","listener","__eeOnceListener__","data","__ee__","listeners","candidate","l","args","slice","$","extend","expr","createPseudo","dataName","elem","factory","jQuery","_index","d3","_interopRequireWildcard","_templates","_i18n","_sdUtils","AppUtils","textD3Obj","textString","width","textObj","node","textContent","getComputedTextLength","getSubStringLength","substring","tooltip","placeTextWithEllipsis","transition","duration","style","html","event","pageX","pageY","element","getComputedStyle","getPropertyValue","transform","document","createElementNS","setAttributeNS","matrix","baseVal","consolidate","pathNode","point","best","bestLength","scan","scanDistance","pathLength","getTotalLength","precision","bestDistance","Infinity","scanLength","distance2","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","y","distance","sqrt","dx","dy","message","position","time","Templates","select","selectOrAppend","append","setTimeout","remove","tag","attribs","parent","el","createElement","deepExtend","appendChild","parentNode","removeChild","text","createTextNode","div","innerHTML","evt","createEvent","initEvent","dispatchEvent","fireEvent","CustomEvent","detail","initCustomEvent","Utils","i18n","selection","classed","_show","exact","display","offsetParent","url","callback","xhr","XMLHttpRequest","open","responseType","onload","response","send","sanitizeHeight","height","container","parseInt","sanitizeWidth","availableHeight","margin","top","bottom","availableWidth","left","right","ContextMenu","menu","opts","_classCallCheck","openCallback","onOpen","closeCallback","onClose","selectAll","enter","attr","elm","preventDefault","stopPropagation","ret","divider","disabled","action","title","console","_contextMenu","EdgeContextMenu","treeDesigner","_this","_possibleConstructorReturn","_getPrototypeOf","injectDecisionNode","injectChanceNode","_sdModel","MainContextMenu","mousePosition","newNode","domain","DecisionNode","addNode","ChanceNode","newText","Text","addText","pasteToNewLocation","copiedNodes","selectAllNodes","clearSelection","Point","mouse","svg","move","getMainGroupTranslation","NodeContextMenu","operationsForObject","copyMenuItem","selectNode","isNodeSelected","copySelectedNodes","cutMenuItem","cutSelectedNodes","pasteMenuItem","pasteToNode","folded","deleteMenuItem","removeSelectedNodes","TerminalNode","$TYPE","addNodeConversionOptions","addDecisionNode","addChanceNode","addTerminalNode","selectSubTree","foldSubtree","operations","op","performOperation","canPerform","conversionOptions","getNodeConversionOptions","allAllowedTypes","childEdges","$parent","filter","getNodeConversionOption","typeToConvertTo","convertNode","TextContextMenu","selectText","removeSelectedTexts","D3Extensions","insertSelector","selector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","empty","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","contextMenu","main","paste","cut","convert","decision","chance","terminal","selectSubtree","fold","unfold","flipSubtree","edge","validation","incompletePath","probabilityDoNotSumUpTo1","invalidProbability","invalidPayoff","growl","brushDisabled","brushEnabled","payoff","default","named","aggregatedPayoff","probabilityToEnter","probability","_i18next","en","pl","it","de","fr","lng","language","resources","translation","$instance","createInstance","fallbackLng","err","opt","_d3Extensions","_exportNames","_treeDesigner","_appUtils","_tooltip","_d","_circle","_interopRequireDefault","_triangle","Layout","config","nodeTypeToSymbol","symbolSquare","onAutoLayoutChanged","nodeTypeOrder","treeMargin","targetSymbolSize","nodeSeparation","b","nodeSymbolSize","$location","location","isHidden","each","getBBox","childNode","isManualLayout","autoLayout","moveNodeToEmptyPlace","redraw","MANUAL_LAYOUT_NAME","getNodeMinX","getNodeMinY","gridWidth","$linePoints","redrawIfChanged","findCollidingNode","find","nodesSortedByX","nodeSize","nodes","colidingNode","stepX","stepY","changed","newLocation","moveTo","_fireOnAutoLayoutChangedCallbacks","path","nodeSymbol","$id","box","min","setHangingPosition","fontSize","getFontSize","items","displayValue","aggregatedPayoffs","line","dX","slantStartXOffset","slantWidth","edgeSlantWidthMax","point1","point2","point3","point4","datum","len","previousSibling","childNodes","minX","bb","getTextD3Selection","minY","MAX_SAFE_INTEGER","getMinMarginBetweenNodes","$hidden","withoutStateSaving","saveState","onUndo","setGridWidth","onRedo","update","gridHeight","setGridHeight","setNodeSize","fitNodesInPlottingRegion","getRoots","setEdgeSlantWidthMax","newLayout","currentLayout","prevTreeMaxY","layout","root","hierarchy","cluster","tree","separation","maxY","pivot","limit","limitNodePositioning","backupNodeLocation","maxX","getNodeMaxX","revertX","updateNodePosition","texts","limitTextPositioning","getTextMinX","getTextMaxX","getTextMinY","updateTextPosition","NodeDragHandler","stateSnapshot","drag","subject","getTranslation","dragStarted","onDrag","dragEnded","ignoreDrag","ignoredDrag","createStateSnapshot","hide","selectedNodes","getSelectedNodes","prevDragEvent","dragEventCount","draggedNode","saveStateFromSnapshot","moveNodes","redrawEdges","updatePlottingRegionSize","pi","PI","draw","dist","bezierCurveTo","lineTo","closePath","templateName","variables","compiled","template","imports","include","v","styleProp","styleName","variableName","clazz","treeDesignerSelector","treeDesignerStyles","styleRule","nodeSelector","edgeSelector","TextDragHandler","draggedText","moveTexts","Tooltip","xOffset","yOffset","getContainer","updatePosition","target","htmlOrFn","show","_mainContextMenu","_nodeContextMenu","_layout","_nodeDragHandler","_textDragHandler","_textContextMenu","_edgeContextMenu","Hammer","TreeDesignerConfig","custom","scale","fontFamily","fontWeight","fontStyle","strokeWidth","optimal","stroke","label","color","negativeColor","fill","selected","readOnly","disableAnimations","forceFullEdgeRedraw","hideLabels","hidePayoffs","hideProbabilities","raw","payoffNumberFormatter","probabilityNumberFormatter","onNodeSelected","onEdgeSelected","onTextSelected","onSelectionCleared","payoffNames","maxPayoffsToDisplay","TreeDesigner","dataModel","setConfig","initContainer","init","updateCustomStyles","initSvg","initLayout","initI18n","initBrush","initEdgeMarkers","initMainContextMenu","initNodeContextMenu","initEdgeContextMenu","initNodeDragHandler","initTextDragHandler","initTextContextMenu","nodeDragHandler","textDragHandler","withTransitions","redrawDiagramTitle","redrawDiagramDescription","updateScale","updateMargin","transitionPrev","redrawNodes","redrawFloatingTexts","updateValidationMessages","computeAvailableSpace","wrapperGroup","mainGroup","mc","Manager","touchAction","Press","pointerType","Pinch","disableBrush","waitForFinalEvent","enableBrush","group","topMargin","diagramTitle","diagramDescription","getTitleGroupHeight","clone","setMargin","setScale","containerIdOrElem","trim","startsWith","_parents","svgWidth","svgHeight","mainGroupBox","newSvgWidth","newSvgHeight","updateBrushExtent","exit","nodesEnter","labelEnter","payoffEnter","indicatorEnter","aggregatedPayoffEnter","probabilityToEnterEnter","nodesMerge","merge","isOptimal","nodesMergeT","drawNodeSymbol","nodeLabelPosition","labelMergeT","updateTextLines","payoffTspans","item","payoffTspansM","attachPayoffTooltip","payoffT","nodePayoffPosition","aggregatedPayoffTspans","aggregatedPayoffTspansM","aggregatedPayoffT","nodeAggregatedPayoffPosition","attach","probabilityToEnterT","nodeProbabilityToEnterPosition","indicator","nodeIndicatorPosition","nodeContextMenu","cancelDrag","button","nodeUnfoldButtonPosition","payoffFiledName","number","lines","reverse","tspans","edgesContainer","edges","edgesEnter","probabilityEnter","edgesMerge","optimalClassName","edgesMergeT","edgeLineD","selectEdge","edgeLabelPosition","_","displayPayoff","payoffTextT","edgePayoffPosition","displayProbability","probabilityMerge","probabilityMergeT","edgeProbabilityPosition","raise","edgeContextMenu","POINTER_TOUCH","textsEnter","textsMerge","textsMergeT","replaceUrls","escapeHtml","textContextMenu","_this2","validationResults","validationResult","isValid","objectIdToError","errors","nodeSelection","getNodeD3SelectionById","tooltipHtml","getValidationMessage","initArrowMarker","brush","extent","brushContainer","hoveredEdge","mainGroupTranslation","offset","m","mgt","closest","cp","closestPoint","invert","mainContextMenu","getNewChildLocation","injectNode","getInjectedNodeLocation","removeNode","removeNodes","selectedTexts","getSelectedTexts","removeTexts","notClearPrevSelection","cloneSubtree","copyNode","selectedRoots","findSubtreeRoots","copyNodes","_this3","_this4","nodesToAttach","toAttach","attached","attachSubtree","getAllDescendantNodes","_this5","perform","getAllDescendantEdges","_this6","updateVisibility","getNodeD3Selection","getTextD3SelectionById","_this7","visibleOnly","selectedVisible","allSelected","_toConsumableArray","descendants","_this8","clearSelectionBeforeSelect","skipCallback","_this9","titleValue","titleContainer","marginTop","descriptionValue","withMargins","h","version","scripts","test","repository","author","license","bugs","homepage","browserify","presets","plugins","spec","globals","devDependencies","@babel/core","@babel/plugin-proposal-object-rest-spread","@babel/preset-env","babel-plugin-transform-builtin-extend","babel-plugin-transform-class-properties","babel-plugin-transform-es2015-spread","babel-plugin-transform-object-assign","babelify","browser-sync","browserify-resolutions","browserify-shim","chalk","del","es6-set","gulp","gulp-clean-css","gulp-concat","gulp-filelist","gulp-html2js","gulp-load-plugins","gulp-plumber","gulp-rename","gulp-replace","gulp-sass","gulp-sourcemaps","gulp-strip-debug","gulp-template","gulp-uglify","gulp-util","jasmine","jasmine-jquery","karma","karma-browserify","karma-chrome-launcher","karma-intl-shim","karma-jasmine","merge-stream","odc-d3","run-sequence","stringify","svg2pdf.js","vinyl-buffer","vinyl-source-stream","yargs","dependencies","autosize","blueimp-canvas-to-blob","d3-array","d3-dispatch","d3-drag","d3-scale","d3-selection","d3-time-format","file-saver","hammerjs","i18next","jquery","jquery-ui","pivottable","sd-computations","sd-model","sd-utils","sd-tree-designer","_sdTreeDesigner","getBoundingClientRect","form","mergeDeep","enctype","body","submit","removeElement","popup","model","_sidebar","_toolbar","_settingsDialog","_aboutDialog","_exporter","_definitionsDialog","_sdComputations","_sensitivityAnalysisDialog","_loadingIndicator","_leagueTableDialog","buildConfig","AppConfig","logLevel","workerUrl","jobRepositoryType","clearRepository","buttons","new","save","exportToPng","exportToSvg","exportToPdf","serverUrl","pdf","png","showDetails","showDefinitions","jsonFileDownload","rule","format","locales","payoff1","currency","currencyDisplay","minimumFractionDigits","maximumFractionDigits","useGrouping","payoff2","leagueTable","plot","maxWidth","groups","highlighted","highlighted-default","extended-dominated","dominated","diagramData","viewModes","payoffsMaximization","Promise","resolve","initViewModes","initDataModel","initComputationsManager","initProbabilityNumberFormat","initPayoffNumberFormat","initTreeDesigner","initSidebar","initSettingsDialog","initAboutDialog","initDefinitionsDialog","initSensitivityAnalysisDialog","initLeagueTableDialog","initOnBeforeUnload","initKeyCodes","then","initToolbar","openDiagram","updateView","catch","log","setLogLevel","setLevel","buildTimestamp","DataModel","nodeAddedCallback","nodeRemovedCallback","onNodeAddedOrRemoved","textAddedCallback","onTextAdded","textRemovedCallback","onTextRemoved","computationsManager","ComputationsManager","ruleName","worker","expressionEngine","checkValidityAndRecomputeObjective","sidebar","Sidebar","settingsDialog","SettingsDialog","aboutDialog","AboutDialog","definitionsDialog","DefinitionsDialog","onClosed","recompute","leagueTableDialog","LeagueTableDialog","isMultipleCriteria","validateParams","sensitivityAnalysisDialog","SensitivityAnalysisDialog","getGlobalVariableNames","toolbar","Toolbar","payoffNumberFormat","Intl","NumberFormat","probabilityNumberFormat","getTreeDesignerInitialConfig","container2","onObjectSelected","prefix","currentViewMode","multiCriteria","charAt","payoffIndex","selectedObject","updateObjectPropertiesView","updateVariableDefinitions","hideObjectProperties","Node","Edge","definitionsSourceObject","getCurrentVariableDefinitionsSourceObject","updateDefinitions","updateLayoutOptions","updateDiagramDetails","updateMultipleCriteria","undo","initPayoffNames","findById","fieldName","evalCode","evalNumeric","getCurrentRule","setCurrentRuleByName","currentRule","payoffCoeffs","maximization","tmp","flipCriteria","getObjectiveRules","setViewMode","_this10","objectiveRulesManager","setPayoffIndex","rules","newRule","every","setObjectiveRule","isSensitivityAnalysisAvailable","dataDTO","originalDataModelSnapshot","loadFromDTO","getJsonReviver","updateDisplayValues","svgString","Exporter","getSVGString","showFullScreenPopup","_setNewState","policy","displayPolicy","LoadingIndicator","_this11","debounce","forceWhenAutoIsDisabled","debouncedRecompute","_this12","isAutoRecalculationEnabled","allRules","_this13","setDiagramTitle","setDiagramDescription","_this14","JSON","parse","alert","dataModelObject","isValidVersionString","compareVersionNumbers","expressionScope","trees","isRuleName","viewMode","setViewModeByName","setDefaultViewModeForRule","getObjectiveRuleByName","load","sensitivityAnalysis","loadSavedParamValues","updateNumberFormats","_this15","filterLocation","filterComputed","filterPrivate","savetime","isoFormat","Date","serialize","jobNameToParamValues","getJsonReplacer","_this16","json","blob","Blob","saveAs","getExportFileName","addEventListener","isUndoAvailable","isRedoAvailable","dialogText","returnValue","prevValue","setConfigParam","_this17","updateDiagramTitle","_this18","updateDiagramDescription","_this19","srcElement","nodeName","toUpperCase","keyCode","ctrlKey","altKey","selectedNode","_selectedNode","utils","appUtils","global$","getGlobalObject","widget","_create","wrapper","addClass","insertAfter","_createAutocomplete","_createShowAllButton","children","input","appendTo","autocomplete","delay","minLength","source","proxy","classes","ui-autocomplete","_on","autocompleteselect","ui","option","_trigger","autocompletechange","inputD3","dispatchHtmlEvent","wasOpen","is","trigger","_source","request","matcher","RegExp","escapeRegex","term","_destroy","input_element","Autocomplete","combobox","_dialog","app","Dialog","_assertThisInitialized","definitionsScopeLabel","definitionsCode","updateInputClass","changeCallback","recalculateButton","variableValuesContainer","elasticTextarea","isVisible","_get","scopeType","labelSuffix","autoResizeTextarea","$codeError","printError","printVariables","scope","scopeVariables","getVariablesAsList","close","shrink","fullScreen","onResized","setFullScreen","_jobParametersBuilder","_sensitivityAnalysisResultTable","_probabilisticSensitivityAnalysisResultTable","_policy","_tornadoDiagramPlot","_spiderPlot","jobConfigurations","jobConfigurationContainer","parameterBuilderContainer","jobParametersBuilder","JobParametersBuilder","onJobParametersChanged","progressBarContainer","progressBar","jobResultsContainer","jobResultPlotContainer","debouncedCheckWarnings","checkWarnings","initButtons","initJobConfigurations","jobSelect","initJobSelect","payoffConf","cloneDeep","jobInstanceManager","terminate","jobConfig","clearWarnings","selectedJobConfig","jobName","job","getJobByName","jobParamsValues","setJobParamsValues","deleteId","refreshSelectedJobConfig","jobParameters","createJobParameters","setJobParameters","customParamsConfig","ExpressionEngine","customVariablesValidator","isValidArray","names","isVariableInGlobalScope","valid","largeScenariosNumberWarning","numberFormatted","check","reduce","hidden","failOnInvalidTree","_derivedValues","variable","toFloat","divide","subtract","customValidator","warnings","isValidNameArray","formula","randomMenuList","optionsAutocomplete","warnConf","addWarning","msg","msgHTML","guid","onJobSelected","onRowSelected","rows","indexes","onResultRowSelected","className","resultTable","setClassName","SensitivityAnalysisJobResultTable","setData","ProbabilisticSensitivityAnalysisJobResultTable","disable","runJobButton","disableActionButtonsAndShowLoadingIndicator","runJobWithInstanceManager","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","callbacksThisArg","resumeJobButton","resume","stopJobButton","stop","terminateJobButton","terminateJob","backButton","downloadCsvButtons","downloadCSV","clearButton","clearParams","clearAllParams","clearResults","setProgress","markAsError","forOwn","globalVariableNames","paramValues","resultPlots","destroy","progress","displayResult","debug","initResultTable","initResultPlots","initTornadoResultPlots","initSpiderResultPlots","policies","policyIndex","resultPlot","TornadoDiagramPlot","SpiderPlot","errorMessage","msgKey","percents","current","total","policyIndexes","Policy","toPolicyString","row","variableNames","showPolicyPreview","saveAsCSV","getRows","params","extendedPolicyDescription","jobResultToCsvRows","_inputField","_pathValueAccessor","formGroups","FormGroup","addField","addSelectField","fontWeightOptions","fontStyleOptions","payoffGroup","updatePayoffNumberFormat","payoff2Group","updateProbabilityNumberFormat","nodeGroup","addGroup","edgeGroup","titleGroup","leagueTableGroup","otherGroup","valueUpdateCallback","onRawOptionChanged","initView","temp","formGroupsEnter","formGroupsMerge","inputGroups","fields","checked","validator","valueAccessor","pristineVal","initFormGroups","fieldConfig","_addField","fieldId","configInputField","ConfigInputField","sourceObject","PathValueAccessor","InputField","_blueimpCanvasToBlob","_fileSaver","svgNode","svgClone","cloneNode","appendInlineStyles","parentCs","targetChildren","tagName","cssStyleText","cs","propertyValue","exportedStyles","svgProperties","setAttribute","removeAttribute","toRemove","_i","removeIds","getSvgCloneWithInlineStyles","serializeSvgNode","sanitizeSVG","XMLSerializer","serializeToString","DOMParser","parseFromString","documentElement","imgsrc","encodeURIComponent","canvas","getContext","image","Image","drawImage","toBlob","filesize","round","ext","timeFormat","clientSide","fallback","serverSide","detectIE","pngWidth","pngHeight","svgString2Image","dataBlob","warn","info","exportPngServerSide","doc","jsPDF","dummy","svg2pdf","firstChild","filename","successCallback","failCallback","setRequestHeader","getResponseHeader","onreadystatechange","oEvent","readyState","postAndSave","noDownload","clientSidePdfExportAvailable","isClientSidePdfExportAvailable","svgElement","exportPdfClientSide","exportPdfServerSide","sanitized","csvRows","escapeCsvField","join","csvString","field","dataURLtoBlob","FileLoader","getElementById","onchange","file","FileReader","files","readAsText","click","parser","styleClass","newDiagram","saveDiagram","export","manual","criterion1","criterion2","twoCriteria","objectiveRule","expected-value-maximization","expected-value-minimization","maxi-min","maxi-max","mini-min","mini-max","min-max","max-min","min-min","max-max","settings","about","downloadCsv","headers","policyNo","comment","dominatedBy","extendedDominatedBy","incratio","gradientArrow1","gradientArrow2","dominatedRegion","legend","gradientArrows","runJob","stopJob","resumeJob","back","removeParameterValue","addParameterValue","jobResultTable","multiplePoliciesInCell","aggregators","maximum","minimum","renderers","heatmap","policyPreview","sensitivity-analysis","param","step","computations","largeScenariosNumber","largeParametersNumber","tornado-diagram","defaultValue","low","high","xAxisTitle","probabilistic-sensitivity-analysis","numberOfRuns","help","param-computation","spider-plot","percentageChangeRange","yAxisTitle","league-table","generic","general","numberFormatLocale","highlightedColor","highlightedDefaultColor","extendedDominatedColor","dominatedColor","defaultColor","other","header","2","3","keyboard","4","5","6","docs","recalculate","evaluatedVariables","sidebarDefinitions","openDialog","multipleCriteria","defaultMaximizedCriterionName","defaultMinimizedCriterionName","nameOfCriterion1","nameOfCriterion2","defaultCriterion1Weight","weightLowerBound","weightUpperBound","showLeagueTable","flip","layoutOptions","marginHorizontal","marginVertical","diagramDetails","objectProperties","childrenProperties","child","confirm","beforeunload","jsonParse","fileApiNotSupported","inputFilesProperty","notSilverDecisionsFile","incorrectVersionFormat","fileVersionNewerThanApplicationVersion","objectiveComputationFailure","diagramDrawingFailure","malformedData","pngExportNotSupported","pngExportNotSupportedIE","svgExportNotSupported","pdfExportNotSupported","incorrectPayoffNumberFormatOptions","incorrectProbabilityNumberFormatOptions","incorrectNumberFormatOptions","jsPDFisNotIncluded","serverSideExportRequestFailure","_app","_package","_jobParameterDefinition","_autocomplete","i18nPrefix","onChange","paramTypeToInputType","paramTypeToInputAttrs","PARAMETER_TYPE","BOOLEAN","DATE","INTEGER","NUMBER","STRING","clean","build","definitions","pristine","customValidators","strictValidation","checkCustomValidators","enabled","jobParameterDefinitions","parentValueObject","parentPath","onInput","paramsEnter","paramSelection","repeating","maxOccurs","vi","minOccurs","getEmptyValue","getParamNameI18n","valuesContainer","addButton","callbacks","onValueRemoved","buildParameterValues","buildParameterSingleValue","paramDefinition","paramValuesEnter","paramValuesMerge","indexToSelection","checkCustomValidator","allValid","validateSingleValue","derivedValueUpdaters","updateDerivedValues","updater","COMPOSITE","nestedParameters","derivedValuesConfigs","derivedValueConfig","buildDerivedValue","removeButton","inputId","paramValue","getParamHelpI18n","helpContainer","inputType","additionalInputAttrs","concat","getInput","parseInput","_value","parameterType","parseFloat","_pivotTable","JobResultTableConfig","JobResultTable","pivotTable","PivotTable","filters","pivotData","selectedIndexes","selectedRows","forEachMatchingRecord","record","pivotOptions","pivotUtilities","derivers","vals","cols","hiddenAttributes","aggregatorName","getAggregatorName","rendererOptions","table","clickCallback","colorScaleGenerator","scaleLinear","range","rendererName","getRendererName","_jobResultTable","jobResult","expectedValues","medians","standardDeviations","policyIsBestProbabilities","trace","attributeArray","rowKey","colKey","numInputs","roundVariables","csvDAta","totalInColNum","_totalInColNum","_lineChart","SpiderPlotConfig","showLegend","guides","domainMargin","series","dotRadius","LineChartConfig","placeholderSelector","LineChart","percentageRangeValues","rangeVal","payoffs","baseContainer","_divergingStackedBarChart","TornadoDiagramPlotConfig","forceLegend","categoryNames","colorRange","middleValue","showBarValues","DivergingStackedBarChartConfig","DivergingStackedBarChart","defaultPayoff","varExtent","variableExtents","extents","categories","extentVariableValues","_leagueTable","_leagueTablePlot","onRowHover","emphasize","onRowHoverOut","LeagueTable","defaultWeight","onDotHover","onDotHoverOut","groupConf","groupOrdering","optimalForDefaultWeight","groupKey","LeagueTablePlot","initJobParams","initResultPlot","_scatterplot","LeagueTablePlotConfig","gradientArrowLength","gradientArrowOffset","emphasizedDotRadius","dotId","ScatterPlotConfig","ScatterPlot","checkOrdering","getOrdering","newData","updateIcerLines","updateDominatedRegion","updateGradientArrows","updateDotLabels","linesContainerSelector","linesContainerClass","prefixClass","linesContainer","svgG","dotsContainerClass","clipPathId","highlightedPoints","groupValue","highlightedDefaultPoints","dominatedRegionPoints","lowPoint","highPoint","minPoint","maxPoint","xAxisExtent","infLowY","infLowPoint","infHighPoint","_x","defaultPoint","defLowPoint","defHighPoint","_x2","unshift","dominatedRegionContainerSelector","dominatedRegionContainer","worstPoint","prev","curr","area","y0","labelsContainerSelector","labels","coeff","x1","y1","y2","x2","arrowsContainerSelector","arrowsContainer","arrowClass","arrows","arrowsEnter","arrowsMerge","_emphasize","emphasizeDot","dotClass","legendCells","getTextData","word","words","lineNumber","tspan","pop","LeagueTableConfig","resultTableHead","resultTableBody","resultTableFoot","drawHeaders","drawRows","headerData","headersMerge","rowsData","cells","rowspan","getRowComment","rowsMerge","cellsMerge","policy1","policy2","numberFormat","showZero","origAggregators","args1","res1","res","format_","origX","revertAggregators","origAggregator","pivotUI","toLowerCase","_payoffInputValidator","_probabilityInputValidator","_requiredInputValidator","_mcdmWeightValueValidator","dispatch","initLayoutOptions","initDiagramDetails","initDefinitions","initMultipleCriteria","onObjectUpdated","onMultiCriteriaUpdated","layoutOptionsContainer","autoLayoutOptionsGroup","diagramDetailsContainer","definitionsContainer","onDefinitionsCodeChanged","definitionsEvaluatedValuesContainer","openDefinitionsDialog","multipleCriteriaContainer","showLeagueTableButton","flipCriteriaButton","weightParser","multipleCriteriaFields","RequiredInputValidator","lowerBoundValueAccessor","upperBoundValueAccessor","weightValueValidator","McdmWeightValueValidator","upper","compare","lower","updateInputs","leagueTableAvailable","isLeagueTableAvailable","getValue","pristineStateSnapshot","setValue","objectProps","headerText","getHeaderTextForObject","fieldList","getFieldListForObject","updateObjectFields","updateObjectChildrenProperties","childObjects","getChildObjectList","objectType","getObjectType","childPropsSelector","ObjectInputField","PayoffInputValidator","ProbabilityInputValidator","fieldsMerge","fieldSelection","setSyntaxValidity","isFieldValid","customOnInput","checkFieldStatus","about_de","about_en","about_fr","about_it","about_pl","diagramDetailsBox","settingsDialogFormGroup","inputGroup","selectInputGroup","jobParameter","loadingIndicator","fullscreenPopup","warningMessage","_fileLoader","hiddenClass","initDiagramButtons","initExportToolbarGroup","initLayoutButtons","initUndoRedoButtons","initSettingsButton","initAboutButton","initSensitivityAnalysisButton","initRecomputeButton","initViewModeToolbarGroup","initObjectiveRuleToolbarGroup","newDiagramButton","openDiagramButton","openFile","saveDiagramButton","saveToFile","onLayoutChanged","layoutButtons","disableAutoLayout","updateLayoutButtons","settingsButton","aboutButton","recomputeButton","sensitivityAnalysisButton","openSensitivityAnalysis","undoRedoStateChangedCallback","onUndoRedoChanged","undoButton","redoButton","updateUndoRedoButtons","updateSensitivityAnalysisButton","updateViewModeValue","updateObjectiveRuleOptions","updateObjectiveRuleValue","initExportToPngButton","initExportSvgButton","initExportPdfButton","saveAsPng","saveAsSvg","saveAsPdf","objectiveRuleSelect","getCurrentObjectiveRule","viewModeSelect","getViewModes","getCurrentViewMode","NumberInputValidator","isNumber","hasAssignmentExpression","isHash"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar copy             = require('es5-ext/object/copy')\n  , normalizeOptions = require('es5-ext/object/normalize-options')\n  , ensureCallable   = require('es5-ext/object/valid-callable')\n  , map              = require('es5-ext/object/map')\n  , callable         = require('es5-ext/object/valid-callable')\n  , validValue       = require('es5-ext/object/valid-value')\n\n  , bind = Function.prototype.bind, defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = validValue(desc) && callable(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (options.resolveContext != null) ensureCallable(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement /*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Array.from\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === \"dwa\"));\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity\nmodule.exports = function (arrayLike /*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(length = arrayLike.length);\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call(\n\t(function () {\n\t\treturn arguments;\n\t})()\n);\n\nmodule.exports = function (value) {\n\treturn objToString.call(value) === id;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(require(\"./noop\"));\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && objToString.call(value) === id;\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","/* eslint strict: \"off\" */\n\nmodule.exports = (function () {\n\treturn this;\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Math.sign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn (sign(10) === 1) && (sign(-20) === -1);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Number.isNaN\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar numberIsNaN = Number.isNaN;\n\tif (typeof numberIsNaN !== \"function\") return false;\n\treturn !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\t// eslint-disable-next-line no-self-compare\n\treturn value !== value;\n};\n","\"use strict\";\n\nvar sign = require(\"../math/sign\")\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n\n  , max = Math.max;\n\nmodule.exports = function (value) {\n return max(0, toInteger(value));\n};\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb /*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.assign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn (obj.foo + obj.bar + obj.trzy) === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src /*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: true,\n\t\tvalue: undefined\n\t};\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","// Deprecated\n\n\"use strict\";\n\nmodule.exports = function (obj) {\n return typeof obj === \"function\";\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) {\n\treturn (isValue(value) && map[typeof value]) || false;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) {\n return (val !== _undefined) && (val !== null);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb /*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1 /*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.setPrototypeOf\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject        = require(\"../is-object\")\n  , value           = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty  = Object.defineProperty\n  , nullDesc        = {\n\tconfigurable: true,\n\tenumerable: false,\n\twritable: true,\n\tvalue: undefined\n}\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n}(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n));\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? String.prototype.contains\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn (str.contains(\"dwa\") === true) && (str.contains(\"foo\") === false);\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","'use strict';\n\nif (!require('./is-implemented')()) {\n\tObject.defineProperty(require('es5-ext/global'), 'Set',\n\t\t{ value: require('./polyfill'), configurable: true, enumerable: false,\n\t\t\twritable: true });\n}\n","'use strict';\n\nmodule.exports = function () {\n\tvar set, iterator, result;\n\tif (typeof Set !== 'function') return false;\n\tset = new Set(['raz', 'dwa', 'trzy']);\n\tif (String(set) !== '[object Set]') return false;\n\tif (set.size !== 3) return false;\n\tif (typeof set.add !== 'function') return false;\n\tif (typeof set.clear !== 'function') return false;\n\tif (typeof set.delete !== 'function') return false;\n\tif (typeof set.entries !== 'function') return false;\n\tif (typeof set.forEach !== 'function') return false;\n\tif (typeof set.has !== 'function') return false;\n\tif (typeof set.keys !== 'function') return false;\n\tif (typeof set.values !== 'function') return false;\n\n\titerator = set.values();\n\tresult = iterator.next();\n\tif (result.done !== false) return false;\n\tif (result.value !== 'raz') return false;\n\n\treturn true;\n};\n","// Exports true if environment provides native `Set` implementation,\n// whatever that is.\n\n'use strict';\n\nmodule.exports = (function () {\n\tif (typeof Set === 'undefined') return false;\n\treturn (Object.prototype.toString.call(Set.prototype) === '[object Set]');\n}());\n","'use strict';\n\nvar setPrototypeOf    = require('es5-ext/object/set-prototype-of')\n  , contains          = require('es5-ext/string/#/contains')\n  , d                 = require('d')\n  , Iterator          = require('es6-iterator')\n  , toStringTagSymbol = require('es6-symbol').toStringTag\n\n  , defineProperty = Object.defineProperty\n  , SetIterator;\n\nSetIterator = module.exports = function (set, kind) {\n\tif (!(this instanceof SetIterator)) return new SetIterator(set, kind);\n\tIterator.call(this, set.__setData__, set);\n\tif (!kind) kind = 'value';\n\telse if (contains.call(kind, 'key+value')) kind = 'key+value';\n\telse kind = 'value';\n\tdefineProperty(this, '__kind__', d('', kind));\n};\nif (setPrototypeOf) setPrototypeOf(SetIterator, Iterator);\n\nSetIterator.prototype = Object.create(Iterator.prototype, {\n\tconstructor: d(SetIterator),\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === 'value') return this.__list__[i];\n\t\treturn [this.__list__[i], this.__list__[i]];\n\t}),\n\ttoString: d(function () { return '[object Set Iterator]'; })\n});\ndefineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));\n","'use strict';\n\nvar clear          = require('es5-ext/array/#/clear')\n  , eIndexOf       = require('es5-ext/array/#/e-index-of')\n  , setPrototypeOf = require('es5-ext/object/set-prototype-of')\n  , callable       = require('es5-ext/object/valid-callable')\n  , d              = require('d')\n  , ee             = require('event-emitter')\n  , Symbol         = require('es6-symbol')\n  , iterator       = require('es6-iterator/valid-iterable')\n  , forOf          = require('es6-iterator/for-of')\n  , Iterator       = require('./lib/iterator')\n  , isNative       = require('./is-native-implemented')\n\n  , call = Function.prototype.call\n  , defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf\n  , SetPoly, getValues, NativeSet;\n\nif (isNative) NativeSet = Set;\n\nmodule.exports = SetPoly = function Set(/*iterable*/) {\n\tvar iterable = arguments[0], self;\n\tif (!(this instanceof SetPoly)) throw new TypeError('Constructor requires \\'new\\'');\n\tif (isNative && setPrototypeOf) self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));\n\telse self = this;\n\tif (iterable != null) iterator(iterable);\n\tdefineProperty(self, '__setData__', d('c', []));\n\tif (!iterable) return self;\n\tforOf(iterable, function (value) {\n\t\tif (eIndexOf.call(this, value) !== -1) return;\n\t\tthis.push(value);\n\t}, self.__setData__);\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(SetPoly, NativeSet);\n\tSetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });\n}\n\nee(Object.defineProperties(SetPoly.prototype, {\n\tadd: d(function (value) {\n\t\tif (this.has(value)) return this;\n\t\tthis.emit('_add', this.__setData__.push(value) - 1, value);\n\t\treturn this;\n\t}),\n\tclear: d(function () {\n\t\tif (!this.__setData__.length) return;\n\t\tclear.call(this.__setData__);\n\t\tthis.emit('_clear');\n\t}),\n\tdelete: d(function (value) {\n\t\tvar index = eIndexOf.call(this.__setData__, value);\n\t\tif (index === -1) return false;\n\t\tthis.__setData__.splice(index, 1);\n\t\tthis.emit('_delete', index, value);\n\t\treturn true;\n\t}),\n\tentries: d(function () { return new Iterator(this, 'key+value'); }),\n\tforEach: d(function (cb/*, thisArg*/) {\n\t\tvar thisArg = arguments[1], iterator, result, value;\n\t\tcallable(cb);\n\t\titerator = this.values();\n\t\tresult = iterator._next();\n\t\twhile (result !== undefined) {\n\t\t\tvalue = iterator._resolve(result);\n\t\t\tcall.call(cb, thisArg, value, value, this);\n\t\t\tresult = iterator._next();\n\t\t}\n\t}),\n\thas: d(function (value) {\n\t\treturn (eIndexOf.call(this.__setData__, value) !== -1);\n\t}),\n\tkeys: d(getValues = function () { return this.values(); }),\n\tsize: d.gs(function () { return this.__setData__.length; }),\n\tvalues: d(function () { return new Iterator(this); }),\n\ttoString: d(function () { return '[object Set]'; })\n}));\ndefineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));\ndefineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));\n","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","/*!\n * jQuery UI :data 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.extend( $.expr[ \":\" ], {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} ) );\n","export * from './src/index'\n","import * as d3 from \"./d3\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\n\nexport class AppUtils {\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, AppUtils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, AppUtils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width) {\n        var textObj = textD3Obj.node();\n        textObj.textContent = textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength() > width + margin) {\n            for (var x = textString.length - 3; x > 0; x -= 1) {\n                if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                    textObj.textContent = textString.substring(0, x) + \"...\";\n                    return true;\n                }\n            }\n            textObj.textContent = \"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n        var ellipsisPlaced = AppUtils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if (ellipsisPlaced && tooltip) {\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element) {\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static getTranslation(transform) {\n        // Create a dummy g for calculation purposes only. This will never\n        // be appended to the DOM and will be discarded once this function\n        // returns.\n        var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        // Set the transform attribute to the provided string value.\n        g.setAttributeNS(null, \"transform\", transform);\n\n        // consolidate the SVGTransformList containing all transformations\n        // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n        // its SVGMatrix.\n        var matrix = g.transform.baseVal.consolidate().matrix;\n\n        // As per definition values e and f are the ones for the translation.\n        return [matrix.e, matrix.f];\n    }\n\n\n    static closestPoint(pathNode, point) {\n        var pathLength = pathNode.getTotalLength(),\n            precision = 8,\n            best,\n            bestLength,\n            bestDistance = Infinity;\n\n        // linear scan for coarse approximation\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n                best = scan, bestLength = scanLength, bestDistance = scanDistance;\n            }\n        }\n\n        // binary search for precise estimate\n        precision /= 2;\n        while (precision > 0.5) {\n            var before,\n                after,\n                beforeLength,\n                afterLength,\n                beforeDistance,\n                afterDistance;\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n                best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n                best = after, bestLength = afterLength, bestDistance = afterDistance;\n            } else {\n                precision /= 2;\n            }\n        }\n\n        best = [best.x, best.y];\n        best.distance = Math.sqrt(bestDistance);\n        return best;\n\n        function distance2(p) {\n            var dx = p.x - point[0],\n                dy = p.y - point[1];\n            return dx * dx + dy * dy;\n        }\n    }\n\n    static growl(message, type='info', position='right', time = 2000){\n        var html = Templates.get('growl', {message:message, type:type})\n\n        var g = d3.select('body').selectOrAppend('div.sd-growl-list.'+position).append('div').html(html);\n        setTimeout(function(){\n            g.remove();\n        }, time)\n    }\n\n\n    static createElement(tag, attribs, parent) {\n        var el = document.createElement(tag);\n\n        if (attribs) {\n            AppUtils.deepExtend(el, attribs);\n        }\n        if (parent) {\n            parent.appendChild(el);\n        }\n        return el;\n    };\n\n    static removeElement(element) {\n        element.parentNode.removeChild(element);\n    }\n\n    static replaceUrls(text){\n        if(!text){\n            return text;\n        }\n        var urlRegexp = /((ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/\n\n        return text.replace(urlRegexp, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n\n    static escapeHtml(html)\n    {\n        var text = document.createTextNode(html);\n        var div = document.createElement('div');\n        div.appendChild(text);\n        return div.innerHTML;\n    }\n\n    static dispatchHtmlEvent(element, name){\n        if (\"createEvent\" in document) {\n            var evt = document.createEvent(\"HTMLEvents\");\n            evt.initEvent(name, false, true);\n            element.dispatchEvent(evt);\n        }\n        else\n            element.fireEvent(\"on\"+name);\n    }\n\n    static dispatchEvent(name, data){\n        var event;\n        try{\n            event = new  CustomEvent(name,{ 'detail': data });\n        }catch (e){ //IE\n            event = document.createEvent('CustomEvent');\n            event.initCustomEvent(name, false, false, data);\n        }\n        document.dispatchEvent(event);\n    }\n\n    static getValidationMessage(error){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var key = 'validation.' + error.name;\n        return i18n.t(key, error.data);\n    }\n\n    static hide(selection){\n        selection.classed('sd-hidden', true);\n    }\n\n    static show(selection, show=true){\n        selection.classed('sd-hidden', !show);\n    }\n\n\n\n    static isHidden(el, exact = true) {\n        if(!el){\n            return true;\n        }\n        if(exact){\n            var style = window.getComputedStyle(el);\n            return (style.display === 'none')\n        }\n        return (el.offsetParent === null)\n    }\n\n    static getJSON(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('get', url, true);\n        xhr.responseType = 'json';\n        xhr.onload = function () {\n            var status = xhr.status;\n            if (status == 200) {\n                callback(xhr.response, null);\n            } else {\n                callback(null, status);\n            }\n        };\n        xhr.send();\n    }\n}\n","import * as d3 from '../d3'\n\n/*based on:\n * github.com/patorjk/d3-context-menu */\n\nexport class ContextMenu {\n    openCallback;\n    closeCallback;\n\n    constructor(menu, opts) {\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1])\n            .enter()\n            .append('div')\n            .attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu')\n                .on('contextmenu', function (d) {\n                    d3.select('.d3-context-menu').style('display', 'none');\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                })\n                .append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n                .append('li')\n                .attr('class', function (d) {\n                    var ret = '';\n                    if (d.divider) {\n                        ret += ' is-divider';\n                    }\n                    if (d.disabled) {\n                        ret += ' is-disabled';\n                    }\n                    if (!d.action) {\n                        ret += ' is-header';\n                    }\n                    return ret;\n                })\n                .html(function (d) {\n                    if (d.divider) {\n                        return '<hr>';\n                    }\n                    if (!d.title) {\n                        console.error('No title attribute set. Check the spelling of your options.');\n                    }\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\n                })\n                .on('click', function (d, i) {\n                    if (d.disabled) return; // do nothing if disabled\n                    if (!d.action) return; // headers have no \"action\"\n                    d.action(elm, data, index);\n                    d3.select('.d3-context-menu').style('display', 'none');\n\n                    if (self.closeCallback) {\n                        self.closeCallback();\n                    }\n                });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu')\n                .style('left', (d3.event.pageX - 2) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n                .style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    };\n\n    static hide() {\n        d3.select('.d3-context-menu').style('display', 'none');\n    }\n\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class EdgeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n            var menu = [];\n\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectDecisionNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectDecisionNode(d)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectChanceNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectChanceNode(d)\n                }\n            });\n\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport * as d3 from '../d3'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class MainContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var mousePosition = null;\n        var menu = function (d) {\n\n            var menu = [];\n            menu.push({\n                title: i18n.t('contextMenu.main.addDecisionNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.DecisionNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.main.addChanceNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.ChanceNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.addText'),\n                action: function (elm, d, i) {\n                    var newText = new model.Text(mousePosition);\n                    treeDesigner.addText(newText);\n                },\n\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNewLocation(mousePosition);\n                },\n                disabled: !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            });\n            menu.push({divider: true});\n\n            menu.push({\n                title: i18n.t('contextMenu.main.selectAllNodes'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectAllNodes();\n                }\n            });\n            return menu;\n        };\n\n        super(menu, {onOpen: () => {\n            treeDesigner.clearSelection();\n            mousePosition = new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true));\n\n        }});\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class NodeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner, operationsForObject) {\n        var menu = function (d) {\n\n            var copyMenuItem = {\n                title: i18n.t('contextMenu.node.copy'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.copySelectedNodes();\n                }\n            };\n            var cutMenuItem = {\n                title: i18n.t('contextMenu.node.cut'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.cutSelectedNodes();\n                }\n            };\n            var pasteMenuItem = {\n                title: i18n.t('contextMenu.node.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNode(d);\n                },\n                disabled: d.folded || !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            };\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.node.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.removeSelectedNodes();\n\n                }\n            };\n\n            var menu = [];\n            if (d.type == model.TerminalNode.$TYPE) {\n                menu = [copyMenuItem, cutMenuItem, deleteMenuItem];\n                NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n                return menu;\n            }\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.addDecisionNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addDecisionNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addChanceNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addChanceNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addTerminalNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addTerminalNode(d)\n                    }\n                });\n                menu.push({divider: true});\n            }\n\n            menu.push(copyMenuItem);\n            menu.push(cutMenuItem);\n            menu.push(pasteMenuItem);\n            menu.push(deleteMenuItem);\n\n            NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.node.selectSubtree'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectSubTree(d, true);\n                }\n            });\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.fold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d);\n                    }\n                });\n            }else{\n                menu.push({\n                    title: i18n.t('contextMenu.node.unfold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d, false);\n                    }\n                });\n            }\n\n            if(operationsForObject){\n                var operations = operationsForObject(d);\n                if(operations.length) {\n                    menu.push({divider: true});\n                    operations.forEach(op=>{\n                        menu.push({\n                            title: i18n.t('contextMenu.node.'+op.name),\n                            action: function (elm, d, i) {\n                                treeDesigner.performOperation(d, op);\n                            },\n                            disabled: !op.canPerform(d)\n                        });\n                    })\n                }\n            }\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n\n    static addNodeConversionOptions(d, menu, treeDesigner){\n        var conversionOptions = NodeContextMenu.getNodeConversionOptions(d, treeDesigner);\n        if(conversionOptions.length){\n            menu.push({divider: true});\n            conversionOptions.forEach(o=>menu.push(o));\n\n        }\n    }\n\n    static getNodeConversionOptions(d, treeDesigner){\n        var options = [];\n\n        if(d.folded){\n            return [];\n        }\n\n        var allAllowedTypes = [model.DecisionNode.$TYPE, model.ChanceNode.$TYPE, model.TerminalNode.$TYPE];\n\n        if(!d.childEdges.length && d.$parent){\n            allAllowedTypes.filter(t=>t!==d.type).forEach(type=>{\n                options.push(NodeContextMenu.getNodeConversionOption(type, treeDesigner))\n            })\n        }else{\n            if(d instanceof model.DecisionNode){\n                options.push(NodeContextMenu.getNodeConversionOption(model.ChanceNode.$TYPE, treeDesigner))\n            }else{\n                options.push(NodeContextMenu.getNodeConversionOption(model.DecisionNode.$TYPE, treeDesigner))\n            }\n        }\n        return options;\n    }\n\n    static getNodeConversionOption(typeToConvertTo, treeDesigner){\n        return {\n            title: i18n.t('contextMenu.node.convert.'+typeToConvertTo),\n            action: function (elm, d, i) {\n                treeDesigner.convertNode(d, typeToConvertTo);\n            },\n        }\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class TextContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.text.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectText(d, true, true);\n                    treeDesigner.removeSelectedTexts()\n\n                }\n            };\n            var menu = [];\n            menu.push(deleteMenuItem);\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addText\": \"Text hinzufügen \",\n            \"paste\": \"Einfügen\",\n            \"selectAllNodes\": \"Alle Knoten auswählen\"\n        },\n        \"node\":{\n            \"copy\": \"Kopieren\",\n            \"cut\": \"Ausschneiden\",\n            \"paste\": \"Einfügen\",\n            \"delete\": \"Löschen\",\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addTerminalNode\": \"Endknotten hinzufügen\",\n            \"convert\":{\n                \"decision\": \"Als Entscheidungsknoten\",\n                \"chance\": \"Als Zufall Knoten\",\n                \"terminal\": \"Als Endknoten\"\n            },\n            \"selectSubtree\": \"Teilbaum wählen\",\n            \"fold\": \"Teilbaum falten\",\n            \"unfold\": \"Teilbaum entfalten\",\n\t\t\t\n            \"flipSubtree\": \"Teilbaum umdrehen\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Entscheidungsknoten Injizieren\",\n            \"injectChanceNode\": \"Zufall Knoten Injizieren\"\n        },\n        \"text\":{\n            \"delete\": \"Löschen\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Pfad, der nicht mit dem Endknoten endet\",\n        \"probabilityDoNotSumUpTo1\": \"Die Summe der Wahrscheinlichkeiten ist nicht gleich 1\",\n        \"invalidProbability\": \"Ungültige Wahrscheinlichkeit im Zweig #{{number}}\",\n        \"invalidPayoff\": \"Ungültige Auszahlung in Zweig #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Auswahlbürste deaktiviert\",\n        \"brushEnabled\": \"Auswahlbürste aktiviert\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregierte Auszahlung {{number}}\",\n                \"named\": \"Aggregierte {{name}}\"\n            },\n            \"probabilityToEnter\": \"Wahrscheinlichkeit\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Wahrscheinlichkeit: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addText\": \"Add Text\",\n            \"paste\": \"Paste\",\n            \"selectAllNodes\": \"Select all nodes\"\n        },\n        \"node\":{\n            \"copy\": \"Copy\",\n            \"cut\": \"Cut\",\n            \"paste\": \"Paste\",\n            \"delete\": \"Delete\",\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addTerminalNode\": \"Add Terminal Node\",\n            \"convert\":{\n                \"decision\": \"As Decision Node\",\n                \"chance\": \"As Chance Node\",\n                \"terminal\": \"As Terminal Node\"\n            },\n            \"selectSubtree\": \"Select subtree\",\n            \"fold\": \"Fold subtree\",\n            \"unfold\": \"Unfold subtree\",\n            \"flipSubtree\": \"Flip subtree\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inject Decision Node\",\n            \"injectChanceNode\": \"Inject Chance Node\"\n        },\n        \"text\":{\n            \"delete\": \"Delete\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Path not ending with terminal node\",\n        \"probabilityDoNotSumUpTo1\": \"Probabilities do not sum up to 1\",\n        \"invalidProbability\": \"Invalid probability in edge #{{number}}\",\n        \"invalidPayoff\": \"Invalid payoff in edge #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selection brush disabled\",\n        \"brushEnabled\": \"Selection brush enabled\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregated Payoff {{number}}\",\n                \"named\": \"Aggregated {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probability to enter\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probability: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addText\": \"Ajouter du texte\",\n            \"paste\": \"Coller\",\n            \"selectAllNodes\": \"Sélectionner tous les nouds\"\n        },\n        \"node\":{\n            \"copy\": \"Copie\",\n            \"cut\": \"Couper\",\n            \"paste\": \"Coller\",\n            \"delete\": \"Effacer\",\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addTerminalNode\": \"Ajouter un noeud terminal\",\n            \"convert\":{\n                \"decision\": \"Comme noud de décision\",\n                \"chance\": \"Comme noud aléatoire\",\n                \"terminal\": \"Comme un noeud terminal\"\n            },\n            \"selectSubtree\": \"Sélectionner une sous-arborescence\",\n            \"fold\": \"Plier sous-arbre\",\n            \"unfold\": \"Déplier arbre sous-arbre\",\n            \"flipSubtree\": \"Basculer sous-arbre\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Injecter un noeud de décision\",\n            \"injectChanceNode\": \"Injecter un noeud de chance\"\n        },\n        \"text\":{\n            \"delete\": \"Effacer\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Parcours non terminé par noeud terminal\",\n        \"probabilityDoNotSumUpTo1\": \"La somme des probabilités n'est pas 1 ou plus\",\n        \"invalidProbability\": \"Probabilité invalide - le bord #{{number}}\",\n        \"invalidPayoff\": \"Avantage invalide - le bord #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Brosse de sélection désactivée\",\n        \"brushEnabled\": \"Brosse de sélection activée\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Avantage agrégé {{number}}\",\n                \"named\": \"Agrégé  {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilité d'entrée\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilité: {{value}}\"\n        }\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        let resources = {\n            en: {\n                translation: en\n            },\n            pl: {\n                translation: pl\n            },\n            it: {\n                translation: it\n            },\n            de: {\n                translation: de\n            },\n            fr: {\n                translation: fr\n            }\n        };\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: resources\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addText\": \"Aggiungi testo\",\n            \"paste\": \"Incolla\",\n            \"selectAllNodes\": \"Seleziona tutti i nodi\"\n        },\n        \"node\":{\n            \"copy\": \"Copia\",\n            \"cut\": \"Taglia\",\n            \"paste\": \"Incolla\",\n            \"delete\": \"Cancella\",\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addTerminalNode\": \"Aggiungi un nodo terminale\",\n            \"convert\":{\n                \"decision\": \"Come Decision Node\",\n                \"chance\": \"Come Chance Node\",\n                \"terminal\": \"Come Terminal Node\"\n            },\n            \"selectSubtree\": \"Seleziona Sotto-albero\",\n            \"fold\": \"Piega sotto-albero\",\n            \"unfold\": \"Dispiegarsi sotto-albero\",\t\t\t\n            \"flipSubtree\": \"Ribalta sotto-albero\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inietta nodo di decisione\",\n            \"injectChanceNode\": \"Inietta nodo opportunità\"\n        },\n        \"text\":{\n            \"delete\": \"Cancella\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Percorso senza nodo terminale\",\n        \"probabilityDoNotSumUpTo1\": \"La somma delle probabilità è diversa da 1\",\n        \"invalidProbability\": \"Probabilità non valida - bordo #{{number}}\",\n        \"invalidPayoff\": \"Saldo non valido - bordo #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selezione pennello disabilitata\",\n        \"brushEnabled\": \"Selezione pennello abilitata\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Saldo aggregato {{number}}\",\n                \"named\": \"Aggregato {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilità da inserire\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilità: {{value}}\"\n        }\n    }\n}\n","module.exports={\n\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addText\": \"Dodaj Tekst\",\n            \"paste\": \"Wklej\",\n            \"selectAllNodes\": \"Zaznacz wszystkie węzły\"\n        },\n        \"node\":{\n            \"copy\": \"Kopiuj\",\n            \"cut\": \"Wytnij\",\n            \"paste\": \"Wklej\",\n            \"delete\": \"Usuń\",\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addTerminalNode\": \"Dodaj Węzeł Końcowy\",\n            \"convert\":{\n                \"decision\": \"Jako Węzeł Decyzyjny\",\n                \"chance\": \"Jako Węzeł Losowy\",\n                \"terminal\": \"Jako Węzeł Końcowy\"\n            },\n            \"selectSubtree\": \"Zaznacz poddrzewo\",\n            \"fold\": \"Zwiń poddrzewo\",\n            \"unfold\": \"Rozwiń poddrzewo\",\n            \"flipSubtree\": \"Przewróć poddrzewo\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Wstrzyknij Węzeł Decyzyjny\",\n            \"injectChanceNode\": \"Wstrzyknij Węzeł Losowy\"\n        },\n        \"text\":{\n            \"delete\": \"Usuń\"\n        }\n    },\n\n    \"validation\":{\n        \"incompletePath\": \"Ostatnim węzłem w ścieżce powinien być Węzeł Końcowy\",\n        \"probabilityDoNotSumUpTo1\": \"Prawdopodobieństwa nie sumują sie do 1\",\n        \"invalidProbability\": \"Niepoprawne prawdopodobieństwo na krawędzi #{{number}}\",\n        \"invalidPayoff\": \"Niepoprawna wypłata na krawędzi #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Zaznaczanie wyłączone\",\n        \"brushEnabled\": \"Zaznaczanie włączone\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Zagregowana wypłata {{number}}\",\n                \"named\": \"Zagregowana {{name}}\"\n            },\n            \"probabilityToEnter\": \"Prawdopodobieństwo wejścia\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Prawdopodobieństwo: {{value}}\"\n        }\n    }\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport * from './tree-designer'\nexport * from './app-utils'\nexport * from './templates'\nexport * from './tooltip'\nexport * from './d3-extensions'\nexport {default as d3} from './d3'\n\n\n","import {Utils} from 'sd-utils'\nimport {domain as model} from 'sd-model'\nimport * as d3 from './d3'\nimport circleSymbol from './symbols/circle'\nimport triangleSymbol from './symbols/triangle'\nimport {AppUtils} from \"./app-utils\";\n\n/*Tree layout manager*/\nexport class Layout{\n\n    treeDesigner;\n    data;\n    config;\n\n    nodeTypeToSymbol = {\n        'decision': d3.symbolSquare,\n        'chance': circleSymbol,\n        \"terminal\": triangleSymbol\n    };\n\n    static MANUAL_LAYOUT_NAME = 'manual';\n\n\n    onAutoLayoutChanged=[];\n\n    nodeTypeOrder = {\n        'decision' : 0,\n        'chance': 0,\n        'terminal': 1\n    };\n\n    treeMargin = 50;\n    targetSymbolSize={};\n    nodeSeparation = (a, b) => a.parent === b.parent ? 1 : 1.2\n\n    constructor(treeDesigner, data, config){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n        this.config = config;\n\n    }\n\n    update(node){\n        if(node && node.$parent){\n            node.$parent.childEdges.sort((a,b)=>a.childNode.location.y - b.childNode.location.y)\n        }\n        if(!this.isManualLayout()){\n            return this.autoLayout(this.config.type, true);\n        }\n        if(node){\n            this.moveNodeToEmptyPlace(node);\n        }else{\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    isManualLayout(){\n        return this.config.type === Layout.MANUAL_LAYOUT_NAME;\n    }\n\n    getNewChildLocation(parent){\n        if(!parent){\n            return new model.Point(this.getNodeMinX(), this.getNodeMinY())\n        }\n        var x = parent.location.x + this.config.gridWidth;\n        var y = parent.location.y;\n        if(parent.childEdges.length){\n            y = parent.childEdges[parent.childEdges.length-1].childNode.location.y+1;\n        }\n\n        return new model.Point(x, y)\n    }\n\n    getInjectedNodeLocation(edge){\n\n        var p = edge.$linePoints[2];\n\n        return new model.Point(p[0], p[1])\n    }\n\n    moveNodeToEmptyPlace(node, redrawIfChanged=true){\n        var positionMap = {};\n        var self = this;\n        node.location.x = Math.max(this.getNodeMinX(node), node.location.x);\n        node.location.y = Math.max(this.getNodeMinY(node), node.location.y);\n\n\n        this.nodesSortedByX = this.data.nodes.slice();\n        this.nodesSortedByX.sort((a,b)=>a.location.x - b.location.x);\n\n        function findCollidingNode(node, location){\n            return Utils.find(self.nodesSortedByX, n=>{\n                if(node == n){\n                    return false;\n                }\n\n                var margin = self.config.nodeSize/3;\n                var x = n.location.x;\n                var y = n.location.y;\n\n                return (location.x - margin <= x && location.x + margin >= x\n                    && location.y - margin <= y && location.y + margin >= y)\n            });\n        }\n\n        var stepX = this.config.nodeSize/2;\n        var stepY = this.config.nodeSize+10;\n        var stepXsameParent = 0;\n        var stepYsameParent = 75;\n        var changed = false;\n        var colidingNode;\n        var newLocation = new model.Point(node.location);\n        while(colidingNode = findCollidingNode(node, newLocation)){\n            changed=true;\n            var sameParent = node.$parent && colidingNode.$parent && node.$parent===colidingNode.$parent;\n            if(sameParent){\n                newLocation.move(stepXsameParent, stepYsameParent);\n            }else{\n                newLocation.move(stepX, stepY);\n            }\n        }\n        if(changed){\n            node.moveTo(newLocation.x,newLocation.y, true);\n            if(redrawIfChanged){\n                this.treeDesigner.redraw(true);\n            }\n        }\n    }\n\n    disableAutoLayout(){\n        this.config.type = Layout.MANUAL_LAYOUT_NAME;\n        this._fireOnAutoLayoutChangedCallbacks();\n    }\n\n\n    nodeSymbolSize = {};\n    drawNodeSymbol(path, transition){\n\n        var self = this;\n        var nodeSize = this.config.nodeSize;\n        this.nodeSymbol = d3.symbol().type(d=> self.nodeTypeToSymbol[d.type])\n            .size(d=>self.nodeSymbolSize[d.$id] ? Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", 64) : 64);\n\n        path\n            .each(function (d) {\n                var path = d3.select(this);\n                var prev = path.attr(\"d\");\n                if(!prev){\n                    path.attr(\"d\", self.nodeSymbol);\n                }\n                var size = Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\");\n                if(!size){\n                    var box = path.node().getBBox();\n                    var error = Math.min(nodeSize / box.width, nodeSize / box.height);\n                    size = error * error * (self.nodeSymbolSize[d.$id]||64);\n                    Utils.set(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", size);\n                }\n                if(transition){\n                    path =  path.transition();\n\n                }else{\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n                path.attr(\"d\", self.nodeSymbol);\n                if(transition){\n                    self.nodeSymbolSize[d.$id] = size;\n                }\n            });\n    }\n\n    nodeLabelPosition(selection) {\n        return selection\n            .attr('x', 0)\n            .attr('y', -this.config.nodeSize / 2 - 7)\n    }\n\n    nodePayoffPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', 0)\n            .attr('y', this.config.nodeSize / 2 + 7)\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeAggregatedPayoffPosition(selection) {\n        var x = this.config.nodeSize / 2 + 7;\n        var self = this;\n        selection\n            .attr('x', x)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let items = d.displayValue('aggregatedPayoff');\n                let number = Utils.isArray(items) ? items.filter(it=>it !== undefined).length : 1;\n                if(number>1){\n                    return -this.getBBox().height/2 + fontSize/2;\n                }\n                return -Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            });\n\n        selection.selectAll('tspan').attr('x', x);\n        return selection;\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'hanging')\n    }\n\n    nodeProbabilityToEnterPosition(selection) {\n        var self = this;\n\n        return Layout.setHangingPosition(selection)\n            .attr('x', this.config.nodeSize / 2 + 7)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let aggregatedPayoffs = d.displayValue('aggregatedPayoff');\n                let aggregatedPayoffsNumber = Utils.isArray(aggregatedPayoffs) ? aggregatedPayoffs.filter(it=>it !== undefined).length : 1;\n                if(aggregatedPayoffsNumber>1){\n\n                    return fontSize*0.6\n                }\n\n                return Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            })\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'central')\n    }\n\n    nodeIndicatorPosition(selection) {\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 8)\n            .attr('y', - this.config.nodeSize/2)\n            .attr('dominant-baseline', 'central')\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeUnfoldButtonPosition(selection) {\n\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 5)\n            .attr('y', 0)\n            .attr('dominant-baseline', 'central')\n    }\n\n    edgeLineD(edge){\n        var line = d3.line()\n            .x(d=> d[0])\n            .y(d=> d[1]);\n        // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n        var parentNode = edge.parentNode;\n        var childNode = edge.childNode;\n\n        var dX = childNode.location.x - parentNode.location.x;\n        var dY = childNode.location.y - parentNode.location.y;\n\n        var sign = dX>=0 ? 1 : -1;\n\n        var slantStartXOffset = Math.min(dX/2, this.config.nodeSize/2+10);\n        var slantWidth = Math.min(this.config.edgeSlantWidthMax, Math.max(dX/2 - slantStartXOffset, 0));\n\n        var point1 = [parentNode.location.x +this.config.nodeSize/2 + 1, parentNode.location.y];\n        var point2 = [Math.max(parentNode.location.x+slantStartXOffset, point1[0]), parentNode.location.y];\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.nodeSize/2+8, dX/2)))), childNode.location.y];\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n        edge.$linePoints = [point1, point2, point3, point4];\n        return line(edge.$linePoints);\n    }\n\n    edgePayoffPosition(selection) {\n        Layout.setHangingPosition(selection)\n            .attr('x', d=>d.$linePoints[2][0] + 2)\n            .attr('y', d=>d.$linePoints[2][1] + 7);\n\n        selection.selectAll('tspan').attr('x', function(d){\n            return d3.select(this.parentNode).datum().$linePoints[2][0] + 2\n        });\n        return selection;\n\n    }\n\n    edgeLabelPosition(selection) {\n        return selection\n            .attr('transform', d=>'translate('+(d.$linePoints[2][0] + 2)+','+(d.$linePoints[2][1] - 7)+')')\n            // .attr('x', d=>d.$linePoints[2][0] + 2)\n            // .attr('y', d=>d.$linePoints[2][1] - 7)\n\n    }\n\n    edgeProbabilityPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', function (d) {\n                var len = this.getComputedTextLength();\n                var min = d.$linePoints[2][0] + 2 + this.previousSibling.childNodes[0].getComputedTextLength() + 7 + len;\n                return Math.max(min, d.$linePoints[3][0] - 8);\n            })\n            .attr('y', d=>d.$linePoints[2][1] + 7)\n    }\n\n    getMinMarginBetweenNodes(){\n      return this.config.nodeSize + 30;\n    }\n\n    getTextMinX(d){\n        let minX = 0;\n        if(d){\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\n            if (bb.x < 0) {\n                minX -= bb.x;\n            }\n        }\n        return minX;\n    }\n\n    getTextMinY(d){\n        let minY = 0;\n        if(d){\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\n            if (bb.y < 0) {\n                minY -= bb.y;\n            }\n        }\n        return minY;\n    }\n\n    getTextMaxX(d){\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n\n    getNodeMinX(d){\n        var self = this;\n        if(d && d.$parent){// && !self.isNodeSelected(d.$parent)\n            return d.$parent.location.x + self.getMinMarginBetweenNodes();\n        }\n        return self.config.nodeSize/2;\n    }\n\n    getNodeMinY(d){\n        return this.config.nodeSize/2;\n    }\n\n    getNodeMaxX(d){\n        var self = this;\n\n        if(d && d.childEdges.length){\n            return d3.min(d.childEdges, e=>!e.childNode.$hidden ? e.childNode.location.x : 9999999)-self.getMinMarginBetweenNodes();\n        }\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n    setGridWidth(width, withoutStateSaving){\n        var self=this;\n        if(this.config.gridWidth===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridWidth: self.config.gridWidth\n                },\n                onUndo: (data)=> {\n                    self.setGridWidth(data.gridWidth, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridWidth(width, true);\n                }\n            });\n        }\n\n        this.config.gridWidth=width;\n        this.update();\n    }\n\n    setGridHeight(gridHeight, withoutStateSaving){\n        var self=this;\n        if(this.config.gridHeight===gridHeight){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridHeight: self.config.gridHeight\n                },\n                onUndo: (data)=> {\n                    self.setGridHeight(data.gridHeight, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridHeight(gridHeight, true);\n                }\n            });\n        }\n\n        this.config.gridHeight=gridHeight;\n        this.update();\n    }\n\n    setNodeSize(nodeSize, withoutStateSaving){\n        var self=this;\n        if(this.config.nodeSize===nodeSize){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    nodeSize: self.config.nodeSize\n                },\n                onUndo: (data)=> {\n                    self.setNodeSize(data.nodeSize, true);\n                },\n                onRedo: (data)=> {\n                    self.setNodeSize(nodeSize, true);\n                }\n            });\n        }\n\n        this.config.nodeSize=nodeSize;\n        this.update();\n        if(this.isManualLayout()){\n            this.fitNodesInPlottingRegion(self.data.getRoots());\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    setEdgeSlantWidthMax(width, withoutStateSaving){\n        var self=this;\n        if(this.config.edgeSlantWidthMax===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    edgeSlantWidthMax: self.config.edgeSlantWidthMax\n                },\n                onUndo: (data)=> {\n                    self.setEdgeSlantWidthMax(data.edgeSlantWidthMax, true);\n                },\n                onRedo: (data)=> {\n                    self.setEdgeSlantWidthMax(width, true);\n                }\n            });\n        }\n\n        this.config.edgeSlantWidthMax=width;\n        this.treeDesigner.redraw(true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        var self=this;\n\n\n\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    newLayout: type,\n                    currentLayout: self.config.type\n                },\n                onUndo: (data)=> {\n                    self.config.type = data.currentLayout;\n                    self._fireOnAutoLayoutChangedCallbacks();\n                },\n                onRedo: (data)=> {\n                    self.autoLayout(data.newLayout, true);\n                }\n            });\n        }\n        this.config.type = type;\n        if(!this.data.nodes.length){\n            this._fireOnAutoLayoutChangedCallbacks();\n            return;\n        }\n\n        var prevTreeMaxY = self.getNodeMinY();\n        this.data.getRoots().forEach(r=>{\n            var root = d3.hierarchy(r, d=>{\n                return d.childEdges.filter(e=>!e.$hidden).map(e=>e.childNode);\n            });\n\n            // root.sort((a,b)=>self.nodeTypeOrder[a.data.type]-self.nodeTypeOrder[b.data.type]);\n            root.sort((a,b)=>a.data.location.y - b.data.location.y);\n\n\n            var layout;\n            if(type==='cluster'){\n                layout = d3.cluster();\n            }else{\n                layout = d3.tree();\n            }\n            layout.nodeSize([self.config.gridHeight, self.config.gridWidth]);\n            layout.separation(self.nodeSeparation);\n\n            layout(root);\n            var minY = 999999999;\n            root.each(d=>{\n                minY = Math.min(minY, d.x);\n            });\n\n            var dy = root.x - minY + prevTreeMaxY;\n            var dx = self.getNodeMinX();\n            var maxY=0;\n            root.each(d=>{\n                d.data.location.x = d.y + dx;\n                d.data.location.y = d.x + dy;\n\n                maxY = Math.max(maxY, d.data.location.y);\n            });\n\n            prevTreeMaxY = maxY + self.config.nodeSize+self.treeMargin;\n        });\n\n\n        // this.transition = true;\n        this.treeDesigner.redraw(true);\n        // this.transition = false;\n\n        this._fireOnAutoLayoutChangedCallbacks();\n        return this;\n    }\n\n    fitNodesInPlottingRegion(nodes){\n        var self = this;\n        var topY = d3.min(nodes, n=>n.location.y);\n        var minY = self.getNodeMinY();\n        var dy = topY - minY;\n\n        var minX = d3.min(nodes, n=>n.location.x);\n        var dx = minX - self.getNodeMinX();\n\n        if(dy<0 ||  dx<0){\n            nodes.forEach(n=>n.move(-dx, -dy));\n        }\n    }\n\n    moveNodes(nodes, dx, dy, pivot){\n        var self = this;\n        var limit = self.config.limitNodePositioning;\n        if(limit){\n            if(dx<0){\n                nodes.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                nodes.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n        var minY = d3.min(nodes, d=>d.location.y);\n        if(minY + dy < self.getNodeMinY()){\n            dy = self.getNodeMinY() - minY;\n        }\n\n        nodes.forEach(d=>{\n            if(limit){\n                Layout.backupNodeLocation(d);\n                var minX = self.getNodeMinX(d);\n                var maxX = self.getNodeMaxX(d);\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y += dy;\n            }else{\n                d.location.x +=dx;\n                d.location.y += dy;\n            }\n\n        });\n\n\n        var revertX = pivot && self.config.limitNodePositioning && (pivot.location.x === pivot.$location.x);\n\n        nodes.forEach(d=>{\n            if(revertX){\n                d.location.x = d.$location.x;\n            }\n            self.treeDesigner.updateNodePosition(d);\n        });\n\n\n    }\n\n    moveTexts(texts, dx, dy){\n        let self = this;\n        let limit = self.config.limitTextPositioning;\n        if(limit){\n            if(dx<0){\n                texts.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                texts.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n\n        texts.forEach(d=>{\n\n\n\n\n            if(limit){\n                let minX = self.getTextMinX(d);\n                let maxX = self.getTextMaxX(d);\n                let minY = self.getTextMinY(d);\n\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y = Math.max(d.location.y+dy, minY);\n\n            }else{\n                d.location.move(dx, dy);\n            }\n            self.treeDesigner.updateTextPosition(d);\n\n        });\n\n    }\n\n    static backupNodeLocation(node) {\n        node.$location = new model.Point(node.location);\n    }\n\n    _fireOnAutoLayoutChangedCallbacks(){\n        this.onAutoLayoutChanged.forEach(c=>c(this.config.type));\n    }\n\n    static setHangingPosition(selection){\n        // window.setTimeout(function(){\n        //     selection.each(function(){\n        //         var h =  this.getBBox().height;\n        //         d3.select(this).attr('dy', h);\n        //     });\n        // },0);\n\n        if(AppUtils.isHidden(selection.node())){ // setting hanging position of hidden elements fails on firefox\n            return selection;\n        }\n\n\n        selection.each(function(){\n            var h =  this.getBBox().height;\n            d3.select(this).attr('dy', '0.75em');\n        });\n\n        return selection;\n    }\n\n}\n\n\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class NodeDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n    stateSnapshot = null;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        if(self.ignoreDrag){\n            self.ignoreDrag=false;\n            self.ignoredDrag=true;\n            return;\n        }\n        self.ignoredDrag=false;\n        self.stateSnapshot = self.data.createStateSnapshot();\n\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var node = d3.select(this);\n        if(!node.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectNode(d);\n        node.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes(true);\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedNode, self){\n        if(self.ignoredDrag){\n            return;\n        }\n\n        if(self.dragEventCount===2 && self.stateSnapshot){\n            self.data.saveStateFromSnapshot(self.stateSnapshot); // TODO save only if something has really changed\n            self.stateSnapshot = null;\n        }\n        self.dragEventCount++;\n        if(self.selectedNodes.length>5 && self.dragEventCount%2!==1){\n            return;\n        }\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n        self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\n\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.redrawEdges();\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n        var node = d3.select(this).classed(\"dragging\", false);\n        if(self.ignoredDrag){\n            return;\n        }\n        self.treeDesigner.layout.update(draggedNode)\n    }\n\n    cancelDrag(){\n        this.ignoreDrag = true;\n    }\n\n}\n\n\n","var epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nexport default {\n    /*draw: function(context, size) {\n        var r = Math.sqrt(size / pi);\n        context.moveTo(r, 0);\n        context.arc(0, 0, r, 0, tau);\n    }*/\n    draw: function(context, size) {\n\n        var r = Math.sqrt(size / pi);\n        var dist =0.552284749831 * r;\n\n        context.moveTo(-r, 0)\n        // context.lineTo(2*r, 2*r)\n        // context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n        context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n\n        context.bezierCurveTo(dist, -r, r, -dist, r,0);\n\n        context.bezierCurveTo(r, dist, dist, r, 0, r);\n\n        context.bezierCurveTo(-dist, r, -r, dist, -r, 0);\n    }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n    draw: function(context, size) {\n        var r = Math.sqrt(size / Math.PI);\n        context.moveTo(-r, 0);\n        context.lineTo(0.9*r, -r);\n        context.lineTo(0.9*r, r);\n        context.closePath();\n    }\n};\n","import {Utils} from \"sd-utils\";\nimport {i18n} from './i18n/i18n'\n\nexport class Templates{\n\n    static growl = require('./templates/growl_message.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n    static styleRule(selector, props){\n        var s = selector+ '{';\n        props.forEach(p=> s+=Templates.styleProp(p[0], p[1]));\n        s+='} ';\n        return s;\n    }\n    static styleProp(styleName, variableName){\n        return  styleName+': <%= '+variableName+' %>; '\n    }\n\n    static treeDesignerSelector = 'svg.sd-tree-designer';\n    static nodeSelector(type, clazz){\n        var s = Templates.treeDesignerSelector+' .node';\n        if(type){\n            s+='.'+type+'-node';\n        }\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n    static edgeSelector(clazz){\n        var s = Templates.treeDesignerSelector+' .edge';\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n\n    static treeDesignerStyles =\n\n        Templates.styleRule(Templates.treeDesignerSelector,[\n            ['font-size', 'fontSize'],\n            ['font-family', 'fontFamily'],\n            ['font-weight', 'fontWeight'],\n            ['font-style', 'fontStyle']\n        ])+\n        //   node\n        Templates.styleRule(Templates.nodeSelector()+' path',[\n            ['fill', 'node.fill'],\n            ['stroke-width', 'node.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'optimal')+' path, '+Templates.nodeSelector('chance', 'optimal')+' path,' +Templates.nodeSelector('terminal', 'optimal')+' path',[\n            ['stroke', 'node.optimal.stroke'],\n            ['stroke-width', 'node.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .label',[\n            ['font-size', 'node.label.fontSize'],\n            ['fill', 'node.label.color']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff',[\n            ['font-size', 'node.payoff.fontSize'],\n            ['fill', 'node.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff.negative',[\n            ['fill', 'node.payoff.negativeColor'],\n        ])+\n\n        //    decision node\n        Templates.styleRule(Templates.nodeSelector('decision')+' path',[\n            ['fill', 'node.decision.fill'],\n            ['stroke', 'node.decision.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'selected')+' path',[\n            ['fill', 'node.decision.selected.fill']\n        ])+\n\n        //    chance node\n        Templates.styleRule(Templates.nodeSelector('chance')+' path',[\n            ['fill', 'node.chance.fill'],\n            ['stroke', 'node.chance.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('chance', 'selected')+' path',[\n            ['fill', 'node.chance.selected.fill']\n        ])+\n\n        //    terminal node\n        Templates.styleRule(Templates.nodeSelector('terminal')+' path',[\n            ['fill', 'node.terminal.fill'],\n            ['stroke', 'node.terminal.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal', 'selected')+' path',[\n            ['fill', 'node.terminal.selected.fill']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff',[\n            ['font-size', 'node.terminal.payoff.fontSize'],\n            ['fill', 'node.terminal.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff.negative',[\n            ['fill', 'node.terminal.payoff.negativeColor'],\n        ])+\n\n\n        //probability\n        Templates.styleRule(Templates.treeDesignerSelector+' .node .probability-to-enter, '+Templates.treeDesignerSelector+' .edge .probability',[\n            ['font-size', 'probability.fontSize'],\n            ['fill', 'probability.color']\n        ])+\n\n        //edge\n        Templates.styleRule(Templates.edgeSelector()+' path',[\n            ['stroke', 'edge.stroke'],\n            ['stroke-width', 'edge.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow path',[\n            ['fill', 'edge.stroke'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector('optimal')+' path',[\n            ['stroke', 'edge.optimal.stroke'],\n            ['stroke-width', 'edge.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-optimal path',[\n            ['fill', 'edge.optimal.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector('selected')+' path',[\n            ['stroke', 'edge.selected.stroke'],\n            ['stroke-width', 'edge.selected.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-selected path',[\n            ['fill', 'edge.selected.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .label',[\n            ['font-size', 'edge.label.fontSize'],\n            ['fill', 'edge.label.color']\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .payoff',[\n            ['font-size', 'edge.payoff.fontSize'],\n            ['fill', 'edge.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector()+' .payoff.negative',[\n            ['fill', 'edge.payoff.negativeColor'],\n        ])+\n\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-title',[\n            ['font-size', 'title.fontSize'],\n            ['font-weight', 'title.fontWeight'],\n            ['font-style', 'title.fontStyle'],\n            ['fill', 'title.color']\n        ]) +\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-description',[\n            ['font-size', 'description.fontSize'],\n            ['font-weight', 'description.fontWeight'],\n            ['font-style', 'description.fontStyle'],\n            ['fill', 'description.color']\n        ])\n}\n\n\n\n\n","module.exports = \"<div class=\\\"sd-growl-message <%=type%>\\\">\\n    <div class=\\\"sd-growl-message-text\\\">\\n        <%= message %>\\n    </div>\\n</div>\\n\";\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class TextDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var text = d3.select(this);\n        if(!text.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectText(d);\n        text.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes();\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedText, self){\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n\n        self.treeDesigner.layout.moveTexts([draggedText], dx, dy);\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n         d3.select(this).classed(\"dragging\", false);\n    }\n\n}\n\n\n","import * as d3 from './d3'\nimport {Utils} from 'sd-utils'\n\nexport class Tooltip {\n    static getContainer(){\n        return d3.select(\"body\").selectOrAppend('div.sd-tooltip');\n    }\n\n    static show(html, xOffset = 5, yOffset = 28, event, duration=null) {\n        var container = Tooltip.getContainer()\n            .style(\"opacity\", 0);\n        container.transition()\n            .duration(200)\n            .style(\"opacity\", .98);\n        container.html(html);\n        Tooltip.updatePosition(xOffset, yOffset, event);\n        if(duration){\n            setTimeout(function(){\n                Tooltip.hide();\n            }, duration)\n        }\n    }\n\n    static updatePosition(xOffset = 5, yOffset = 28, event) {\n        event = event || d3.event;\n        Tooltip.getContainer()\n            .style(\"left\", (event.pageX + xOffset) + \"px\")\n            .style(\"top\", (event.pageY - yOffset) + \"px\");\n    }\n\n    static hide(duration = 500) {\n        var t = Tooltip.getContainer();\n        if(duration){\n            t = t.transition().duration(duration)\n        }\n        t.style(\"opacity\", 0);\n    }\n\n    static attach(target, htmlOrFn, xOffset, yOffset) {\n        target.on('mouseover', function (d, i) {\n            var html = null;\n            if (Utils.isFunction(htmlOrFn)) {\n                html = htmlOrFn(d, i);\n            } else {\n                html = htmlOrFn;\n            }\n\n            if (html !== null && html !== undefined && html !== '') {\n                Tooltip.show(html, xOffset, yOffset);\n            }else{\n                Tooltip.hide(0);\n            }\n\n        }).on('mousemove', function (d) {\n            Tooltip.updatePosition(xOffset, yOffset);\n        }).on(\"mouseout\", function (d) {\n            Tooltip.hide();\n        });\n    }\n}\n","import * as d3 from \"./d3\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {ContextMenu} from \"./context-menu/context-menu\";\nimport {MainContextMenu} from \"./context-menu/main-context-menu\";\nimport {NodeContextMenu} from \"./context-menu/node-context-menu\";\nimport {Layout} from \"./layout\";\nimport {NodeDragHandler} from \"./node-drag-handler\";\nimport {Tooltip} from \"./tooltip\";\nimport {Templates} from \"./templates\";\nimport {TextDragHandler} from \"./text-drag-handler\";\nimport {TextContextMenu} from \"./context-menu/text-context-menu\";\nimport {EdgeContextMenu} from \"./context-menu/edge-context-menu\";\nimport * as Hammer from \"hammerjs\";\nimport {i18n} from \"./i18n/i18n\";\n\n\nexport class TreeDesignerConfig {\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    scale = 1;\n    lng = 'en';\n    layout= {\n        type: 'tree',\n        nodeSize: 40,\n        limitNodePositioning: true,\n        limitTextPositioning: true,\n        gridHeight: 75,\n        gridWidth: 150,\n        edgeSlantWidthMax: 20\n    };\n    fontFamily = 'sans-serif';\n    fontSize = '12px';\n    fontWeight = 'normal';\n    fontStyle = 'normal';\n    node = {\n        strokeWidth: '1px',\n        optimal: {\n            stroke: '#006f00',\n            strokeWidth: '1.5px',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'black'\n        },\n        payoff: {\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        },\n        decision: {\n            fill: '#ff7777',\n            stroke: '#660000',\n\n            selected: {\n                fill: '#aa3333',\n                // stroke: '#666600'\n            }\n        },\n        chance: {\n            fill: '#ffff44',\n            stroke: '#666600',\n\n            selected: {\n                fill: '#aaaa00',\n                // stroke: '#666600'\n            }\n        },\n        terminal:{\n            fill: '#44ff44',\n            stroke: 'black',\n            selected: {\n                fill: '#00aa00',\n                // stroke: 'black'\n            },\n            payoff: {\n                fontSize: '1em',\n                color: 'black',\n                negativeColor: '#b60000'\n            },\n        }\n    };\n    edge={\n        stroke: '#424242',\n        strokeWidth: '1.5',\n        optimal:{\n            stroke: '#006f00',\n            strokeWidth: '2.4',\n        },\n        selected:{\n            stroke: '#045ad1',\n            strokeWidth: '3.5',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'back'\n        },\n        payoff:{\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        }\n\n    };\n    probability = {\n        fontSize: '1em',\n        color: '#0000d7'\n    };\n    title = {\n        fontSize: '16px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 15,\n            bottom: 10\n        }\n    };\n    description = {\n        show: true,\n        fontSize: '12px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 5,\n            bottom: 10\n        }\n    };\n\n    readOnly= false;\n    disableAnimations=false;\n    forceFullEdgeRedraw=false;\n    hideLabels=false;\n    hidePayoffs=false;\n    hideProbabilities=false;\n    raw=false;\n\n\n    payoffNumberFormatter = (v, i)=> v;\n    probabilityNumberFormatter  = (v)=> v;\n\n    onNodeSelected = (node) => {};\n    onEdgeSelected = (edge) => {};\n    onTextSelected = (text) => {};\n    onSelectionCleared = () => {};\n\n    operationsForObject = (o) => [];\n\n    payoffNames = [null, null];\n    maxPayoffsToDisplay = 1;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n\nexport class TreeDesigner {\n\n    config;\n    container;\n    data; //data model manager\n    svg;\n\n    constructor(container, dataModel, config){\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    }\n\n    setConfig(config) {\n        this.config = new TreeDesignerConfig(config);\n        if(this.layout){\n            this.layout.config=this.config.layout;\n        }\n        this.updateCustomStyles();\n        return this;\n    }\n\n    init(){\n\n        this.initSvg();\n        this.initLayout();\n        this.initI18n();\n        this.initBrush();\n        this.initEdgeMarkers();\n\n        this.updateCustomStyles();\n        if(!this.config.readOnly){\n            this.initMainContextMenu();\n            this.initNodeContextMenu();\n            this.initEdgeContextMenu();\n            this.initNodeDragHandler();\n            this.initTextDragHandler();\n            this.initTextContextMenu();\n        }\n        this.redraw();\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n\n    updateCustomStyles(){\n        d3.select('head').selectOrAppend('style#sd-tree-designer-style').html(Templates.get('treeDesignerStyles', this.config));\n        return this;\n    }\n\n    initLayout(){\n        this.layout = new Layout(this, this.data, this.config.layout);\n    }\n\n    initNodeDragHandler(){\n        this.nodeDragHandler = new NodeDragHandler(this, this.data);\n    }\n\n    initTextDragHandler(){\n        this.textDragHandler = new TextDragHandler(this, this.data);\n    }\n\n    redraw(withTransitions=false){\n\n        var self = this;\n        withTransitions = !self.config.disableAnimations && withTransitions;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateScale(withTransitions);\n        this.updateMargin(withTransitions);\n        if(withTransitions){\n            self.transitionPrev = self.transition;\n            self.transition = true;\n        }\n        this.redrawNodes();\n        this.redrawEdges();\n        this.redrawFloatingTexts();\n        this.updateValidationMessages();\n        if(withTransitions){\n            self.transition =  self.transitionPrev;\n        }\n        setTimeout(function(){\n            self.updatePlottingRegionSize();\n        },10);\n\n        return this;\n    }\n\n    computeAvailableSpace(){\n        this.availableHeight = AppUtils.sanitizeHeight(this.config.height, this.container, this.config.margin);\n        this.availableWidth = AppUtils.sanitizeWidth(this.config.width, this.container, this.config.margin);\n    }\n\n    initSvg() {\n        var c = this;\n        var self = this;\n        this.computeAvailableSpace();\n        this.svg = this.container.selectOrAppend('svg.sd-tree-designer');\n        this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\n\n        this.wrapperGroup = this.svg.selectOrAppend('g.sd-wrapper-group');\n        this.mainGroup = this.wrapperGroup.selectOrAppend('g.main-group');\n        this.updateScale();\n        this.updateMargin();\n\n\n        if (!this.config.width) {\n            d3.select(window)\n                .on(\"resize.tree-designer\", function () {\n                    self.updatePlottingRegionSize();\n                    self.redrawDiagramTitle();\n                });\n        }\n\n        var mc = new Hammer.Manager(this.svg.node(), {touchAction : 'auto'});\n        mc.add(new Hammer.Press({\n            pointerType: 'touch'\n        }));\n\n        mc.add(new Hammer.Pinch({\n            pointerType: 'touch'\n        }));\n\n        var cancel;\n        mc.on('pinchstart', function(){\n            self.disableBrush();\n        })\n        mc.on('pinch', function(){\n            cancel = Utils.waitForFinalEvent(()=>self.enableBrush(), 'pinchend', 5000)\n        })\n    }\n\n    updateMargin(withTransitions){\n        var self = this;\n        var margin = this.config.margin;\n        var group = this.mainGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        this.topMargin = margin.top;\n        if(this.diagramTitle||this.diagramDescription){\n            this.topMargin = parseInt(this.diagramTitle ? this.config.title.margin.top : 0) + this.getTitleGroupHeight()\n                +  Math.max(this.topMargin, parseInt(this.config.title.margin.bottom));\n        }\n\n        group.attr(\"transform\", \"translate(\" + margin.left + \",\" + this.topMargin + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setMargin(margin, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    margin: Utils.clone(self.config.margin)\n                },\n                onUndo: (data)=> {\n                    self.setMargin(data.margin, true);\n                },\n                onRedo: (data)=> {\n                    self.setMargin(margin, true);\n                }\n            });\n        }\n        Utils.deepExtend(this.config.margin, margin);\n        this.redrawDiagramTitle();\n        this.updateMargin(true);\n    }\n\n\n    updateScale(withTransitions){\n        var self = this;\n        var scale = this.config.scale;\n        var group = this.wrapperGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        group.attr(\"transform\", \"scale(\" + scale + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setScale(scale, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    scale: Utils.clone(self.config.scale)\n                },\n                onUndo: (data)=> {\n                    self.setScale(data.scale, true);\n                },\n                onRedo: (data)=> {\n                    self.setScale(scale, true);\n                }\n            });\n        }\n        this.config.scale = scale;\n        this.updateScale(true);\n    }\n\n    initContainer(containerIdOrElem) {\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else if(containerIdOrElem._parents){\n            this.container = containerIdOrElem\n        }else{\n            this.container = d3.select(containerIdOrElem);\n        }\n    }\n\n    updatePlottingRegionSize() {\n        var changed = false;\n        this.computeAvailableSpace();\n        var margin = this.config.margin;\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        var mainGroupBox = this.mainGroup.node().getBBox();\n        let boxWidth = mainGroupBox.width;\n        var newSvgWidth = boxWidth+mainGroupBox.x+margin.left+margin.right;\n        newSvgWidth  *= this.config.scale;\n        this.container.classed('with-overflow-x', newSvgWidth>=this.availableWidth);\n        newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\n        if(svgWidth!=newSvgWidth){\n            changed = true;\n            this.svg.attr('width', newSvgWidth);\n        }\n        let boxHeight = mainGroupBox.height;\n        var newSvgHeight = boxHeight+mainGroupBox.y+this.topMargin+margin.bottom;\n        newSvgHeight *= this.config.scale;\n        this.container.classed('with-overflow-y', newSvgHeight>=this.availableHeight);\n        newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\n        if(svgHeight!=newSvgHeight){\n            changed=true;\n            this.svg.attr('height', newSvgHeight);\n        }\n        if(changed){\n            this.updateBrushExtent()\n        }\n\n\n    }\n\n    redrawNodes() {\n        var self = this;\n\n\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes.filter(d=>!d.$hidden), (d,i)=> d.$id);\n        nodes.exit().remove();\n        var nodesEnter = nodes.enter().append('g')\n            .attr('id', d=>'node-'+d.$id)\n            .attr('class', d=>d.type+'-node node')\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n        nodesEnter.append('path');\n\n        var labelEnter = nodesEnter.append('text').attr('class', 'label');\n        var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\n        var indicatorEnter = nodesEnter.append('text').attr('class', 'error-indicator').text('!!');\n        var aggregatedPayoffEnter = nodesEnter.append('text').attr('class', 'aggregated-payoff');\n        var probabilityToEnterEnter = nodesEnter.append('text').attr('class', 'probability-to-enter');\n\n        var nodesMerge = nodesEnter.merge(nodes);\n        nodesMerge.classed('optimal', (d)=>self.isOptimal(d));\n\n        var nodesMergeT = nodesMerge;\n        if(this.transition){\n            nodesMergeT = nodesMerge.transition();\n            nodesMergeT.on('end', ()=> self.updatePlottingRegionSize())\n        }\n        nodesMergeT\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')')\n\n        var path = nodesMerge.select('path');\n        this.layout.drawNodeSymbol(path,this.transition);\n\n        /*path\n            .style('fill', d=> {\n                // if(self.isNodeSelected(d)){\n                //     return self.config.node[d.type].selected.fill\n                // }\n                return self.config.node[d.type].fill\n            })\n            .style('stroke', d=> self.config.node[d.type].stroke)\n            .style('stroke-width', d=> {\n                if(self.config.node[d.type].strokeWidth!==undefined){\n                    return self.config.node[d.type].strokeWidth;\n                }\n                return self.config.node.strokeWidth;\n            });\n        */\n        this.layout.nodeLabelPosition(labelEnter);\n        var labelMerge = nodesMerge.select('text.label');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = nodesMergeT.select('text.label');\n        labelMergeT.each(this.updateTextLines);\n        this.layout.nodeLabelPosition(labelMergeT)\n            .attr('text-anchor', 'middle')\n\n        var payoff = nodesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('childrenPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n            // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0')\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((d, i)=> {\n                var val = d\n\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n        this.attachPayoffTooltip(payoffTspansM);\n\n\n        var payoffT = payoff;\n        if(this.transition){\n            payoffT = payoff.transition();\n        }\n\n        this.layout.nodePayoffPosition(payoffEnter);\n        this.layout.nodePayoffPosition(payoffT);\n\n        var aggregatedPayoff = nodesMerge.select('text.aggregated-payoff');\n        var aggregatedPayoffTspans = aggregatedPayoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('aggregatedPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        aggregatedPayoffTspans.exit().remove();\n        var aggregatedPayoffTspansM = aggregatedPayoffTspans.enter().append('tspan').merge(aggregatedPayoffTspans)\n            .attr('dy', (d,i)=>i>0 ? '0.95em': undefined)\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((val, i)=> {\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n\n        this.attachPayoffTooltip(aggregatedPayoffTspansM, 'aggregatedPayoff');\n\n        var aggregatedPayoffT = aggregatedPayoff;\n        if(this.transition){\n            aggregatedPayoffT = aggregatedPayoff.transition();\n        }\n\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffEnter);\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffT);\n\n        var probabilityToEnter = nodesMerge.select('text.probability-to-enter')\n            .text(d=>{\n                var val = d.displayValue('probabilityToEnter');\n                return val!==null ? (isNaN(val) ? val : self.config.probabilityNumberFormatter(val)): ''\n            })\n            .classed('sd-hidden', this.config.hideProbabilities || this.config.raw);\n        Tooltip.attach(probabilityToEnter, i18n.t('tooltip.node.probabilityToEnter'));\n\n\n        var probabilityToEnterT = probabilityToEnter;\n        if(this.transition){\n            probabilityToEnterT = probabilityToEnter.transition();\n        }\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterEnter);\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterT);\n\n\n        var indicator = nodesMerge.select('text.error-indicator');\n        indicator.classed('sd-hidden', this.config.raw)\n        this.layout.nodeIndicatorPosition(indicatorEnter);\n        this.layout.nodeIndicatorPosition(indicator);\n\n        if(this.nodeDragHandler){\n            nodesMerge.call(this.nodeDragHandler.drag);\n        }\n\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\n        nodesMerge.on('dblclick', this.nodeContextMenu)\n        nodesMerge.each(function(d, i){\n            var nodeElem = this;\n            var mc = new Hammer.Manager(nodeElem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n            mc.on('press', function(e){\n                if(e.pointerType=='touch'){\n                    self.nodeDragHandler.cancelDrag();\n                }\n            })\n\n\n            if(d.folded){\n                let button = d3.select(nodeElem).selectOrAppend('text.sd-unfold-button')\n                    .text(\"[+]\")\n                    .on('click dbclick mousedown', ()=>self.foldSubtree(d, false)); //firefox detects only mousedown event - related to drag handler\n\n                self.layout.nodeUnfoldButtonPosition(button);\n                Tooltip.attach(button, i18n.t('contextMenu.node.unfold'));\n            }else{\n                d3.select(nodeElem).select('.sd-unfold-button').remove();\n            }\n\n        })\n    }\n\n    attachPayoffTooltip(selection, payoffFiledName = 'payoff', object='node'){\n        var self = this;\n        Tooltip.attach(selection, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.named',{value: d.payoff, number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.default',{value: d.payoff, number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n    }\n\n    updateTextLines(d){ //helper method for splitting text to tspans\n        var lines = d.name ? d.name.split('\\n') : [];\n        lines.reverse();\n        var tspans = d3.select(this).selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .text(l=>l)\n            .attr('dy', (d,i)=>i>0 ? '-1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n    }\n\n    isOptimal(d){\n        return d.displayValue('optimal');\n    }\n\n    redrawEdges() {\n        var self = this;\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n        if(self.config.forceFullEdgeRedraw){\n            edgesContainer.selectAll(\"*\").remove();\n        }\n\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges.filter(e=>!e.$hidden), (d,i)=> d.$id);\n        edges.exit().remove();\n        var edgesEnter = edges.enter().append('g')\n            .attr('id', d=>'edge-'+d.$id)\n            .attr('class', 'edge');\n\n\n        edgesEnter.append('path');\n        var labelEnter = edgesEnter.appendSelector('g.label-group');\n        labelEnter.append('text').attr('class', 'label');\n        var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\n        var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\n\n\n        var edgesMerge = edgesEnter.merge(edges);\n\n\n        var optimalClassName = 'optimal';\n        edgesMerge.classed(optimalClassName, (d)=>self.isOptimal(d));\n\n        var edgesMergeT = edgesMerge;\n        if(this.transition){\n            edgesMergeT = edgesMerge.transition();\n        }\n\n        edgesMergeT.select('path')\n            .attr('d', d=> this.layout.edgeLineD(d))\n            // .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\")\n            .attr(\"marker-end\", function(d) {\n                var suffix = d3.select(this.parentNode).classed('selected') ? '-selected' : (self.isOptimal(d)?'-optimal':'');\n                return \"url(#arrow\"+ suffix+\")\"\n            });\n            // .attr(\"shape-rendering\", \"optimizeQuality\")\n\n\n        edgesMerge.on('click', d=>{\n            self.selectEdge(d, true)\n        });\n\n        this.layout.edgeLabelPosition(labelEnter);\n        edgesMergeT.select('text.label').each(this.updateTextLines);\n        var labelMerge = edgesMerge.select('g.label-group');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = edgesMergeT.select('g.label-group');\n        this.layout.edgeLabelPosition(labelMergeT);\n            // .text(d=>d.name);\n\n        var payoff = edgesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d => {\n            let item = d.displayValue('payoff');\n            return Utils.isArray(item) ? item.slice(0, Math.min(item.length, self.config.maxPayoffsToDisplay)).map(_=>d) : [d];\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n        // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            // .attr('x', '0')\n\n            // .attr('dominant-baseline', 'hanging')\n            .classed('negative', (d, i)=> {\n                var val = d.displayPayoff(undefined, i);\n                return val!==null && val<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs)\n            // .text(d=> isNaN(d.payoff) ? d.payoff : self.config.payoffNumberFormatter(d.payoff))\n            .text((d, i)=>{\n                if(this.config.raw){\n                    return d.payoff[i];\n                }\n\n                let item = d.displayValue('payoff');\n                let items = Utils.isArray(item) ? item : [item];\n\n                let val = items[i];\n                if (val !== null) {\n                    if (!isNaN(val)) {\n                        return self.config.payoffNumberFormatter(val, i);\n                    }\n                    if (Utils.isString(val)) {\n                        return val;\n                    }\n                }\n\n                if (d.payoff[i] !== null && !isNaN(d.payoff[i]))\n                    return self.config.payoffNumberFormatter(d.payoff[i], i);\n\n                return d.payoff[i];\n\n            });\n\n        Tooltip.attach(payoffTspansM, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.edge.payoff.named',{value: d.payoff[i], number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.edge.payoff.default',{value: d.payoff[i], number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n\n        var payoffTextT = payoff;\n        if(this.transition){\n            payoffTextT = payoff.transition();\n        }\n        this.layout.edgePayoffPosition(payoffEnter);\n        this.layout.edgePayoffPosition(payoffTextT);\n\n        Tooltip.attach(edgesMerge.select('text.probability'), d=>i18n.t('tooltip.edge.probability',{value: d.probability=== undefined ? d.displayProbability() : d.probability}));\n\n        edgesMerge.select('text.probability')\n            .classed('sd-hidden', this.config.hideProbabilities);\n        var probabilityMerge = edgesMerge.select('text.probability');\n        probabilityMerge\n            .attr('text-anchor', 'end')\n            .text(d=>{\n                if(this.config.raw){\n                    return d.probability;\n                }\n                var val = d.displayProbability();\n\n                if(val!==null){\n                    if(!isNaN(val)){\n                        return self.config.probabilityNumberFormatter(val);\n                    }\n                    if(Utils.isString(val)){\n                        return val;\n                    }\n                }\n\n                if(d.probability!==null && !isNaN(d.probability))\n                    return self.config.probabilityNumberFormatter(d.probability);\n\n                return d.probability;\n            });\n        var probabilityMergeT = probabilityMerge;\n        if(this.transition){\n            probabilityMergeT = probabilityMerge.transition();\n        }\n\n        this.layout.edgeProbabilityPosition(probabilityEnter);\n        this.layout.edgeProbabilityPosition(probabilityMergeT);\n\n\n        edgesContainer.selectAll('.edge.'+optimalClassName).raise();\n\n        edgesMerge.on('contextmenu', this.edgeContextMenu);\n        edgesMerge.on('dblclick', this.edgeContextMenu);\n        edgesMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: Hammer.POINTER_TOUCH\n            }));\n        })\n    }\n\n    redrawFloatingTexts() {\n        var self = this;\n\n\n        var textsContainer = this.mainGroup.selectOrAppend('g.floating-texts');\n        var texts = textsContainer.selectAll('.floating-text').data(this.data.texts, (d,i)=> d.$id);\n        texts.exit().remove();\n        var textsEnter = texts.enter().appendSelector('g.floating-text')\n            .attr('id', d=>'text-'+d.$id);\n\n\n        var rectWidth = 40;\n        var rectHeight = 20;\n\n        textsEnter.append('rect').attr('x', -5).attr('y', -16).attr('fill-opacity', 0);\n        textsEnter.append('text');\n\n        var textsMerge = textsEnter.merge(texts);\n        var textsMergeT = textsMerge;\n        if(this.transition){\n            textsMergeT = textsMerge.transition();\n        }\n\n        textsMergeT.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n\n        var tspans = textsMerge.select('text').selectAll('tspan').data(d=>d.value ? d.value.split('\\n') : []);\n\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        textsMerge.classed('sd-empty', d=>!d.value || !d.value.trim());\n        textsMerge.select('rect').attr('width', rectWidth).attr('height', rectHeight);\n\n        textsMerge.each(function(d){\n            if(!d.value){\n                return;\n            }\n            var bb = d3.select(this).select('text').node().getBBox();\n           d3.select(this).select('rect')\n               .attr('y', bb.y-5)\n               .attr('width', Math.max(bb.width+10, rectWidth))\n               .attr('height', Math.max(bb.height+10, rectHeight))\n        });\n\n        if(this.textDragHandler){\n            textsMerge.call(this.textDragHandler.drag);\n        }\n        textsMerge.on('contextmenu', this.textContextMenu);\n        textsMerge.on('dblclick', this.textContextMenu);\n        textsMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n        })\n\n    }\n\n    updateValidationMessages() {\n        var nodes = this.mainGroup.selectAll('.node');\n        nodes.classed('error', false);\n\n        this.data.validationResults.forEach(validationResult=>{\n            if(validationResult.isValid()){\n                return;\n            }\n\n            Object.getOwnPropertyNames(validationResult.objectIdToError).forEach(id=>{\n                var errors = validationResult.objectIdToError[id];\n                var nodeSelection = this.getNodeD3SelectionById(id);\n                nodeSelection.classed('error', true);\n                var tooltipHtml = '';\n                errors.forEach(e=>{\n                    if(tooltipHtml){\n                        tooltipHtml+='<br/>'\n                    }\n                    tooltipHtml+=AppUtils.getValidationMessage(e);\n                });\n\n                Tooltip.attach(nodeSelection.select('.error-indicator'), tooltipHtml);\n\n\n            })\n        });\n    }\n\n\n    initEdgeMarkers() {\n        var defs = this.svg.append(\"svg:defs\");\n\n        this.initArrowMarker(\"arrow\");\n        this.initArrowMarker(\"arrow-optimal\");\n        this.initArrowMarker(\"arrow-selected\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.select(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    updateBrushExtent() {\n        var self =this;\n        this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\n        this.brushContainer.call(this.brush);\n    }\n    initBrush() {\n        var self = this;\n\n        var brushContainer = self.brushContainer = this.brushContainer= this.wrapperGroup.selectOrInsert(\"g.brush\", \":first-child\")\n            .attr(\"class\", \"brush\");\n\n        var brush = this.brush = d3.brush()\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n\n\n        this.updateBrushExtent();\n\n        brushContainer.select('.overlay').on(\"mousemove.edgeSelection\", mousemoved);\n        function mousemoved() {\n            var m = d3.mouse(this);\n            var mgt = self.getMainGroupTranslation();\n            var margin = 10;\n\n            var closest = [null, 999999999];\n            var closeEdges = [];\n            self.mainGroup.selectAll('.edge').each(function(d){\n                var selection = d3.select(this);\n                selection.classed('sd-hover', false);\n                var pathNode = selection.select('path').node();\n                var b = pathNode.getBBox();\n                if(b.x+mgt[0] <=m[0] && b.x+b.width+mgt[0] >= m[0] &&\n                   b.y+mgt[1]-margin <=m[1] && b.y+b.height+mgt[1]+margin >= m[1]){\n\n                    var cp = AppUtils.closestPoint(pathNode, [m[0]-mgt[0], m[1]-mgt[1]]);\n                    if(cp.distance < margin && cp.distance<closest[1]){\n                        closest = [selection, cp.distance];\n                    }\n                }\n\n            });\n\n            self.hoveredEdge = null;\n            if(closest[0]){\n                closest[0].classed('sd-hover', true);\n                self.hoveredEdge = closest[0];\n            }\n\n        }\n\n        function brushstart() {\n            if (!d3.event.selection) return;\n            if(self.hoveredEdge){\n                self.selectEdge(self.hoveredEdge.datum(), true)\n            }else{\n                self.clearSelection();\n            }\n            ContextMenu.hide();\n        }\n\n        // Highlight the selected nodes.\n        function brushmove() {\n            var s = d3.event.selection;\n            if(!s)return;\n\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n                var mainGroupTranslation = self.getMainGroupTranslation();\n                var x = d.location.x+mainGroupTranslation[0];\n                var y = d.location.y+mainGroupTranslation[1];\n                var nodeSize = self.config.layout.nodeSize;\n                var offset = nodeSize*0.25;\n                return s[0][0] <= x+offset && x-offset <= s[1][0]\n                    && s[0][1] <= y+offset && y-offset <= s[1][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) return;\n            brush.move(brushContainer, null);\n\n            var selectedNodes = self.getSelectedNodes();\n            if(selectedNodes && selectedNodes.length === 1){\n                self.selectNode(selectedNodes[0]);\n            }\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n        }\n    }\n\n    disableBrush(){\n        if(!this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushDisabled'), 'info', 'left')\n        }\n        this.brushDisabled = true;\n        this.brushContainer.remove();\n    }\n\n    enableBrush(){\n        if(this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushEnabled'), 'info', 'left')\n            this.initBrush();\n            this.brushDisabled = false;\n        }\n\n\n    }\n\n    getMainGroupTranslation(invert) {\n        var translation = AppUtils.getTranslation(this.mainGroup.attr(\"transform\"));\n        if(invert){\n            translation[0] = -translation[0];\n            translation[1] = -translation[1]\n        }\n        return translation;\n    }\n\n    initNodeContextMenu() {\n        this.nodeContextMenu = new NodeContextMenu(this, this.config.operationsForObject);\n    }\n\n    initEdgeContextMenu() {\n        this.edgeContextMenu = new EdgeContextMenu(this);\n    }\n\n    initTextContextMenu() {\n        this.textContextMenu = new TextContextMenu(this);\n    }\n\n\n\n    initMainContextMenu() {\n        this.mainContextMenu = new MainContextMenu(this);\n        this.svg.on('contextmenu',this.mainContextMenu);\n        this.svg.on('dblclick',this.mainContextMenu);\n    }\n\n    addText(text){\n        this.data.saveState();\n        this.data.addText(text);\n        this.redraw();\n        this.selectText(text);\n    }\n\n    addNode(node, parent, redraw=false){\n        this.data.saveState();\n        this.data.addNode(node, parent);\n        this.redraw(true);\n        this.layout.update(node);\n        return node;\n    }\n\n    addDecisionNode(parent){\n        var newNode = new model.DecisionNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addChanceNode(parent){\n        var newNode = new model.ChanceNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addTerminalNode(parent){\n        var newNode = new model.TerminalNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n\n    injectNode(node, edge){\n        this.data.saveState();\n        this.data.injectNode(node, edge);\n        this.redraw();\n        this.layout.update(node);\n        return node;\n    }\n\n    injectDecisionNode(edge){\n        var newNode = new model.DecisionNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n\n    }\n\n    injectChanceNode(edge){\n        var newNode = new model.ChanceNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n    }\n\n    removeNode(node) {\n        this.data.saveState();\n        this.data.removeNode(node);\n\n\n        if(!this.layout.isManualLayout()){\n            this.layout.update();\n        }else{\n            this.redraw();\n        }\n    }\n\n    removeSelectedNodes() {\n        var selectedNodes = this.getSelectedNodes();\n        if(!selectedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeNodes(selectedNodes);\n        this.clearSelection();\n        this.redraw();\n        this.layout.update();\n    }\n\n    removeSelectedTexts(){\n        var selectedTexts = this.getSelectedTexts();\n\n        if(!selectedTexts.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeTexts(selectedTexts);\n        this.clearSelection();\n        this.redraw();\n    }\n\n    copyNode(d, notClearPrevSelection) {\n        var clone = this.data.cloneSubtree(d);\n        if(notClearPrevSelection){\n            if(!this.copiedNodes){\n                this.copiedNodes=[];\n            }\n            this.copiedNodes.push(clone);\n        }else{\n            this.copiedNodes = [clone];\n        }\n\n    }\n\n    cutNode(d) {\n        this.copyNode(d);\n        this.removeNode(d);\n    }\n\n    cutSelectedNodes(){\n        var selectedNodes = this.getSelectedNodes();\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n        this.removeSelectedNodes();\n    }\n\n    copySelectedNodes() {\n        var self;\n        var selectedNodes = this.getSelectedNodes();\n\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n\n\n    }\n\n    copyNodes(nodes){\n        this.copiedNodes = nodes.map(d=>this.data.cloneSubtree(d));\n    }\n\n\n\n    pasteToNode(node) {\n        if(!this.copiedNodes || !this.copiedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=>{\n            var attached = this.data.attachSubtree(toAttach, node).childNode;\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            var location = self.layout.getNewChildLocation(node);\n            attached.moveTo(location.x, location.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        if(node.folded){\n            self.foldSubtree(node, node.folded, false);\n        }\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    pasteToNewLocation(point) {\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=> {\n            var attached = this.data.attachSubtree(toAttach);\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            attached.moveTo(point.x, point.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    convertNode(node, typeToConvertTo){\n        var self = this;\n        this.data.saveState();\n        this.data.convertNode(node, typeToConvertTo);\n        setTimeout(function(){\n            self.redraw(true);\n        },10)\n    }\n\n    performOperation(object, operation){\n        var self = this;\n        this.data.saveState();\n        operation.perform(object);\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    foldSubtree(node, fold = true, redraw=true){\n        let self = this;\n        node.folded = fold;\n\n        this.data.getAllDescendantNodes(node).forEach(n=>{\n            n.$hidden = fold;\n            n.folded = false;\n        });\n        this.data.getAllDescendantEdges(node).forEach(e=>e.$hidden = fold);\n\n        if(!redraw){\n            return;\n        }\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    updateVisibility(node = null){\n        if(!node){\n            this.data.getRoots().forEach(n=>this.updateVisibility(n));\n            return;\n        }\n\n        if(node.folded){\n            this.foldSubtree(node, true, false);\n            return;\n        }\n\n        node.childEdges.forEach(e => this.updateVisibility(e.childNode));\n\n    }\n\n    moveNodeTo(x,y){\n\n    }\n\n    updateNodePosition(node) {\n        this.getNodeD3Selection(node).raise().attr('transform', 'translate('+node.location.x+' '+node.location.y+')');\n    }\n\n    updateTextPosition(text) {\n        this.getTextD3Selection(text).raise().attr('transform', 'translate('+text.location.x+' '+text.location.y+')');\n    }\n\n    getNodeD3Selection(node){\n        return this.getNodeD3SelectionById(node.$id);\n    }\n\n    getNodeD3SelectionById(id){\n        return this.mainGroup.select('#node-'+id);\n    }\n    getTextD3Selection(text){\n        return this.getTextD3SelectionById(text.$id);\n    }\n    getTextD3SelectionById(id){\n        return this.mainGroup.select('#text-'+id);\n    }\n\n    getSelectedNodes(visibleOnly = false) {\n        let selectedVisible = this.mainGroup.selectAll(\".node.selected\").data();\n        if(visibleOnly){\n            return selectedVisible;\n        }\n\n        let allSelected  = [];\n        allSelected.push(...selectedVisible);\n\n        selectedVisible.forEach(n=>{\n            if(n.folded){\n                let descendants = this.data.getAllDescendantNodes(n);\n                if(descendants){\n                    allSelected.push(...descendants);\n                }\n            }\n        });\n\n        return allSelected;\n    }\n\n    getSelectedTexts(){\n        return this.mainGroup.selectAll(\".floating-text.selected\").data();\n    }\n\n    clearSelection(){\n        this.mainGroup.selectAll(\".edge.selected\").select('path').attr(\"marker-end\", d => \"url(#arrow\"+(this.isOptimal(d)?'-optimal':'')+\")\")\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\n        this.config.onSelectionCleared();\n    }\n\n    selectEdge(edge, clearSelectionBeforeSelect){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.config.onEdgeSelected(edge);\n        this.mainGroup.select('#edge-'+edge.$id)\n            .classed('selected', true)\n            .select('path')\n            .attr(\"marker-end\", d => \"url(#arrow-selected)\")\n    }\n\n    isNodeSelected(node){\n        return this.getNodeD3Selection(node).classed('selected');\n    }\n\n    selectNode(node, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onNodeSelected(node);\n        }\n\n        this.getNodeD3SelectionById(node.$id).classed('selected', true);\n    }\n\n    selectText(text, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onTextSelected(text)\n        }\n\n        this.getTextD3SelectionById(text.$id).classed('selected', true);\n    }\n\n    selectSubTree(node, clearSelectionBeforeSelect,skipCallback) {\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.selectNode(node, false, skipCallback);\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode, false, true));\n    }\n\n    selectAllNodes() {\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        this.layout.autoLayout(type, withoutStateSaving);\n    }\n\n    updateDiagramTitle(titleValue){\n        if(!titleValue){\n            titleValue = '';\n        }\n        this.diagramTitle = titleValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n    redrawDiagramTitle(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n        title.text(this.diagramTitle);\n        Layout.setHangingPosition(title);\n\n        var marginTop = parseInt(this.config.title.margin.top);\n        this.titleContainer.attr('transform', 'translate('+(svgWidth/2)+','+( marginTop)+')');\n    }\n    redrawDiagramDescription(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var desc = this.titleContainer.selectOrAppend('text.sd-description');\n\n        if(!this.config.description.show){\n            desc.remove();\n            return;\n        }\n\n        var lines = this.diagramDescription ? this.diagramDescription.split('\\n') : [];\n        var tspans = desc.selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        Layout.setHangingPosition(desc);\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n\n        var marginTop = 0;\n        if(this.diagramTitle){\n            marginTop += title.node().getBBox().height;\n            marginTop+= Math.max(parseInt(this.config.description.margin.top), 0);\n        }\n\n\n        desc.attr('transform', 'translate(0,'+( marginTop)+')');\n    }\n\n    updateDiagramDescription(descriptionValue){\n        if(!descriptionValue){\n            descriptionValue = '';\n        }\n        this.diagramDescription = descriptionValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n\n    getTitleGroupHeight(withMargins){\n        if(!this.titleContainer){\n            return 0;\n        }\n        var h = this.titleContainer.node().getBBox().height;\n        if(withMargins){\n            h+= parseInt(this.config.title.margin.bottom);\n            h+= parseInt(this.config.title.margin.top);\n        }\n        return h;\n    }\n\n}\n","module.exports={\n  \"name\": \"silver-decisions\",\n  \"version\": \"1.1.0\",\n  \"description\": \"Software for creating and analyzing decision trees.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/SilverDecisions/SilverDecisions.git\"\n  },\n  \"author\": \"Michał Wasiluk, Bogumił Kamiński, Przemysław Szufel\",\n  \"license\": \"LGPL-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/SilverDecisions/SilverDecisions/issues\"\n  },\n  \"homepage\": \"https://github.com/SilverDecisions/SilverDecisions#readme\",\n  \"browserify\": {\n    \"transform\": [\n      [\n        \"babelify\",\n        {\n          \"presets\": [\n            \"@babel/preset-env\"\n          ],\n          \"plugins\": [\n            [\n              \"transform-class-properties\",\n              {\n                \"spec\": true\n              }\n            ],\n            \"transform-object-assign\",\n            \"transform-es2015-spread\",\n            \"@babel/plugin-proposal-object-rest-spread\",\n            [\n              \"babel-plugin-transform-builtin-extend\",\n              {\n                \"globals\": [\n                  \"Error\"\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    ]\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.1.6\",\n    \"@babel/plugin-proposal-object-rest-spread\": \"^7.0.0\",\n    \"@babel/preset-env\": \"^7.1.6\",\n    \"babel-plugin-transform-builtin-extend\": \"^1.1.2\",\n    \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n    \"babel-plugin-transform-es2015-spread\": \"^6.22.0\",\n    \"babel-plugin-transform-object-assign\": \"^6.22.0\",\n    \"babelify\": \"^10.0.0\",\n    \"browser-sync\": \"^2.26.3\",\n    \"browserify\": \"^16.2.3\",\n    \"browserify-resolutions\": \"^1.1.0\",\n    \"browserify-shim\": \"^3.8.14\",\n    \"chalk\": \"^2.4.1\",\n    \"del\": \"^3.0.0\",\n    \"es6-set\": \"^0.1.5\",\n    \"gulp\": \"^4.0.0\",\n    \"gulp-clean-css\": \"^3.10.0\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-filelist\": \"^1.1.1\",\n    \"gulp-html2js\": \"^0.4.2\",\n    \"gulp-load-plugins\": \"^1.5.0\",\n    \"gulp-plumber\": \"^1.2.0\",\n    \"gulp-rename\": \"^1.4.0\",\n    \"gulp-replace\": \"^1.0.0\",\n    \"gulp-sass\": \"^4.0.2\",\n    \"gulp-sourcemaps\": \"^2.6.4\",\n    \"gulp-strip-debug\": \"^3.0.0\",\n    \"gulp-template\": \"^5.0.0\",\n    \"gulp-uglify\": \"^3.0.1\",\n    \"gulp-util\": \"^3.0.8\",\n    \"jasmine\": \"^3.3.0\",\n    \"jasmine-jquery\": \"^2.1.1\",\n    \"karma\": \"^3.1.1\",\n    \"karma-browserify\": \"^5.3.0\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-intl-shim\": \"^1.0.3\",\n    \"karma-jasmine\": \"^2.0.0\",\n    \"merge-stream\": \"^1.0.1\",\n    \"odc-d3\": \"^1.1.7\",\n    \"run-sequence\": \"^2.2.1\",\n    \"stringify\": \"^5.2.0\",\n    \"svg2pdf.js\": \"^1.3.0\",\n    \"vinyl-buffer\": \"^1.0.1\",\n    \"vinyl-source-stream\": \"^2.0.0\",\n    \"yargs\": \"^12.0.2\"\n  },\n  \"dependencies\": {\n    \"autosize\": \"^4.0.2\",\n    \"blueimp-canvas-to-blob\": \"^3.14.0\",\n    \"d3-array\": \"^1.2.4\",\n    \"d3-dispatch\": \"^1.0.5\",\n    \"d3-drag\": \"^1.2.3\",\n    \"d3-scale\": \"^1.0.7\",\n    \"d3-selection\": \"^1.3.2\",\n    \"d3-time-format\": \"^2.1.3\",\n    \"file-saver\": \"^2.0.0\",\n    \"hammerjs\": \"^2.0.8\",\n    \"i18next\": \"^12.0.0\",\n    \"jquery\": \"^3.3.1\",\n    \"jquery-ui\": \"^1.12.1\",\n    \"pivottable\": \"^2.23.0\",\n    \"sd-computations\": \"0.3.6\",\n    \"sd-model\": \"0.2.7\",\n    \"sd-utils\": \"0.1.11\",\n    \"sd-tree-designer\": \"0.1.12\"\n  }\n}\n","import * as d3 from \"./d3\";\nimport * as autosize from \"autosize\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils as TdUtils} from \"sd-tree-designer\";\n\nexport class AppUtils extends TdUtils{\n\n\n\n    static updateInputClass(selection){\n        var value = selection.node().value;\n        selection.classed('empty', value!==0 && !value);\n        return selection;\n    }\n\n    static autoResizeTextarea(element){\n        setTimeout(function(){\n            element.style.width = \"\";\n            var width = element.getBoundingClientRect().width;\n            if(width){\n                element.style.width = width+'px';\n            }\n            autosize.update(element);\n        }, 10);\n    }\n\n    static elasticTextarea(selection){\n        setTimeout(function(){\n            selection.style('width',undefined);\n            var width = selection.node().getBoundingClientRect().width;\n            if(width){\n                selection.style('width', width+'px')\n            }\n            autosize.default(selection.node());\n        },10)\n    }\n\n    static postByForm(url, data) {\n        var name,\n            form;\n\n        // create the form\n        form = AppUtils.createElement('form', AppUtils.mergeDeep({\n            method: 'post',\n            action: url,\n            enctype: 'multipart/form-data'\n        }), document.body);\n\n        for (name in data) {\n            if(data.hasOwnProperty(name)){\n                AppUtils.createElement('input', {\n                    type: 'hidden',\n                    name: name,\n                    value: data[name]\n                }, form);\n            }\n        }\n\n        form.submit();\n\n        AppUtils.removeElement(form);\n    };\n\n    static showFullScreenPopup(title, html, closeCallback){\n        var popup = d3.select(\"body\").selectOrAppend(\"div.sd-full-screen-popup-container\").html(Templates.get('fullscreenPopup', {title:title,body:html}));\n        popup.select('.sd-close-popup').on('click', ()=>{\n            popup.remove();\n            if(closeCallback) {\n                closeCallback()\n            }\n        })\n\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport * as model from \"sd-model\";\nimport {TreeDesigner} from \"sd-tree-designer\";\nimport {Templates} from \"./templates\";\nimport {Sidebar} from \"./sidebar\";\nimport {Toolbar} from \"./toolbar\";\nimport {SettingsDialog} from \"./dialogs/settings-dialog\";\nimport {AboutDialog} from \"./dialogs/about-dialog\";\nimport {Exporter} from \"./exporter\";\nimport {DefinitionsDialog} from \"./dialogs/definitions-dialog\";\nimport {ComputationsManager} from \"sd-computations\";\nimport {SensitivityAnalysisDialog} from \"./dialogs/sensitivity-analysis-dialog\";\nimport {LoadingIndicator} from \"./loading-indicator\";\nimport {LeagueTableDialog} from \"./league-table/league-table-dialog\";\n\nvar buildConfig = require('../tmp/build-config.js');\n\nexport class AppConfig {\n    readOnly = false;\n    logLevel = 'warn';\n    workerUrl = null;\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n    buttons = {\n        new: true,\n        save: true,\n        open: true,\n        exportToPng: true,\n        exportToSvg: true,\n        exportToPdf: true\n    };\n    exports = {\n        show: true,\n        serverUrl: 'http://export.highcharts.com', //url of the export server\n        pdf: {\n            mode: 'server', // available options: 'client', 'server', 'fallback',\n        },\n        png: {\n            mode: 'fallback', // available options: 'client', 'server', 'fallback',\n        }\n    };\n    showDetails = true;\n    showDefinitions = true;\n    jsonFileDownload = true;\n    width = undefined;\n    height = undefined;\n    rule = \"expected-value-maximization\";\n    lng = 'en';\n    format = {// NumberFormat  options\n        locales: 'en',\n        payoff1: {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        payoff2: {\n            style: 'decimal',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        probability: { // NumberFormat  options\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 3,\n            useGrouping: true\n        }\n    };\n    title = '';\n    description = '';\n    treeDesigner = {};\n    leagueTable = {\n        plot: {\n            maxWidth: \"800px\",\n            groups: {\n                'highlighted': {\n                    color: '#008000'\n                },\n                'highlighted-default': {\n                    color: '#00bd00'\n                },\n                'extended-dominated': {\n                    color: '#ffa500'\n                },\n                'dominated': {\n                    color: '#ff0000'\n                },\n                'default': {\n                    color: '#000000'\n                }\n            }\n        }\n    };\n\n    //https://github.com/d3/d3-format/blob/master/README.md#format\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class App {\n    static version = ''; // version is set from package.json\n    static buildTimestamp = buildConfig.buildTimestamp;\n    static utils = Utils;\n    static appUtils = AppUtils;\n    static d3 = d3;\n\n    config;\n    container;\n    dataModel; //Data model manager\n    expressionEngine;\n    computationsManager;\n    treeDesigner;\n    toolbar;\n    sidebar;\n    viewModes = [];\n    currentViewMode;\n\n    payoffsMaximization=[true, false];\n\n    constructor(containerIdOrElem, config, diagramData) {\n        var p = Promise.resolve();\n        this.setConfig(config);\n        this.initI18n();\n        this.initContainer(containerIdOrElem);\n        this.initViewModes();\n        this.initDataModel();\n        p = this.initComputationsManager();\n        this.initProbabilityNumberFormat();\n        this.initPayoffNumberFormat();\n        this.initTreeDesigner();\n        this.initSidebar();\n        this.initSettingsDialog();\n        this.initAboutDialog();\n        this.initDefinitionsDialog();\n        this.initSensitivityAnalysisDialog();\n        this.initLeagueTableDialog();\n        this.initOnBeforeUnload();\n        this.initKeyCodes();\n        p.then(()=> {\n            this.initToolbar();\n            if (diagramData) {\n                this.openDiagram(diagramData);\n            } else {\n                this.updateView();\n            }\n        }).catch(e=> {\n            log.error(e);\n        });\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new AppConfig();\n        } else {\n            this.config = new AppConfig(config);\n        }\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    static growl() {\n        return AppUtils.growl(arguments)\n    }\n\n    setLogLevel(level) {\n        log.setLevel(level)\n    }\n\n    initContainer(containerIdOrElem) {\n\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else {\n            this.container = d3.select(containerIdOrElem);\n        }\n        var self = this;\n\n        let html = Templates.get('main', {\n            version: App.version,\n            buildTimestamp: App.buildTimestamp,\n            'lng': self.config.lng\n        });\n        this.container.html(html);\n\n        this.container.select('#silver-decisions').classed('sd-read-only', this.config.readOnly);\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n    initDataModel() {\n        var self = this;\n        this.dataModel = new model.DataModel();\n        // this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = ()=>self.onNodeAddedOrRemoved();\n        this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = (node)=> Utils.waitForFinalEvent(()=>this.onNodeAddedOrRemoved(), 'onNodeAddedOrRemoved', 5);\n\n        this.dataModel.textAddedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextAdded(text), 'onTextAdded');\n        this.dataModel.textRemovedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextRemoved(text), 'onTextAdded');\n    }\n\n    initComputationsManager() {\n        this.computationsManager = new ComputationsManager({\n            ruleName: this.config.ruleName,\n            worker: {\n                url: this.config.workerUrl,\n            },\n            jobRepositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        }, this.dataModel);\n        this.expressionEngine = this.computationsManager.expressionEngine;\n        return this.checkValidityAndRecomputeObjective(false, false, false, true);\n\n    }\n\n    initSidebar() {\n        this.sidebar = new Sidebar(this.container.select('#sd-sidebar'), this);\n\n    }\n\n    initSettingsDialog() {\n        this.settingsDialog = new SettingsDialog(this);\n    }\n\n    initAboutDialog() {\n        this.aboutDialog = new AboutDialog(this);\n    }\n\n    initDefinitionsDialog() {\n        this.definitionsDialog = new DefinitionsDialog(this);\n        this.definitionsDialog.onClosed = ()=> this.recompute(true, true);\n\n    }\n\n    initLeagueTableDialog() {\n        this.leagueTableDialog = new LeagueTableDialog(this);\n    }\n\n    isLeagueTableAvailable() {\n        return this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.leagueTableDialog.validateParams();\n    }\n\n    initSensitivityAnalysisDialog() {\n        this.sensitivityAnalysisDialog = new SensitivityAnalysisDialog(this);\n\n    }\n\n    isSensitivityAnalysisAvailable() {\n        return !this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.dataModel.getGlobalVariableNames(true).length;\n    }\n\n    initToolbar() {\n        this.toolbar = new Toolbar(this.container.select('#sd-toolbar'), this);\n\n    }\n\n    initPayoffNumberFormat() {\n\n        this.payoffNumberFormat = [\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff1),\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff2)\n        ]\n\n    }\n\n    initProbabilityNumberFormat() {\n        this.probabilityNumberFormat = new Intl.NumberFormat(this.config.format.locales, this.config.format.probability);\n    }\n\n    initTreeDesigner() {\n        var self = this;\n        var config = this.getTreeDesignerInitialConfig();\n        let container2 = this.container.select('#tree-designer-container');\n\n        this.treeDesigner = new TreeDesigner(container2, this.dataModel, config);\n    }\n\n    getTreeDesignerInitialConfig() {\n        var self = this;\n\n        return Utils.deepExtend({\n            lng: self.config.lng,\n            readOnly: self.config.readOnly,\n            onNodeSelected: function (node) {\n                self.onObjectSelected(node);\n            },\n            onEdgeSelected: function (edge) {\n                self.onObjectSelected(edge);\n            },\n            onTextSelected: function (text) {\n                self.onObjectSelected(text);\n            },\n            onSelectionCleared: function () {\n                self.onSelectionCleared();\n            },\n            payoffNumberFormatter: (v, i) => {\n                let prefix = '';\n                if(self.currentViewMode.multiCriteria){\n                    prefix =  self.dataModel.payoffNames[i].charAt(0) + ': ';\n                }\n\n                return prefix + self.payoffNumberFormat[i || self.currentViewMode.payoffIndex || 0].format(v)\n            },\n            probabilityNumberFormatter: (v) => self.probabilityNumberFormat.format(v),\n            operationsForObject: (o) => self.computationsManager.operationsForObject(o)\n        }, self.config.treeDesigner);\n    }\n\n    onObjectSelected(object) {\n        var self = this;\n        if (this.selectedObject === object) {\n            return;\n        }\n        this.selectedObject = object;\n        setTimeout(function () {\n            self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10)\n    }\n\n    onSelectionCleared() {\n        var self = this;\n        this.selectedObject = null;\n        this.sidebar.hideObjectProperties();\n        setTimeout(function () {\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10);\n        // console.log();\n    }\n\n    getCurrentVariableDefinitionsSourceObject() {\n        if (this.selectedObject) {\n            if (this.selectedObject instanceof model.domain.Node) {\n                return this.selectedObject;\n            }\n            if (this.selectedObject instanceof model.domain.Edge) {\n                return this.selectedObject.parentNode;\n            }\n        }\n        return this.dataModel;\n    }\n\n    updateVariableDefinitions() {\n        var self = this;\n        var definitionsSourceObject = self.getCurrentVariableDefinitionsSourceObject();\n        var readOnly = (this.selectedObject instanceof model.domain.Edge) || (this.selectedObject instanceof model.domain.TerminalNode);\n        self.sidebar.updateDefinitions(definitionsSourceObject, readOnly, (code)=> {\n            self.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            self.recompute(true, true)\n        });\n\n    }\n\n    openDefinitionsDialog() {\n        var definitionsSourceObject = this.getCurrentVariableDefinitionsSourceObject();\n        this.definitionsDialog.open(definitionsSourceObject, (code)=> {\n            this.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            this.recompute(true, true);\n        });\n    }\n\n    updateView(withTransitions = true) {\n        // console.log('_updateView');\n        this.treeDesigner.redraw(withTransitions);\n        this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        this.updateVariableDefinitions();\n        this.toolbar.update();\n        this.sidebar.updateLayoutOptions();\n        this.sidebar.updateDiagramDetails();\n        this.sidebar.updateMultipleCriteria();\n    }\n\n    undo() {\n        let self = this;\n        self.dataModel.undo();\n        self.initPayoffNames();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n\n    }\n\n    redo() {\n        let self = this;\n        self.dataModel.redo();\n        self.initPayoffNames();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.$id);\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n    }\n\n    onNodeAddedOrRemoved() {\n        var self = this;\n        return this.checkValidityAndRecomputeObjective().then(()=> {\n            self.updateView();\n        });\n\n    }\n\n    onTextAdded(text) {\n        return this.onObjectSelected(text);\n    }\n\n    onTextRemoved(text) {\n        this.updateView();\n    }\n\n    onObjectUpdated(object, fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (!(object instanceof model.domain.Text) && fieldName !== 'name') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        // this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n            }, 1);\n        });\n    }\n\n    onMultiCriteriaUpdated(fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (fieldName === 'defaultCriterion1Weight') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        this.sidebar.updateMultipleCriteria();\n\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n                self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            }, 1);\n        });\n    }\n\n    setObjectiveRule(ruleName, evalCode = false, evalNumeric = false, updateView = true, recompute = true) {\n        let prevRule = this.computationsManager.getCurrentRule();\n        this.computationsManager.setCurrentRuleByName(ruleName);\n        let currentRule = this.computationsManager.getCurrentRule();\n        let multiCriteria = currentRule.multiCriteria;\n        this.treeDesigner.config.maxPayoffsToDisplay = multiCriteria ? 2 : 1;\n\n        if (multiCriteria) {\n            this.payoffsMaximization = currentRule.payoffCoeffs.map(c=>c>0);\n            this.initPayoffNames();\n            this.treeDesigner.config.payoffNames = this.dataModel.payoffNames;\n        } else {\n            this.payoffsMaximization[this.currentViewMode.payoffIndex] = currentRule.maximization;\n            this.treeDesigner.config.payoffNames = [null, null];\n        }\n        if (!recompute) {\n            return Promise.resolve();\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, evalCode, evalNumeric).then(()=> {\n            if (updateView) {\n                this.updateView(false);\n            }\n        });\n\n    }\n\n    initPayoffNames() {\n        if (this.currentViewMode.multiCriteria && !this.dataModel.payoffNames.length) {\n            this.dataModel.payoffNames.push(\n                this.dataModel.payoffNames[0] = i18n.t('multipleCriteria.defaultMinimizedCriterionName'),\n                this.dataModel.payoffNames[1] = i18n.t('multipleCriteria.defaultMaximizedCriterionName'));\n        }\n    }\n\n    isMultipleCriteria() {\n        return this.computationsManager.getCurrentRule().multiCriteria;\n    }\n\n    flipCriteria() {\n        let tmp = this.config.format.payoff1;\n        this.config.format.payoff1 = this.config.format.payoff2;\n        this.config.format.payoff2 = tmp;\n        this.initPayoffNumberFormat();\n\n        this.computationsManager.flipCriteria().then(()=> {\n            this.updateView(false);\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n\n    getCurrentObjectiveRule() {\n        return this.computationsManager.getCurrentRule();\n    }\n\n    getObjectiveRules() {\n        return this.computationsManager.getObjectiveRules().filter(rule=>rule.multiCriteria === this.currentViewMode.multiCriteria);\n    }\n\n\n    initViewModes() {\n        this.viewModes.push({\n            name: \"criterion1\",\n            multiCriteria: false,\n            payoffIndex: 0,\n        });\n\n        this.viewModes.push({\n            name: \"criterion2\",\n            multiCriteria: false,\n            payoffIndex: 1,\n        });\n\n        this.viewModes.push({\n            name: \"twoCriteria\",\n            multiCriteria: true,\n            payoffIndex: null,\n        });\n        this.currentViewMode = this.viewModes[0];\n    }\n\n    getCurrentViewMode() {\n        return this.currentViewMode;\n    }\n\n    setViewModeByName(name, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.name === name), recompute, updateView)\n    }\n\n    setViewMode(mode, recompute = true, updateView = true) {\n        let prevMode = this.currentViewMode;\n        this.currentViewMode = mode;\n\n        this.computationsManager.objectiveRulesManager.setPayoffIndex(this.currentViewMode.payoffIndex);\n\n\n        if (!recompute) {\n            return Promise.resolve();\n        }\n        let rules = this.getObjectiveRules();\n        let prevRule = this.computationsManager.getCurrentRule();\n        let newRule = rules[0];\n\n\n        if(this.currentViewMode.payoffIndex !== null){\n            newRule = Utils.find(rules, r => r.maximization == this.payoffsMaximization[this.currentViewMode.payoffIndex])\n        }else{\n            newRule = Utils.find(rules, r => r.payoffCoeffs.map(c=>c>0).every((max, i)=> this.payoffsMaximization[i] === max))\n        }\n\n        this.setObjectiveRule(newRule.name, false, false, updateView, recompute)\n    }\n\n    setDefaultViewModeForRule(rule, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.multiCriteria === rule.multiCriteria), recompute, updateView)\n    }\n\n    getViewModes() {\n        return this.viewModes;\n    }\n\n    showLeagueTable() {\n        this.leagueTableDialog.open();\n    }\n\n    openSensitivityAnalysis() {\n        let self = this;\n        setTimeout(function(){\n            if(!self.isSensitivityAnalysisAvailable()){\n                return;\n            }\n            self.sensitivityAnalysisDialog.open();\n        }, 200);\n\n    }\n\n    showTreePreview(dataDTO, closeCallback, autoLayout = true) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.dataModel.loadFromDTO(dataDTO, this.computationsManager.expressionEngine.getJsonReviver());\n        this.computationsManager.updateDisplayValues(this.dataModel);\n        this.updateView(false);\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node());\n                AppUtils.showFullScreenPopup('', svgString, ()=> {\n                    if (closeCallback) {\n                        self.dataModel._setNewState(self.originalDataModelSnapshot);\n                        self.updateView(false);\n\n                        closeCallback();\n                        setTimeout(function () {\n                            self.updateView(false);\n                        }, 1)\n                    }\n                });\n            }, 300);\n        }, 1)\n\n    }\n\n    showPolicyPreview(title, policy, closeCallback) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.computationsManager.displayPolicy(policy);\n        this.updateView(false);\n        AppUtils.showFullScreenPopup(title, '');\n        LoadingIndicator.show();\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node(), true);\n                LoadingIndicator.hide();\n                AppUtils.showFullScreenPopup(title, svgString, ()=> {\n\n                    self.dataModel._setNewState(self.originalDataModelSnapshot);\n\n                    // self.computationsManager.updateDisplayValues(self.dataModel);\n                    self.updateView(false);\n                    if (closeCallback) {\n                        closeCallback();\n                    }\n                    setTimeout(function () {\n                        self.updateView(false);\n                    }, 1)\n                });\n            }, 500);\n        }, 1)\n    }\n\n\n    recompute(updateView = true, debounce = false, forceWhenAutoIsDisabled=true) {\n        if (debounce) {\n            if (!this.debouncedRecompute) {\n                this.debouncedRecompute = Utils.debounce((updateView)=>this.recompute(updateView, false), 200);\n            }\n            this.debouncedRecompute(updateView);\n            return;\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, true, true, forceWhenAutoIsDisabled).then(()=> {\n            if (updateView) {\n                this.updateView();\n            }\n        });\n\n    }\n\n    onRawOptionChanged(){\n        if(this.isAutoRecalculationEnabled()){\n            return this.checkValidityAndRecomputeObjective(false, false).then(()=> {\n                this.updateView();\n            })\n        }\n    }\n\n    isAutoRecalculationEnabled(){\n        return !this.treeDesigner.config.raw;\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true, forceWhenAutoIsDisabled=false) {\n        if(!forceWhenAutoIsDisabled && !this.isAutoRecalculationEnabled()){\n            return Promise.resolve();\n        }\n\n        return this.computationsManager.checkValidityAndRecomputeObjective(allRules, evalCode, evalNumeric).then(()=> {\n            this.updateValidationMessages();\n            AppUtils.dispatchEvent('SilverDecisionsRecomputedEvent', this);\n        }).catch(e=> {\n            log.error(e);\n        });\n\n    }\n\n    updateValidationMessages() {\n        var self = this;\n        setTimeout(function () {\n            self.treeDesigner.updateValidationMessages();\n        }, 1);\n    }\n\n    newDiagram() {\n        this.clear();\n        this.updateView();\n    }\n\n    clear() {\n        this.dataModel.clear();\n        this.currentViewMode = this.viewModes[0];\n        this.computationsManager.setCurrentRuleByName(this.computationsManager.getObjectiveRules()[0].name);\n        this.setDiagramTitle('', true);\n        this.setDiagramDescription('', true);\n        this.treeDesigner.setConfig(Utils.deepExtend(this.getTreeDesignerInitialConfig()));\n        this.onSelectionCleared();\n        this.sensitivityAnalysisDialog.clear(true, true)\n\n    }\n\n    openDiagram(diagramData) {\n\n        var self = this;\n        var errors = [];\n\n        if (Utils.isString(diagramData)) {\n            try {\n                diagramData = JSON.parse(diagramData, self.computationsManager.expressionEngine.getJsonReviver());\n            } catch (e) {\n                errors.push('error.jsonParse');\n                alert(i18n.t('error.jsonParse'));\n                log.error(e);\n                return Promise.resolve(errors);\n            }\n        }\n\n        var dataModelObject = diagramData.data;\n\n        this.clear();\n        if (!diagramData.SilverDecisions) {\n            errors.push('error.notSilverDecisionsFile');\n            alert(i18n.t('error.notSilverDecisionsFile'));\n            return Promise.resolve(errors);\n        }\n\n        if (!Utils.isValidVersionString(diagramData.SilverDecisions)) {\n            errors.push('error.incorrectVersionFormat');\n            alert(i18n.t('error.incorrectVersionFormat'));\n        } else {\n            //Check if version in file is newer than version of application\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, App.version) > 0) {\n                errors.push('error.fileVersionNewerThanApplicationVersion');\n                alert(i18n.t('error.fileVersionNewerThanApplicationVersion'));\n            }\n\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, \"0.7.0\") < 0) {\n                dataModelObject = {\n                    code: diagramData.code,\n                    expressionScope: diagramData.expressionScope,\n                    trees: diagramData.trees,\n                    texts: diagramData.texts\n                }\n            }\n        }\n\n        try {\n            if (diagramData.lng) {\n                this.config.lng = diagramData.lng;\n            }\n\n            if (diagramData.rule) {\n                if (this.computationsManager.isRuleName(diagramData.rule)) {\n                    this.config.rule = diagramData.rule;\n                } else {\n                    delete this.config.rule;\n                }\n            }\n\n            if (diagramData.viewMode) {\n                this.setViewModeByName(diagramData.viewMode)\n            } else {\n                this.setDefaultViewModeForRule(this.computationsManager.getObjectiveRuleByName(this.config.rule), false, false);\n            }\n\n            if (diagramData.format) {\n                this.config.format = diagramData.format;\n            }\n\n            this.setConfig(this.config);\n            this.dataModel.load(dataModelObject);\n\n            if (diagramData.treeDesigner) {\n                this.treeDesigner.setConfig(Utils.deepExtend(self.getTreeDesignerInitialConfig(), diagramData.treeDesigner));\n            }\n            this.treeDesigner.updateVisibility();\n\n            this.setDiagramTitle(diagramData.title || '', true);\n            this.setDiagramDescription(diagramData.description || '', true);\n\n            if (diagramData.sensitivityAnalysis) {\n                this.sensitivityAnalysisDialog.loadSavedParamValues(diagramData.sensitivityAnalysis);\n            }\n\n        } catch (e) {\n            errors.push('error.malformedData');\n            alert(i18n.t('error.malformedData'));\n            this.clear();\n            log.error('malformedData', e);\n            return Promise.resolve(errors);\n\n        }\n        try {\n            this.updateNumberFormats(false);\n        } catch (e) {\n            log.error('incorrectNumberFormatOptions', e);\n            errors.push('error.incorrectNumberFormatOptions');\n            alert(i18n.t('error.incorrectNumberFormatOptions'));\n            delete this.config.format;\n            this.setConfig(this.config);\n            this.updateNumberFormats(false);\n        }\n        return this.setObjectiveRule(this.config.rule, false, true, false).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            return errors\n        }).then(()=> {\n            this.updateView(false);\n            return errors;\n        }).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            this.updateView(false);\n            return errors\n        });\n    }\n\n    serialize(filterLocation = false, filterComputed = false, filterPrivate = true) {\n        var self = this;\n        return self.checkValidityAndRecomputeObjective(true, false, false, true).then(()=> {\n            var obj = {\n                SilverDecisions: App.version,\n                buildTimestamp: App.buildTimestamp,\n                savetime: d3.isoFormat(new Date()),\n                lng: self.config.lng,\n                viewMode: self.currentViewMode.name,\n                rule: self.computationsManager.getCurrentRule().name,\n                title: self.config.title,\n                description: self.config.description,\n                format: self.config.format,\n                treeDesigner: self.treeDesigner.config,\n                data: self.dataModel.serialize(false),\n                sensitivityAnalysis: this.sensitivityAnalysisDialog.jobNameToParamValues\n            };\n\n            return Utils.stringify(obj, self.dataModel.getJsonReplacer(filterLocation, filterComputed, self.computationsManager.expressionEngine.getJsonReplacer(), filterPrivate), filterPrivate ? ['$'] : []);\n        });\n    }\n\n    saveToFile(filterLocation = false, filterComputed = false, filterPrivate = true){\n        this.serialize(filterLocation, filterComputed, filterPrivate).then((json)=>{\n            AppUtils.dispatchEvent('SilverDecisionsSaveEvent', json);\n            if(this.config.jsonFileDownload){\n                var blob = new Blob([json], {type: \"application/json\"});\n                Exporter.saveAs(blob, Exporter.getExportFileName('json'));\n            }\n        });\n    }\n\n    updateNumberFormats(updateView = true) {\n        this.initPayoffNumberFormat();\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    updatePayoffNumberFormat(updateView = true) {\n        this.initPayoffNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n\n    }\n\n    updateProbabilityNumberFormat(updateView = true) {\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    initOnBeforeUnload() {\n        var self = this;\n        window.addEventListener(\"beforeunload\", function (e) {\n            if (!(self.dataModel.isUndoAvailable() || self.dataModel.isRedoAvailable())) {\n                return;\n            }\n\n            var dialogText = i18n.t('confirm.beforeunload');\n            e.returnValue = dialogText;\n            return dialogText;\n        });\n    }\n\n    setConfigParam(path, value, withoutStateSaving, callback) {\n        var self = this;\n        var prevValue = Utils.get(this.config, path);\n\n        if (prevValue == value) {\n            return;\n        }\n        if (!withoutStateSaving) {\n            this.dataModel.saveState({\n                data: {\n                    prevValue: prevValue\n                },\n                onUndo: (data)=> {\n                    self.setConfigParam(path, data.prevValue, true, callback);\n                },\n                onRedo: (data)=> {\n                    self.setConfigParam(path, value, true, callback);\n                }\n            });\n        }\n        Utils.set(this.config, path, value);\n        if (callback) {\n            callback(value);\n        }\n    }\n\n\n    setDiagramTitle(title, withoutStateSaving) {\n        this.setConfigParam('title', title, withoutStateSaving, (v) => this.treeDesigner.updateDiagramTitle(v));\n    }\n\n    setDiagramDescription(description, withoutStateSaving) {\n        this.setConfigParam('description', description, withoutStateSaving, (v) => this.treeDesigner.updateDiagramDescription(v));\n    }\n\n    initKeyCodes() {\n\n        this.container.on(\"keyup\", (d)=> {\n            let srcElement = d3.event.target || d3.event.srcElement;\n\n            if (srcElement && ['INPUT', 'TEXTAREA'].indexOf(srcElement.nodeName.toUpperCase()) > -1) { //ignore events from input and textarea elements\n                return;\n            }\n\n            var key = d3.event.keyCode;\n            if (key == 46) {//delete\n                this.treeDesigner.removeSelectedNodes();\n                this.treeDesigner.removeSelectedTexts();\n                return;\n            }\n            if (!d3.event.ctrlKey) {\n                return;\n            }\n\n\n            if (d3.event.altKey) {\n                if (this.selectedObject instanceof model.domain.Node) {\n                    let selectedNode = this.selectedObject;\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.addDecisionNode(selectedNode);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.addChanceNode(selectedNode);\n                    } else if (key == 84) { // ctrl + alt + t\n                        this.treeDesigner.addTerminalNode(selectedNode);\n                    }\n                    return;\n                } else if (this.selectedObject instanceof model.domain.Edge) {\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.injectDecisionNode(this.selectedObject);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.injectChanceNode(this.selectedObject);\n                    }\n                }\n\n            }\n\n\n            if (key == 90) {//ctrl + z\n                this.undo();\n                return;\n            }\n            if (key == 89) {//ctrl + y\n                this.redo();\n                return;\n            }\n\n            /*if(key==65){//ctrl + a\n             if(selectedNodes.length==1){\n             this.treeDesigner.selectSubTree(selectedNodes[0])\n             }else{\n             this.treeDesigner.selectAllNodes();\n             }\n             // d3.event.preventDefault()\n             return;\n             }*/\n            var selectedNodes = this.treeDesigner.getSelectedNodes();\n            if (key == 86) {//ctrl + v\n                if (selectedNodes.length == 1) {\n                    let selectedNode = selectedNodes[0];\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    this.treeDesigner.pasteToNode(selectedNode)\n                } else if (selectedNodes.length == 0) {\n\n                }\n                return;\n            }\n\n            if (!selectedNodes.length) {\n                return;\n            }\n\n            if (key == 88) {//ctrl + x\n                this.treeDesigner.cutSelectedNodes();\n\n            } else if (key == 67) {//ctrl + c\n                this.treeDesigner.copySelectedNodes();\n\n            }\n\n        });\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nvar $ = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = $;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/button');\nrequire('jquery-ui/ui/widgets/menu');\nrequire('jquery-ui/ui/unique-id');\nrequire('jquery-ui/ui/position');\nrequire('jquery-ui/ui/keycode');\nrequire('jquery-ui/ui/safe-active-element');\nrequire('jquery-ui/ui/widgets/autocomplete');\nUtils.getGlobalObject().jQuery = global$;\n\nimport * as d3 from './d3'\n\n$( function() {\n    $.widget( \"sd.combobox\", {\n        _create: function() {\n            this.wrapper = $( \"<span>\" )\n                .addClass( \"sd-combobox\" )\n                .insertAfter( this.element );\n\n            this.element.hide();\n            this._createAutocomplete();\n            this._createShowAllButton();\n        },\n\n        _createAutocomplete: function() {\n            var selected = this.element.children( \":selected\" ),\n                value = selected.val() ? selected.text() : \"\";\n\n            this.input = $( \"<input>\" )\n                .appendTo( this.wrapper )\n                .val( value )\n                .attr( \"title\", \"\" )\n                .attr( \"type\", \"text\" )\n                .addClass( \"sd-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\n                .autocomplete({\n                    delay: 0,\n                    minLength: 0,\n                    source: $.proxy( this, \"_source\" ),\n                    classes: {\n                        \"ui-autocomplete\": \"sd-combobox-autocomplete\"\n                    }\n                });\n            $( \"<span class='bar'>\" ).appendTo( this.wrapper )\n\n            var input = this.input;\n            this._on( this.input, {\n                autocompleteselect: function( event, ui ) {\n                    ui.item.option.selected = true;\n                    this._trigger( \"select\", event, {\n                        item: ui.item.option\n                    });\n\n                },\n\n                autocompletechange: function(){\n                    let inputD3 = d3.select($(input).get(0));\n                    AppUtils.dispatchHtmlEvent(inputD3.node(), \"change\");\n                }\n            });\n        },\n\n        _createShowAllButton: function() {\n            var input = this.input,\n                wasOpen = false;\n\n            $( \"<button>\" )\n                .attr( \"tabIndex\", -1 )\n                .attr( \"type\", \"button\" )\n                .html('<i class=\"material-icons\">arrow_drop_down</i>')\n                .appendTo( this.wrapper )\n                .addClass( \"sd-combobox-toggle ui-corner-right\" )\n                .on( \"mousedown\", function() {\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\n                })\n                .on( \"click\", function() {\n                    input.trigger( \"focus\" );\n                    // Close if already visible\n                    if ( wasOpen ) {\n                        return;\n                    }\n\n                    // Pass empty string as value to search for, displaying all results\n                    input.autocomplete( \"search\", \"\" );\n                });\n        },\n\n        _source: function( request, response ) {\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n            response( this.element.children( \"option\" ).map(function() {\n                var text = $( this ).text();\n                if ( this.value && ( !request.term || matcher.test(text) ) )\n                    return {\n                        label: text,\n                        value: text,\n                        option: this\n                    };\n            }) );\n        },\n\n        _destroy: function() {\n            this.wrapper.remove();\n            this.element.show();\n        },\n\n        input_element: function(){\n            return this.input;\n        }\n    });\n} );\n\nexport class Autocomplete{\n\n\n    constructor(container){\n        this.container= container;\n        this.combobox = $( this.container.node() ).combobox();\n    }\n\n    getInput(){\n        return d3.select($(this.combobox).combobox('input_element').get(0))\n    }\n\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","import {Dialog} from './dialog'\n\nexport class AboutDialog extends Dialog{\n\n    constructor(app){\n        super(app.container.select('#sd-about-dialog'), app);\n    }\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {Templates} from \"../templates\";\nimport {domain as model} from \"sd-model\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class DefinitionsDialog extends Dialog {\n    changeCallback;\n\n    constructor(app) {\n        super(app.container.select('#sd-definitions-dialog'), app);\n        var self = this;\n\n        this.definitionsScopeLabel = this.container.select(\".sd-definitions-dialog-scope-label\");\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('input', function () {\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('change', function () {\n            if (self.changeCallback) {\n                self.changeCallback(this.value)\n            }\n        });\n\n        this.recalculateButton = this.container.select('button#sd-definitions-dialog-recalculate-button').on('click', function () {\n            self.app.recompute();\n        });\n\n        this.variableValuesContainer = this.container.select(\"#sd-definitions-dialog-variable-values\");\n        AppUtils.elasticTextarea(this.definitionsCode);\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.update();\n            }\n        });\n    }\n\n\n    open(definitionsSourceObject, changeCallback) {\n        super.open();\n        this.changeCallback = changeCallback;\n        this.definitionsSourceObject = definitionsSourceObject;\n        this.update();\n    }\n\n    update(force = false) {\n        if (!force && !this.isVisible()) {\n            return;\n        }\n\n        let scopeType = 'global';\n        let labelSuffix=\"\";\n        if (this.definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node';\n            let name =  this.definitionsSourceObject.name;\n            if(name){\n                labelSuffix += \" (\"+name+\")\"\n            }\n        }\n        this.definitionsScopeLabel.text(i18n.t(\"definitionsDialog.scope.\"+scopeType)+labelSuffix);\n\n        this.definitionsCode.node().value = this.definitionsSourceObject.code;\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node());\n        this.definitionsCode.classed('invalid', !!this.definitionsSourceObject.$codeError);\n        if(this.definitionsSourceObject.$codeError){\n            this.printError(this.definitionsSourceObject.$codeError);\n        }else{\n            this.printVariables(this.definitionsSourceObject.expressionScope);\n        }\n\n    }\n\n    printError(error) {\n        var html = error;\n        this.variableValuesContainer.html(html);\n    }\n\n    printVariables(scope) {\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(scope)});\n        this.variableValuesContainer.html(html);\n    }\n\n\n}\n","\nexport class Dialog{\n\n    app;\n\n    container;\n\n    constructor(container,app){\n        this.app = app;\n        this.container=container;\n        this.container.select('.sd-close-modal').on('click', ()=>this.close());\n        this.container.select('.sd-extend-modal').on('click', ()=>this.extend());\n        this.container.select('.sd-shrink-modal').on('click', ()=>this.shrink());\n    }\n\n    open(){\n        this.onOpen();\n        this.container.classed('open', true);\n    }\n    close(){\n        this.container.classed('open', false);\n        this.onClosed();\n    }\n\n    setFullScreen(fullScreen=true){\n        let self = this;\n        this.container.classed('sd-full-screen', fullScreen);\n        setTimeout(function(){ self.onResized() }, 10)\n    }\n\n    extend(){\n        this.setFullScreen();\n    }\n\n    shrink(){\n        this.setFullScreen(false);\n    }\n\n    isVisible(){\n        return this.container.classed('open');\n    }\n\n    onClosed(){\n\n    }\n\n    onOpen(){\n\n    }\n\n    onResized(){\n\n    }\n}\n","import {Dialog} from \"./dialog\";\nimport {JobParametersBuilder} from \"../jobs/job-parameters-builder\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {SensitivityAnalysisJobResultTable} from \"../jobs/sensitivity-analysis-result-table\";\nimport {ProbabilisticSensitivityAnalysisJobResultTable} from \"../jobs/probabilistic-sensitivity-analysis-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {TornadoDiagramPlot} from \"../jobs/tornado-diagram-plot\";\nimport {SpiderPlot} from \"../jobs/spider-plot\";\n\nexport class SensitivityAnalysisDialog extends Dialog {\n    computationsManager;\n    jobConfigurationContainer;\n\n    jobConfigurations = [];\n    jobInstanceManager;\n    jobNameToParamValues = {};\n\n    constructor(app) {\n        super(app.container.select('.sd-sensitivity-analysis-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        // this.initJobConfigurations();\n\n        this.jobConfigurationContainer = this.container.select(\".sd-sensitivity-analysis-job-configuration\");\n        this.parameterBuilderContainer = this.jobConfigurationContainer.select(\".sd-job-parameters-builder\");\n        this.jobParametersBuilder = new JobParametersBuilder(this.parameterBuilderContainer, 'job', () => this.onJobParametersChanged());\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-sensitivity-analysis-job-results\");\n        this.jobResultPlotContainer = this.jobResultsContainer.select(\".sd-job-result-plot-container\");\n\n        this.debouncedCheckWarnings = Utils.debounce(()=>this.checkWarnings(), 200);\n\n        this.initButtons();\n        let self = this;\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.onOpen();\n            }\n        });\n    }\n\n    onOpen() {\n\n        this.initJobConfigurations();\n        if (!this.jobSelect) {\n            this.initJobSelect();\n        }\n\n        let payoffConf = Utils.cloneDeep(this.app.config.format.payoff1);\n        payoffConf.style = 'decimal';\n        payoffConf.useGrouping = false;\n        this.payoffNumberFormat = new Intl.NumberFormat('en', payoffConf);\n        // this.payoffNumberFormat = {\n        //     format: v => this.app.computationsManager.expressionEngine.constructor.toFloat(v, payoffConf.maximumFractionDigits)\n        // }\n\n        this.clear();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n\n\n    onJobSelected(jobConfig) {\n\n        this.clearWarnings();\n        this.selectedJobConfig = jobConfig;\n        if (!jobConfig) {\n            return;\n        }\n        this.jobSelect.node().value = jobConfig.jobName;\n        let jobName = this.selectedJobConfig.jobName;\n        this.job = this.computationsManager.getJobByName(jobName);\n\n        var jobParamsValues = this.jobNameToParamValues[jobName] || {};\n\n        this.setJobParamsValues(jobParamsValues)\n    }\n\n    refreshSelectedJobConfig() {\n        if (this.selectedJobConfig) {\n            this.selectedJobConfig = Utils.find(this.jobConfigurations, (c)=>c.jobName === this.selectedJobConfig.jobName);\n        }\n    }\n\n    setJobParamsValues(jobParamsValues, deleteId = true) {\n        if(!this.job){\n            return;\n        }\n        this.refreshSelectedJobConfig();\n\n        if(deleteId){\n            delete jobParamsValues.id;\n        }\n        this.jobParameters = this.job.createJobParameters(jobParamsValues);\n\n        this.jobNameToParamValues[this.job.name] = this.jobParameters.values;\n\n        this.jobParametersBuilder.setJobParameters(this.job.name, this.jobParameters, this.selectedJobConfig.customParamsConfig);\n    }\n\n    onJobParametersChanged() {\n        this.debouncedCheckWarnings();\n\n    }\n\n    getGlobalVariableNames() {\n        return this.app.dataModel.getGlobalVariableNames(true);\n    }\n\n    initJobConfigurations() {\n        let self = this;\n        this.jobConfigurations.length = 0;\n        let ExpressionEngine = this.app.expressionEngine.constructor;\n        let customVariablesValidator = values => {\n            var isValidArray = [];\n\n            var names = [];\n            values.forEach((v, i)=>{\n                let isVariableInGlobalScope = self.app.dataModel.expressionScope.hasOwnProperty(v.name);\n                var valid = names.indexOf(v.name)<0 && isVariableInGlobalScope;\n                names.push(v.name);\n                isValidArray.push(valid);\n            });\n\n            return isValidArray;\n        };\n\n        let largeScenariosNumberWarning = {\n            name: 'largeScenariosNumber',\n            data: {\n                number: 10000,\n                numberFormatted: \"10,000\"\n            },\n            check: function (jobParameters) { // called with this set to warning config object\n                let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a * (b || 1), 1);\n                return combinations > this.data.number\n            }\n        };\n        this.jobConfigurations.push({\n            jobName: 'sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try {\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n\n                }\n            },\n            warnings: [\n                largeScenariosNumberWarning,\n                {\n                    name: 'largeParametersNumber',\n                    data: {\n                        number: 2,\n                    },\n                    check: function (jobParameters) { // called with this set to warning config object\n                        return jobParameters.values.variables.length > this.data.number\n                    }\n                }\n            ]\n        });\n\n\n        this.jobConfigurations.push({\n            jobName: 'tornado-diagram',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        },\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: (values)=>{\n                        let isValidNameArray = customVariablesValidator(values);\n\n                        return values.map((v, i)=>{\n                            if(!isValidNameArray[i]){\n                                return false;\n                            }\n\n                            if (!v.name || v.min === undefined || v.min === null || v.max === undefined || v.max === null) {\n                                return false;\n                            }\n\n                            let defVal = self.app.dataModel.expressionScope[v.name];\n                            return v.min < defVal && v.max >  defVal;\n                        });\n                    }\n\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a + b, 0);\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'probabilistic-sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    formula:{\n                        options: ExpressionEngine.randomMenuList,\n                        optionsAutocomplete: true\n                    },\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [largeScenariosNumberWarning]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'spider-plot',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.length * jobParameters.values.variables.length;\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n    }\n\n\n    checkWarnings() {\n        this.clearWarnings();\n        if (!this.selectedJobConfig.warnings) {\n            return;\n        }\n\n        this.selectedJobConfig.warnings.forEach(warnConf=> {\n            if (warnConf.check.call(warnConf, this.jobParameters)) {\n                this.addWarning(warnConf);\n            }\n        })\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-sensitivity-analysis-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-sensitivity-analysis-warnings\").appendSelector(\"div.sd-sensitivity-analysis-warning\").html(msgHTML);\n    }\n\n    initJobSelect() {\n        var self = this;\n        this.jobSelect = this.container.select(\".sd-job-select-input-group\").html(Templates.get(\"selectInputGroup\", {\n            id: Utils.guid(),\n            label: null,\n            name: \"sd-job-select\",\n            options: this.jobConfigurations.map(c=>({\n                label: i18n.t(\"job.\" + c.jobName + \".name\"),\n                value: c.jobName\n            }))\n        })).select(\"select\").on('change input', function (d) {\n            self.onJobSelected(Utils.find(self.jobConfigurations, c=>c.jobName === this.value))\n        });\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (rows, indexes, e)=> this.onResultRowSelected(rows, indexes, e),\n            className: \"sd-\" + this.job.name\n        };\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.setClassName(\"sd-\" + this.job.name);\n            this.resultTable.hide();\n        }\n\n        if (this.job.name == \"sensitivity-analysis\") {\n            this.resultTable = new SensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n        } else if (this.job.name == \"probabilistic-sensitivity-analysis\") {\n            this.resultTable = new ProbabilisticSensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config, (v) => this.payoffNumberFormat.format(v), (v) => this.app.probabilityNumberFormat.format(v));\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n\n        }\n\n\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-sensitivity-analysis-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n    initButtons() {\n        this.runJobButton = this.container.select(\".sd-run-job-button\").on('click', ()=> {\n            if (!this.jobParametersBuilder.validate()) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.checkWarnings();\n\n            this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n                onJobStarted: this.onJobStarted,\n                onJobCompleted: this.onJobCompleted,\n                onJobFailed: this.onJobFailed,\n                onJobStopped: this.onJobStopped,\n                onJobTerminated: this.onJobTerminated,\n                onProgress: this.onProgress,\n                callbacksThisArg: this\n            }).then(jobInstanceManager=> {\n                this.jobInstanceManager = jobInstanceManager;\n            }).catch(e=> {\n                log.error(e);\n            }).then(()=> {\n                this.disableActionButtonsAndShowLoadingIndicator(false);\n            })\n\n        });\n\n        this.resumeJobButton = this.container.select(\".sd-resume-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.resume();\n        });\n\n        this.stopJobButton = this.container.select(\".sd-stop-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.stop();\n        });\n\n        this.terminateJobButton = this.container.select(\".sd-terminate-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.terminateJob();\n        });\n\n        this.backButton = this.container.select(\".sd-back-button \").on('click', ()=> {\n            if (this.jobInstanceManager) {\n                this.jobInstanceManager.terminate();\n            }\n\n        });\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    loadSavedParamValues(jobNameToParamValues){\n        this.jobNameToParamValues = jobNameToParamValues;\n        this.selectedJobConfig = null;\n        this.jobParameters = null;\n    }\n\n\n    clear(clearParams = false, clearAllParams = false) {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        if (!this.selectedJobConfig) {\n            this.onJobSelected(this.jobConfigurations[0]);\n        }\n\n        if(clearAllParams){\n            Utils.forOwn(this.jobNameToParamValues, (value, key)=> this.jobNameToParamValues[key] = {})\n        }\n\n        let globalVariableNames = this.getGlobalVariableNames();\n        Utils.forOwn(this.jobNameToParamValues, (value, key)=> {\n            let paramValues = value;\n            if(clearAllParams){\n                paramValues = {}\n            }else if(paramValues.variables){\n                paramValues.variables = paramValues.variables.filter(v=>globalVariableNames.indexOf(v.name)!==-1);\n                if(!paramValues.variables.length){\n                    paramValues.variables.push({})\n                }\n            }\n\n            this.jobNameToParamValues[key] = paramValues;\n        });\n\n        if (this.job) {\n            if (clearParams) {\n                this.jobNameToParamValues[this.job.name] = {};\n                this.setJobParamsValues({});\n            } else {\n                this.jobParameters.values.ruleName = this.computationsManager.getCurrentRule().name;\n                this.setJobParamsValues(this.jobParameters.values);\n            }\n        }\n\n\n        AppUtils.show(this.jobConfigurationContainer);\n        AppUtils.show(this.runJobButton);\n        AppUtils.show(this.clearButton);\n\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.jobResultsContainer);\n        AppUtils.hide(this.backButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n        if(this.resultPlots){\n            this.resultPlots.forEach(p=>p.destroy())\n            this.jobResultPlotContainer.selectAll(\"*\").remove();\n        }\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.jobConfigurationContainer);\n        AppUtils.hide(this.runJobButton);\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.clearButton);\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n        AppUtils.show(this.stopJobButton);\n        AppUtils.show(this.terminateJobButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.backButton);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.clearButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlots(result);\n\n\n\n    }\n\n    initResultPlots(result) {\n\n\n        if (this.job.name === \"tornado-diagram\") {\n            this.initTornadoResultPlots(result);\n        } else if (this.job.name === \"spider-plot\") {\n            this.initSpiderResultPlots(result);\n        }\n\n\n\n    }\n\n    initTornadoResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new TornadoDiagramPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    initSpiderResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new SpiderPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    onResized() {\n        if (this.resultPlots) {\n            this.resultPlots.forEach(p=>p.init());\n\n        }\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.clearButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(rows, indexes, event) {\n\n        if (!rows.length) {\n            return;\n        }\n\n        let policyIndexes = rows.map(r=>r.policyIndex).filter((value, index, self)=>self.indexOf(value) === index);\n\n        if (policyIndexes.length > 1) {\n            Tooltip.show(i18n.t('jobResultTable.tooltip.multiplePoliciesInCell', {number: policyIndexes.length}), 5, 28, event, 2000);\n            return;\n        }\n\n\n        let policy = this.result.policies[policyIndexes[0]];\n        let title = Policy.toPolicyString(policy, false);\n\n        if(rows.length==1){\n\n            let row = rows[0];\n            if(row.variables){\n                title = '';\n                this.result.variableNames.forEach((v, i)=>{\n                    if(i){\n                        title += \"; \"\n                    }\n                    title += v + \" = \" + row.variables[i];\n                });\n            }\n        }\n\n        this.app.showPolicyPreview(title, policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows())\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {i18n} from \"../i18n/i18n\";\nimport {Templates} from \"../templates\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {InputField} from \"../form/input-field\";\nimport {PathValueAccessor} from \"../form/path-value-accessor\";\n\nexport class SettingsDialog extends Dialog{\n\n    formGroups=[];\n\n    static fontWeightOptions = ['normal', 'bold', 'lighter', 'bolder'];\n    static fontStyleOptions = ['normal', 'italic', 'oblique'];\n\n    constructor(app){\n        super(app.container.select('#sd-settings-dialog'), app);\n\n        var group = new FormGroup('general', ()=> {\n            app.treeDesigner.updateCustomStyles();\n            app.updateNumberFormats();\n        });\n        group\n            .addField('fontFamily', 'text', app.treeDesigner, 'config.fontFamily')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('numberFormatLocale', 'text', app, 'config.format.locales', {validate: (v)=>{try{new Intl.NumberFormat(v); return true;}catch (e){return false}}});\n        this.formGroups.push(group);\n\n\n        var payoffGroup = new FormGroup('payoff1', ()=>app.updatePayoffNumberFormat());\n        payoffGroup\n            .addSelectField('style', app, 'config.format.payoff1.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff1.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff1.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff1.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff1.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff1.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff1.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff1.useGrouping')\n\n        this.formGroups.push(payoffGroup);\n\n        var payoff2Group = new FormGroup('payoff2', ()=>app.updatePayoffNumberFormat());\n        payoff2Group\n            .addSelectField('style', app, 'config.format.payoff2.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff2.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff2.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff2.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff2.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff2.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff2.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff2.useGrouping')\n\n        this.formGroups.push(payoff2Group);\n\n\n        group = new FormGroup('probability', ()=>{\n            app.updateProbabilityNumberFormat();\n            app.treeDesigner.updateCustomStyles().redraw();\n        });\n        group\n            .addSelectField('style', app, 'config.format.probability.style', ['decimal', 'percent'])\n            .addField('minimumFractionDigits', 'number', app, 'config.format.probability.minimumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.probability.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.probability.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.probability.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('fontSize', 'text', app.treeDesigner, 'config.probability.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.probability.color');\n        this.formGroups.push(group);\n\n\n        var nodeGroup = new FormGroup('node', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        nodeGroup\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.strokeWidth');\n\n        nodeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.optimal.stroke');\n\n        nodeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.label.color');\n\n        nodeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.node.payoff.negativeColor');\n\n        this.formGroups.push(nodeGroup);\n\n        nodeGroup.addGroup('decision')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.decision.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.decision.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.decision.selected.fill');\n\n\n        nodeGroup.addGroup('chance')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.chance.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.chance.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.chance.selected.fill');\n\n        nodeGroup.addGroup('terminal')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.terminal.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.terminal.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.terminal.selected.fill')\n            .addGroup('payoff')\n                .addField('fontSize', 'text', app.treeDesigner, 'config.node.terminal.payoff.fontSize')\n                .addField('color', 'color', app.treeDesigner, 'config.node.terminal.payoff.color')\n                .addField('negativeColor', 'color', app.treeDesigner, 'config.node.terminal.payoff.negativeColor');\n\n\n\n        var edgeGroup = new FormGroup('edge', ()=>app.treeDesigner.updateCustomStyles().redraw())\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.stroke')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.strokeWidth');\n\n        edgeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.optimal.stroke');\n\n        edgeGroup.addGroup('selected')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.selected.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.selected.stroke');\n\n        edgeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.label.color');\n\n        edgeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.edge.payoff.negativeColor');\n        this.formGroups.push(edgeGroup);\n\n\n        var titleGroup = new FormGroup('diagramTitle', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        titleGroup\n            .addField('fontSize', 'text', app.treeDesigner, 'config.title.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.title.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.title.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.title.color')\n\n        .addGroup('margin')\n            .addField('top', 'number', app.treeDesigner, 'config.title.margin.top')\n            .addField('bottom', 'number', app.treeDesigner, 'config.title.margin.bottom');\n\n        titleGroup\n            .addGroup('description')\n            .addField('show', 'checkbox', app.treeDesigner, 'config.description.show')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.description.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.description.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.description.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.description.color')\n            .addField('marginTop', 'number', app.treeDesigner, 'config.description.margin.top');\n\n        this.formGroups.push(titleGroup);\n\n\n\n        var leagueTableGroup = new FormGroup('leagueTable');\n        leagueTableGroup\n            .addGroup('plot')\n            .addField('maxWidth', 'text', app, 'config.leagueTable.plot.maxWidth')\n            .addField('highlightedColor', 'color', app, 'config.leagueTable.plot.groups.highlighted.color')\n            .addField('highlightedDefaultColor', 'color', app, 'config.leagueTable.plot.groups.highlighted-default.color')\n            .addField('extendedDominatedColor', 'color', app, 'config.leagueTable.plot.groups.extended-dominated.color')\n            .addField('dominatedColor', 'color', app, 'config.leagueTable.plot.groups.dominated.color')\n            .addField('defaultColor', 'color', app, 'config.leagueTable.plot.groups.default.color');\n\n        this.formGroups.push(leagueTableGroup);\n\n\n\n        var otherGroup = new FormGroup('other', ()=>app.treeDesigner.redraw());\n        otherGroup\n            .addField('disableAnimations', 'checkbox', app.treeDesigner, 'config.disableAnimations')\n            .addField('forceFullEdgeRedraw', 'checkbox', app.treeDesigner, 'config.forceFullEdgeRedraw')\n            .addField('hideLabels', 'checkbox', app.treeDesigner, 'config.hideLabels')\n            .addField('hidePayoffs', 'checkbox', app.treeDesigner, 'config.hidePayoffs')\n            .addField('hideProbabilities', 'checkbox', app.treeDesigner, 'config.hideProbabilities')\n            .addField({\n                name: 'raw',\n                type: 'checkbox',\n                config: app.treeDesigner,\n                path: 'config.raw',\n                valueUpdateCallback: ()=>app.onRawOptionChanged()\n            });\n\n        this.formGroups.push(otherGroup);\n\n        this.initView();\n\n    }\n\n    initFormGroups(container, data){\n        var self = this;\n        var temp = {};\n        var formGroups = container.selectAll('div.sd-form-group').filter(function(d) { return this.parentNode==container.node(); }).data(data);\n        var formGroupsEnter = formGroups.enter().appendSelector('div.sd-form-group').attr('id', d=>d.id).html(d=>Templates.get('settingsDialogFormGroup', d));\n        formGroupsEnter.select('.toggle-button').on('click', (d) => {\n            var g = container.select('#'+d.id);\n            g.classed('sd-extended', !g.classed('sd-extended'));\n        });\n\n        var formGroupsMerge = formGroupsEnter.merge(formGroups);\n        var inputGroups = formGroupsMerge.select('  .sd-form-group-content > .sd-form-group-inputs').selectAll('div.input-group').data(d=>d.fields);\n\n\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n\n\n        inputGroupsEnter.merge(inputGroups).select('input, select').on('change input', function(d,i){\n            var value = this.value;\n            if(d.type=='checkbox'){\n                value = this.checked\n            }\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n                if(d3.event.type=='change'){\n                    this.value = d.valueAccessor.get();\n                }\n                return;\n            }\n            d3.select(this).classed('invalid', false);\n\n            d.valueAccessor.set(value);\n            if(d.valueUpdateCallback){\n                d.valueUpdateCallback();\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n\n        }).each(function(d, i){\n            var value = d.valueAccessor.get();\n            if(d.type=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n        });\n\n        formGroupsMerge.each(function(d){\n            self.initFormGroups(d3.select(this).select('.sd-form-group-content > .sd-form-group-child-groups'), d.groups);\n        });\n    }\n\n    initView() {\n        var temp = {};\n        this.initFormGroups(this.container.select('form#sd-settings-form'), this.formGroups);\n\n    }\n\n    onOpen(){\n        this.initView();\n    }\n\n}\n\nexport class FormGroup{\n    id;\n    name;\n    fields=[];\n    groups=[];\n    valueUpdateCallback;\n\n    constructor(name, valueUpdateCallback){\n        this.id = 'sd-form-group-'+name.replace(/\\./g, '-');\n        this.name = name;\n        this.valueUpdateCallback = valueUpdateCallback;\n    }\n\n    addSelectField(name, config, path, options) {\n        this.addField(name, 'select', config, path, null, options);\n        return this;\n    }\n\n    addField(fieldConfig){\n        if(arguments.length>1){\n            return this._addField(...arguments);\n        }\n\n        return this._addField(fieldConfig['name'], fieldConfig['type'], fieldConfig['config'], fieldConfig['path'], fieldConfig['validator'],\n                                fieldConfig['options'], fieldConfig['valueUpdateCallback'])\n    }\n\n    _addField(name, type, config, path, validator, options, valueUpdateCallback){\n        var fieldId = this.name+\"-\"+name;\n        var label = i18n.t(\"settingsDialog.\"+this.name+\".\"+name);\n        var configInputField = new ConfigInputField(fieldId,fieldId, type,label, config, path, validator, options);\n        if(valueUpdateCallback){\n            configInputField.valueUpdateCallback =  ()=>{\n                this.valueUpdateCallback();\n                valueUpdateCallback();\n            };\n        }else{\n            configInputField.valueUpdateCallback =  this.valueUpdateCallback;\n        }\n\n        this.fields.push(configInputField);\n        return this;\n    }\n\n    addGroup(name){\n        var groupName = this.name+'.'+name;\n        var group = new FormGroup(groupName, this.valueUpdateCallback);\n        this.groups.push(group);\n        return group;\n    }\n}\n\n\nclass ConfigInputField extends InputField{\n    constructor(id, name, type, label, sourceObject, path, validator, options){\n        super(id, name, type, label, new PathValueAccessor(sourceObject, path), validator, options);\n    }\n}\n\n","import {dataURLtoBlob} from \"blueimp-canvas-to-blob\";\nimport {saveAs} from \"file-saver\";\nimport * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {LoadingIndicator} from \"./loading-indicator\";\n\nexport class Exporter {\n    static saveAs = saveAs;\n    static dataURLtoBlob = dataURLtoBlob;\n    static exportedStyles = [/^font/, /^color/, /^opacity$/];\n    static svgProperties = [/^stroke/, /^fill/, /^text/];\n\n// Below are the function that handle actual exporting:\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n    static getSvgCloneWithInlineStyles(svgNode) {\n        var svgClone = svgNode.cloneNode(true);\n        appendInlineStyles(svgNode, svgClone);\n\n        function appendInlineStyles(source, target, parentCs) {\n            if (!source) {\n                log.error('Exporter.appendInlineStyles - undefined source!');\n                return false;\n            }\n            var children = source.children;\n            var targetChildren = target.children;\n            if (!source.children) {\n                children = source.childNodes;\n                targetChildren = target.childNodes;\n            }\n\n            if (source.tagName === 'text') {\n                /*\n                 var bBox = source.getBBox();\n                 console.log(source, bBox);\n                 target.setAttribute('y', bBox.y)*/\n            }\n\n\n            var cssStyleText = '';\n            var cs = getComputedStyle(source);\n            if (!cs) {\n                return true;\n            }\n            if (cs.display === 'none') {\n                return false;\n            }\n\n\n            for (let i = 0; i < cs.length; i++) {\n                var styleName = cs.item(i);\n                if (Utils.startsWith(styleName, '-')) {\n                    continue;\n                }\n\n                var propertyValue = cs.getPropertyValue(styleName);\n                if (parentCs) {\n                    if (propertyValue === parentCs.getPropertyValue(styleName)) {\n                        continue;\n                    }\n                }\n\n                if (Exporter.exportedStyles.some(s=>s.test(styleName))) {\n                    cssStyleText += '; ' + styleName + ': ' + propertyValue;\n                } else if (Exporter.svgProperties.some(s=>s.test(styleName))) {\n                    target.setAttribute(styleName, propertyValue);\n                }\n\n            }\n            if (cssStyleText.length) {\n                target.setAttribute(\"style\", cssStyleText);\n            } else {\n                target.removeAttribute(\"style\")\n            }\n\n\n            var toRemove = [];\n            for (let i = 0; i < children.length; i++) {\n                var node = children[i];\n                if (!appendInlineStyles(node, targetChildren[i], cs)) {\n                    toRemove.push(targetChildren[i]);\n                }\n            }\n            toRemove.forEach(n=> {\n                target.removeChild(n)\n            });\n            return true;\n        }\n\n        /*var textElements = svgNode.getElementsByTagName('text')\n         _.each(textElements, function (el) {\n\n\n         var textBBox = el.getBBox();\n         console.log(el,textBBox, el.getBoundingClientRect());\n         _.each(el.getElementsByTagName('tspan'), tspan=>{\n         var tspanBBox = tspan.getBBox();\n         console.log(tspan,tspanBBox, tspan.getBoundingClientRect());\n         })\n\n         // el.style['font-family'] = el.style['font-family'] && el.style['font-family'].split(' ').splice(-1);\n         });*/\n\n\n        svgClone.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        return svgClone;\n    }\n\n\n    static getSVGString(svgNode, removeIds=false) {\n        // svgNode = svgNode.cloneNode(true);\n        var svgClone = Exporter.getSvgCloneWithInlineStyles(svgNode);\n\n        var svgString = Exporter.serializeSvgNode(svgClone);\n        // svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\n        // svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\n        svgString = Exporter.sanitizeSVG(svgString, removeIds);\n\n        return svgString;\n    }\n\n    static serializeSvgNode(svgNode) {\n        var serializer = new XMLSerializer();\n        return serializer.serializeToString(svgNode);\n    }\n\n    static validateSvgNode(svgNode) {\n        var svgString = Exporter.serializeSvgNode(svgNode);\n        var oParser = new DOMParser();\n        var doc = oParser.parseFromString(svgString, 'image/svg+xml');\n        return doc.documentElement.nodeName.indexOf('parsererror') === -1;\n    }\n\n    static svgString2Image(svgString, width, height, format, callback) {\n        var format = format ? format : 'png';\n        var imgsrc = 'data:image/svg+xml,' + (encodeURIComponent(svgString)); // Convert SVG string to dataurl\n\n        // var canvas = document.createElement(\"canvas\");\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n\n        var image = new Image;\n        image.width = width;\n        image.height = height;\n        var target = new Image;\n        target.width = width;\n        target.height = height;\n\n\n        image.onload = function () {\n            // context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            canvas.toBlob(function (blob) {\n                var filesize = Math.round(blob.length / 1024) + ' KB';\n                if (callback) callback(blob, filesize);\n            });\n\n        };\n\n        image.src = imgsrc;\n    }\n\n    //decisiontree@yyyy.mm.dd_hh.mm.ss\n    static getExportFileName(ext, name='decisiontree') {\n        var format = d3.timeFormat(\"%Y.%m.%d_%H.%M.%S\");\n        var date = new Date();\n        name += '@' + format(date);\n        if (ext) {\n            name += '.' + ext\n        }\n        return name;\n    }\n\n    static saveAsPng(svg, options) {\n\n        var clientSide = options.png.mode === 'client';\n        var fallback = options.png.mode === 'fallback';\n        var serverSide = options.png.mode === 'server';\n        if (Utils.detectIE()) {\n            if (clientSide) {\n                alert(i18n.t('error.pngExportNotSupportedIE'));\n                return;\n            }\n\n            if (fallback) {\n                fallback = false;\n                serverSide = true;\n            }\n        }\n        LoadingIndicator.show();\n\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n            var svgWidth = svg.attr('width');\n            var svgHeight = svg.attr('height');\n\n            var pngWidth = 4 * svgWidth;\n            var pngHeight = 4 * svgHeight;\n            if (clientSide || fallback) {\n                Exporter.svgString2Image(svgString, pngWidth, pngHeight, 'png', save); // passes Blob and filesize String to the callback\n\n                function save(dataBlob, filesize) {\n                    try {\n                        Exporter.saveAs(dataBlob, Exporter.getExportFileName('png'));\n                        LoadingIndicator.hide();\n                    } catch (e) {\n                        log.warn('client side png rendering failed!');\n                        if (fallback) {\n                            log.info('performing server side fallback.');\n                            Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n                        } else {\n                            throw e;\n                        }\n                    }\n\n                }\n            } else if (serverSide) {\n                Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n            }\n\n\n        } catch (e) {\n            alert(i18n.t('error.pngExportNotSupported'));\n            LoadingIndicator.hide();\n            log.error('pngExportNotSupported', e);\n        }\n    }\n\n\n    static saveAsSvg(svg) {\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\n            Exporter.saveAs(blob, Exporter.getExportFileName('svg'));\n        } catch (e) {\n            alert(i18n.t('error.svgExportNotSupported'));\n            log.error('svgExportNotSupported', e);\n        }\n    }\n\n    static exportPdfClientSide(svgString, width, height) {\n        var doc = new jsPDF('l', 'pt', [width, height]);\n        var dummy = document.createElement('svg');\n        dummy.innerHTML = svgString;\n        svg2pdf(dummy.firstChild, doc, {\n            xOffset: 0,\n            yOffset: 0,\n            scale: 1\n        });\n        doc.save(Exporter.getExportFileName('pdf'));\n        LoadingIndicator.hide();\n\n    }\n\n    static postAndSave(url, data, filename, successCallback, failCallback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('post', url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function () {\n            var status = xhr.status;\n            log.debug(status);\n            var type = xhr.getResponseHeader('Content-Type');\n            if (status == 200) {\n                var blob = new Blob([this.response], {type: type});\n                Exporter.saveAs(blob, filename);\n                if (successCallback) {\n                    successCallback();\n                }\n            } else {\n                if (failCallback) {\n                    failCallback();\n                }\n            }\n        };\n        xhr.onreadystatechange = function (oEvent) {\n            if (xhr.readyState === 4) {\n                if (xhr.status !== 200) {\n                    failCallback();\n                }\n            }\n        };\n\n\n        xhr.send(JSON.stringify(data));\n    }\n\n    static exportPdfServerSide(svgString, url) {\n        var filename = Exporter.getExportFileName('pdf');\n        var data = {svg: svgString, type: 'pdf', noDownload: true};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        // Utils.postByForm(url, {\n        //     filename: filename,\n        //     type: 'pdf',\n        //     // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n        //     // scale: options.scale,\n        //     svg: svgString\n        // });\n\n    }\n\n    static exportPngServerSide(svgString, url, pngWidth, pngHeight) {\n        var filename = Exporter.getExportFileName('png');\n        var data = {svg: svgString, type: 'png', noDownload: true, width: pngWidth};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        /*Utils.postByForm(url, {\n         filename: filename,\n         type: 'pdf',\n         // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n         // scale: options.scale,\n         svg: svgString\n         });*/\n\n    }\n\n    static saveAsPdf(svg, options) {\n        var clientSidePdfExportAvailable = Exporter.isClientSidePdfExportAvailable();\n        if (options.pdf.mode === 'client') {\n            if (!clientSidePdfExportAvailable) {\n                alert(i18n.t('error.jsPDFisNotIncluded'));\n                return;\n            }\n        }\n        LoadingIndicator.show();\n        var margin = 20;\n        var svgElement = svg.node();\n        var width = svgElement.width.baseVal.value + 2 * margin,\n            height = svgElement.height.baseVal.value + 2 * margin;\n        try {\n            var svgString = Exporter.getSVGString(svgElement);\n\n            var fallback = options.pdf.mode === 'fallback';\n            if (options.pdf.mode === 'client' || fallback) {\n                try {\n                    Exporter.exportPdfClientSide(svgString, width, height);\n                } catch (e) {\n                    log.error('client side pdf rendering failed!');\n                    if (fallback) {\n                        log.info('performing server side fallback.');\n                        Exporter.exportPdfServerSide(svgString, options.serverUrl);\n                    } else {\n                        throw e;\n                    }\n                }\n            } else if (options.pdf.mode === 'server') {\n                Exporter.exportPdfServerSide(svgString, options.serverUrl);\n            }\n        } catch (e) {\n            log.error('pdfExportNotSupported', e);\n            LoadingIndicator.hide();\n            alert(i18n.t('error.pdfExportNotSupported'));\n\n        }\n\n    }\n\n    static isClientSidePdfExportAvailable() {\n        return typeof jsPDF !== 'undefined' && typeof svg2pdf !== 'undefined'\n    }\n\n\n    static sanitizeSVG(svg, removeIds=false) {\n        let sanitized = svg\n            .replace(/zIndex=\"[^\"]+\"/g, '')\n            .replace(/isShadow=\"[^\"]+\"/g, '')\n            .replace(/symbolName=\"[^\"]+\"/g, '')\n            .replace(/jQuery[0-9]+=\"[^\"]+\"/g, '')\n            .replace(/url\\((\"|&quot;)(\\S+)(\"|&quot;)\\)/g, 'url($2)')\n            .replace(/url\\([^#]+#/g, 'url(#')\n            .replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ')\n            .replace(/ (NS[0-9]+\\:)?href=/g, ' xlink:href=')\n            .replace(/\\n/, ' ')\n            .replace(/<\\/svg>.*?$/, '</svg>')\n            .replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"')\n            .replace(/&nbsp;/g, '\\u00A0')\n            .replace(/&shy;/g, '\\u00AD');\n\n        if(removeIds){\n            return sanitized.replace(/id=\"[^\"]+\"/g, '')\n        }\n\n        return sanitized;\n\n    }\n\n    static saveAsCSV(rows, name='decisiontree') {\n        var csvRows = [];\n        rows.forEach(row => {\n            csvRows.push(row.map(r=>Exporter.escapeCsvField(r)).join(','))\n        });\n        var csvString = csvRows.join(\"\\r\\n\");\n\n        var blob = new Blob([csvString], {type: \"text/csv\"});\n        Exporter.saveAs(blob, Exporter.getExportFileName('csv', name));\n\n    }\n\n    static escapeCsvField(field){\n        if(Utils.isString(field)){\n            return '\"'+field.replace(/\"/g, '\"\"')+'\"'\n        }\n        return field;\n    }\n}\n","import {i18n} from './i18n/i18n'\n\nexport class FileLoader{\n\n    static openFile(callback){\n        var input =  document.getElementById('sd-file-input');\n        input.onchange = loadFile;\n\n        input.click();\n\n        function loadFile() {\n\n             var file, fr;\n\n\n            if (typeof window.FileReader !== 'function') {\n                alert(i18n.t('error.fileApiNotSupported'));\n                return;\n            }\n            input =  document.getElementById('sd-file-input');\n            if (!input.files) {\n                alert(i18n.t('error.inputFilesProperty'));\n                return;\n            }\n\n            if (!input.files[0]) {\n                return;\n            }\n\n            file = input.files[0];\n            fr = new FileReader();\n            fr.onload = receivedText;\n            fr.readAsText(file);\n\n\n            function receivedText(e) {\n                callback(e.target.result);\n                input.value = null;\n            }\n        }\n    }\n\n}\n","export class InputField{\n    name;\n    type;\n    validator;\n    valueAccessor;\n\n    id;\n    label;\n    valueUpdateCallback;\n\n    constructor(id, name, type, label, valueAccessor, validator, options, parser, styleClass){\n        this.name = name;\n        this.type = type;\n        this.valueAccessor = valueAccessor;\n        this.validator = validator;\n        this.id=id;\n        this.label = label;\n        this.options = options;\n        this.parser = parser;\n        this.styleClass = styleClass;\n    }\n\n    getValue(){\n        return this.valueAccessor.get();\n    }\n\n    setValue(val){\n        return this.valueAccessor.set(val);\n    }\n\n    parse(val){\n        if(this.parser){\n            return this.parser(val)\n        }\n        return val;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PathValueAccessor {\n    sourceObject;\n    path;\n    constructor(sourceObject, path){\n        this.sourceObject=sourceObject;\n        this.path = path;\n    }\n\n    get(){\n        return Utils.get(this.sourceObject, this.path);\n    }\n\n    set(v){\n        return Utils.set(this.sourceObject, this.path, v);\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Neues Diagramm\",\n        \"openDiagram\": \"Diagramm öffnen\",\n        \"saveDiagram\": \"Aktuelles Diagramm speichern\",\n        \"export\":{\n            \"label\": \"Exportieren nach\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Baum\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"Aussicht\",\n            \"options\": {\n                \"criterion1\":\"Kriterium 1\",\n                \"criterion2\":\"Kriterium 2\",\n                \"twoCriteria\":\"Zwei Kriterien\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regel\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Rückgängig machen\",\n        \"redo\": \"Wiederholen\",\n        \"settings\": \"Einstellungen\",\n        \"about\": \"Über\",\n        \"sensitivityAnalysis\": \"Sensitivitätsanalyse\",\n        \"recompute\": \"Neu Berechnen\"\n    },\n    \"node\":{\n        \"name\": \"Beschreibung\"\n    },\n    \"edge\":{\n        \"name\": \"Beschreibung\",\n        \"payoff\": \"Auszahlung\",\n        \"probability\": \"Wahrscheinlichkeit\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Rangliste\",\n        \"buttons\": {\n            \"downloadCsv\": \"CSV Herunterladen\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regel #\",\n            \"policy\": \"Regel\",\n            \"comment\": \"Kommentar\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominiert (durch#{{policy}})\",\n            \"extendedDominatedBy\": \"Erweitert-dominiert (durch #{{policy1}} und #{{policy2}})\",\n            \"incratio\": \"Inkrementelles Verhältnis={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Markiert\",\n                \"highlighted-default\": \"Empfohlen (für Standard-WTP)\",\n                \"extended-dominated\" : \"Erweitert-dominiert\",\n                \"dominated\": \"Dominiert\",\n                \"default\": \"Andere\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Richtung von{{name}} Optimierung\",\n                \"gradientArrow2\": \"Richtung von {{name}} Optimierung\",\n                \"dominatedRegion\": \"Dominierte Region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Graumarkiert Bereich stellt dominierte Region dar\",\n                \"gradientArrows\": \"Pfeile zeigen Verbesserungsrichtung an\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivitätsanalyse\",\n        \"buttons\": {\n            \"runJob\": \"Lauf\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Beenden\",\n            \"resumeJob\": \"Fortsetzen\",\n            \"downloadCsv\": \"CSV Herunterladen\",\n            \"back\": \"Zurück\",\n            \"clear\": \"Löschen\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Entfernen\",\n            \"addParameterValue\": \"Hinzufügen\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} Grundregeln\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Wärmekarte\"\n            }\n        },\n        \"policyPreview\": \"Grundregel Vorschau\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-Wege-Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado-diagramm\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Verringerung\",\n                    \"high\": \"Erhöhung\"\n                },\n                \"xAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistische Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"numberOfRuns\": {\n                    \"label\": \"Anzahl der Läufe\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formel\",\n                        \"help\": \"Wählen Sie die Formelvorlage aus dem Menü aus oder schreiben Sie benutzerdefinierten Code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\",\n                \"param-computation\": \"Fehler beim Berechnen von Parameterwerten:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Netzdiagramm\",\n            \"param\": {\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- prozentuale Veränderung zum Berücksichtigen\"\n                },\n                \"length\": {\n                    \"label\": \"Anzahl der zu testenden Werte\",\n                    \"help\": \"Anzahl der zu testenden Werte (an einer Seite des Bereichs)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Prozentuale Veränderung\",\n                \"yAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Rangliste\"\n        },\n        \"errors\":{\n            \"generic\": \"Fehler bei der Sensitivitätsanalyse: {{message}}\",\n            \"params\": \"Inkorrekte {{jobName}} Parametern\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Einstellungen\",\n        \"general\":{\n            \"title\": \"Allgemein\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontFamily\": \"Schriftfamilie\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"numberFormatLocale\": \"Zahlenformat Gebietsschema\"\n        },\n        \"payoff1\":{\n            \"title\": \"Auszahlung 1 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"payoff2\":{\n            \"title\": \"Auszahlung 2 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"probability\":{\n            \"title\": \"Wahrscheinlichkeit Zahlenformat\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"fontSize\": \"Schriftgröße\",\n            \"color\": \"Farbe\"\n        },\n        \"node\":{\n            \"title\": \"Knoten\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Beschreibung Schriftgröße\",\n                \"color\": \"Beschreibungsfarbe\"\n            },\n            \"payoff\": {\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            },\n            \"decision\": {\n                \"title\": \"Entscheidungsknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Zufall Knoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Endknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                },\n                \"payoff\": {\n                    \"title\": \"Auszahlung\",\n                    \"fontSize\": \"Schriftgröße\",\n                    \"color\": \"Farbe\",\n                    \"negativeColor\": \"Negative Farbe\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \" Zweig\",\n            \"stroke\": \"Farbe\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"selected\":{\n                \"title\": \"Ausgewählt\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\"\n            },\n            \"payoff\":{\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagrammtitel\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"color\": \"Farbe\",\n            \"margin\":{\n                \"title\": \"Rand\",\n                \"top\": \"Oben\",\n                \"bottom\": \"Unten\"\n            },\n            \"description\":{\n                \"title\": \"Untertitel (Diagrammbeschreibung)\",\n                \"show\": \"Anzeigen\",\n                \"fontSize\": \"Schriftgröße\",\n                \"fontWeight\": \"Schriftgewicht\",\n                \"fontStyle\": \"Schriftstil\",\n                \"color\": \"Farbe\",\n                \"marginTop\": \"Rand Oben\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Rangliste\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max Breite\",\n                \"highlightedColor\": \"Farbe der markierten Regel\",\n                \"highlightedDefaultColor\": \"Empfohlene Regel(für Standard-WTP) Farbe\",\n                \"extendedDominatedColor\": \"Farbe der erweitert-dominierten Regel\",\n                \"dominatedColor\": \"Farbe der dominierten Regel\",\n                \"defaultColor\": \"Farbe der anderen Regeln\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Weitere\",\n            \"disableAnimations\": \"Animationen Deaktivieren\",\n            \"forceFullEdgeRedraw\": \"Erzwingt vollständige Neuzeichnung der Zweige\",\n            \"hideLabels\": \"Verstecke Beschreibung\",\n            \"hidePayoffs\": \"Verstecke Auszahlungen\",\n            \"hideProbabilities\": \"Verstecke Wahrscheinlichkeiten\",\n            \"raw\": \"Rau\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Über\"\n    },\n    \"help\":{\n        \"header\": \"Hilfe\",\n        \"mouse\": {\n            \"header\":\"Mausaktionen:\",\n            \"list\":{\n                \"1\": \"Linke Maustaste: Knoten/Zweig Auswahl\",\n                \"2\": \"Rechte Maustaste: Kontextmenü (Hinzufügen / Manipulieren von Knoten)\",\n                \"3\": \"Linke Maus Doppelklick: Kontextmenü\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Tastatur:\",\n            \"list\":{\n                \"1\": \"Del: ausgewählte Knoten Löschen\",\n                \"2\": \"Ctrl-C/X: ausgewählte Knoten Kopieren/Ausschneiden\",\n                \"3\": \"Ctrl-V: kopierte Knoten als Teilbaum ausgewähltes Knotens einfügen\",\n                \"4\": \"Ctrl-Y/Z: Rückgängig/Wiederholen\",\n                \"5\": \"Ctrl-Alt-D/C/T: Neue Entscheidungs/Zufall/Endsknoten als Unterknoten von <strong>ausgewähltem Knoten</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Neue Entscheidungs/Zufall Knoten in <strong>ausgewählten Zweig </strong> Injizieren\"\n            }\n        },\n        \"docs\": \"Die Dokumentation von SilverDecisions ist unter <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a> verfügbar\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variablendefinitionen\",\n        \"scope\": {\n            \"global\": \"Globaler Anwendungsbereich\",\n            \"node\": \"Gewählten Knoten und Teilbaum Anwendungsbereich\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variabel Anwendungsbereich:\",\n            \"global\": \"Globaler\",\n            \"node\": \"Gewählten Knoten und Teilbaum\"\n        },\n        \"header\": \"Variablen\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Dialog Öffnen\",\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Mehrere Kriterien\",\n        \"defaultMaximizedCriterionName\": \"Effekt\",\n        \"defaultMinimizedCriterionName\": \"Kosten\",\n        \"nameOfCriterion1\": \"Name des Kriteriums 1\",\n        \"nameOfCriterion2\": \"Name des Kriteriums 2\",\n        \"defaultCriterion1Weight\": \"Default 1. Kriterium Gewicht\",\n        \"weightLowerBound\": \"Gewicht untere Grenze\",\n        \"weightUpperBound\": \"Gewicht obere Grenze\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Rangliste anzeigen\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontaler Rand\",\n        \"marginVertical\": \"Vertikaler Rand\",\n        \"nodeSize\": \"Knotengröße\",\n        \"edgeSlantWidthMax\": \"Kantenschräge (max)\",\n        \"gridWidth\": \"Breite\",\n        \"gridHeight\": \"Höhe\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Einzelheiten\",\n        \"title\" : \"Titel\",\n        \"description\" : \"Beschreibung\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Entscheidungsknoten\",\n                \"chance\":\"Zufall Knoten\",\n                \"terminal\":\"Endknoten\"\n            },\n            \"edge\": \"Zweig\",\n            \"text\": \"Schwimmender Text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Verbindungen\",\n                \"child\": {\n                    \"header\": \"Zweig #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Möchten Sie das aktuelle Diagramm wirklich löschen? Alle nicht gespeicherten Daten werden verloren.\",\n        \"openDiagram\": \"Sind Sie sicher? Alle nicht gespeicherten Diagrammdaten werden verloren.\",\n        \"beforeunload\": \"Sind Sie sicher, dass Sie SilverDecisions schließen möchten? Alle nicht gespeicherten Diagrammdaten werden verloren.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Fehler beim Analysieren der Datei!\",\n        \"fileApiNotSupported\":\"Die Datei-API wird in diesem Browser noch nicht unterstützt.\",\n        \"inputFilesProperty\":\"Ihr Browser scheint die `files`-Eigenschaft der Dateieingaben nicht zu unterstützen.\",\n        \"notSilverDecisionsFile\":\"Keine SilverDecisions-Datei!\",\n        \"incorrectVersionFormat\": \"Falsches Format der Versionszeichenfolge!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version der Datei ist neuer als Version des Softwares. Einige Funktionen möglicherweise fehlen.\",\n        \"objectiveComputationFailure\": \"Fehler beim Berechnen von Objektiven!\",\n        \"diagramDrawingFailure\": \"Fehler beim Zeichnen des Diagramms!\",\n        \"malformedData\":\"Fehler beim Lesen der Baumdaten!\",\n        \"pngExportNotSupported\": \"Der Export nach PNG wird in Ihrem Browser nicht unterstützt.\",\n        \"pngExportNotSupportedIE\": \"Der Export nach PNG wird in Internet Explorer nicht unterstützt.\",\n        \"svgExportNotSupported\": \"Der Export nach SVG wird in Ihrem Browser nicht unterstützt.\",\n        \"pdfExportNotSupported\": \"Der Export nach PDF wird in Ihrem Browser nicht unterstützt.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Falsche Auszahlungsformat Optionen\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Falsche Wahrscheinlichkeitsformat Optionen\",\n        \"incorrectNumberFormatOptions\": \"Falsche Zahlenformat, die Standardeinstellungen angewendet.\",\n        \"jsPDFisNotIncluded\": \"jsPDF ist nicht enthalten!\",\n        \"serverSideExportRequestFailure\": \"Export Server Anfrage fehlgeschlagen!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"New diagram\",\n        \"openDiagram\": \"Open existing diagram\",\n        \"saveDiagram\": \"Save current diagram\",\n        \"export\":{\n            \"label\": \"Export to\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Tree\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"View\",\n            \"options\": {\n                \"criterion1\":\"Criterion 1\",\n                \"criterion2\":\"Criterion 2\",\n                \"twoCriteria\":\"Two criteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Rule\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Undo\",\n        \"redo\": \"Redo\",\n        \"settings\": \"Settings\",\n        \"about\": \"About\",\n        \"sensitivityAnalysis\": \"Sensitivity analysis\",\n        \"recompute\": \"Recompute\"\n    },\n    \"node\":{\n        \"name\": \"Label\"\n    },\n    \"edge\":{\n        \"name\": \"Label\",\n        \"payoff\": \"Payoff\",\n        \"probability\": \"Probability\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"League table\",\n        \"buttons\": {\n            \"downloadCsv\": \"Download CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Policy #\",\n            \"policy\": \"Policy\",\n            \"comment\": \"Comment\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominated (by #{{policy}})\",\n            \"extendedDominatedBy\": \"extended-dominated (by #{{policy1}} and #{{policy2}})\",\n            \"incratio\": \"incremental ratio={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Recommended (for some WTP in range)\",\n                \"highlighted-default\": \"Recommended (for default WTP)\",\n                \"extended-dominated\" : \"Extended-dominated\",\n                \"dominated\": \"Dominated\",\n                \"default\": \"Other\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direction of {{name}} optimization\",\n                \"gradientArrow2\": \"Direction of {{name}} optimization\",\n                \"dominatedRegion\": \"Not recommended region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Grey area highlights not recommended region\",\n                \"gradientArrows\": \"Arrows indicate improvement direction\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivity analysis\",\n        \"buttons\": {\n            \"runJob\": \"Run\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Terminate\",\n            \"resumeJob\": \"Resume\",\n            \"downloadCsv\": \"Download CSV\",\n            \"back\": \"Back\",\n            \"clear\": \"Clear\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Remove\",\n            \"addParameterValue\": \"Add\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} policies\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Heatmap\"\n            }\n        },\n        \"policyPreview\": \"policy preview\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-way sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado diagram\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decrease\",\n                    \"high\": \"Increase\"\n                },\n                \"xAxisTitle\": \"Payoff\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistic sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"numberOfRuns\": {\n                    \"label\": \"Number of runs\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Select formula template from the menu or write custom code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\",\n                \"param-computation\": \"Error computing parameter values:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Spider plot\",\n            \"param\": {\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- percentage change to consider\"\n                },\n                \"length\": {\n                    \"label\": \"Number of values to test\",\n                    \"help\": \"Number of values to test (in one side of range)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Percentage change\",\n                \"yAxisTitle\": \"Payoff\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"League table\"\n        },\n        \"errors\":{\n            \"generic\": \"Error in {{jobName}} computations: {{message}}\",\n            \"params\": \"Incorrect {{jobName}} parameters\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Settings\",\n        \"general\":{\n            \"title\": \"General\",\n            \"fontSize\": \"Font size\",\n            \"fontFamily\": \"Font family\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"numberFormatLocale\": \"Number format locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Payoff 1 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"payoff2\":{\n            \"title\": \"Payoff 2 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"probability\":{\n            \"title\": \"Probability number format\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"fontSize\": \"Font size\",\n            \"color\": \"Color\"\n        },\n        \"node\":{\n            \"title\": \"Node\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Label font size\",\n                \"color\": \"Label color\"\n            },\n            \"payoff\": {\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            },\n            \"decision\": {\n                \"title\": \"Decision Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Chance Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Terminal Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                },\n                \"payoff\": {\n                    \"title\": \"Payoff\",\n                    \"fontSize\": \"Font size\",\n                    \"color\": \"Color\",\n                    \"negativeColor\": \"Negative color\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Edge\",\n            \"stroke\": \"Color\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"selected\":{\n                \"title\": \"Selected\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\"\n            },\n            \"payoff\":{\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagram title\",\n            \"fontSize\": \"Font size\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"color\": \"Color\",\n            \"margin\":{\n                \"title\": \"Margin\",\n                \"top\": \"Top\",\n                \"bottom\": \"Bottom\"\n            },\n            \"description\":{\n                \"title\": \"Subtitle (diagram description)\",\n                \"show\": \"Show\",\n                \"fontSize\": \"Font size\",\n                \"fontWeight\": \"Font weight\",\n                \"fontStyle\": \"Font style\",\n                \"color\": \"Color\",\n                \"marginTop\": \"Margin top\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"League Table\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max width\",\n                \"highlightedColor\": \"Recommended (for some WTP in range) policy color\",\n                \"highlightedDefaultColor\": \"Recommended (for default WTP) policy color\",\n                \"extendedDominatedColor\": \"Extended dominated policy color\",\n                \"dominatedColor\": \"Dominated policy color\",\n                \"defaultColor\": \"Other policies color\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Other\",\n            \"disableAnimations\": \"Disable animations\",\n            \"forceFullEdgeRedraw\": \"Force full redraw of edges\",\n            \"hideLabels\": \"Hide labels\",\n            \"hidePayoffs\": \"Hide payoffs\",\n            \"hideProbabilities\": \"Hide probabilities\",\n            \"raw\": \"Raw\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"About\"\n    },\n    \"help\":{\n        \"header\": \"Help\",\n        \"mouse\": {\n            \"header\":\"Mouse actions:\",\n            \"list\":{\n                \"1\": \"left mouse button: node/edge selection\",\n                \"2\": \"right mouse button: context menu (adding/manipulating nodes)\",\n                \"3\": \"left mouse dbclick: context menu\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Keyboard:\",\n            \"list\":{\n                \"1\": \"Del: delete selected nodes\",\n                \"2\": \"Ctrl-C/X: copy/cut selected nodes\",\n                \"3\": \"Ctrl-V: paste copied nodes as a subtree of a selected node\",\n                \"4\": \"Ctrl-Y/Z: undo/redo\",\n                \"5\": \"Ctrl-Alt-D/C/T: add new Decision/Chance/Terminal subnode of a <strong>selected node</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inject new Decision/Chance node into a <strong>selected edge</strong>\"\n            }\n        },\n        \"docs\": \"Documentation of SilverDecisions is available <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variable definitions\",\n        \"scope\": {\n            \"global\": \"global scope\",\n            \"node\": \"selected node and subtree scope\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variable scope:\",\n            \"global\": \"global\",\n            \"node\": \"selected node and subtree\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Open dialog\",\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Multiple criteria\",\n        \"defaultMaximizedCriterionName\": \"Effect\",\n        \"defaultMinimizedCriterionName\": \"Cost\",\n        \"nameOfCriterion1\": \"Name for criterion 1\",\n        \"nameOfCriterion2\": \"Name for criterion 2\",\n        \"defaultCriterion1Weight\": \"Default 1st criterion weight\",\n        \"weightLowerBound\": \"Weight lower bound\",\n        \"weightUpperBound\": \"Weight upper bound\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Show league table\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontal Margin\",\n        \"marginVertical\": \"Vertical Margin\",\n        \"nodeSize\": \"Node size\",\n        \"edgeSlantWidthMax\": \"Edge slant (max)\",\n        \"gridWidth\": \"Width\",\n        \"gridHeight\": \"Height\",\n        \"scale\": \"Scale\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Details\",\n        \"title\" : \"Title\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Decision Node\",\n                \"chance\":\"Chance Node\",\n                \"terminal\":\"Terminal Node\"\n            },\n            \"edge\": \"Edge\",\n            \"text\": \"Floating text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connections\",\n                \"child\": {\n                    \"header\": \"Edge #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Do you really want to clear current diagram? All unsaved data will be lost.\",\n        \"openDiagram\": \"Are you sure? All unsaved diagram data will be lost.\",\n        \"beforeunload\": \"Are you sure you want to close SilverDecisions? All unsaved diagram data will be lost.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Error parsing file!\",\n        \"fileApiNotSupported\":\"The file API isn't supported on this browser yet.\",\n        \"inputFilesProperty\":\"Your browser doesn't seem to support the `files` property of file inputs.\",\n        \"notSilverDecisionsFile\":\"Not a SilverDecisions file!\",\n        \"incorrectVersionFormat\": \"Incorrect format of version string!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version in file is newer than version of the application. Some features may be missing.\",\n        \"objectiveComputationFailure\": \"Error while computing objective!\",\n        \"diagramDrawingFailure\": \"Error while drawing diagram!\",\n        \"malformedData\":\"Error reading tree data!\",\n        \"pngExportNotSupported\": \"Export to PNG is not supported in your browser.\",\n        \"pngExportNotSupportedIE\": \"Export to PNG not supported in Internet Explorer.\",\n        \"svgExportNotSupported\": \"Export to SVG is not supported in your browser.\",\n        \"pdfExportNotSupported\": \"Export to PDF is not supported in your browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Incorrect payoff number format options\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Incorrect probability number format options\",\n        \"incorrectNumberFormatOptions\": \"Incorrect number format options, using default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF is not included!\",\n        \"serverSideExportRequestFailure\": \"Export Server request failed!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nouveau diagramme\",\n        \"openDiagram\": \"Ouvrir le diagramme existant\",\n        \"saveDiagram\": \"Enregistrer le diagramme actuel\",\n        \"export\":{\n            \"label\": \"Exporter vers\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposition\",\n            \"manual\": \"Manuel\",\n            \"tree\": \"Arbre\",\n            \"cluster\": \"Grappe\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vue\",\n            \"options\": {\n                \"criterion1\":\"Critère 1\",\n                \"criterion2\":\"Critère 2\",\n                \"twoCriteria\":\"Deux critères\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regle\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Annuler\",\n        \"redo\": \"Refaire\",\n        \"settings\": \"Parametres\",\n        \"about\": \"A propos\",\n        \"sensitivityAnalysis\": \"Analyse de sensibilité\",\n        \"recompute\": \"Recalculer\"\n    },\n    \"node\":{\n        \"name\": \"Étiquette\"\n    },\n    \"edge\":{\n        \"name\": \"Étiquette\",\n        \"payoff\": \"Avantage\",\n        \"probability\": \"Probabilité\"\n    },\n    \"text\":{\n        \"value\": \"Texte\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classement\",\n        \"buttons\": {\n            \"downloadCsv\": \"Télécharger CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Règle #\",\n            \"policy\": \"Règle\",\n            \"comment\": \"Commentaire\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominé (par #{{policy}})\",\n            \"extendedDominatedBy\": \"Étendu-dominé (par #{{policy1}} et #{{policy2}})\",\n            \"incratio\": \"Ratio incrémental={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Surligné\",\n                \"highlighted-default\": \"Recommandée (pour WTP par défaut)\",\n                \"extended-dominated\" : \"Étendu-dominé\",\n                \"dominated\": \"Dominé\",\n                \"default\": \"Autre\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"La direction de {{name}} optimisation\",\n                \"gradientArrow2\": \"La direction de {{name}} optimisation\",\n                \"dominatedRegion\": \"Région dominée\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"La région grise surligne la région dominée\",\n                \"gradientArrows\": \"Les flèches indiquent une direction d'amélioration\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analyse de sensibilité\",\n        \"buttons\": {\n            \"runJob\": \"Exécuter\",\n            \"stopJob\": \"Arrêter\",\n            \"terminateJob\": \"Terminer\",\n            \"resumeJob\": \"Reprendre\",\n            \"downloadCsv\": \"Télécharger CSV\",\n            \"back\": \"Retourner\",\n            \"clear\": \"Effacer\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Effacer\",\n            \"addParameterValue\": \"Ajouter\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} règles\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Carte de chaleur\"\n            }\n        },\n        \"policyPreview\": \"Aperçu de la règle\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité multivariée\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Graphique en tornade\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Diminuer\",\n                    \"high\": \"Augmenter\"\n                },\n                \"xAxisTitle\": \"Avantage\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité probabiliste\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"numberOfRuns\": {\n                    \"label\": \"Nombre d'essais\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formule\",\n                        \"help\": \"Sélectionner le modèle de la formule dans le menu ou écrire un code personnalisé.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\",\n                \"param-computation\": \"Erreur de calcul des valeurs de paramètres:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Graphique en radar\",\n            \"param\": {\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- changement de pourcentage à considérer\"\n                },\n                \"length\": {\n                    \"label\": \"Nombre de valeurs à tester\",\n                    \"help\": \"Nombre de valeurs à tester (dans une partie de gamme)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Nom\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Changement de pourcentage\",\n                \"yAxisTitle\": \"Avantage\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classement\"\n        },\n        \"errors\":{\n            \"generic\": \"Erreur de calcul d'analyse de sensibilité: {{message}}\",\n            \"params\": \"Paramètres du {{jobName}} sont incorrect\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Parametres\",\n        \"general\":{\n            \"title\": \"Général\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontFamily\": \"Famille de police\",\n            \"fontWeight\": \"Poid de la police\",\n            \"fontStyle\": \"Style de police\",\n            \"numberFormatLocale\": \"format local de numérotation\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format de la numérotation des avantages 1\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format de la numérotation des avantages 2\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"probability\":{\n            \"title\": \"Format de la numérotatio des probabilités\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"fontSize\": \"Taille de police\",\n            \"color\": \"Couleur\"\n        },\n        \"node\":{\n            \"title\": \"Noud\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police de l'étiquette\",\n                \"color\": \"Couleur de l'étiquette\"\n            },\n            \"payoff\": {\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            },\n            \"decision\": {\n                \"title\": \"Noeud décisionnel\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de trait\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionnée\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Noud aléatoire\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Noeud terminal\",\n                \"fill\": \"Couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                },\n                \"payoff\": {\n                    \"title\": \"Avantage\",\n                    \"fontSize\": \"Taille de la police\",\n                    \"color\": \"Couleur\",\n                    \"negativeColor\": \"Négatif couleur\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Bord\",\n            \"stroke\": \"Couleur\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"selected\":{\n                \"title\": \"Choisi\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\"\n            },\n            \"payoff\":{\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titre du diagramme\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontWeight\": \"Poids de la police\",\n            \"fontStyle\": \"Style de la police\",\n            \"color\": \"Couleur\",\n            \"margin\":{\n                \"title\": \"Marge\",\n                \"top\": \"Haut du diagramme\",\n                \"bottom\": \"Bas du diagramme\"\n            },\n            \"description\":{\n                \"title\": \"Sous-titre (description du diagramme)\",\n                \"show\": \"Afficher\",\n                \"fontSize\": \"Taille de la police\",\n                \"fontWeight\": \"Poids de la police\",\n                \"fontStyle\": \"Style de police\",\n                \"color\": \"Couleur\",\n                \"marginTop\": \"Haut du marge\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classement\",\n            \"plot\": {\n                \"title\": \"Le graphe\",\n                \"maxWidth\": \"Largeur maximale\",\n                \"highlightedColor\": \"Couleur de la règle soulignée\",\n                \"highlightedDefaultColor\": \"Couleur recommandée pour la règle (pour WTP par défaut)\",\n                \"extendedDominatedColor\": \"Couleur de la règle étendu-dominée\",\n                \"dominatedColor\": \"Couleur de la règle dominée\",\n                \"defaultColor\": \"Couleur des autres règles\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Autre\",\n            \"disableAnimations\": \"Désactiver les animations\",\n            \"forceFullEdgeRedraw\": \"Forcer le redessinage complet des bords\",\n            \"hideLabels\": \"Masquer les étiquettes\",\n            \"hidePayoffs\": \"Masquer les paiements\",\n            \"hideProbabilities\": \"Masquer les probabilités\",\n            \"raw\": \"Brut\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"A propos\"\n    },\n    \"help\":{\n        \"header\": \"Aide\",\n        \"mouse\": {\n            \"header\":\"Actions de la souris:\",\n            \"list\":{\n                \"1\": \"Bouton gauche de la souris: sélection du noud/bord\",\n                \"2\": \"Bouton droit de la souris: menu contextuel (ajout/manipulation des nouds)\",\n                \"3\": \"Double clic gauche de la souris: menu contextuel\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Raccourcis clavier:\",\n            \"list\":{\n                \"1\": \"Del: effacer les nouds sélectionnés\",\n                \"2\": \"Ctrl-C/X: copier/couper les nouds sélectionnés\",\n                \"3\": \"Ctrl-V: coller les nouds copiés comme un sous-arbre d'un noud sélectionné\",\n                \"4\": \"Ctrl-Y/Z: annuler/refaire\",\n                \"5\": \"Ctrl-Alt-D/C/T: ajouter un nouveau sous-noud de décision/aléatoire/terminal d'un <strong>noud sélectionné</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: injecter un nouveau noeud de décision/aléatoire dans un <strong>bord sélectionné</strong>\"\n            }\n        },\n        \"docs\": \"La documentation de SilverDecisions est disponible  <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">ici</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Définitions des variables\",\n        \"scope\": {\n            \"global\": \"portée mondiale\",\n            \"node\": \"la portée des nœud et sous-arborescence sélectionné\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Portée de la variable:\",\n            \"global\": \"mondial\",\n            \"node\": \"nœud et sous-arborescence sélectionné\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Ouvrir la boîte de dialogue\",\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Critères multiples\",\n        \"defaultMaximizedCriterionName\": \"Effet\",\n        \"defaultMinimizedCriterionName\": \"Coût\",\n        \"nameOfCriterion1\": \"Le nome de critère 1\",\n        \"nameOfCriterion2\": \"Le nome de critère 2\",\n        \"defaultCriterion1Weight\": \"Par défaut poid du 1er critère\",\n        \"weightLowerBound\": \"Poid de la limite inférieure\",\n        \"weightUpperBound\": \"Poid de la limite supérieure\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Montrer classement\",\n            \"flip\": \"Basculer\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposition\",\n        \"marginHorizontal\": \"Marge horizontale\",\n        \"marginVertical\": \"Marge verticale\",\n        \"nodeSize\": \"Taille du noeud\",\n        \"edgeSlantWidthMax\": \"Inclinaison du bord (max.)\",\n        \"gridWidth\": \"Largeur\",\n        \"gridHeight\": \"Taille\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Détails\",\n        \"title\" : \"Titre\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Noeud de décision\",\n                \"chance\":\"Noud aléatoire\",\n                \"terminal\":\"Noeud terminal\"\n            },\n            \"edge\": \"Bord\",\n            \"text\": \"Texte flottant\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Les connexions\",\n                \"child\": {\n                    \"header\": \"Bord #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Voulez-vous vraiment effacer le diagramme actuel? Toutes les données non enregistrées seront perdues.\",\n        \"openDiagram\": \"Etes-vous sur? Toutes les données de diagramme non enregistrées seront perdues.\",\n        \"beforeunload\": \"Voulez-vous vraiment fermer SilverDecisions? Toutes les données de diagramme non enregistrées seront perdues.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Erreur lors de l'analyse du fichier!\",\n        \"fileApiNotSupported\":\"L'API du fichier n'est pas encore prise en charge sur ce navigateur.\",\n        \"inputFilesProperty\":\"Votre navigateur ne semble pas prendre en charge la propriété `fichiers`.\",\n        \"notSilverDecisionsFile\":\"Pas de fichiers SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Format incorrect de la chaîne de version!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La version dans le fichier est plus récente que la version de l'application. Certaines fonctionnalités peuvent être manquantes.\",\n        \"objectiveComputationFailure\": \"Erreur en calculant l'objectif!\",\n        \"diagramDrawingFailure\": \"Erreur lors du dessin diagramme!\",\n        \"malformedData\":\"Erreur lors de la lecture des données arborescentes!\",\n        \"pngExportNotSupported\": \"L'exportation vers PNG n'est pas prise en charge dans votre navigateur.\",\n        \"pngExportNotSupportedIE\": \"Exporter vers PNG n'est pas pris en charge dans Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'exportation vers SVG n'est pas prise en charge par votre navigateur.\",\n        \"pdfExportNotSupported\": \"L'exportation au format PDF n'est pas prise en charge par votre navigateur.\",\n        \"incorrectPayoffNumberFormatOptions\": \"L'option de format de numérotation des avantages chiosie est incorrecte.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"L'option de format de numérotation des probabilités chiosie est incorrecte.\",\n        \"incorrectNumberFormatOptions\": \"L'option de format de numérotation choisie est incorrecte.\",\n        \"jsPDFisNotIncluded\": \"JsPDF n'est pas inclus!\",\n        \"serverSideExportRequestFailure\": \"La demande de téléchargement au serveur a échoué!\"\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: {\n                en: {\n                    translation: en\n                },\n                pl: {\n                    translation: pl\n                },\n                it: {\n                    translation: it\n                },\n                de: {\n                    translation: de\n                },\n                fr: {\n                    translation: fr\n                }\n            }\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nuovo diagramma\",\n        \"openDiagram\": \"Apri diagramma esistnte\",\n        \"saveDiagram\": \"Salva il diagramma corente\",\n        \"export\":{\n            \"label\": \"Esporta in\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposizione\",\n            \"manual\": \"Manuale\",\n            \"tree\": \"Albero\",\n            \"cluster\": \"Grappolo\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vista\",\n            \"options\": {\n                \"criterion1\":\"Criterio 1\",\n                \"criterion2\":\"Criterio 2\",\n                \"twoCriteria\":\"Due criteri\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regola\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"max-min\",\n                \"maxi-max\":\"max-max\",\n                \"mini-min\":\"min-min\",\n                \"mini-max\":\"min-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Ripristina\",\n        \"redo\": \"Ripeti\",\n        \"settings\": \"Settaggi\",\n        \"about\": \"Di\",\n        \"sensitivityAnalysis\": \"Analisi di sensibilità\",\n        \"recompute\": \"Ricalcola\"\n    },\n    \"node\":{\n        \"name\": \"Etichetta\"\n    },\n    \"edge\":{\n        \"name\": \"Etichetta\",\n        \"payoff\": \"Saldo\",\n        \"probability\": \"Probabilità\"\n    },\n    \"text\":{\n        \"value\": \"Testo\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classifica\",\n        \"buttons\": {\n            \"downloadCsv\": \"Scarica CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regola #\",\n            \"policy\": \"Regola\",\n            \"comment\": \"Commento\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominata (da #{{policy}})\",\n            \"extendedDominatedBy\": \"estesa-dominata (da #{{policy1}} e #{{policy2}})\",\n            \"incratio\": \"rapporto incrementale={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Evidenziato\",\n                \"highlighted-default\": \"Raccomandato (per default WTP)\",\n                \"extended-dominated\" : \"Estesa-dominata\",\n                \"dominated\": \"Dominata\",\n                \"default\": \"Altro\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direzione di {{name}} ottimizzazione\",\n                \"gradientArrow2\": \"Direzione di {{name}} ottimizzazione\",\n                \"dominatedRegion\": \"Regione dominata\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"L'area grigia evidenzia la regione dominata\",\n                \"gradientArrows\": \"Le frecce indicano la direzione di miglioramento\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analisi di sensibilità\",\n        \"buttons\": {\n            \"runJob\": \"Esegui\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Esci\",\n            \"resumeJob\": \"Riprendi\",\n            \"downloadCsv\": \"Scaricare CSV\",\n            \"back\": \"Indietro\",\n            \"clear\": \"Cancella\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Cancella\",\n            \"addParameterValue\": \"Aggiungi\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} politiche\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Massimo\",\n                \"minimum\": \"Minimo\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mappa di calore\"\n            }\n        },\n        \"policyPreview\": \"Anteprima della politica\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità multivariata\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagramma a tornado\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decresce\",\n                    \"high\": \"Cresce\"\n                },\n                \"xAxisTitle\": \"Saldo\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità probabilistica\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"numberOfRuns\": {\n                    \"label\": \"Numero di operazioni\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Seleziona modello di formula dal menu o scrivi un codice personalizzato.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\",\n                \"param-computation\": \"Errore di calcolo dei valori dei parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n                \"spider-plot\": {\n            \"name\": \"Diagramma di Kiviat\",\n            \"param\": {\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- variazione percentuale da considerare\"\n                },\n                \"length\": {\n                    \"label\": \"Numero di valpri da testare\",\n                    \"help\": \"Numero di valpri da testare (in una parte della gamma)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Variazione percentuale\",\n                \"yAxisTitle\": \"Saldo\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classifica\"\n        },\n        \"errors\":{\n            \"generic\": \"Errore nei calcoli di analisi di sensibilità: {{message}}\",\n            \"params\": \"{{jobName}} parameteri errati\"\n        }\n    },\n\n    \"settingsDialog\":{\n        \"title\": \"Settaggi\",\n        \"general\":{\n            \"title\": \"Generale\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontFamily\": \"Famiglia font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"numberFormatLocale\": \"Formato numero locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Formato saldo 1\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"payoff2\":{\n            \"title\": \"Formato saldo 2\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"probability\":{\n            \"title\": \"Formato probabilità\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"fontSize\": \"Dimensione font\",\n            \"color\": \"Colore\"\n        },\n        \"node\":{\n            \"title\": \"Nodo\",\n            \"strokeWidth\": \"Spessore linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Spessore linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font etichetta\",\n                \"color\": \"Colore etichetta\"\n            },\n            \"payoff\": {\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            },\n            \"decision\": {\n                \"title\": \"Nodo dicisione\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Nodo opportunità\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Nodo terminale\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                },\n                \"payoff\": {\n                    \"title\": \"Saldo\",\n                    \"fontSize\": \"Dimensione font\",\n                    \"color\": \"Colore\",\n                    \"negativeColor\": \"Colore negativo\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Ramo\",\n            \"stroke\": \"Colore\",\n            \"strokeWidth\": \"Larghezza linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"selected\":{\n                \"title\": \"Selezionato\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\"\n            },\n            \"payoff\":{\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titolo diagramma\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"color\": \"Colore\",\n            \"margin\":{\n                \"title\": \"Margine\",\n                \"top\": \"Superiore\",\n                \"bottom\": \"Inferiore\"\n            },\n            \"description\":{\n                \"title\": \"Sotto-titolo (descrizione diagramma)\",\n                \"show\": \"Mostra\",\n                \"fontSize\": \"Dimensione font\",\n                \"fontWeight\": \"Peso del font\",\n                \"fontStyle\": \"Stile font\",\n                \"color\": \"Colore\",\n                \"marginTop\": \"Margine superiore\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classifica\",\n            \"plot\": {\n                \"title\": \"Grafico\",\n                \"maxWidth\": \"Larghezza massima\",\n                \"highlightedColor\": \"Colore evidenziato della regola\",\n                \"highlightedDefaultColor\": \"Colore polizza raccomandata (per default WTP)\",\n                \"extendedDominatedColor\": \"Colori della regola dominata estesa\",\n                \"dominatedColor\": \"Colore della denominata regola\",\n                \"defaultColor\": \"Altri criteri colore\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Altro\",\n            \"disableAnimations\": \"Disabilita animazione\",\n            \"forceFullEdgeRedraw\": \"Forza ridisegno dei rami\",\n            \"hideLabels\": \"Nascondi le etichette\",\n            \"hidePayoffs\": \"Nascondi saldo\",\n            \"hideProbabilities\": \"Nascondi le probabilità\",\n            \"raw\": \"Non elaborato\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informazioni\"\n    },\n    \"help\":{\n        \"header\": \"Aiuto\",\n        \"mouse\": {\n            \"header\":\"Azioni mouse:\",\n            \"list\":{\n                \"1\": \"Bottone sinistro: selezione nodo/ramo\",\n                \"2\": \"Bottone destro: menu di contesto (aggiunta/manipolazione nodi)\",\n                \"3\": \"Doppio click bottone sinistro: menu di contesto\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Scorciatoie tastiera:\",\n            \"list\":{\n                \"1\": \"Del: cancella nodi selezionati\",\n                \"2\": \"Ctrl-C/X: copia/taglia nodi selezionati\",\n                \"3\": \"Ctrl-V: incolla nodi copiati come sotto-albero di un nodo selezionato\",\n                \"4\": \"Ctrl-Y/Z: ripristina/ripeti\",\n                \"5\": \"Ctrl-Alt-D/C/T: aggiungi nuovo sottonodo Decisione/Opportunità/Terminale di un <strong>nodo selezionato</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inietta un nuovo nodo Decisione/Opportunità in un <strong>ramo selezionato</strong>\"\n            }\n        },\n        \"docs\": \"La documentazione di SilverDecisions e disponibile <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">qui</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definizioni delle variabili\",\n        \"scope\": {\n            \"global\": \"raggio globale\",\n            \"node\": \"raggio di nodo e sotto-albero selezionati\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Raggio variabile:\",\n            \"global\": \"globale\",\n            \"node\": \"nodo e sotto-albero selezionati\"\n        },\n        \"header\": \"Variabili\",\n        \"code\": \"Codice\",\n        \"buttons\":{\n            \"openDialog\" : \"Apri il dialogo\",\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Criteri multipli\",\n        \"defaultMaximizedCriterionName\": \"Effetto\",\n        \"defaultMinimizedCriterionName\": \"Costo\",\n        \"nameOfCriterion1\": \"Nome del criterio 1\",\n        \"nameOfCriterion2\": \"Nome del criterio 2\",\n        \"defaultCriterion1Weight\": \"Predefinito 1° peso criterio\",\n        \"weightLowerBound\": \"Peso inferiore limitato\",\n        \"weightUpperBound\": \"Peso superiore del limite\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Mostra la classifica\",\n            \"flip\": \"Ribalta\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposizione\",\n        \"marginHorizontal\": \"Margine orizzontale\",\n        \"marginVertical\": \"Margine verticale\",\n        \"nodeSize\": \"Dimensione nodo\",\n        \"edgeSlantWidthMax\": \"Inclinazione nodo\",\n        \"gridWidth\": \"Larghezza\",\n        \"gridHeight\": \"Altezza\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Dettagli\",\n        \"title\" : \"Titolo\",\n        \"description\" : \"Descrizione\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Nodo decisione\",\n                \"chance\":\"Nodo opportunità\",\n                \"terminal\":\"Nodo terminale\"\n            },\n            \"edge\": \"Ramo\",\n            \"text\": \"Testo mobile\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connessioni\",\n                \"child\": {\n                    \"header\": \"Ramo #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Vuoi davvero cancellare ildiagramma corrente ? Tutti i dati non salvati saranno persi.\",\n        \"openDiagram\": \"Sei sicuro? Tutti i dati non salvati saranno persi.\",\n        \"beforeunload\": \"Sei sicuro di voler uscire da SilverDecisions ?Tutti i dati non salvati saranno persi.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Errore analizzando il file !\",\n        \"fileApiNotSupported\":\"l'API di questo file non è ancora supportata in questo browser.  \",\n        \"inputFilesProperty\":\"Il tuo browser non sembra supportare la proprieta del file di input.\",\n        \"notSilverDecisionsFile\":\"Non è un file SilverDecisions !\",\n        \"incorrectVersionFormat\": \"Formato non corretto della serie di versione!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La versione in file è più recente rispetto alla versione dell'applicazione. Alcune funzionalità possono essere indisponibili.\",\n        \"objectiveComputationFailure\": \"Errore durante il calcolo obiettivo!\",\n        \"diagramDrawingFailure\": \"Errore durante il disegno della diagramma!\",\n        \"malformedData\":\"Errore durante la lettura dei dati dell'albero !\",\n        \"pngExportNotSupported\": \"L'esport in formato PNG non è supportata nel tuo browser.\",\n        \"pngExportNotSupportedIE\": \"L'esport in formato PNG non è supportata in Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'esport in formato SVG non è supportata nel tuo browser.\",\n        \"pdfExportNotSupported\": \"L'esport in formato PDF non è supportata nel tuo browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Opzioni per il formato dei saldi non corrette.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Opzioni per il formato delle probabilità non corrette.\",\n        \"incorrectNumberFormatOptions\": \"Opzioni per il formato dei numeri non corrette, utilizzo del default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF non incluso !\",\n        \"serverSideExportRequestFailure\": \"Richiesta di export fallita lato server !\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nowy diagram\",\n        \"openDiagram\": \"Otwórz diagram\",\n        \"saveDiagram\": \"Zapisz diagram\",\n        \"export\":{\n            \"label\": \"Eksport\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Układ\",\n            \"manual\": \"Ręczny\",\n            \"tree\": \"Drzewo\",\n            \"cluster\": \"Zgrupowany\"\n        },\n        \"viewMode\": {\n            \"label\": \"Widok\",\n            \"options\": {\n                \"criterion1\":\"Kryterium 1\",\n                \"criterion2\":\"Kryterium 2\",\n                \"twoCriteria\":\"Dwa kryteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Reguła\",\n            \"options\": {\n                \"expected-value-maximization\":\"maksimum\",\n                \"expected-value-minimization\":\"minimum\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Cofnij\",\n        \"redo\": \"Ponów\",\n        \"settings\": \"Ustawienia\",\n        \"about\": \"Informacje\",\n        \"sensitivityAnalysis\": \"Analiza wrażliwości\",\n        \"recompute\": \"Przelicz\"\n    },\n    \"node\":{\n        \"name\": \"Etykieta\"\n    },\n    \"edge\":{\n        \"name\": \"Etykieta\",\n        \"payoff\": \"Wypłata\",\n        \"probability\": \"Prawdopodobieństwo\"\n    },\n    \"text\":{\n        \"value\": \"Tekst\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Tabela ligowa\",\n        \"buttons\": {\n            \"downloadCsv\": \"Pobierz CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Nr polityki\",\n            \"policy\": \"Polityka\",\n            \"comment\": \"Komentarz\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"zdominowana (przez #{{policy}})\",\n            \"extendedDominatedBy\": \"zdominowana rozszerzenie (przez #{{policy1}} i #{{policy2}})\",\n            \"incratio\": \"inkrementalny iloraz={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Rekomendowany (dla pewnej wartości WTP w zakresie)\",\n                \"highlighted-default\": \"Rekomendowany (dla domyślnej wartości WTP)\",\n                \"extended-dominated\" : \"Zdominowana rozszerzenie\",\n                \"dominated\": \"Zdominowana\",\n                \"default\": \"Inne\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Kierunek optymalizacji {{name}}\",\n                \"gradientArrow2\": \"Kierunek optymalizacji {{name}}\",\n                \"dominatedRegion\": \"Obszar zdominowany\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Szary region oznacza obszar zdominowany\",\n                \"gradientArrows\": \"Strzałki wskazują kierunek poprawy\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analiza wrażliwości\",\n        \"buttons\": {\n            \"runJob\": \"Uruchom\",\n            \"stopJob\": \"Zatrzymaj\",\n            \"terminateJob\": \"Zakończ\",\n            \"resumeJob\": \"Wznów\",\n            \"downloadCsv\": \"Pobierz CSV\",\n            \"back\": \"Wstecz\",\n            \"clear\": \"Wyczyść\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Usuń\",\n            \"addParameterValue\": \"Dodaj\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} polityk\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maksimum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mapa cieplna\"\n            }\n        },\n        \"policyPreview\": \"podgląd polityki\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analiza wrażliwości N-czynnikowa\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maksimum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagram tornado\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maximum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Zmniejszenie\",\n                    \"high\": \"Zwiększenie\"\n                },\n                \"xAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistyczna analiza wrażliwości\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"numberOfRuns\": {\n                    \"label\": \"Liczba powtórzeń\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis reguły\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formuła\",\n                        \"help\": \"Wybierz wzór formuły z menu lub wpisz własny kod\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\",\n                \"param-computation\": \"Błąd w wyliczaniu wartości parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Tabela ligowa\"\n        },\n        \"spider-plot\": {\n            \"name\": \"Wykres pajęczynowy\",\n            \"param\": {\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- zmiana procentowa do analizy\"\n                },\n                \"length\": {\n                    \"label\": \"Liczba wartości do przetestowa\",\n                    \"help\": \"Liczba wartości do przetestowa (po jednej stronie zakresu)\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Zmiana procentowa\",\n                \"yAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"errors\":{\n            \"generic\": \"Błąd w obliczeniach analizy wrażliwości: {{message}}\",\n            \"params\": \"Błędne parametry w {{jobName}}\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Ustawienia\",\n        \"general\":{\n            \"title\": \"Ogólne\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontFamily\": \"Rodzina czcionek\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"numberFormatLocale\": \"Kod lokalizacji językowej liczb\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format wypłaty 1\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format wypłaty 2\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"probability\":{\n            \"title\": \"Format prawdopodobieństwa\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"color\": \"Kolor\"\n        },\n        \"node\":{\n            \"title\": \"Węzeł\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalny\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki etykiety\",\n                \"color\": \"Kolor etykiety\"\n            },\n            \"payoff\": {\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            },\n            \"decision\": {\n                \"title\": \"Węzeł Decyzyjny\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Węzeł Losowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Węzeł Końcowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                },\n                \"payoff\": {\n                    \"title\": \"Wypłata\",\n                    \"fontSize\": \"Rozmiar czcionki\",\n                    \"color\": \"Kolor\",\n                    \"negativeColor\": \"Kolor wartości ujemnej\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Krawędź\",\n            \"stroke\": \"Kolor\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalna\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"selected\":{\n                \"title\": \"Zaznaczona\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\"\n            },\n            \"payoff\":{\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Tytuł diagramu\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"color\": \"Kolor\",\n            \"margin\":{\n                \"title\": \"Margines\",\n                \"top\": \"Górny\",\n                \"bottom\": \"Dolny\"\n            },\n            \"description\":{\n                \"title\": \"Podtytuł (opis diagramu)\",\n                \"show\": \"Wyświetl\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"fontWeight\": \"Waga czcionki\",\n                \"fontStyle\": \"Styl czcionki\",\n                \"color\": \"Kolor\",\n                \"marginTop\": \"Margines górny\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Tabela ligowa\",\n            \"plot\": {\n                \"title\": \"Wykres\",\n                \"maxWidth\": \"Maksymalna szerokość\",\n                \"highlightedColor\": \"Kolor polityki rekomendowanej (dla pewnego WTP w zakresie)\",\n                \"highlightedDefaultColor\": \"Kolor polityki rekomendowanej (dla domyślnego WTP)\",\n                \"extendedDominatedColor\": \"Kolog polityki zdominowanej rozszerzenie\",\n                \"dominatedColor\": \"Kolor polityki zdominowanej\",\n                \"defaultColor\": \"Kolor innych polityk\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Inne\",\n            \"disableAnimations\": \"Wyłącz animacje\",\n            \"forceFullEdgeRedraw\": \"Wymuś pełne przerysowywanie krawędzi\",\n            \"hideLabels\": \"Ukryj etykiety\",\n            \"hidePayoffs\": \"Ukryj wypłaty\",\n            \"hideProbabilities\": \"Ukryj prawdopodobieństwa\",\n            \"raw\": \"Surowy\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informacje\"\n    },\n    \"help\":{\n        \"header\": \"Pomoc\",\n        \"mouse\": {\n            \"header\":\"Akcje myszy:\",\n            \"list\":{\n                \"1\": \"lewy klawisz myszy: wybór węzła/krawędzi\",\n                \"2\": \"prawy klawisz myszy: menu kontekstowe (dodawanie/manipulowanie węzłami)\",\n                \"3\": \"podwójne kliknięcie lewym przyciskiem myszy: menu kontekstowe\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Skróty klawiszowe:\",\n            \"list\":{\n                \"1\": \"Del: usuwanie wybranych węzłów\",\n                \"2\": \"Ctrl-C/X: kopiowanie/wycinanie wybranych węzłów\",\n                \"3\": \"Ctrl-V: wklej skopiowane węzły jako poddrzewo wybranego węzła\",\n                \"4\": \"Ctrl-Y/Z: cofnij/ponów\",\n                \"5\": \"Ctrl-Alt-D/C/T: dodaj nowy węzeł Decyzyjny/Losowy/Końcowy jako dziecko <strong>wybranego węzła</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Wstrzyknij nowy węzeł Decyzyjny/Losowy do <strong>wybranej krawędzi</strong>\"\n            }\n        },\n        \"docs\": \"Dokumentacja SilverDecisions jest dostępna <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">tutaj</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definicje zmiennych\",\n        \"scope\": {\n            \"global\": \"zasięg globalny\",\n            \"node\": \"zasięg wybranego węzła i poddrzewa\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Zasięg zmiennej:\",\n            \"global\": \"globalny\",\n            \"node\": \"wybrany węzeł i poddrzewo\"\n        },\n        \"header\": \"Zmienne\",\n        \"code\": \"Kod\",\n        \"buttons\":{\n            \"openDialog\" : \"Otwórz okno dialogowe\",\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Wiele kryteriów\",\n        \"defaultMaximizedCriterionName\": \"Efekt\",\n        \"defaultMinimizedCriterionName\": \"Koszt\",\n        \"nameOfCriterion1\": \"Nazwa kryterium 1\",\n        \"nameOfCriterion2\": \"Nazwa kryterium 2\",\n        \"defaultCriterion1Weight\": \"Domyślna waga kryerium 1\",\n        \"weightLowerBound\": \"Dolna granica wagi\",\n        \"weightUpperBound\": \"Górna granica wagi\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Pokaż tabelę ligową\",\n            \"flip\": \"Zamień\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Układ\",\n        \"marginHorizontal\": \"Margines w poziomie\",\n        \"marginVertical\": \"Margines w pionie\",\n        \"nodeSize\": \"Rozmiar węzła\",\n        \"edgeSlantWidthMax\": \"Skos krawędzi (maksymalny)\",\n        \"gridWidth\": \"Szerokość\",\n        \"gridHeight\": \"Wysokość\",\n        \"scale\": \"Skala\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Szczegóły\",\n        \"title\" : \"Tytuł\",\n        \"description\" : \"Opis\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Węzeł Decyzyjny\",\n                \"chance\":\"Węzeł Losowy\",\n                \"terminal\":\"Węzeł Końcowy\"\n            },\n            \"edge\": \"Krawędź\",\n            \"text\": \"Pływający tekst\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Połączenia\",\n                \"child\": {\n                    \"header\": \"Krawędź #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Czy jesteś pewien, że chcesz porzucić obecny diagram? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"openDiagram\": \"Czy jesteś pewien? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"beforeunload\": \"Czy jesteś pewien, że chcesz zamknąć SilverDecisions? Wszystkie niezapisane zmiany zostaną utracone.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Błąd przetwarzania danych z pliku!\",\n        \"fileApiNotSupported\":\"Funckja 'file API' nie jest wspierana w tej przeglądarce internetowej.\",\n        \"inputFilesProperty\":\"Twoje przeglądarka nie wspiera opcji `pliki` przy otwieraniu pliku.\",\n        \"notSilverDecisionsFile\":\"Plik niezgodny z formatem SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Niepoprawny format ciągu z numerem wersji!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Wersja pliku jest nowasza niż wersja aplikacji. Niektóre funkcjonalności mogą być niedostępne.\",\n        \"objectiveComputationFailure\": \"Błąd podczas wyliczania celu!\",\n        \"diagramDrawingFailure\": \"Błąd podczas rysowania diagramu!\",\n        \"malformedData\":\"Błąd odczytu danych drzewa!\",\n        \"pngExportNotSupported\": \"Eksport do obrazu PNG nie jest wspierany w Twojej przeglądarce.\",\n        \"pngExportNotSupportedIE\": \"Eksport do obrazu PNG nie jest wspierany w przeglądarce Internet Explorer.\",\n        \"svgExportNotSupported\": \"Eksport do obrazu SVG nie jest wspierany w Twojej przeglądarce.\",\n        \"pdfExportNotSupported\": \"Eksport do PDF nie jest wspierany w Twojej przeglądarce.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu wypłaty.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu prawdopodobieństw.\",\n        \"incorrectNumberFormatOptions\": \"Niewłaściwe ustawiono formatowanie liczb. Przyjęto ustawienia domyślne.\",\n        \"jsPDFisNotIncluded\": \"Nie włączono jsPDF!\",\n        \"serverSideExportRequestFailure\": \"Nieudane zapytanie do serwera exportu!\"\n    }\n}\n","require('es6-set/implement');\nimport {D3Extensions} from 'sd-tree-designer'\nimport {App} from './app'\nimport {version} from '../package.json';\nD3Extensions.extend();\n\nApp.version = version;\nmodule.exports = App;\n\n\n\n\n\n\n","import {Templates} from \"../templates\";\nimport {PARAMETER_TYPE} from \"sd-computations/src/jobs/engine/job-parameter-definition\";\nimport {log} from 'sd-utils'\nimport * as d3 from \"../d3\";\nimport {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {Autocomplete} from \"../autocomplete\"\n\nexport class JobParametersBuilder{\n\n\n    jobParameters;\n    hiddenParams;\n    constructor(container, i18nPrefix='', onChange=()=>{}){\n        this.container=container;\n        this.i18nPrefix = i18nPrefix;\n        this.paramTypeToInputType ={};\n        this.paramTypeToInputAttrs = {};\n\n        this.paramTypeToInputType[PARAMETER_TYPE.BOOLEAN] = 'checkbox';\n        this.paramTypeToInputType[PARAMETER_TYPE.DATE] = 'date';\n        this.paramTypeToInputType[PARAMETER_TYPE.INTEGER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.INTEGER] = [{\n            name: \"step\",\n            value: \"1\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.NUMBER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.NUMBER] = [{\n            name: \"step\",\n            value: \"any\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.STRING] = 'text';\n\n        this.onChange = onChange;\n    }\n\n\n    setJobParameters(jobName, jobParameters, customParamsConfig={}){\n        this.jobName=jobName;\n        this.jobParameters = jobParameters;\n        this.customParamsConfig = customParamsConfig;\n        this.clean();\n        this.build(this.container, this.jobParameters.definitions, this.jobParameters.values, '', this.onChange);\n    }\n\n    clean() {\n        this.container.html('');\n        this.pristine = {};\n        this.customValidators = {};\n        this.strictValidation(false);\n    }\n\n    validate(strictValidation = true){\n        this.strictValidation(strictValidation);\n        this.pristine = {};\n        this.container.selectAll('.sd-pristine').classed('sd-pristine', false);\n        return this.checkCustomValidators() && this.jobParameters.validate();\n    }\n\n    checkCustomValidators(){\n        let valid = true;\n        Utils.forOwn(this.customValidators, (val, key)=>{\n            valid = valid && val();\n        });\n        return valid;\n    }\n\n    strictValidation(enabled=true){\n        this.container.classed('sd-strict-validation', enabled);\n    }\n\n\n    build(container, jobParameterDefinitions, parentValueObject,  parentPath='', onChange=()=>{}, onInput=()=>{}){\n        container.html('');\n        var self = this;\n        var params = container.selectAll(\".sd-job-parameter\").data(jobParameterDefinitions);\n        var paramsEnter = params.enter().appendSelector('div.sd-job-parameter');\n\n        paramsEnter.html(d=>Templates.get('jobParameter', d));\n\n        var paramsMerge = paramsEnter.merge(params);\n        paramsMerge.each(function(d,i){\n            var paramSelection = d3.select(this);\n            var path = parentPath;\n\n            if(path){\n                path+='.';\n\n            }\n            path += d.name;\n            paramSelection.classed('sd-hidden', Utils.get(self.customParamsConfig, path+'.hidden'));\n\n            var value = parentValueObject[d.name];\n            var repeating = d.maxOccurs>1;\n            if(value==undefined){\n                if(repeating){\n                    value = [];\n                    for(var vi=0; vi<d.minOccurs; vi++){\n                        value.push(self.getEmptyValue(d.type))\n                    }\n\n                }else{\n                    value=Utils.get(self.customParamsConfig, path+'.value', self.getEmptyValue(d.type))\n                }\n\n                parentValueObject[d.name]=value;\n            }\n\n            if(!repeating) {\n                self.buildParameterSingleValue(paramSelection, d, {\n                    get: ()=> parentValueObject[d.name],\n                    set: (v)=> parentValueObject[d.name]=v\n                }, path,onChange, onInput)\n            }else{\n                paramSelection.appendSelector(\"div.sd-job-parameter-name\").html(self.getParamNameI18n(path));\n\n                var valuesContainer = paramSelection.appendSelector(\"div.sd-job-parameter-values\");\n                var actionButtons = paramSelection.appendSelector(\"div.sd-action-buttons\");\n                var addButton = actionButtons.appendSelector('button.sd-add-job-parameter-value-button.icon-button');\n                addButton.appendSelector(\"i.material-icons\").html('add');\n\n\n                paramSelection.classed('invalid', !d.validate(value));\n                var callbacks = {};\n                callbacks.onValueRemoved = function(v,i){\n                    value.splice(i, 1);\n                    self.buildParameterValues(valuesContainer, d, value, path,callbacks)\n                    addButton.classed('sd-hidden', value.length>=d.maxOccurs)\n                    callbacks.onChange();\n                };\n                callbacks.onChange = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onChange();\n                };\n                callbacks.onInput = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onInput();\n                };\n\n                addButton\n                    .attr('title', i18n.t('jobParametersBuilder.buttons.addParameterValue'))\n                    .classed('sd-hidden', value.length>=d.maxOccurs)\n                    .on('click', ()=>{\n                        value.push(self.getEmptyValue(d.type));\n                        Utils.set(self.pristine, path+\"[\"+(value.length-1)+\"]\", true);\n                        self.buildParameterValues(valuesContainer, d, value, path, callbacks);\n                        addButton.classed('sd-hidden', value.length>=d.maxOccurs);\n                        callbacks.onChange();\n                    });\n\n\n\n\n                self.buildParameterValues(valuesContainer, d, value, path,callbacks);\n            }\n\n        });\n\n    }\n\n    buildParameterValues(container, paramDefinition, values, path, callbacks){\n        var self = this;\n        container.html(\"\");\n\n        var paramValues = container.selectAll(\".sd-job-parameter-value\").data(values);\n\n        paramValues.exit().remove();\n        var paramValuesEnter = paramValues.enter().appendSelector('div.sd-job-parameter-value');\n\n        var paramValuesMerge = paramValuesEnter.merge(paramValues);\n\n        var indexToSelection = {};\n\n        var customValidator = Utils.get(self.customParamsConfig, path+'.customValidator');\n\n        function checkCustomValidator(){\n            let allValid = true;\n            if(customValidator){\n                customValidator(values).forEach((isValid, i)=>{\n                    var selection = indexToSelection[i];\n                    let valid = paramDefinition.validateSingleValue(values[i]) && isValid;\n                    selection.classed('invalid', !valid);\n                    allValid = allValid && valid;\n                })\n            }\n\n            return allValid;\n        }\n\n        self.customValidators[path] = checkCustomValidator;\n\n        paramValuesEnter.each(function (value, i) {\n            var derivedValueUpdaters = [];\n\n            function updateDerivedValues(){\n                derivedValueUpdaters.forEach(updater=>updater(values[i]))\n            }\n\n            var selection = d3.select(this);\n            indexToSelection[i] = selection;\n\n\n            if (PARAMETER_TYPE.COMPOSITE == paramDefinition.type) {\n                var nestedParameters = selection.selectOrAppend(\"div.sd-nested-parameters\");\n                var onChange = ()=>{\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    updateDerivedValues();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                };\n                var onInput = ()=>{\n                    updateDerivedValues();\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                };\n\n                self.build(nestedParameters, paramDefinition.nestedParameters, value, path, onChange, onInput);\n                selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                selection.classed('sd-pristine', Utils.get(self.pristine, path+\"[\"+i+\"]\", false));\n            }else{\n                self.buildParameterSingleValue(selection, paramDefinition, {\n                    get: ()=> values[i],\n                    set: (v)=> values[i]=v\n                }, path, ()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                },()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                })\n\n            }\n\n\n            var derivedValuesConfigs = Utils.get(self.customParamsConfig, path+'._derivedValues');\n            if(derivedValuesConfigs){\n                derivedValuesConfigs.forEach(derivedValueConfig =>{\n                    let updater = self.buildDerivedValue(selection, derivedValueConfig, path);\n                    updater(value);\n                    derivedValueUpdaters.push(updater);\n                });\n            }\n\n\n            var actionButtons = selection.appendSelector(\"div.sd-action-buttons\");\n            var removeButton = actionButtons.appendSelector('button.sd-remove-job-parameter-value-button.icon-button');\n            removeButton.appendSelector(\"i.material-icons\").html('remove')\n            removeButton\n                .attr('title', i18n.t('jobParametersBuilder.buttons.removeParameterValue'))\n                .classed('sd-hidden', values.length<=paramDefinition.minOccurs)\n                .on('click', (d)=>callbacks.onValueRemoved(d,i))\n\n        });\n\n        checkCustomValidator();\n\n        paramValuesMerge.each(function (value, i) {\n\n        });\n\n\n    }\n\n    buildDerivedValue(container, derivedValueConfig, path){\n        var self = this;\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group.sd-derived-value');\n        var name = this.getParamNameI18n(path+'.'+derivedValueConfig.name);\n        var input = selection.append('input').attr('type', 'text').attr(\"disabled\", \"disabled\");\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(name);\n\n        return (paramValue) => {\n            input.node().value = derivedValueConfig.value(paramValue);\n            AppUtils.updateInputClass(input);\n        }\n\n    }\n\n    buildParameterSingleValue(container, paramDefinition, valueAccessor, path, onChange, onInput){\n        var self = this;\n        var temp = {};\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group');\n        selection.classed('sd-parameter-'+paramDefinition.name, true);\n        var help = this.getParamHelpI18n(path);\n        if(help) {\n            let helpContainer = container.appendSelector('div.sd-help-icon');\n            helpContainer.html('<i class=\"material-icons\">info_outline</i>');\n            Tooltip.attach(helpContainer, (d)=>{\n                return help;\n            }, 5, 15);\n        }\n\n        var options = Utils.get(self.customParamsConfig, path+'.options', null);\n\n        var inputType = this.paramTypeToInputType[paramDefinition.type];\n        var additionalInputAttrs = this.paramTypeToInputAttrs[paramDefinition.type];\n        var input;\n        if(options && options.length){\n            inputType = 'select';\n            input = selection.append('select');\n            var optionsSel = input.selectAll(\"option\").data([null].concat(options));\n            optionsSel.enter().append(\"option\").attr(\"value\", d=>d).text(d=>d);\n\n            if(Utils.get(self.customParamsConfig, path+'.optionsAutocomplete', null)){\n                let autocomplete = new Autocomplete(input);\n                input = autocomplete.getInput();\n            }\n        }else{\n            input = selection.append('input').attr('type', inputType);\n\n            if(additionalInputAttrs){\n                additionalInputAttrs.forEach(attr=>input.attr(attr.name, attr.value))\n\n            }\n        }\n\n        input.attr('id', inputId);\n\n        input.classed('sd-input', true);\n        input.on('input change', function(d, i){\n            var value = self.parseInput(this.value, paramDefinition.type);\n            if(inputType=='checkbox'){\n                value = this.checked\n            }\n            if(!paramDefinition.validateSingleValue(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n\n            valueAccessor.set(value);\n            if (d3.event.type == 'change') {\n                if (onChange) {\n                    onChange();\n                }\n            }\n\n            if (d3.event.type == 'input') {\n                if (onInput) {\n                    onInput();\n                }\n            }\n\n            AppUtils.updateInputClass(d3.select(this));\n        }).each(function(d, i){\n            var value = valueAccessor.get();\n            if(inputType=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            d3.select(this).classed('invalid', !paramDefinition.validateSingleValue(value));\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(d=>{\n                let label = this.getParamNameI18n(path);\n                return label;\n            });\n        input.node().value = valueAccessor.get();\n    }\n\n    value(path, value){\n        return this.jobParameters.value(path, value);\n    }\n\n    parseInput(value, parameterType){\n        if(parameterType===PARAMETER_TYPE.DATE){\n            return new Date(value)\n        }\n        if(parameterType===PARAMETER_TYPE.NUMBER || parameterType===PARAMETER_TYPE.INTEGER){\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    getEmptyValue(parameterType){\n        if(parameterType===PARAMETER_TYPE.COMPOSITE){\n            return {}\n        }\n\n        return null;\n    }\n\n    getParamNameI18n(path){\n        return i18n.t(this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.label')\n    }\n\n    getParamHelpI18n(path){\n        let key = this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.help';\n        let help = i18n.t(key);\n        return help === key ? null : help;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport * as d3 from \"../d3\";\nimport {PivotTable} from \"../pivot-table\";\nvar jQuery = require('jquery');\n\nexport class JobResultTableConfig {\n    onRowSelected = (rows, indexes, event) => {};\n    className = '';\n\n    pivotTable;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobResultTable {\n\n    constructor(container, config) {\n        this.container = container;\n        this.config = new JobResultTableConfig(config);\n        this.init();\n    }\n\n    init() {\n        this.pivotTable = new PivotTable(this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true));\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = []\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(data.data[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n\n    setClassName(className){\n        if(this.config.className){\n            this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, false);\n            this.config.className = className;\n        }\n        this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true)\n    }\n\n    setData(data, jobParameters, job, config) {\n        var self = this;\n        var derivers = jQuery.pivotUtilities.derivers;\n        var pivotOptions = {\n            rows: data.rows,\n            vals: data.vals,\n            cols: data.cols,\n            hiddenAttributes: ['$rowIndex'],\n            aggregatorName: this.pivotTable.getAggregatorName(\"maximum\"),\n            rendererOptions: {\n                table: {\n                    clickCallback: function (e, value, filters, pivotData) {\n                        self.clickCallback(e, value, filters, pivotData);\n                    }\n                },\n                heatmap: {\n                    colorScaleGenerator: function (values) {\n                        let extent = d3.extent(values);\n\n                    return d3.scaleLinear()\n                        .domain([extent[0], (extent[0]+extent[1])/2,extent[1]])\n                        .range([\"#4b53ff\", \"#FFF\", \"#FF0000\"])\n                    }\n                }\n            },\n            rendererName: this.pivotTable.getRendererName(\"heatmap\")\n            /*\n             rendererName: 'custom',\n             renderers: {\n             'custom': function(pivotData, options){\n             console.log(pivotData)\n             }\n             }*/\n\n        };\n\n        if(config){\n            if(config.aggregatorName){\n                pivotOptions.aggregatorName = config.aggregatorName;\n            }\n            if(config.aggregators){\n                pivotOptions.aggregators = config.aggregators;\n            }\n        }\n\n        this.pivotTable.update(data.data.map((r, i)=>r.concat(i ?  i-1 : '$rowIndex')), pivotOptions);\n\n        // this.drawHeaders(data.headers);\n        // this.drawRows(data.rows)\n    }\n\n    clear() {\n        this.clearSelection();\n        this.pivotTable.clear();\n    }\n\n    show(show=true){\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide(){\n        this.show(false);\n    }\n\n    clearSelection() {\n        // this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {log} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nvar jQuery = require('jquery');\n\n\nexport class ProbabilisticSensitivityAnalysisJobResultTable extends JobResultTable {\n\n    constructor(container, config, payoffNumberFormatter, probabilityNumberFormatter){\n        super(container, config);\n        this.payoffNumberFormatter = payoffNumberFormatter;\n        this.probabilityNumberFormatter = probabilityNumberFormatter;\n    }\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n        var data = {rows: ['policy', 'expected value', 'median', 'standard deviation', 'best probability'], cols: [], vals: ['expected value'], data: []};\n\n\n        data.data.push(['policy', 'expected value', 'median', 'standard deviation', 'best probability']);\n        jobResult.policies.forEach((policy, i)=> {\n            var row = [\n                Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                this.payoffNumberFormatter(jobResult.expectedValues[i]),\n                this.payoffNumberFormatter(jobResult.medians[i]),\n                this.payoffNumberFormatter(jobResult.standardDeviations[i]),\n                this.probabilityNumberFormatter(jobResult.policyIsBestProbabilities[i])\n            ];\n            data.data.push(row);\n        });\n\n        log.trace(data);\n        super.setData(data, jobParameters, job,{\n            aggregatorName: \"empty\",\n            aggregators:{\n                empty: (attributeArray)=>(data, rowKey, colKey)=>{\n                    return {\n                        push: function(record) {\n                        },\n                        value: function() { return 0; },\n                        format: function(x) { return i18n.t('jobResultTable.policyPreview'); },\n                        numInputs: 1\n                    };\n                }\n            }\n        })\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push({policyIndex: record['$rowIndex']});\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Utils} from \"sd-utils\"\n\n\nexport class SensitivityAnalysisJobResultTable extends JobResultTable {\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n\n        jobParameters =job.createJobParameters(Utils.cloneDeep(jobParameters.values));\n        jobParameters.values.roundVariables = true;\n        var csvDAta = job.jobResultToCsvRows(jobResult, jobParameters);\n\n        if (csvDAta.length) {\n            csvDAta[0][0] = 'policy\\nnumber'\n        }\n\n        let cols = [];\n        let totalInColNum = 1;\n\n        jobParameters.values.variables.forEach(v=>{\n            let _totalInColNum = v.length * totalInColNum;\n            if((_totalInColNum>1000)){\n                return;\n            }\n            totalInColNum=_totalInColNum;\n            cols.push(v.name);\n        });\n\n        var data = {rows: ['policy'], cols: cols, vals: ['payoff'], data: csvDAta};\n        super.setData(data)\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self = this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(self.jobResult.rows[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {LineChartConfig, LineChart} from \"odc-d3/src/line-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class SpiderPlotConfig extends LineChartConfig {\n    maxWidth = undefined;\n\n    showLegend = true;\n    policyIndex = 0;\n    guides = true;\n    margin={\n        left: 100\n    };\n    x={// X axis config\n        title: i18n.t('job.spider-plot.plot.xAxisTitle'), // axis label\n        key: 0,\n        domainMargin: 0\n    };\n    y={// Y axis config\n        title: i18n.t('job.spider-plot.plot.yAxisTitle'), // axis label,\n        key: 1,\n        domainMargin: 0.1\n    };\n    series = true;\n    dotRadius = 3;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class SpiderPlot extends LineChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new SpiderPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new SpiderPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-spider-plot', true);\n    }\n\n    setData(data){\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map(r=>{\n            return {\n                key: r.variableName,\n                values: data.percentageRangeValues.map((rangeVal, index)=>[\n                    data.percentageRangeValues[index],\n                    r.payoffs[this.config.policyIndex][index]\n                ])\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {DivergingStackedBarChartConfig, DivergingStackedBarChart} from \"odc-d3/src/diverging-stacked-bar-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class TornadoDiagramPlotConfig extends DivergingStackedBarChartConfig {\n    maxWidth = undefined;\n    margin={\n        left: 150,\n        top: 70\n    };\n\n    showLegend = true;\n    forceLegend = true;\n\n    categoryNames = [i18n.t(\"job.tornado-diagram.plot.legend.low\"), i18n.t(\"job.tornado-diagram.plot.legend.high\")];\n    colorRange = [\"#4f81bd\", \"#9bbb59\"];\n    policyIndex = 0;\n\n    guides = true;\n    middleValue = 1000;\n    showBarValues = false;\n\n    x={// X axis config\n        title: i18n.t('job.tornado-diagram.plot.xAxisTitle'), // axis label\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class TornadoDiagramPlot extends DivergingStackedBarChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new TornadoDiagramPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new TornadoDiagramPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-tornado-diagram-plot', true);\n    }\n\n    setData(data){\n        this.config.middleValue = data.defaultPayoff;\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map((r)=>{\n            let varExtent = data.variableExtents[data.variableNames.indexOf(r.variableName)];\n            return {\n                key: r.variableName+' ['+varExtent[0]+'; '+varExtent[1]+']',\n                values: [\n                    Math.max(0, data.defaultPayoff - r.extents[this.config.policyIndex][0]),\n                    Math.max(0, r.extents[this.config.policyIndex][1] - data.defaultPayoff)\n                ],\n                categories: r.extentVariableValues[this.config.policyIndex][0] <= r.extentVariableValues[this.config.policyIndex][1] ? [0, 1] : [1, 0]\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {Dialog} from \"../dialogs/dialog\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {LeagueTable} from \"./league-table\";\nimport {LeagueTablePlot} from \"./league-table-plot\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class LeagueTableDialog extends Dialog {\n    computationsManager;\n    jobInstanceManager;\n\n    constructor(app) {\n        super(app.container.select('.sd-league-table-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-league-table-job-results\");\n        this.initButtons();\n\n        this.job = this.computationsManager.getJobByName(\"league-table\");\n    }\n\n    onOpen() {\n        this.clear();\n        this.runJob();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-league-table-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-league-table-warnings\").appendSelector(\"div.sd-league-table-warning\").html(msgHTML);\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (row, i)=> this.onResultRowSelected(row, i),\n            onRowHover: (row, i)=> this.resultPlot.emphasize(row.row, true),\n            onRowHoverOut: (row, i)=> this.resultPlot.emphasize(row.row, false),\n        };\n\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n        }\n\n\n        this.resultTable = new LeagueTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n        this.resultTable.setData(result, this.app.dataModel);\n        this.resultTable.show();\n    }\n\n\n\n    initResultPlot(result) {\n        let self = this;\n        let config = {\n            maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            weightLowerBound: result.weightLowerBound,\n            defaultWeight: result.defaultWeight,\n            weightUpperBound: result.weightUpperBound,\n            payoffCoeffs: result.payoffCoeffs,\n            payoffNames: result.payoffNames,\n            x: {\n                value: (d, key) => d.payoffs[0],\n                title: result.payoffNames[0]\n            },\n            y: {\n                value: (d, key) => d.payoffs[1],\n                title: result.payoffNames[1]\n            },\n            onDotHover: (d, i) => this.resultTable.emphasize(d, true),\n            onDotHoverOut: (d, i) => this.resultTable.emphasize(d, false),\n\n\n            color: function (group) {\n                let groupsConf = self.app.config.leagueTable.plot.groups;\n                let groupConf = groupsConf[group.key];\n                if (groupConf) {\n                    return groupConf.color;\n                }\n                return 'black'\n            },\n            groupOrdering: {\n                'dominated': 0,\n                'extended-dominated': 1,\n                'highlighted': 2,\n                'highlighted-default': 3,\n                'default': 4\n\n            },\n            groups: {\n                value: function (r) {\n                    if (r.optimalForDefaultWeight) {\n                        return 'highlighted-default'\n                    } else if (r.optimal) {\n                        return 'highlighted'\n                    }  else if (r.dominatedBy !== null) {\n                        return 'dominated'\n                    } else if (r.extendedDominatedBy !== null) {\n                        return 'extended-dominated'\n                    }\n\n                    return \"default\";\n                },\n                displayValue: (groupKey) => i18n.t(\"leagueTable.plot.groups.\"+groupKey)\n            }\n        };\n\n        this.resultPlot = new LeagueTablePlot(this.jobResultsContainer.select(\".sd-job-result-plot-container\").node(), result.rows, config);\n        setTimeout(function () {\n            self.resultPlot.init()\n        }, 100)\n    }\n\n    onResized() {\n        if (this.resultPlot) {\n            this.resultPlot.init();\n        }\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-league-table-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n\n    initJobParams(){\n        this.jobParameters = this.job.createJobParameters({\n            ruleName: this.computationsManager.getCurrentRule().name,\n            weightLowerBound: this.app.dataModel.weightLowerBound,\n            defaultWeight: this.app.dataModel.defaultCriterion1Weight,\n            weightUpperBound: this.app.dataModel.weightUpperBound,\n\n        });\n    }\n\n    validateParams(){\n        this.initJobParams();\n        return this.jobParameters.validate();\n    }\n\n    runJob() {\n\n\n        this.initJobParams();\n\n        if(!this.validateParams()){\n            alert(i18n.t(\"job.errors.params\", {\"jobName\": i18n.t(\"job.league-table.name\")}))\n            return;\n        }\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n            onJobStarted: this.onJobStarted,\n            onJobCompleted: this.onJobCompleted,\n            onJobFailed: this.onJobFailed,\n            onJobStopped: this.onJobStopped,\n            onJobTerminated: this.onJobTerminated,\n            onProgress: this.onProgress,\n            callbacksThisArg: this\n        }).then(jobInstanceManager=> {\n            this.jobInstanceManager = jobInstanceManager;\n        }).catch(e=> {\n            log.error(e);\n        }).then(()=> {\n            this.disableActionButtonsAndShowLoadingIndicator(false);\n        })\n    }\n\n    initButtons() {\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    clear() {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.jobResultsContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlot(result);\n\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.downloadCsvButtons);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                e.jobName = i18n.t(\"job.league-table.name\");\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(row, index) {\n        let title = Policy.toPolicyString(row.policy, false);\n        this.app.showPolicyPreview(title, row.policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows(), 'leaguetable')\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import {ScatterPlot, ScatterPlotConfig} from \"odc-d3/src/scatterplot\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTablePlotConfig extends ScatterPlotConfig {\n    maxWidth = undefined;\n    weightLowerBound = 0;\n    weightUpperBound = Infinity;\n    gradientArrowLength = 30;\n    gradientArrowOffset = 10;\n    payoffCoeffs = [1, 1];\n    payoffNames = [];\n\n    showLegend = true;\n    forceLegend = true;\n\n    legend = {\n        width: 125,\n    };\n\n    // d3ColorCategory = false;\n\n    guides = true;\n    dotRadius = 5;\n    emphasizedDotRadius = 8;\n\n    dotId = (d, i) => 'sd-league-table-dot-'+d.id;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LeagueTablePlot extends ScatterPlot {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LeagueTablePlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new LeagueTablePlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-league-table-plot', true);\n        this.initArrowMarker(\"triangle\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.selectOrAppend(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        this.checkOrdering();\n        super.initPlot();\n    }\n\n    checkOrdering(){\n        if(this.config.groupOrdering){\n            let getOrdering  = d => {\n                let g = this.config.groups.value(d);\n                return this.config.groupOrdering[g] === undefined ? 999 : this.config.groupOrdering[g];\n            };\n            this.data.sort((a, b)=>getOrdering(a) - getOrdering(b));\n        }\n    }\n\n    update(newData) {\n        this.checkOrdering();\n        super.update(newData);\n\n        this.updateIcerLines();\n        this.updateDominatedRegion();\n        this.updateGradientArrows();\n        this.updateDotLabels();\n\n\n    };\n\n    updateIcerLines() {\n        let self = this;\n        var linesContainerClass = this.linesContainerClass = this.prefixClass(\"lines-container\");\n        var linesContainerSelector = \"g.\" + linesContainerClass;\n        var linesContainer = this.linesContainer= self.svgG.selectOrInsert(linesContainerSelector, \".\" + self.dotsContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var linesContainerClip = linesContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        linesContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        linesContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        var line = d3.line()\n            .x(this.plot.x.map)\n            .y(this.plot.y.map);\n\n\n\n\n        let linePoints = this.plot.data.filter(d=>d.incratio !== null).sort(this.plot.x.map);\n        let highlightedPoints = this.plot.data.filter(d=>[\"highlighted\", \"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1).sort((a, b) => this.plot.x.map(a) - this.plot.x.map(b));\n        let highlightedDefaultPoints = highlightedPoints.filter(d=>[\"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1);\n\n        this.dominatedRegionPoints = highlightedPoints.map(d=>[this.plot.x.map(d), this.plot.y.map(d)]);\n\n        if (!highlightedPoints.length) {\n            linesContainer.selectAll(\"*\").remove();\n            return;\n        }\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('middle-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", line(highlightedPoints));\n\n        highlightedPoints.sort((a, b) =>a.incratio - b.incratio || (this.config.payoffCoeffs[0] * (this.plot.x.map(a) - this.plot.x.map(b))));\n\n        let minPoint = highlightedPoints[0];\n        let maxPoint = highlightedPoints[highlightedPoints.length - 1];\n\n        let lowPoint;\n        let highPoint;\n\n        let xAxisExtent = [this.plot.x.scale.invert(0), this.plot.x.scale.invert(this.plot.width)];\n        let yAxisExtent = [this.plot.y.scale.invert(this.plot.height), this.plot.y.scale.invert(0)];\n\n        let sign = (this.config.payoffCoeffs[0] * this.config.payoffCoeffs[1]) > 0 ? 1 : -1;\n\n        let infLowY = this.config.payoffCoeffs[0] > 0 ? this.plot.height: 0;\n        if(sign > 0){\n            infLowY = this.config.payoffCoeffs[0] < 0 ? this.plot.height: 0;\n        }\n        let infLowPoint = [this.plot.x.map(minPoint), infLowY];\n\n        if (this.config.weightLowerBound == Infinity) {\n            lowPoint = infLowPoint\n        } else {\n            let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n            lowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.weightLowerBound * (this.plot.x.value(minPoint) - x) + this.plot.y.value(minPoint))];\n            if(Math.abs(lowPoint[1]) > 1000000){\n                lowPoint = infLowPoint\n            }\n        }\n\n        let infHighPoint =  [this.plot.x.map(maxPoint), this.config.payoffCoeffs[1] > 0 ? this.plot.height: 0];\n        if (this.config.weightUpperBound == Infinity) {\n            highPoint = infHighPoint\n        } else {\n\n            let x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n\n            if(sign > 0){\n                x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n            }\n\n            highPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.weightUpperBound * (x - this.plot.x.value(maxPoint)) + this.plot.y.value(maxPoint))];\n            // highPoint = [this.plot.x.scale(x), this.plot.y.scale(EE.toFloat(EE.multiply(-sign, EE.multiply(this.config.weightUpperBound, (x - this.plot.x.value(maxPoint))))) + this.plot.y.value(maxPoint))];\n            if(Math.abs(highPoint[1]) > 1000000){\n                highPoint = infHighPoint\n            }\n        }\n\n        if(highlightedDefaultPoints.length){\n            let defaultPoint = highlightedDefaultPoints[0];\n            let defLowPoint = infLowPoint;\n            let defHighPoint = infHighPoint;\n            if (this.config.defaultWeight !== Infinity) {\n                let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                defLowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.defaultWeight * (this.plot.x.value(defaultPoint) - x) + this.plot.y.value(defaultPoint))];\n                x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                if(sign > 0){\n                    x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n                }\n                defHighPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.defaultWeight * (x - this.plot.x.value(defaultPoint)) + this.plot.y.value(defaultPoint))];\n            }\n            linesContainer.selectOrAppend(\"path.\" + this.prefixClass('default-incratio'))\n                .attr(\"shape-rendering\", \"optimizeQuality\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", 'black')\n                .attr(\"d\", d3.line()([defLowPoint, defHighPoint]))\n        } else{\n            linesContainer.select(\"path.\" + this.prefixClass('default-incratio')).remove()\n        }\n\n\n        this.dominatedRegionPoints.unshift(lowPoint);\n        this.dominatedRegionPoints.push(highPoint);\n\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('low-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([lowPoint, [this.plot.x.map(minPoint), this.plot.y.map(minPoint)]]))\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('high-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([highPoint, [this.plot.x.map(maxPoint), this.plot.y.map(maxPoint)]]))\n\n\n\n\n    }\n\n    updateDominatedRegion(){\n        let self = this;\n        var dominatedRegionContainerClass = this.prefixClass(\"dominated-region-container\");\n        var dominatedRegionContainerSelector = \"g.\" + dominatedRegionContainerClass;\n        var dominatedRegionContainer = self.svgG.selectOrInsert(dominatedRegionContainerSelector, \".\"+this.linesContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var dominatedRegionContainerClip = dominatedRegionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        dominatedRegionContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        dominatedRegionContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        //draw dominated region\n\n        let worstPoint = [\n            this.config.payoffCoeffs[0] < 0 ? self.plot.width : 0,\n            this.config.payoffCoeffs[1] < 0 ? 0 : self.plot.height\n        ];\n\n        this.dominatedRegionPoints.push(worstPoint);\n\n        if(this.dominatedRegionPoints.some(p=>worstPoint[1] ? p[1] <=0 : p[1] >= self.plot.height)){\n            this.dominatedRegionPoints.push([worstPoint[0], worstPoint[1] ? 0 : self.plot.height]);\n        }\n\n        this.dominatedRegionPoints.sort((a, b)=> (a[0] - b[0]));\n        this.dominatedRegionPoints = this.dominatedRegionPoints.reduce((prev, curr)=>{\n            if(!prev.length){\n                return [curr]\n            }\n            var prevPoint = prev[prev.length-1];\n            if(prevPoint[0] !== curr[0]){\n                prev.push(curr)\n            }\n            if(Math.abs(worstPoint[1] - curr[1]) > Math.abs(worstPoint[1] - prev[prev.length-1][1])){\n                prev[prev.length-1] = curr;\n            }\n            return prev;\n\n        }, []);\n\n        let area = d3.area();\n        area.y0(worstPoint[1])\n        dominatedRegionContainer.selectOrInsert(\"path.\" + this.prefixClass('dominated-region'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"gray\")\n            .attr(\"stroke-width\", 0)\n            .attr(\"d\", area(this.dominatedRegionPoints));\n\n        Tooltip.attach(dominatedRegionContainer, i18n.t('leagueTable.plot.tooltip.dominatedRegion'));\n    }\n\n    updateDotLabels() {\n        var self = this;\n        var labelsContainerClass = this.prefixClass(\"dot-labels-container\");\n        var labelsContainerSelector = \"g.\" + labelsContainerClass;\n        var labelsContainer = self.svgG.selectOrAppend(labelsContainerSelector, \".\" + self.dotsContainerClass);\n\n        var labels = labelsContainer.selectAll(\"text.\" + this.prefixClass(\"dot-label\")).data(this.plot.data);\n        labels.exit().remove();\n        labels.enter().append('text')\n            .attr('class', this.prefixClass(\"dot-label\"))\n            .merge(labels)\n            .attr('x', this.plot.x.map)\n            .attr('y', this.plot.y.map)\n            .attr('text-anchor', 'end')\n            .attr(\"dy\", \"-5px\")\n            .attr(\"dx\", \"-5px\")\n            .text(d=>d.id)\n    }\n\n    updateGradientArrows() {\n\n        var data = this.config.payoffCoeffs.map((coeff, i)=>{\n\n            let l = this.config.gradientArrowLength * coeff;\n            let offset = this.config.gradientArrowOffset * coeff;\n\n            let d = {\n                x1: this.plot.width/2,\n                y1: this.plot.height/2,\n            };\n\n            if(i==0){\n                d.x1 += offset;\n                d.x2 = d.x1 + l;\n                d.y2 = d.y1\n            }else{\n                d.y1 -= offset;\n                d.x2 = d.x1;\n                d.y2 = d.y1 - l\n            }\n\n            return d\n        });\n\n        let self = this;\n        var arrowsContainerClass = this.prefixClass(\"gradient-arrows-container\");\n        var arrowsContainerSelector = \"g.\" + arrowsContainerClass;\n        var arrowsContainer = self.svgG.selectOrInsert(arrowsContainerSelector, \".\" + self.dotsContainerClass);\n\n        let arrowClass = this.prefixClass(\"gradient-arrow\");\n        var arrows = arrowsContainer.selectAll(\".\"+arrowClass).data(data);\n        arrows.exit().remove();\n        var arrowsEnter = arrows.enter().append('g')\n            .attr('class', arrowClass);\n\n        arrowsEnter.append(\"line\").attr(\"marker-end\", \"url(#triangle)\");\n        var arrowsMerge =arrowsEnter.merge(arrows);\n\n        arrowsMerge.select(\"line\")\n            .attr(\"x1\", d=>d.x1)\n            .attr(\"y1\", d=>d.y1)\n            .attr(\"x2\", d=>d.x2)\n            .attr(\"y2\", d=>d.y2);\n\n        Tooltip.attach(arrowsMerge, (d, i)=>{\n            return i18n.t('leagueTable.plot.tooltip.gradientArrow' + (i + 1), { name: this.config.payoffNames[i]});\n        });\n    }\n\n    emphasize(row, emphasize=true){\n        this.emphasizeDot(this.svg.selectAll('#'+this.config.dotId(row)), emphasize);\n    }\n\n    emphasizeDot(selection, emphasize){\n        selection\n            .classed('sd-emphasized', emphasize)\n            .transition()\n            .attr('r', emphasize ? this.config.emphasizedDotRadius : this.config.dotRadius)\n    }\n    updateDots(){\n        var self = this;\n        super.updateDots();\n        var dotsContainer = this.svgG.select(\"g.\" + this.dotsContainerClass);\n        dotsContainer.selectAll('.' + this.dotClass)\n            .on(\"mouseover.emphasize\", function(d){ self.emphasizeDot(d3.select(this), true) })\n            .on(\"mouseout.emphasize\", function(d){ self.emphasizeDot(d3.select(this), false) })\n    }\n\n    updateLegend() {\n        super.updateLegend();\n        var plot = this.plot;\n\n        let container = plot.legend.container.selectOrAppend(\"g.sd-additional-items\")\n        let legendCells = plot.legend.container.select(\".legendCells\");\n        let margin = 20;\n\n        let texts = [\n            i18n.t(\"leagueTable.plot.legend.dominatedRegion\"),\n            i18n.t(\"leagueTable.plot.legend.gradientArrows\")\n        ];\n\n        container.attr(\"transform\", \"translate(0, \"+(legendCells.node().getBBox().height+margin)+\")\");\n\n        container.selectAll(\"text\").data(texts)\n            .enter().append(\"text\")\n            .text(d=>d)\n            .attr('dy', \"0\")\n            .attr('x', \"0\");\n\n        container.selectAll(\"text\").call(wrap, d=>d, this.config.legend.width);\n\n        function wrap(text, getTextData, width) {\n            text.each(function(d) {\n\n                var text = d3.select(this),\n                    words = getTextData(d).split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1.1, // ems\n                    y = text.attr('y'),\n                    dy = parseFloat(text.attr('dy')),\n                    tspan = text.text(null).append('tspan')\n                        .attr('x', 0).attr('y', y).attr('dy', dy + 'em');\n\n                if(this.previousSibling){\n                    text.attr('y', this.previousSibling.getBBox().height+10)\n                }\n\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n                        line = [word];\n                        tspan = text.append('tspan')\n                            .attr('x', 0).attr('y', y)\n                            .attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n","import {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTableConfig {\n    onRowSelected = (row) => {\n    };\n    extendedPolicyDescription = true;\n    onRowHover = (d, i) => {};\n    onRowHoverOut = (d, i) => {};\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class LeagueTable {\n\n    constructor(container, config, dataModel) {\n        this.container = container;\n        this.config = new LeagueTableConfig(config);\n        this.dataModel = dataModel;\n        this.init();\n    }\n\n    init() {\n        this.resultTable = this.container.selectOrAppend(\"table.sd-league-table\");\n        this.resultTableHead = this.resultTable.selectOrAppend(\"thead\");\n        this.resultTableBody = this.resultTable.selectOrAppend(\"tbody\");\n        this.resultTableFoot = this.resultTable.selectOrAppend(\"tfoot\");\n    }\n\n    setData(jobResult, dataModel) {\n        this.jobResult = jobResult;\n        this.dataModel = dataModel;\n        this.drawHeaders([\n            i18n.t('leagueTable.headers.policyNo'),\n            i18n.t('leagueTable.headers.policy'),\n            dataModel.payoffNames[0],\n            dataModel.payoffNames[1],\n            i18n.t('leagueTable.headers.comment')\n        ]);\n        this.drawRows(jobResult.rows)\n    }\n\n    drawHeaders(headerData) {\n        var headers = this.resultTableHead.selectOrAppend(\"tr\").selectAll(\"th\").data(headerData);\n        var headersEnter = headers.enter().append(\"th\");\n        var headersMerge = headersEnter.merge(headers);\n        headers.exit().remove();\n\n        headersMerge.text(d=>d);\n    }\n\n    drawRows(rowsData) {\n        var self = this;\n\n        let data = rowsData.reduce((prev, d)=> {\n            let r = prev;\n            d.policies.forEach((policy, i)=> {\n                if (!i) {\n                    r.push({\n                        row: d,\n                        policy: policy,\n                        cells: [\n                            {\n                                data: d.id,\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                                rowspan: 1\n                            },\n                            {\n                                data: d.payoffs[0],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: d.payoffs[1],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: this.getRowComment(d),\n                                rowspan: d.policies.length\n                            },\n                        ]\n                    });\n                    return;\n                }\n\n                r.push({\n                    row: d,\n                    policy: policy,\n                    cells: [{\n                        data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                        rowspan: 1\n                    }]\n                });\n\n            });\n\n            return r;\n        }, []);\n\n        var rows = this.resultTableBody.selectAll(\"tr\").data(data);\n\n        var rowsEnter = rows.enter().append(\"tr\");\n        var rowsMerge = rowsEnter.merge(rows);\n        rowsMerge\n            .on('click', function (d, i) {\n                // d3.select(this).classed('sd-selected', true);\n                self.config.onRowSelected(d, i)\n            })\n            .classed('sd-highlighted', d=>d.row.optimal)\n            .classed('sd-highlighted-default', d=>d.row.optimalForDefaultWeight)\n            .attr('id', d => 'sd-league-table-row-'+d.row.id);\n\n        rowsMerge.on(\"mouseover.onRowHover\", this.config.onRowHover);\n        rowsMerge.on(\"mouseout.onRowHoverOut\", this.config.onRowHoverOut);\n\n        rows.exit().remove();\n\n        var cells = rowsMerge.selectAll(\"td\").data(d=>d.cells);\n        var cellsEnter = cells.enter().append(\"td\");\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.text(d=>d.data);\n        cellsMerge.attr('rowspan', d=>d.rowspan);\n        cells.exit().remove();\n\n    }\n\n    clear() {\n        this.clearSelection();\n    }\n\n    show(show = true) {\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide() {\n        this.show(false);\n    }\n\n    clearSelection() {\n        this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n    getRowComment(row) {\n        if(row.incratio !== null){\n            return i18n.t('leagueTable.comment.incratio', {incratio: row.incratio});\n        }\n        if(row.dominatedBy !== null){\n            return i18n.t('leagueTable.comment.dominatedBy', {policy: row.dominatedBy});\n        }\n        if(row.extendedDominatedBy !== null){\n            return i18n.t('leagueTable.comment.extendedDominatedBy', {policy1: row.extendedDominatedBy[0], policy2: row.extendedDominatedBy[1]});\n        }\n        return '';\n    }\n\n\n    emphasize(row, emphasize=true){\n        this.resultTableBody.selectAll('#sd-league-table-row-'+row.id).classed('sd-emphasized', emphasize);\n    }\n}\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\n\nimport {Utils} from 'sd-utils'\nimport {Templates} from \"./templates\";\n\nexport class LoadingIndicator{\n    static show(message=''){\n        var html = Templates.get('loadingIndicator');\n\n        var g = d3.select('body').selectOrAppend('div.sd-loading-indicator-container').html(html).select('.sd-loading-indicator').classed('visible', true).style('display', 'block')\n    }\n\n    static hide(){\n        let select = d3.select('.sd-loading-indicator');\n        select.classed('visible', false);\n        setTimeout(function(){\n            select.style('display', 'none')\n        }, 500)\n\n    }\n}\n","import {Utils, log} from 'sd-utils';\nimport {i18n} from \"./i18n/i18n\";\nvar jQuery = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = jQuery;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/scroll-parent');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/sortable');\nrequire('pivottable');\n\n\n// pivot show zero hack start\nvar numberFormat = jQuery.pivotUtilities.numberFormat;\ntry{\n    jQuery.pivotUtilities.numberFormat = function(opts){\n        if(!opts){\n            opts = {};\n        }\n        opts.showZero = true;\n        return numberFormat(opts);\n    };\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting');\n\n    try{\n        jQuery.pivotUtilities.numberFormat = numberFormat;\n    }catch (e){\n\n    }\n}\n\nrequire('pivottable/dist/pivot.it');\nrequire('pivottable/dist/pivot.de');\nrequire('pivottable/dist/pivot.fr');\nrequire('pivottable/dist/pivot.pl');\n\nUtils.getGlobalObject().jQuery = global$;\n\n// pivot show zero hack continuation\ntry{\n    var origAggregators = {};\n    Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n        origAggregators[key] = value;\n        object[key] = function(){\n            var args1 = arguments;\n            try{\n                let res1 = value.apply(this, args1);\n                return function(){\n                    var res = res1(...arguments);\n                    var format_ = res.format;\n                    res.format = function(x){\n                        var origX = x;\n                        if(x===0){\n                            x =  \"0\";\n                        }\n                        try{\n                            return format_(x);\n                        }catch (e){\n                            log.error('Error when performing pivottable \"show zero\" hack (format func call), reverting', e);\n                            if(format_){\n                                return format_(origX);\n                            }\n                            revertAggregators();\n                        }\n                    };\n                    return res;\n                };\n            }catch(e){\n                log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n                revertAggregators();\n                return origAggregators[key](...args1)\n            }\n        }\n    });\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n    revertAggregators();\n}\n\nfunction revertAggregators(){\n    try {\n        Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n            let origAggregator = origAggregators[key];\n            if(origAggregator){\n                object[key] = origAggregator\n            }\n\n        });\n    }catch(e){\n        log.error('Error when reverting aggregators', e)\n    }\n}\n\n///////////////////// hack end\n\nexport class PivotTable{\n\n    container;\n\n\n    constructor(container, options, data){\n        this.container =container;\n        this.options = options;\n        this.data=data;\n        if(data){\n            this.update(data, options);\n        }\n    }\n\n    update(data, options){\n        this.data = data;\n        this.options = options;\n        jQuery(this.container.node()).pivotUI(data, options, true, i18n.language)\n    }\n\n    clear(){\n        jQuery(this.container.node()).pivotUI([], null, true)\n    }\n\n\n\n    getAggregatorName(name){\n        return i18n.t(\"jobResultTable.pivot.aggregators.\"+name.toLowerCase());\n    }\n\n    getRendererName(name){\n        return i18n.t(\"jobResultTable.pivot.renderers.\"+name.toLowerCase());\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {PayoffInputValidator} from \"./validation/payoff-input-validator\";\nimport {ProbabilityInputValidator} from \"./validation/probability-input-validator\";\nimport {Templates} from \"./templates\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {InputField} from \"./form/input-field\";\nimport {PathValueAccessor} from \"./form/path-value-accessor\";\nimport {NumberInputValidator} from \"./validation/number-input-validator\";\nimport {RequiredInputValidator} from \"./validation/required-input-validator\";\nimport {McdmWeightValueValidator} from \"sd-computations/src/validation/mcdm-weight-value-validator\";\n\nexport class Sidebar {\n\n    app;\n    container;\n    dispatch = d3.dispatch(\"recomputed\", \"object-updated\", \"multi-criteria-updated\");\n\n\n    constructor(container, app) {\n        this.app = app;\n        this.container = container;\n\n        this.initLayoutOptions();\n        this.initDiagramDetails();\n        this.initDefinitions();\n        this.initMultipleCriteria();\n        var self = this;\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app) {\n                self.dispatch.call(\"recomputed\");\n            }\n        });\n\n        self.dispatch.on(\"object-updated\", Utils.debounce((object, fieldName)=> self.app.onObjectUpdated(object, fieldName), 350));\n        self.dispatch.on(\"multi-criteria-updated\", Utils.debounce((fieldName)=> self.app.onMultiCriteriaUpdated(fieldName), 350));\n\n    }\n\n    initLayoutOptions() {\n        var self = this;\n        this.layoutOptionsContainer = this.container.select('#layout-options');\n        this.autoLayoutOptionsGroup = this.layoutOptionsContainer.select('#auto-layout-options');\n        this.gridWidth = this.layoutOptionsContainer.select('input#grid-width').on('change', function () {\n            self.app.treeDesigner.layout.setGridWidth(parseInt(this.value));\n\n        });\n\n        this.gridHeight = this.layoutOptionsContainer.select('input#grid-height').on('change', function () {\n            self.app.treeDesigner.layout.setGridHeight(parseInt(this.value));\n        });\n\n        this.nodeSize = this.layoutOptionsContainer.select('input#node-size').on('change', function () {\n            self.app.treeDesigner.layout.setNodeSize(parseInt(this.value));\n        });\n\n        this.edgeSlantWidthMax = this.layoutOptionsContainer.select('input#edge-slant-width-max').on('change', function () {\n            self.app.treeDesigner.layout.setEdgeSlantWidthMax(parseInt(this.value));\n        });\n\n        this.marginHorizontal = this.layoutOptionsContainer.select('input#margin-horizontal').on('change', function () {\n            var m = {};\n            m.left = m.right = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n        this.marginVertical = this.layoutOptionsContainer.select('input#margin-vertical').on('change', function () {\n            var m = {};\n            m.top = m.bottom = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n\n        this.scale = this.layoutOptionsContainer.select('input#sd-svg-scale').on('change', function () {\n            self.app.treeDesigner.setScale(parseFloat(this.value));\n        });\n\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.updateLayoutOptions());\n\n        this.layoutOptionsContainer.select('.toggle-button').on('click', () => {\n            this.layoutOptionsContainer.classed('sd-extended', !this.layoutOptionsContainer.classed('sd-extended'));\n        });\n\n        this.updateLayoutOptions();\n    }\n\n    updateLayoutOptions() {\n        this.nodeSize.node().value = this.app.treeDesigner.config.layout.nodeSize;\n        this.edgeSlantWidthMax.node().value = this.app.treeDesigner.config.layout.edgeSlantWidthMax;\n        this.marginHorizontal.node().value = this.app.treeDesigner.config.margin.left;\n        this.marginVertical.node().value = this.app.treeDesigner.config.margin.top;\n        this.gridWidth.node().value = this.app.treeDesigner.config.layout.gridWidth;\n        this.gridHeight.node().value = this.app.treeDesigner.config.layout.gridHeight;\n        this.scale.node().value = this.app.treeDesigner.config.scale;\n        this.autoLayoutOptionsGroup.classed('visible', !this.app.treeDesigner.layout.isManualLayout());\n    }\n\n    initDiagramDetails() {\n        var self = this;\n        this.diagramDetailsContainer = this.container.select('#diagram-details-box');\n        this.diagramDetailsContainer.classed('sd-hidden', !this.app.config.showDetails);\n\n        this.diagramDetailsContainer.select('.toggle-button').on('click', () => {\n            this.diagramDetailsContainer.classed('sd-extended', !this.diagramDetailsContainer.classed('sd-extended'));\n            this.updateDiagramDetails();\n        });\n\n        this.diagramTitle = this.diagramDetailsContainer.select('input#diagram-title').on('change', function () {\n            self.app.setDiagramTitle(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.diagramDescription = this.diagramDetailsContainer.select('textarea#diagram-description').on('change', function () {\n            self.app.setDiagramDescription(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        AppUtils.elasticTextarea(this.diagramDescription);\n\n        this.updateDiagramDetails();\n    }\n\n    initDefinitions() {\n        var self = this;\n        this.definitionsContainer = this.container.select('#sd-sidebar-definitions');\n        this.definitionsContainer.classed('sd-hidden', !this.app.config.showDefinitions);\n        this.onDefinitionsCodeChanged = null;\n        this.definitionsContainer.select('.toggle-button').on('click', () => {\n            this.definitionsContainer.classed('sd-extended', !this.definitionsContainer.classed('sd-extended'));\n            AppUtils.updateInputClass(this.definitionsCode);\n            AppUtils.autoResizeTextarea(this.definitionsCode.node())\n        });\n\n        this.definitionsScopeLabel = this.definitionsContainer.select('.sd-variables-scope-value');\n\n        this.definitionsCode = this.definitionsContainer.select('textarea#sd-sidebar-definitions-code').on('change', function () {\n            if (self.onDefinitionsCodeChanged) {\n                self.onDefinitionsCodeChanged(this.value)\n            }\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        Tooltip.attach(this.definitionsCode, (d)=>{\n            return self.definitionsCode.attr('data-error-msg');\n\n        }, 15, 50);\n\n\n        this.definitionsEvaluatedValuesContainer = this.container.select(\"#sd-sidebar-definitions-evaluated-values\");\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-open-dialog-button').on('click', () => {\n            this.app.openDefinitionsDialog();\n        });\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-recalculate-button').on('click', () => {\n            this.app.recompute();\n        });\n\n        AppUtils.elasticTextarea(this.definitionsCode);\n    }\n\n    initMultipleCriteria() {\n        var self = this;\n        this.multipleCriteriaContainer = this.container.select('#sd-multiple-criteria');\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        this.multipleCriteriaContainer.select('.toggle-button').on('click', () => {\n            this.multipleCriteriaContainer.classed('sd-extended', !this.multipleCriteriaContainer.classed('sd-extended'));\n        });\n\n\n        this.showLeagueTableButton = this.multipleCriteriaContainer.select('#sd-show-league-table-button').on('click', () => {\n            this.app.showLeagueTable();\n        });\n\n        this.flipCriteriaButton = this.multipleCriteriaContainer.select('#sd-flip-criteria-button').on('click', () => {\n            this.app.flipCriteria();\n        });\n\n         let weightParser = (w) => {\n             return parseFloat(w) === Infinity ? Infinity : w;\n        };\n\n\n\n        this.multipleCriteriaFields = [];\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion1', 'nameOfCriterion1', 'text', i18n.t('multipleCriteria.nameOfCriterion1'), new PathValueAccessor(self.app.dataModel, 'payoffNames[0]'), new RequiredInputValidator()));\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion2', 'nameOfCriterion2', 'text', i18n.t('multipleCriteria.nameOfCriterion2'), new PathValueAccessor(self.app.dataModel, 'payoffNames[1]'), new RequiredInputValidator()));\n        let lowerBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightLowerBound');\n        let upperBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightUpperBound');\n        let weightValueValidator = new McdmWeightValueValidator();\n        var ee = this.app.expressionEngine.constructor;\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightLowerBound', 'weightLowerBound', 'text', i18n.t('multipleCriteria.weightLowerBound'), lowerBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                return weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-defaultCriterion1Weight', 'defaultCriterion1Weight', 'text', i18n.t('multipleCriteria.defaultCriterion1Weight'),\n            new PathValueAccessor(self.app.dataModel, 'defaultCriterion1Weight'),\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                let lower = lowerBoundValueAccessor.get();\n                return (weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true) && (weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true)\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightUpperBound', 'weightUpperBound', 'text', i18n.t('multipleCriteria.weightUpperBound'), upperBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let lower = lowerBoundValueAccessor.get();\n                return weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true\n            }), null, weightParser));\n\n        this.updateMultipleCriteria();\n    }\n\n\n    updateMultipleCriteria(updateInputs = true){ //TODO refactor\n        var ee = this.app.expressionEngine;\n\n        var self = this;\n        var temp = {};\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        let leagueTableAvailable = this.app.isLeagueTableAvailable();\n        this.showLeagueTableButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.flipCriteriaButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.multipleCriteriaContainer.classed('sd-invalid-league-table-params', !leagueTableAvailable);\n\n        if(!updateInputs){\n            return;\n        }\n\n        var inputGroups = this.multipleCriteriaContainer.select(\".sd-multiple-criteria-properties\").selectAll('div.input-group').data(this.multipleCriteriaFields);\n        inputGroups.exit().remove();\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n        inputGroupsEnter.merge(inputGroups).select('.sd-input').on('change input', function (d, i) {\n            var prevValue = d.getValue();\n\n            var isValid = !d.validator || d.validator.validate(this.value);\n\n            let selection = d3.select(this);\n            selection.classed('invalid', !isValid);\n            if(d.styleClass){\n                selection.classed(d.styleClass, true);\n            }\n\n            if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                if (d.onChange) {\n                    d.onChange(object, this.value, temp[i].pristineVal);\n                }\n            }\n\n            if((prevValue+\"\")==this.value){\n                return;\n            }\n\n            AppUtils.updateInputClass(selection);\n            d.setValue(d.parse(this.value));\n            self.dispatch.call(\"multi-criteria-updated\", self, d.name);\n\n        })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                let value = d.getValue();\n\n                this.value = value;\n                temp[i] = {};\n                d3.select(this).classed('invalid', d.validator && !d.validator.validate(this.value));\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n    }\n\n    updateDefinitions(definitionsSourceObject, readOnly, changeCallback) {\n        this.definitionsContainer.classed('sd-read-only', readOnly);\n        this.onDefinitionsCodeChanged = changeCallback;\n\n\n        let scopeType = 'global';\n        if (definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node'\n        }\n\n        this.definitionsScopeLabel.text(i18n.t(\"sidebarDefinitions.scope.\"+scopeType));\n\n        this.definitionsCode.node().value = definitionsSourceObject.code;\n        this.definitionsCode.classed('invalid', !!definitionsSourceObject.$codeError);\n        this.definitionsCode.attr('data-error-msg', definitionsSourceObject.$codeError);\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(definitionsSourceObject.expressionScope)});\n        this.definitionsEvaluatedValuesContainer.html(html);\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node())\n    }\n\n    updateDiagramDetails() {\n        this.diagramTitle.node().value = this.app.config.title;\n        AppUtils.updateInputClass(this.diagramTitle);\n        this.diagramDescription.node().value = this.app.config.description;\n        AppUtils.updateInputClass(this.diagramDescription);\n        AppUtils.autoResizeTextarea(this.diagramDescription.node())\n    }\n\n    displayObjectProperties(object) {\n        this.updateObjectPropertiesView(object);\n    }\n\n    hideObjectProperties() {\n\n        this.container.select('#object-properties').classed('visible', false);\n        this.container.selectAll('div.child-object').remove();\n\n    }\n\n    updateObjectPropertiesView(object) {\n        this.dispatch.on(\".recomputed\", null); //remove all callbacks for recomputed event\n        if (!object) {\n            this.hideObjectProperties();\n            return;\n        }\n\n        var objectProps = this.objectProps = this.container.select('#object-properties').classed('visible', true);\n        var headerText = Sidebar.getHeaderTextForObject(object);\n        objectProps.select('.header').html(headerText);\n\n        var fieldList = this.getFieldListForObject(object);\n        this.updateObjectFields(object, fieldList, objectProps.select('.content .main-properties'));\n\n\n        this.updateObjectChildrenProperties(object);\n\n    }\n\n    updateObjectChildrenProperties(object) {\n        var self = this;\n        var childObjects = this.getChildObjectList(object);\n        var objectType = Sidebar.getObjectType(object);\n\n        var childPropsSelector = this.objectProps.select('.content .children-properties');\n\n        childPropsSelector.classed('visible', childObjects.length);\n\n        childPropsSelector.select('.children-properties-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.header'));\n        var childrenContent = childPropsSelector.select('.children-properties-content');\n        var children = childrenContent.selectAll('div.child-object').data(childObjects, (d, i)=> d.$id || i);\n        var childrenEnter = children.enter().appendSelector('div.child-object');\n        var childrenMerge = childrenEnter.merge(children);\n\n        childrenMerge.each(updateChildObjectProperties);\n\n        children.exit().remove();\n\n        function updateChildObjectProperties(child, i) {\n            var container = d3.select(this);\n            container.selectOrAppend('div.child-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.child.header', {number: i + 1}));\n\n            var fieldList = self.getFieldListForObject(child);\n            self.updateObjectFields(child, fieldList, container.selectOrAppend('div.field-list'))\n        }\n    }\n\n    static getObjectType(object) {\n        if (object instanceof model.Node) {\n            return 'node';\n        }\n        if (object instanceof model.Edge) {\n            return 'edge';\n        }\n        if (object instanceof model.Text) {\n            return 'text';\n        }\n        return '';\n    }\n\n    static getHeaderTextForObject(object) {\n        if (object instanceof model.Node) {\n            return i18n.t('objectProperties.header.node.' + object.type);\n        }\n        if (object instanceof model.Edge) {\n            return i18n.t('objectProperties.header.edge');\n        }\n        if (object instanceof model.Text) {\n            return i18n.t('objectProperties.header.text');\n        }\n        return '';\n    }\n\n    getChildObjectList(object) {\n        if (object instanceof model.Node) {\n            return object.childEdges.sort((a, b)=>a.childNode.location.y - b.childNode.location.y);\n        }\n        if (object instanceof model.Edge) {\n            return [];\n        }\n        return [];\n    }\n\n    getFieldListForObject(object) {\n        var self = this;\n\n        if (object instanceof model.Node) {\n            return [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                })\n            ]\n        }\n        if (object instanceof model.Edge) {\n            let multipleCriteria = this.app.isMultipleCriteria();\n            var list = [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                }),\n                new ObjectInputField(object, {\n                    name: 'payoff',\n                    path: 'payoff[' + (self.app.currentViewMode.payoffIndex || 0) + ']',\n                    label: multipleCriteria ? self.app.dataModel.payoffNames[0] : undefined,\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                })\n\n\n            ];\n\n            if(multipleCriteria) {\n                list.push(new ObjectInputField(object, {\n                    name: 'payoff2',\n                    path: 'payoff[1]',\n                    label: self.app.dataModel.payoffNames[1],\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                }));\n            }\n\n            if (object.parentNode instanceof model.ChanceNode) {\n                list.push(new ObjectInputField(object, {\n                    name: 'probability',\n                    type: 'text',\n                    validator: new ProbabilityInputValidator(self.app.expressionEngine)\n                }))\n            }\n            return list;\n\n        }\n        if (object instanceof model.Text) {\n            return [new ObjectInputField(object, {\n                name: 'value',\n                type: 'textarea'\n            })]\n        }\n\n        return [];\n    }\n\n    updateObjectFields(object, fieldList, container) {\n        var self = this;\n\n        var fields = container.selectAll('div.object-field').data(fieldList);\n        var temp = {};\n        var fieldsEnter = fields.enter().appendSelector('div.object-field');\n        var fieldsMerge = fieldsEnter.merge(fields);\n\n        fieldsMerge.each(function (d, i) {\n            var fieldSelection = d3.select(this);\n            fieldSelection.html(\"\");\n\n            var input;\n            if (d.type == 'textarea') {\n                input = fieldSelection.append('textarea').attr('rows', 1);\n            } else {\n                input = fieldSelection.append('input');\n            }\n            input.classed('sd-input', true);\n\n            fieldSelection.appendSelector('span.bar');\n            fieldSelection.append('label');\n            fieldSelection.classed('input-group', true);\n        });\n\n        fieldsMerge.select('label')\n            .attr('for', d=>d.id)\n            .html(d=>d.label);\n        fieldsMerge.select('.sd-input')\n            .attr('type', d=>d.type == 'textarea' ? undefined : d.type)\n            .attr('name', d=>d.name)\n            .attr('id', d=>d.id)\n            .on('change keyup', function (d, i) {\n                var prevValue = d.getValue();\n                var isValid = !d.validator || d.validator.validate(this.value, object, d.path);\n                object.setSyntaxValidity(d.path, isValid);\n\n                d3.select(this).classed('invalid', !object.isFieldValid(d.path));\n\n                if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                    self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                    if (d.onChange) {\n                        d.onChange(object, this.value, temp[i].pristineVal);\n                    }\n                }\n\n                if((prevValue+\"\")==this.value){\n                    return;\n                }\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.customOnInput) {\n                    d.customOnInput(object, this.value, temp[i].pristineVal)\n                } else {\n                    d.setValue(this.value);\n                    self.dispatch.call(\"object-updated\", self, object, d.path);\n                }\n            })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                this.value = d.getValue();\n                temp[i] = {};\n                if (d.validator && !d.validator.validate(this.value, object, d.path)) {\n                    d3.select(this).classed('invalid', true);\n                    object.setSyntaxValidity(d.path, false);\n                }else{\n                    object.setSyntaxValidity(d.path, true);\n                }\n\n                var _this = this;\n                var checkFieldStatus = () => {\n                    d3.select(_this).classed('invalid', !object.isFieldValid(d.path));\n                };\n                checkFieldStatus();\n\n                self.dispatch.on(\"recomputed.\"+object.$id+\".\"+d.path, checkFieldStatus);\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n\n        fields.exit().remove();\n    }\n}\n\nclass ObjectInputField extends InputField{\n    //config object with fields: name, path, type, validator, options\n    constructor(object, config) {\n        super('object-' + object.$id + '-field-' + config.name, config.name, config.type, config.label ? config.label : i18n.t(Sidebar.getObjectType(object) + '.' + config.name),\n            new PathValueAccessor(object, config.path || config.name), config.validator, config.options);\n        this.path = config.path || config.name;\n        this.onChange = config.onChange;\n    }\n}\n\n","import {Templates as TdTemplates} from \"sd-tree-designer\";\nimport {i18n} from './i18n/i18n'\nimport {Utils, log} from \"sd-utils\";\n\nexport class Templates extends TdTemplates{\n\n    //TODO automate\n    static about_de = require('./templates/about/de.html');\n    static about_en = require('./templates/about/en.html');\n    static about_fr = require('./templates/about/fr.html');\n    static about_it = require('./templates/about/it.html');\n    static about_pl = require('./templates/about/pl.html');\n\n    static toolbar = require('./templates/toolbar.html');\n    static layoutOptions = require('./templates/sidebar/layout_options.html');\n    static objectProperties = require('./templates/sidebar/object_properties.html');\n    static diagramDetailsBox = require('./templates/sidebar/diagram_details_box.html');\n    static evaluatedVariables = require('./templates/evaluated_variables.html');\n    static definitions = require('./templates/sidebar/definitions.html');\n    static multipleCriteria = require('./templates/sidebar/multiple_criteria.html');\n    static sidebar = require('./templates/sidebar/sidebar.html');\n    static settingsDialog = require('./templates/settings_dialog.html');\n    static settingsDialogFormGroup = require('./templates/settings_dialog_form_group.html');\n    static inputGroup = require('./templates/input_group.html');\n    static selectInputGroup = require('./templates/select_input_group.html');\n    static help = require('./templates/help.html');\n    static aboutDialog = require('./templates/about_dialog.html');\n    static definitionsDialog = require('./templates/definitions_dialog.html');\n    static sensitivityAnalysisDialog = require('./templates/sensitivity_analysis_dialog.html');\n    static jobParametersBuilder = require('./templates/jobs/job_parameters_builder.html');\n    static jobParameter = require('./templates/jobs/job_parameter.html');\n    static leagueTableDialog = require('./templates/league_table_dialog.html');\n    static loadingIndicator = require('./templates/loading_indicator.html');\n    static fullscreenPopup = require('./templates/fullscreen_popup.html');\n    static warningMessage = require('./templates/warning_message.html');\n    static main = require('./templates/main.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n}\n\n\n\n\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (gebaut <%= buildTimestamp%>)</strong><br/>Open Source Entscheidungsbaum Software.\\n</p>\\n<p>\\n<strong>Zitierung:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Projektteam:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (Projektleiter)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (Stellvertretender Projektleiter)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (Designer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (Entwickler)</li>\\n        <li>Anna Wiertlewska (Projekt Unterstützung)</li>\\n        <li>Marcin Czupryna (Tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Das Projekt wird von Decision Support and Analysis Division, Warsaw School of Economics entwickelt.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions ist ein gemeinschaftsgetriebenes Projekt. Sollten Sie es für Ihre Untericht, Forschung oder jede andere Aktivität, die Sie mit uns teilen möchten verwenden, wir würden uns freuen, einen Link zu Ihren Aktivitäten zu der <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Gemeinschaft</a> Seite hinzufügen zu können.\\n</p>\\n<p>\\n    Software wird als Teil von <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Projekt entwickelt. Dieses Projekt hat      Mittel aus dem Horizon 2020 (Forschungs- und Innovationsprogramm der Europäischen Union) im Rahmen der Finanzhilfevereinbarung Nr 645860 erhalten. Ziel dieses Projektes ist es, eine transparente Kommunikation zwischen der öffentlichen Verwaltung und den Bürgern über das Thema, öffentliche Daten und Entscheidungsprozesse zu unterstützen. \\n</p>\\n<p>\\n    Alle Quelldateien werden unter den Bedingungen der GNU Lesser General Public License Version 3 lizenziert.\\n</p>\\n<p>\\n    Für weitere Informationen besuchen Sie bitte, unsere Website unter <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>A free and open source decision tree software.\\n</p>\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Project team:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (deputy project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentalist)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    The project is developed at Decision Support and Analysis Division, Warsaw School of Economics.<br/>\\n    Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions is a community-driven project, so if you use it for teaching, research or any other activity that you would be willing to share please let us know. We would be glad to add a link to your activities on <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a> page.\\n</p>\\n<p>\\n    Software is developed as a part of <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Project that has\\n    received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No\\n    645860. Its aim is to allow a transparent communication between public administration and citizens regarding public\\n    data about decision making processes performed by public administration.\\n</p>\\n<p>\\n    All the source files are licensed under the terms of the GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    For more information visit our website at <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>Un logiciel libre et open source pour faire son propre arbre de décision.\\n</p>\\n\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Equipe du projet:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (chef de projet)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (chef de projet adjoint)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (développeur)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentaliste)</li>\\n\\t<li>Marcin Czupryna (testeur)</li>\\n    </ul>\\n</p>\\n<p>\\n    Le projet est conçu et développé par la Division de l'aide à la décision et de l'analyse, à l'École d'économie de Varsovie. <br/>Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions est un projet communautaire, donc si vous l'utilisez pour l'enseignement, la recherche ou toute autre activité que vous aimeriez partager, \\n    faites-le nous savoir. Nous serions heureux d'ajouter un lien vers vos activités sur le site web de \\n    <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>  \\n    Le logiciel est développé dans le cadre du projet <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a>, \\n    financé par le programme de recherche et d'innovation Horizon 2020 de l'Union Européenne dans le cadre de l'accord de subvention n° 645860. \\n    Son objectif est permettre une communication transparente entre l'administration publique et les citoyens \\n    concernant les données publiques (Open Data) et la prise de décision des administrations.  \\n</p>\\n<p>\\n    Tous les fichiers source sont sous licence GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    Pour plus d'informations, visitez notre site web à <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (construzione <%= buildTimestamp%>)</strong><br/>\\n    Un Software Open Source Free per gestire alberi di decisione.\\n</p>\\n\\n<p>\\n<strong>Citazione:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Team di progetto:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (vice project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (sviluppo)</li>\\n        <li>Marcin Czupryna (test)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (tester)</li>\\n        <li>Anna Wiertlewska (documentazione)</li>\\n    </ul>\\n</p>\\n<p>\\n    Il progetto è sviluppato presso la Divisione “Supporto alla decisione ed Analisi” della Scuola di Economia dell’Università di Varsavia. <br/>Contatto:\\n    silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\nSilverDecision è un Progetto basato su di una Comunità di sviluppo, se lo utilizzi a scopo di insegnamento, ricerca o altra attività che vorresti rendere nota tienici informati. Saremmo lieti di aggiungere un <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">link</a> alla tua attività.\\n</p>\\n<p>\\n    Il software è sviluppato nell’ambito del progetto <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> \\n    finanziato dal programma di ricerca ed innovazione H2020 dell’ Unione Europea (contratto n. 645860). \\n    Scopo del progetto è quello di permettere una comunicazione trasparente tra Pubblica Amministrazione e cittadini \\n    riguardo ai dati pubblici ed ai processi di decisione portati avanti dalla stessa Pubblica Amministrazione.    \\n</p>\\n<p>\\n    Tutti i codici sorgente sono rilasciati secondo i termini della licenza “GNU Lesser General Public License version 3\\\".\\n</p>\\n<p>\\n    Per maggiori informazioni visita il sito <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>\\n    Oprogramowanie do analizy drzew decyzyjnych typu Free Open Source.\\n</p>\\n\\n<p>\\n<strong>Cytowanie:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Zespół projektowy:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (manager projektu)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (zastępca managera projektu)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (projektant)</li>\\n        <li>Anna Wiertlewska (dokumentalistka)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Projekt jest realizowany w Zakładzie Wspomagania i Analizy Decyzji w Szkole Głównej Handlowej w Warszawie.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    Rozwój SilverDecisions zależy od potrzeb użytkowników. W związku z tym jeśli wykorzystujesz je do nauczania, badań lub innych aktywności, o których zechcesz na powiedzieć prosimy o kontakt. Byłoby nam bardzo miło, jeśli moglibyśmy dodać informację o Twoich aktywnościach na stronie <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>\\n<p>\\n    Oprogramowanie jest rozwijane w ramach projektu <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> (<em>Raising\\n    Open and User-friendly Transparency-Enabling Technologies for Public Administrations</em>),\\n    który jest finansowany ze środków Europejskiego Programu w Zakresie Badań Naukowych i Innowacji Horizon 2020 na\\n    podstawie umowy o dotację nr 645860. Celem projektu ROUTE-TO-PA jest umożliwienie przejrzystej komunikacji pomiędzy\\n    administracją publiczną a mieszkańcami w zakresie publicznych danych dotyczących procesu podejmowania przez\\n    administracje publiczne decyzji.\\n</p>\\n<p>\\n    Wszystkie pliki źródłowe są licencjonowane zgodnie ze słabszą powszechną licencją publiczną GNU (GNU Lesser General Public License version 3).\\n</p>\\n<p>\\n    Więcej informacji można znaleźć na stronie internetowej: <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<div id=\\\"sd-about-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"aboutDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <% if ( [\\\"de\\\", \\\"en\\\", \\\"fr\\\", \\\"it\\\", \\\"pl\\\"].indexOf(lng) !== -1) { %>\\n                <%= include('about_'+lng, variables) %>\\n            <% } else { %>\\n                <%= include('about_en', variables) %>\\n            <% } %>\\n\\n            <%= include('help', variables) %>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-definitions-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"definitionsDialog.title\\\")%>: <span class=\\\"sd-definitions-dialog-scope-label\\\"></span></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"definitions-form\\\">\\n                <div class=\\\"input-group\\\">\\n                    <textarea id=\\\"sd-definitions-dialog-definitions-code\\\" name=\\\"sd-definitions-code\\\"></textarea>\\n                    <span class=\\\"bar\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"evaluated-variables-preview\\\">\\n                <h3><%= i18n.t('definitionsDialog.evaluatedVariables')%>:</h3>\\n                <div id=\\\"sd-definitions-dialog-variable-values\\\"></div>\\n            </div>\\n            <div class=\\\"action-buttons\\\">\\n                <button id=\\\"sd-definitions-dialog-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('definitionsDialog.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<table class=\\\"sd-evaluated-variables\\\">\\n    <% for(i=0; i<scopeVariables.length; ++i) { %>\\n    <tr>\\n        <td><%= scopeVariables[i].key %></td>\\n        <td>=</td>\\n        <td><%= scopeVariables[i].value %></td>\\n    </tr>\\n    <% } %>\\n</table>\\n\";\n","module.exports = \"<div class=\\\"sd-fullscreen-popup\\\">\\n    <div class=\\\"sd-popup-header\\\">\\n        <span class=\\\"sd-close-popup\\\"><i class=\\\"material-icons\\\">close</i></span>\\n        <h2><%= title %></h2>\\n    </div>\\n\\n    <div class=\\\"sd-popup-body\\\">\\n        <%= body %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div>\\n    <h3><%= i18n.t(\\\"help.header\\\")%></h3>\\n    <p>\\n        <%= i18n.t(\\\"help.mouse.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.mouse.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.3\\\")%></li>\\n        </ul>\\n    </p>\\n    <p>\\n        <%= i18n.t(\\\"help.keyboard.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.keyboard.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.3\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.4\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.5\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.6\\\")%></li>\\n        </ul>\\n    </p>\\n    <p><%= i18n.t(\\\"help.docs\\\")%></p>\\n</div>\\n\";\n","module.exports = \"<input id=\\\"<%= id %>\\\" type=\\\"<%= type %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"\\n\";\n","module.exports = \"<div class=\\\"sd-job-parameters-builder\\\">\\n\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-league-table-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"leagueTableDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-league-table-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-league-table-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-league-table-action-buttons\\\">\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('leagueTableDialog.buttons.downloadCsv')%></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-loading-indicator\\\">\\n    <div></div>\\n    <div class=\\\"sd-spinner\\\" title=\\\"loading...\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"silver-decisions\\\" tabindex=\\\"0\\\">\\n    <%= include('toolbar', variables) %>\\n    <div id=\\\"main-region\\\">\\n        <%= include('sidebar', variables) %>\\n        <div id=\\\"tree-designer-container\\\"></div>\\n    </div>\\n    <input type=\\\"file\\\" style=\\\"display:none\\\" id=\\\"sd-file-input\\\" accept=\\\".json\\\"/>\\n    <%= include('settingsDialog', variables) %>\\n    <%= include('aboutDialog', variables) %>\\n    <%= include('definitionsDialog', variables) %>\\n    <%= include('sensitivityAnalysisDialog', variables) %>\\n    <%= include('leagueTableDialog', variables) %>\\n</div>\\n\";\n","module.exports = \"<select id=\\\"<%= id %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n    <% for(i=0; i<options.length; ++i) { %>\\n    <option value=\\\"<% if (options[i].value !== undefined){ %><%= options[i].value %><%} else { %><%= options[i] %><%}%>\\\"><% if (options[i].label !== undefined){ %><%= options[i].label %><%} else { %><%= options[i] %><%}%></option>\\n    <% } %>\\n</select>\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-sensitivity-analysis-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"sensitivityAnalysisDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-sensitivity-analysis-job-configuration\\\">\\n                <div class=\\\"sd-job-select-input-group input-group\\\"></div>\\n                <%= include('jobParametersBuilder', variables) %>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-sensitivity-analysis-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-action-buttons\\\">\\n                <button class=\\\"sd-terminate-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.terminateJob')%></button>\\n                <button class=\\\"sd-stop-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.stopJob')%></button>\\n                <button class=\\\"sd-resume-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.resumeJob')%></button>\\n                <button class=\\\"sd-back-button  sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.back')%></button>\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.downloadCsv')%></button>\\n                <button class=\\\"sd-clear-button \\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.clear')%></button>\\n                <button class=\\\"sd-run-job-button\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.runJob')%></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-settings-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"settingsDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <form id=\\\"sd-settings-form\\\">\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"header\\\">\\n    <h4><%= i18n.t(\\\"settingsDialog.\\\"+name+\\\".title\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </h4>\\n</div>\\n<div class=\\\"sd-form-group-content\\\">\\n    <div class=\\\"sd-form-group-inputs\\\"></div>\\n    <div class=\\\"sd-form-group-child-groups\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar-definitions\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"sidebarDefinitions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-variables-scope\\\">\\n            <div class=\\\"sd-variables-scope-label\\\"><%= i18n.t('sidebarDefinitions.scope.label')%></div>\\n            <div class=\\\"sd-variables-scope-value\\\"></div>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea rows=\\\"1\\\" id=\\\"sd-sidebar-definitions-code\\\" type=\\\"text\\\" name=\\\"sidebar-definitions-code\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"sd-sidebar-definitions-code\\\"><%= i18n.t(\\\"sidebarDefinitions.code\\\") %></label>\\n        </div>\\n        <div class=\\\"evaluated-variables-preview\\\">\\n            <div class=\\\"evaluated-variables-preview-header\\\">\\n                <%= i18n.t('sidebarDefinitions.evaluatedVariables')%>\\n            </div>\\n            <div id=\\\"sd-sidebar-definitions-evaluated-values\\\"></div>\\n        </div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-sidebar-definitions-open-dialog-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.openDialog')%>\\\"><i class=\\\"material-icons\\\">open_in_new</i></button>\\n            <button id=\\\"sd-sidebar-definitions-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"diagram-details-box\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"diagramDetails.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"diagram-title\\\" type=\\\"text\\\" name=\\\"diagram-title\\\">\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-title\\\"><%= i18n.t(\\\"diagramDetails.title\\\") %></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea id=\\\"diagram-description\\\" name=\\\"diagram-description\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-description\\\"><%= i18n.t(\\\"diagramDetails.description\\\") %></label>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"layout-options\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"layoutOptions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-horizontal\\\" name=\\\"margin-horizontal\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-horizontal\\\"><%= i18n.t(\\\"layoutOptions.marginHorizontal\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-vertical\\\" name=\\\"margin-vertical\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-vertical\\\"><%= i18n.t(\\\"layoutOptions.marginVertical\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"node-size\\\" name=\\\"node-size\\\" type=\\\"range\\\" min=\\\"20\\\" max=\\\"60\\\" step=\\\"5\\\"/>\\n            <label for=\\\"node-size\\\"><%= i18n.t(\\\"layoutOptions.nodeSize\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"edge-slant-width-max\\\" name=\\\"edge-slant-width-max\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"edge-slant-width-max\\\"><%= i18n.t(\\\"layoutOptions.edgeSlantWidthMax\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"sd-svg-scale\\\" name=\\\"svg-scale\\\" type=\\\"range\\\" min=\\\"0.2\\\" max=\\\"3\\\" step=\\\"0.1\\\"/>\\n            <label for=\\\"sd-svg-scale\\\"><%= i18n.t(\\\"layoutOptions.scale\\\")%></label>\\n        </div>\\n        <div id=\\\"auto-layout-options\\\">\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-width\\\" name=\\\"grid-width\\\" type=\\\"range\\\" min=\\\"105\\\" max=\\\"300\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-width\\\"><%= i18n.t(\\\"layoutOptions.gridWidth\\\")%></label>\\n            </div>\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-height\\\" name=\\\"grid-height\\\" type=\\\"range\\\" min=\\\"55\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-height\\\"><%= i18n.t(\\\"layoutOptions.gridHeight\\\")%></label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-multiple-criteria\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"multipleCriteria.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-multiple-criteria-properties\\\"></div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-show-league-table-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.showLeagueTable')%>\\\"><i class=\\\"material-icons\\\">assignment</i></button>\\n            <button id=\\\"sd-flip-criteria-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.flip')%>\\\"><i class=\\\"material-icons\\\">swap_vert</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"object-properties\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"main-properties\\\"></div>\\n        <div class=\\\"children-properties\\\">\\n            <div class=\\\"children-properties-header\\\"></div>\\n            <div class=\\\"children-properties-content\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar\\\">\\n    <div id=\\\"sd-sidebar-inner\\\">\\n        <%= include('layoutOptions', variables) %>\\n        <%= include('diagramDetailsBox', variables) %>\\n        <%= include('definitions', variables) %>\\n        <%= include('multipleCriteria', variables) %>\\n        <%= include('objectProperties', variables) %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-toolbar\\\">\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"new-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.newDiagram')%>\\\"><i class=\\\"material-icons\\\">insert_drive_file</i></button>\\n        <button id=\\\"open-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.openDiagram')%>\\\"><i class=\\\"material-icons\\\">folder_open</i></button>\\n        <button id=\\\"save-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.saveDiagram')%>\\\"><i class=\\\"material-icons\\\">save</i></button>\\n    </div>\\n    <div id=\\\"export-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.export.label\\\")%></label>\\n        <button id=\\\"saveButton\\\"><%= i18n.t(\\\"toolbar.export.png\\\")%></button>\\n        <button id=\\\"saveButtonSvg\\\"><%= i18n.t(\\\"toolbar.export.svg\\\")%></button>\\n        <button id=\\\"saveButtonPdf\\\"><%= i18n.t(\\\"toolbar.export.pdf\\\")%></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.layout.label\\\")%></label>\\n        <button id=\\\"manualLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.manual\\\")%></button>\\n        <button id=\\\"treeAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.tree\\\")%></button>\\n        <button id=\\\"clusterAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.cluster\\\")%></button>\\n    </div>\\n    <div id=\\\"view-mode-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"view-mode-select\\\"><%= i18n.t(\\\"toolbar.viewMode.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"view-mode-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div id=\\\"objective-rule-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"objective-rule-select\\\"><%= i18n.t(\\\"toolbar.objectiveRule.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"objective-rule-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"undoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.undo')%>\\\"><i class=\\\"material-icons\\\">undo</i></button>\\n        <button id=\\\"redoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.redo')%>\\\"><i class=\\\"material-icons\\\">redo</i></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"sensitivity-analysis-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.sensitivityAnalysis')%>\\\"><i class=\\\"material-icons\\\">assessment</i></button>\\n        <button id=\\\"recompute-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.recompute')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        <button id=\\\"settings-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.settings')%>\\\"><i class=\\\"material-icons\\\">settings</i></button>\\n        <button id=\\\"about-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.about')%>\\\"><i class=\\\"material-icons\\\">info_outline</i></button>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-warning-message\\\">\\n    <i class=\\\"material-icons sd-icon\\\">warning</i>\\n    <div class=\\\"sd-warning-message-text\\\">\\n       <%= message %>\\n    </div>\\n</div>\\n\";\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\nimport {AppUtils} from './app-utils'\nimport {Exporter} from './exporter'\nimport {FileLoader} from './file-loader'\n\nexport class Toolbar{\n\n    app;\n    container;\n    hiddenClass = 'sd-hidden';\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n        this.initDiagramButtons();\n        this.initExportToolbarGroup();\n        this.initLayoutButtons();\n        this.initUndoRedoButtons();\n        this.initSettingsButton();\n        this.initAboutButton();\n        this.initSensitivityAnalysisButton();\n        this.initRecomputeButton();\n        this.initViewModeToolbarGroup();\n        this.initObjectiveRuleToolbarGroup();\n    }\n\n    initDiagramButtons(){\n\n\n        this.newDiagramButton = this.container.select('#new-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.newDiagram'))){\n                return;\n            }\n            this.app.newDiagram();\n        });\n        this.newDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.new);\n        this.openDiagramButton = this.container.select('#open-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.openDiagram'))){\n                return;\n            }\n            FileLoader.openFile(model=>{\n                this.app.openDiagram(model);\n            });\n\n\n        });\n        this.openDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.open);\n        this.saveDiagramButton = this.container.select('#save-diagram-button').on('click', ()=>{\n            this.app.saveToFile();\n        });\n        this.saveDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.save);\n    }\n\n\n\n    initLayoutButtons() {\n        var self = this;\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.onLayoutChanged(layout));\n        this.layoutButtons={};\n        this.layoutButtons['manual'] = this.container.select('#manualLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='manual'){\n                return;\n            }\n            self.app.treeDesigner.layout.disableAutoLayout();\n        });\n        this.layoutButtons['tree'] = this.container.select('#treeAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='tree'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('tree');\n        });\n        this.layoutButtons['cluster'] = this.container.select('#clusterAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='cluster'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('cluster');\n        });\n\n        this.updateLayoutButtons();\n    }\n\n    updateLayoutButtons() {\n        this.onLayoutChanged(this.app.treeDesigner.config.layout.type)\n    }\n\n    initSettingsButton(){\n        this.settingsButton = this.container.select('#settings-button').on('click', ()=>{\n            this.app.settingsDialog.open();\n        });\n    }\n\n    initAboutButton(){\n        this.aboutButton = this.container.select('#about-button').on('click', ()=>{\n            this.app.aboutDialog.open();\n        });\n    }\n\n    initRecomputeButton(){\n        this.recomputeButton = this.container.select('#recompute-button').on('click', ()=>{\n            this.app.recompute();\n        });\n    }\n\n    initSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton = this.container.select('#sensitivity-analysis-button').on('click', ()=>{\n            this.app.openSensitivityAnalysis();\n        });\n    }\n\n    updateSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton.attr(\"disabled\", this.app.isSensitivityAnalysisAvailable() ? null : 'disabled');\n    }\n\n\n    onLayoutChanged(layout){\n        Object.getOwnPropertyNames(this.layoutButtons).forEach(l=>{\n            this.layoutButtons[l].classed('active', false);\n        });\n        var button = this.layoutButtons[layout];\n        if(button){\n            button.classed('active', true);\n        }\n    }\n\n    initUndoRedoButtons() {\n        var self = this;\n        self.app.dataModel.undoRedoStateChangedCallback = ()=>this.onUndoRedoChanged();\n        this.undoButton = this.container.select('#undoButton').on('click', function () {\n            self.app.undo();\n        });\n        this.redoButton = this.container.select('#redoButton').on('click', function () {\n            self.app.redo();\n        });\n    }\n\n    onUndoRedoChanged() {\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n    }\n    updateUndoRedoButtons(){\n        this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n        this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n    }\n\n    update(){\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n        this.updateLayoutButtons();\n        this.updateViewModeValue();\n        this.updateObjectiveRuleOptions();\n        this.updateObjectiveRuleValue();\n    }\n\n    initExportToolbarGroup() {\n        this.container.select('#export-toolbar-group').classed(this.hiddenClass, !this.app.config.exports.show);\n        if(!this.app.config.exports.show){\n            return;\n        }\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initExportPdfButton();\n\n    }\n    initExportToPngButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButton')\n            .on('click', () => Exporter.saveAsPng(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPng)\n    }\n\n    initExportSvgButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonSvg')\n            .on('click', () => Exporter.saveAsSvg(svg))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToSvg)\n    }\n\n    initExportPdfButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonPdf')\n            .on('click', () => Exporter.saveAsPdf(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPdf)\n    }\n\n    initObjectiveRuleToolbarGroup() {\n        var self = this;\n        this.objectiveRuleSelect = this.container.select('#objective-rule-select');\n\n        this.updateObjectiveRuleOptions()\n        this.updateObjectiveRuleValue();\n\n        this.objectiveRuleSelect.on('change', function(){\n            self.app.setObjectiveRule(this.value);\n        })\n    }\n\n    updateObjectiveRuleOptions(){\n        var rules = this.app.getObjectiveRules();\n        var options = this.objectiveRuleSelect.selectAll('option').data(rules);\n        options.exit().remove();\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.objectiveRule.options.'+d.name));\n    }\n\n    updateObjectiveRuleValue(){\n        this.objectiveRuleSelect.node().value = this.app.getCurrentObjectiveRule().name;\n    }\n\n    initViewModeToolbarGroup() {\n        var self = this;\n        this.viewModeSelect = this.container.select('#view-mode-select');\n        var rules = this.app.getViewModes();\n        var options = this.viewModeSelect.selectAll('option').data(rules);\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.viewMode.options.'+d.name));\n\n        this.updateViewModeValue();\n\n        this.viewModeSelect.on('change', function(){\n            self.app.setViewModeByName(this.value);\n        })\n    }\n\n    updateViewModeValue(){\n        this.viewModeSelect.node().value = this.app.getCurrentViewMode().name;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class NumberInputValidator {\n\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        if (!value.trim()) {\n            return false;\n        }\n\n        value = parseFloat(value);\n\n        if (!Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (this.min !== undefined && value < this.min) {\n            return false;\n        }\n\n        return !(this.max !== undefined && value > this.max);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PayoffInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        return this.expressionEngine.validate(value);\n    }\n\n}\n","export class ProbabilityInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n\n        if(this.expressionEngine.constructor.isHash(value)){\n            return true;\n        }\n\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        var scope = edge.parentNode.expressionScope;\n        return this.expressionEngine.validate(value, scope);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class RequiredInputValidator {\n\n    constructor() {\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        return !!value.trim();\n    }\n\n}\n","module.exports = {\"buildTimestamp\":1544382143568}\n"]}